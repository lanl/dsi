sql_query,chart,hardness,db_id,vis_obj,vis_obj_chart,vis_obj_x_name,vis_obj_y_name,vis_obj_x_data,vis_obj_y_data,NL_queries
"SELECT SALARY , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'MANAGER_ID', 'x_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,SALARY,MANAGER_ID,"24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205","For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between  salary and  manager_id ."
"SELECT Credits , Instructor FROM COURSE ORDER BY Credits",Scatter,Easy,college_3,"{'chart': 'scatter', 'x_name': 'Credits', 'y_name': 'Instructor', 'x_data': [[1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]], 'y_data': [[4230, 9826, 6191, 9011, 2881, 6112, 1193, 4230, 6112, 6112, 6112, 1121, 9826, 9172, 2192, 1148, 8918, 7712, 2192, 1148, 8918, 7723, 8114, 7712, 7792, 1121, 8423, 1121, 9823, 9823, 8791, 8791, 2738, 8102, 6182, 9823, 8772, 6541, 8122, 9922, 8723, 9210, 6191, 1823, 9824, 6925, 6191, 6191, 2119, 7231, 9514, 6330, 8722, 9379, 7134, 9514, 4432, 6910, 4432, 6910, 8989, 4432, 4432, 5718, 2311, 8772, 6541, 8102, 2881, 1177, 2738, 8772, 9210, 8118, 9210, 9011]], 'classify': [], 'describe': ''}",scatter,Credits,Instructor,"1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4","4230, 9826, 6191, 9011, 2881, 6112, 1193, 4230, 6112, 6112, 6112, 1121, 9826, 9172, 2192, 1148, 8918, 7712, 2192, 1148, 8918, 7723, 8114, 7712, 7792, 1121, 8423, 1121, 9823, 9823, 8791, 8791, 2738, 8102, 6182, 9823, 8772, 6541, 8122, 9922, 8723, 9210, 6191, 1823, 9824, 6925, 6191, 6191, 2119, 7231, 9514, 6330, 8722, 9379, 7134, 9514, 4432, 6910, 4432, 6910, 8989, 4432, 4432, 5718, 2311, 8772, 6541, 8102, 2881, 1177, 2738, 8772, 9210, 8118, 9210, 9011",What is the relationship between  Credits and  Instructor ?
"SELECT Clean_Jerk , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Clean_Jerk', 'y_name': 'Total', 'x_data': [[175, 177.5, 175, 175, 162.5]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Clean_Jerk,Total,"175, 177.5, 175, 175, 162.5","317.5, 315, 315, 312.5, 292.5",What is the relationship between  Clean_Jerk and  Total ?
"SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Code', 'x_data': [[240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150]], 'y_data': [[5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3]], 'classify': [], 'describe': ''}",scatter,Price,Code,"240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150","5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3","For those records from the products and each product's manufacturer, show me about the correlation between  price and  code  in a scatter chart."
"SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",Scatter,Medium,news_report,"{'chart': 'scatter', 'x_name': 'avg(t1.age)', 'y_name': 'avg(Years_working)', 'x_data': [[43, 35.5, 30.33333333333333]], 'y_data': [[16.5, 14, 4.666666666666667]], 'classify': [], 'describe': ''}",scatter,avg(t1.age),avg(Years_working),"43, 35.5, 30.33333333333333","16.5, 14, 4.666666666666667",Find the correlation between average age and experience working length of journalists working on different role type with a scatter plot.
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between  commission_pct and  department_id ."
"SELECT SALARY , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'MANAGER_ID', 'x_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300]], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,SALARY,MANAGER_ID,"24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between  salary and  manager_id ."
"SELECT Team_ID , School_ID FROM basketball_match",Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[1, 2, 3, 4]], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",scatter,Team_ID,School_ID,"1, 2, 3, 4","1, 2, 4, 5",Show me about the correlation between  Team_ID and  School_ID  in a scatter chart.
"SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Code', 'x_data': [[240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150]], 'y_data': [[5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3]], 'classify': [], 'describe': ''}",scatter,Price,Code,"240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150","5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3","For those records from the products and each product's manufacturer, what is the relationship between  price and  code ?"
"SELECT T1.id , count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",Scatter,Medium,game_injury,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'count(*)', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], 'y_data': [[2, 2, 2, 2, 2, 1, 2, 1, 1, 3, 1, 1]], 'classify': [], 'describe': ''}",scatter,id,count(*),"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12","2, 2, 2, 2, 2, 1, 2, 1, 1, 3, 1, 1",Display a scatter chart for how many games has each stadium held?
"SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'DEPARTMENT_ID', 'x_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,SALARY,DEPARTMENT_ID,"24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize the relationship between  salary and  department_id ."
"SELECT AVG(Price) , Manufacturer FROM Products GROUP BY Manufacturer",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'AVG(Price)', 'y_name': 'Manufacturer', 'x_data': [[240, 150, 162, 150, 240, 62.5]], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': ''}",scatter,AVG(Price),Manufacturer,"240, 150, 162, 150, 240, 62.5","1, 2, 3, 4, 5, 6","Scatter. what are the average prices of products, grouped by manufacturer code?"
"SELECT T1.EMPLOYEE_ID , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'MANAGER_ID', 'x_data': [[100, 103, 108, 114, 121, 145, 200, 201, 203, 204, 205]], 'y_data': [[100, 103, 108, 114, 121, 145, 200, 201, 203, 204, 205]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,MANAGER_ID,"100, 103, 108, 114, 121, 145, 200, 201, 203, 204, 205","100, 103, 108, 114, 121, 145, 200, 201, 203, 204, 205",Just list the employee id and the management id using a scatter chart.
"SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[2, 7, 9]], 'y_data': [[6, 2, 3]], 'classify': [], 'describe': ''}",scatter,Code,Manufacturer,"2, 7, 9","6, 2, 3","For those products with a price between 60 and 120, visualize a scatter chart about the correlation between  code and  manufacturer ."
"SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY dept_code",Scatter,Easy,college_1,"{'chart': 'scatter', 'x_name': 'avg(stu_gpa)', 'y_name': 'min(stu_gpa)', 'x_data': [[2.776666666666667, 2.84, 3.18, 3.87, 2.11]], 'y_data': [[2.26, 2.84, 3.09, 3.87, 2.11]], 'classify': [], 'describe': ''}",scatter,avg(stu_gpa),min(stu_gpa),"2.776666666666667, 2.84, 3.18, 3.87, 2.11","2.26, 2.84, 3.09, 3.87, 2.11",Show me a scatter plot of avg(stu gpa) and minimal stu gpa for .
"SELECT author_id , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Scatter,Easy,e_learning,"{'chart': 'scatter', 'x_name': 'author_id', 'y_name': 'author_tutor_ATB', 'x_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",scatter,author_id,author_tutor_ATB,"6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",What is the relationship between  author_id and  author_tutor_ATB ?
"SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY dept_code",Scatter,Easy,college_1,"{'chart': 'scatter', 'x_name': 'avg(stu_gpa)', 'y_name': 'min(stu_gpa)', 'x_data': [[2.776666666666667, 2.84, 3.18, 3.87, 2.11]], 'y_data': [[2.26, 2.84, 3.09, 3.87, 2.11]], 'classify': [], 'describe': ''}",scatter,avg(stu_gpa),min(stu_gpa),"2.776666666666667, 2.84, 3.18, 3.87, 2.11","2.26, 2.84, 3.09, 3.87, 2.11",What is the relationship between lowest and average student GPA for every department? Give me a scatter chart.
"SELECT People_ID , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Total', 'x_data': [[1, 2, 3, 5, 6]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,People_ID,Total,"1, 2, 3, 5, 6","317.5, 315, 315, 312.5, 292.5",A scatter chart shows the correlation between  People_ID and  Total .
"SELECT Body_Builder_ID , Clean_Jerk FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'Clean_Jerk', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[175, 177.5, 175, 175, 162.5]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,Clean_Jerk,"1, 2, 3, 4, 5","175, 177.5, 175, 175, 162.5",Return a scatter chart about the correlation between  Body_Builder_ID and  Clean_Jerk .
"SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",Scatter,Medium,tracking_orders,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[1, 2, 2, 1, 1, 2, 1, 2, 3]], 'y_data': [[1, 3, 4, 7, 8, 11, 12, 14, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"1, 2, 2, 1, 1, 2, 1, 2, 3","1, 3, 4, 7, 8, 11, 12, 14, 15",List the count and id of each product in all the orders with a scatter chart.
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, a scatter chart shows the correlation between  commission_pct and  department_id ."
"SELECT avg(age) , min(age) FROM captain GROUP BY CLASS",Scatter,Easy,ship_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'min(age)', 'x_data': [[45, 43, 38, 38, 51.33333333333334]], 'y_data': [[45, 43, 38, 38, 40]], 'classify': [], 'describe': ''}",scatter,avg(age),min(age),"45, 43, 38, 38, 51.33333333333334","45, 43, 38, 38, 40",What is the relationship between the average and minimum age of captains in different classes?
"SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'MANAGER_ID', 'x_data': [[100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206]], 'y_data': [[0, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 114, 114, 114, 114, 114, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,MANAGER_ID,"100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206","0, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 114, 114, 114, 114, 114, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 201, 101, 101, 101, 205","For those employees who did not have any job in the past, what is the relationship between  employee_id and  manager_id ?"
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between  employee_id and  department_id ."
"SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'COMMISSION_PCT', 'x_data': [[178, 201, 202, 203, 204, 205, 206]], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,COMMISSION_PCT,"178, 201, 202, 203, 204, 205, 206","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between  employee_id and  commission_pct ."
"SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id",Scatter,Easy,tracking_grants_for_research,"{'chart': 'scatter', 'x_name': 'sum(grant_amount)', 'y_name': 'organisation_id', 'x_data': [[608438.0290999999, 281.2446, 610.7004, 76977810.29079999, 42.8061, 25313.51, 38679503.1437, 330.6339, 2001349.459, 4516014.121800002]], 'y_data': [[2, 3, 5, 7, 8, 9, 10, 11, 12, 14]], 'classify': [], 'describe': ''}",scatter,sum(grant_amount),organisation_id,"608438.0290999999, 281.2446, 610.7004, 76977810.29079999, 42.8061, 25313.51, 38679503.1437, 330.6339, 2001349.459, 4516014.121800002","2, 3, 5, 7, 8, 9, 10, 11, 12, 14",Scatter chart. what is the total amount of grants given by each organisations? Also list the organisation id.
"SELECT Body_Builder_ID , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'Total', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,Total,"1, 2, 3, 4, 5","317.5, 315, 315, 312.5, 292.5",Show me a scatter plot of body builder id and total for .
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206]], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, return a scatter chart about the correlation between  employee_id and  department_id ."
"SELECT count(*) , Major FROM student GROUP BY major",Scatter,Easy,dorm_1,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'Major', 'x_data': [[2, 1, 6, 2, 5, 18]], 'y_data': [[50, 100, 520, 540, 550, 600]], 'classify': [], 'describe': ''}",scatter,count(*),Major,"2, 1, 6, 2, 5, 18","50, 100, 520, 540, 550, 600",Display a scatter chart for how many students are there in each major?
"SELECT School_ID , ACC_Percent FROM basketball_match",Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[1, 2, 4, 5]], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",scatter,School_ID,ACC_Percent,"1, 2, 4, 5","0.875, 0.813, 0.625, 0.563",What is the relationship between  School_ID and  ACC_Percent ?
"SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'COMMISSION_PCT', 'x_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'y_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,SALARY,COMMISSION_PCT,"24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between  salary and  commission_pct ."
"SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'MANAGER_ID', 'x_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",scatter,SALARY,MANAGER_ID,"24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between  salary and  manager_id ."
"SELECT ID , salary FROM instructor ORDER BY salary",Scatter,Easy,college_2,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'salary', 'x_data': [[14365, 50885, 42782, 28097, 36897, 57180, 64871, 80759, 72553, 79081, 59795, 41930, 97302, 95030, 90643, 78699, 22591, 4034, 35579, 58558, 31955, 15347, 81991, 43779, 65931, 3335, 3199, 28400, 48570, 52647, 4233, 79653, 73623, 25946, 99052, 63395, 16807, 77346, 63287, 37687, 6569, 74426, 48507, 50330, 34175, 90376, 95709, 96895, 74420, 19368]], 'y_data': [[32241.56, 32570.5, 34272.67, 35023.18, 43770.36, 43966.29, 45310.53, 45538.32, 46397.59, 47307.1, 48803.38, 50482.03, 51647.57, 54805.11, 57807.09, 59303.62, 59706.49, 61387.56, 62579.61, 66143.25, 71351.42, 72140.88, 77036.18, 79070.08, 79866.95, 80797.83, 82534.37, 84982.92, 87549.8, 87958.01, 88791.45, 89805.83, 90038.09, 90891.69, 93348.83, 94333.99, 98333.65, 99382.59, 103146.87, 104563.38, 105311.38, 106554.73, 107978.47, 108011.81, 115469.11, 117836.5, 118143.98, 119921.41, 121141.99, 124651.41]], 'classify': [], 'describe': ''}",scatter,ID,salary,"14365, 50885, 42782, 28097, 36897, 57180, 64871, 80759, 72553, 79081, 59795, 41930, 97302, 95030, 90643, 78699, 22591, 4034, 35579, 58558, 31955, 15347, 81991, 43779, 65931, 3335, 3199, 28400, 48570, 52647, 4233, 79653, 73623, 25946, 99052, 63395, 16807, 77346, 63287, 37687, 6569, 74426, 48507, 50330, 34175, 90376, 95709, 96895, 74420, 19368","32241.56, 32570.5, 34272.67, 35023.18, 43770.36, 43966.29, 45310.53, 45538.32, 46397.59, 47307.1, 48803.38, 50482.03, 51647.57, 54805.11, 57807.09, 59303.62, 59706.49, 61387.56, 62579.61, 66143.25, 71351.42, 72140.88, 77036.18, 79070.08, 79866.95, 80797.83, 82534.37, 84982.92, 87549.8, 87958.01, 88791.45, 89805.83, 90038.09, 90891.69, 93348.83, 94333.99, 98333.65, 99382.59, 103146.87, 104563.38, 105311.38, 106554.73, 107978.47, 108011.81, 115469.11, 117836.5, 118143.98, 119921.41, 121141.99, 124651.41",Return a scatter chart about the correlation between  ID and  salary .
"SELECT People_ID , Snatch FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Snatch', 'x_data': [[1, 2, 3, 5, 6]], 'y_data': [[142.5, 137.5, 140, 137.5, 130]], 'classify': [], 'describe': ''}",scatter,People_ID,Snatch,"1, 2, 3, 5, 6","142.5, 137.5, 140, 137.5, 130",Show me about the correlation between  People_ID and  Snatch  in a scatter chart.
"SELECT SALARY , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'COMMISSION_PCT', 'x_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,SALARY,COMMISSION_PCT,"24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between  salary and  commission_pct ."
"SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'invoice_number', 'y_name': 'count(*)', 'x_data': [[1, 2, 3, 5, 6, 12, 13, 14, 15]], 'y_data': [[2, 1, 1, 1, 1, 4, 1, 2, 2]], 'classify': [], 'describe': ''}",scatter,invoice_number,count(*),"1, 2, 3, 5, 6, 12, 13, 14, 15","2, 1, 1, 1, 1, 4, 1, 2, 2",Scatter chart. how many transactions correspond to each invoice number?
"SELECT ContId , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",Scatter,Medium,car_1,"{'chart': 'scatter', 'x_name': 'ContId', 'y_name': 'count(*)', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[3, 6, 2, 2, 2]], 'classify': [], 'describe': ''}",scatter,ContId,count(*),"1, 2, 3, 4, 5","3, 6, 2, 2, 2",How many countries does each continent have? List the continent id and the number of countries with a scatter chart.
"SELECT count(*) , sum(enrollment) FROM school GROUP BY county",Scatter,Medium,school_finance,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[1, 1, 3, 2, 1]], 'y_data': [[601, 852, 1098, 984, 620]], 'classify': [], 'describe': ''}",scatter,count(*),sum(enrollment),"1, 1, 3, 2, 1","601, 852, 1098, 984, 620",Show the relationship between the number of schools in each county and total enrollment in each county by a scatter plot.
"SELECT Customer_Event_ID , property_id FROM customer_events",Scatter,Easy,local_govt_and_lot,"{'chart': 'scatter', 'x_name': 'Customer_Event_ID', 'y_name': 'property_id', 'x_data': [[70, 160, 166, 216, 226, 256, 428, 530, 559, 591, 606, 627, 817]], 'y_data': [[605, 879, 629, 669, 748, 108, 954, 669, 107, 120, 445, 748, 107]], 'classify': [], 'describe': ''}",scatter,Customer_Event_ID,property_id,"70, 160, 166, 216, 226, 256, 428, 530, 559, 591, 606, 627, 817","605, 879, 629, 669, 748, 108, 954, 669, 107, 120, 445, 748, 107",Just list the customer event id and the corresponding move property id using a scatter.
"SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Price', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], 'y_data': [[240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150]], 'classify': [], 'describe': ''}",scatter,Code,Price,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11","240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150","For those records from the products and each product's manufacturer, show me about the correlation between  code and  price  in a scatter chart."
"SELECT Classroom , Grade FROM list",Scatter,Easy,student_1,"{'chart': 'scatter', 'x_name': 'Classroom', 'y_name': 'Grade', 'x_data': [[101, 112, 107, 105, 111, 102, 104, 109, 110, 103, 106, 108]], 'y_data': [[2, 6, 3, 0, 4, 1, 0, 5, 4, 1, 0, 4]], 'classify': [], 'describe': ''}",scatter,Classroom,Grade,"101, 112, 107, 105, 111, 102, 104, 109, 110, 103, 106, 108","2, 6, 3, 0, 4, 1, 0, 5, 4, 1, 0, 4",Scatter plot to show classroom on x axis and grade on y axis.
"SELECT T1.id , count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",Scatter,Medium,game_injury,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'count(*)', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], 'y_data': [[2, 2, 2, 2, 2, 1, 2, 1, 1, 3, 1, 1]], 'classify': [], 'describe': ''}",scatter,id,count(*),"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12","2, 2, 2, 2, 2, 1, 2, 1, 1, 3, 1, 1",Show me a scatter chart for how many games has each stadium held?
"SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'MANAGER_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[149, 100, 201, 101, 101, 101, 205]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,MANAGER_ID,DEPARTMENT_ID,"149, 100, 201, 101, 101, 101, 205","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between  manager_id and  department_id ."
"SELECT Team_ID , All_Games_Percent FROM basketball_match",Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[1, 2, 3, 4]], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",scatter,Team_ID,All_Games_Percent,"1, 2, 3, 4","0.946, 0.8240000000000001, 0.706, 0.6",Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent .
"SELECT People_ID , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Total', 'x_data': [[1, 2, 3, 5, 6]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,People_ID,Total,"1, 2, 3, 5, 6","317.5, 315, 315, 312.5, 292.5",What is the relationship between  People_ID and  Total ?
"SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",Scatter,Hard,tracking_grants_for_research,"{'chart': 'scatter', 'x_name': 'project_id', 'y_name': 'count(*)', 'x_data': [[3, 4, 7, 8, 9, 15, 1, 5, 11, 2]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",scatter,project_id,count(*),"3, 4, 7, 8, 9, 15, 1, 5, 11, 2","1, 1, 1, 1, 1, 1, 2, 2, 2, 3",How many staff does each project has? List the project id and the number in an ascending order. Visualize by scatter chart.
"SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'COMMISSION_PCT', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,COMMISSION_PCT,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between  employee_id and  commission_pct ."
"SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'MANAGER_ID', 'x_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,MANAGER_ID,"0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, show me about the correlation between  commission_pct and  manager_id  in a scatter chart."
"SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Code', 'x_data': [[240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150]], 'y_data': [[5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3]], 'classify': [], 'describe': ''}",scatter,Price,Code,"240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150","5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3","For those records from the products and each product's manufacturer, visualize the relationship between  price and  code ."
"SELECT count(*) , T2.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",Scatter,Medium,tracking_orders,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[1, 2, 2, 1, 1, 2, 1, 2, 3]], 'y_data': [[1, 3, 4, 7, 8, 11, 12, 14, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"1, 2, 2, 1, 1, 2, 1, 2, 3","1, 3, 4, 7, 8, 11, 12, 14, 15",List the count and id of each product in all the orders. 
"SELECT T1.Claim_ID , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",Scatter,Medium,insurance_policies,"{'chart': 'scatter', 'x_name': 'Claim_ID', 'y_name': 'count(*)', 'x_data': [[486, 563, 569, 571, 621, 761, 801, 843, 957]], 'y_data': [[2, 1, 1, 1, 2, 2, 4, 1, 1]], 'classify': [], 'describe': ''}",scatter,Claim_ID,count(*),"486, 563, 569, 571, 621, 761, 801, 843, 957","2, 1, 1, 1, 2, 2, 4, 1, 1",plot scatter on how many settlements does each claim correspond to? List the claim id and the number of settlements.
"SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Revenue', 'x_data': [[5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3]], 'y_data': [[130, 30, 200, 30, 120, 100, 100, 50, 50, 100, 50]], 'classify': [], 'describe': ''}",scatter,Code,Revenue,"5, 6, 4, 6, 1, 2, 2, 3, 3, 2, 3","130, 30, 200, 30, 120, 100, 100, 50, 50, 100, 50","For those records from the products and each product's manufacturer, show me about the correlation between  code and  revenue  in a scatter chart."
"SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",Scatter,Easy,e_learning,"{'chart': 'scatter', 'x_name': 'author_id', 'y_name': 'gender_mf', 'x_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'y_data': [[1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]], 'classify': [], 'describe': ''}",scatter,author_id,gender_mf,"6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5","1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1",A scatter chart shows the correlation between  author_id and  gender_mf .
"SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'MANAGER_ID', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206]], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,MANAGER_ID,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between  employee_id and  manager_id ?"
"SELECT DEPARTMENT_ID , SUM(salary) FROM employees GROUP BY department_id",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'DEPARTMENT_ID', 'y_name': 'SUM(salary)', 'x_data': [[20, 30, 50, 60, 80, 90, 100, 110]], 'y_data': [[19000, 24900, 156400, 28800, 304500, 58000, 51600, 20300]], 'classify': [], 'describe': ''}",scatter,DEPARTMENT_ID,SUM(salary),"20, 30, 50, 60, 80, 90, 100, 110","19000, 24900, 156400, 28800, 304500, 58000, 51600, 20300",Scatter plot to show department id on x axis and sum salary on y axis.
"SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Department Manager""",Scatter,Medium,department_store,"{'chart': 'scatter', 'x_name': 'staff_id', 'y_name': 'staff_gender', 'x_data': [[5, 15, 6]], 'y_data': [[0, 1, 1]], 'classify': [], 'describe': ''}",scatter,staff_id,staff_gender,"5, 15, 6","0, 1, 1",Visualize a scatter chart on what are the staff ids and genders of all staffs whose job title is Department Manager?
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between  commission_pct and  department_id ."
"SELECT count(*) , customer_id FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'customer_id', 'x_data': [[1, 1, 4, 1, 1, 4, 3]], 'y_data': [[3, 6, 8, 9, 12, 13, 15]], 'classify': [], 'describe': ''}",scatter,count(*),customer_id,"1, 1, 4, 1, 1, 4, 3","3, 6, 8, 9, 12, 13, 15",How many accounts does each customer have? List the number and customer id with a scatter chart.
"SELECT Credits , DNO FROM COURSE ORDER BY Credits",Scatter,Easy,college_3,"{'chart': 'scatter', 'x_name': 'Credits', 'y_name': 'DNO', 'x_data': [[1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]], 'y_data': [[600, 600, 600, 50, 550, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 50, 50, 50, 50, 50, 50, 50, 50, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 50]], 'classify': [], 'describe': ''}",scatter,Credits,DNO,"1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4","600, 600, 600, 50, 550, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 50, 50, 50, 50, 50, 50, 50, 50, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 50",Visualize a scatter chart about the correlation between  Credits and  DNO .
"SELECT Major , count(*) FROM Student GROUP BY major",Scatter,Easy,allergy_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'count(*)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[2, 1, 6, 2, 5, 18]], 'classify': [], 'describe': ''}",scatter,Major,count(*),"50, 100, 520, 540, 550, 600","2, 1, 6, 2, 5, 18",How many students are there for each major. 
"SELECT Body_Builder_ID , Snatch FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'Snatch', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[142.5, 137.5, 140, 137.5, 130]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,Snatch,"1, 2, 3, 4, 5","142.5, 137.5, 140, 137.5, 130",Visualize the relationship between  Body_Builder_ID and  Snatch .
"SELECT SALARY , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Scatter,Medium,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'DEPARTMENT_ID', 'x_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,SALARY,DEPARTMENT_ID,"24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between  salary and  department_id ."
"SELECT Code , min(price) FROM products GROUP BY Code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'min(price)', 'x_data': [[7, 10, 11, 4, 1, 2, 5, 8, 9, 3]], 'y_data': [[90, 180, 150, 5, 240, 120, 240, 270, 66, 150]], 'classify': [], 'describe': ''}",scatter,Code,min(price),"7, 10, 11, 4, 1, 2, 5, 8, 9, 3","90, 180, 150, 5, 240, 120, 240, 270, 66, 150",Show me a scatter plot of code and minimal price for .
"SELECT Project_ID , count(*) FROM Documents GROUP BY project_id",Scatter,Easy,cre_Docs_and_Epenses,"{'chart': 'scatter', 'x_name': 'Project_ID', 'y_name': 'count(*)', 'x_data': [[30, 35, 105, 134, 195]], 'y_data': [[3, 3, 5, 3, 1]], 'classify': [], 'describe': ''}",scatter,Project_ID,count(*),"30, 35, 105, 134, 195","3, 3, 5, 3, 1",How many documents correspond with each project id. 
"SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Department Manager""",Scatter,Medium,department_store,"{'chart': 'scatter', 'x_name': 'staff_id', 'y_name': 'staff_gender', 'x_data': [[5, 15, 6]], 'y_data': [[0, 1, 1]], 'classify': [], 'describe': ''}",scatter,staff_id,staff_gender,"5, 15, 6","0, 1, 1",Scatter. what are the staff ids and genders of all staffs whose job title is Department Manager?
"SELECT Support_rate , Consider_rate FROM candidate",Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'Support_rate', 'y_name': 'Consider_rate', 'x_data': [[0.25, 0.33, 0.24, 0.18, 0.24, 0.17]], 'y_data': [[0.3, 0.2, 0.27, 0.34, 0.3, 0.42]], 'classify': [], 'describe': ''}",scatter,Support_rate,Consider_rate,"0.25, 0.33, 0.24, 0.18, 0.24, 0.17","0.3, 0.2, 0.27, 0.34, 0.3, 0.42","Plot a scatter chart, support rate by consider_rate."
"SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'MANAGER_ID', 'x_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,MANAGER_ID,"0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between  commission_pct and  manager_id ."
"SELECT student_id , address_id FROM Student_Addresses ORDER BY monthly_rental DESC",Scatter,Easy,behavior_monitoring,"{'chart': 'scatter', 'x_name': 'student_id', 'y_name': 'address_id', 'x_data': [[13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10]], 'y_data': [[16, 1, 8, 2, 18, 13, 13, 10, 1, 5, 3, 8, 12, 3, 1, 12, 16, 9, 19, 18]], 'classify': [], 'describe': ''}",scatter,student_id,address_id,"13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10","16, 1, 8, 2, 18, 13, 13, 10, 1, 5, 3, 8, 12, 3, 1, 12, 16, 9, 19, 18",Draw a scatter chart about the correlation between  student_id and  address_id .
"SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor",Scatter,Easy,voter_2,"{'chart': 'scatter', 'x_name': 'Advisor', 'y_name': 'count(*)', 'x_data': [[1121, 1148, 2192, 2311, 5718, 7134, 7271, 7712, 7723, 7792, 8423, 8721, 8722, 8723, 8741, 8772, 8918, 9172]], 'y_data': [[3, 3, 4, 3, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1]], 'classify': [], 'describe': ''}",scatter,Advisor,count(*),"1121, 1148, 2192, 2311, 5718, 7134, 7271, 7712, 7723, 7792, 8423, 8721, 8722, 8723, 8741, 8772, 8918, 9172","3, 3, 4, 3, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1",A scatter chart about how many students does each advisor have?
"SELECT count(*) , Classroom FROM list GROUP BY classroom",Scatter,Easy,student_1,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'Classroom', 'x_data': [[3, 7, 5, 4, 5, 7, 6, 2, 8, 6, 4, 3]], 'y_data': [[101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112]], 'classify': [], 'describe': ''}",scatter,count(*),Classroom,"3, 7, 5, 4, 5, 7, 6, 2, 8, 6, 4, 3","101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112",How many students does one classroom have. Show the correlation.
"SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",Scatter,Easy,wta_1,"{'chart': 'scatter', 'x_name': 'sum(tours)', 'y_name': 'ranking_date', 'x_datay_data': [[19870119, 19870126, 19870202, 19870209, 19870302, 19870330, 19870406, 19870413, 19870420, 19870427, 19870504, 19870511, 19870518, 19870525, 19870601, 19870608, 19870615, 19870622, 19870629, 19870706, 19870713, 19870720, 19870727, 19870803, 19870810, 19870817, 19870824, 19870831, 19870907, 19870914, 19870921, 19870928, 19871005, 19871012, 19871019, 19871026, 19871102, 19871109, 19871116, 19871123, 19871130, 19871207, 19871214, 19871221, 19871228, 19880101, 19880104, 19880111, 19880118, 19880125, 19880201, 19880208, 19880215, 19880222, 19880229, 19880307, 19880314, 19880321, 19880328, 19880404, 19880411, 19880418, 19880425, 19880502, 19880509, 19880516, 19880523, 19880530, 19880606, 19880613, 19880620, 19880627, 19880704, 19880711, 19880718, 19880725, 19880801, 19880808, 19880815, 19880822, 19880829, 19880905, 19880912, 19880919, 19880926, 19881003, 19881010, 19881017, 19881024, 19881031, 19881107, 19881114, 19881121, 19881128, 19881205, 19881212, 19881219, 19881226, 19890101, 19890102, 19890109, 19890116, 19890123, 19890130, 19890206, 19890213, 19890220, 19890227, 19890306, 19890313, 19890320, 19890327, 19890403, 19890410, 19890417, 19890424, 19890501, 19890508, 19890515, 19890522, 19890529, 19890605, 19890612, 19890619, 19890626, 19890703, 19890710, 19890717, 19890724, 19890731, 19890807, 19890814, 19890821, 19890828, 19890904, 19890911, 19890918, 19890925, 19891002, 19891009, 19891016, 19891023, 19891030, 19891106, 19891113, 19891120, 19891127, 19891204, 19891211, 19891218, 19891225, 19900101, 19900108, 19900115, 19900122, 19900129, 19900205, 19900212, 19900219, 19900226, 19900305, 19900312, 19900319, 19900326, 19900402, 19900409, 19900416, 19900423, 19900430, 19900507, 19900514, 19900521, 19900528, 19900604, 19900611, 19900618, 19900625, 19900702, 19900709, 19900716, 19900723, 19900730, 19900806, 19900813, 19900820, 19900827, 19900903, 19900910, 19900917, 19900924, 19901001, 19901008, 19901015, 19901022, 19901029, 19901105, 19901112, 19901119, 19901126, 19901203, 19901210, 19901217, 19901224, 19901231, 19910101, 19910107, 19910114, 19910121, 19910128, 19910204, 19910211, 19910218, 19910225, 19910304, 19910311, 19910318, 19910325, 19910401, 19910408, 19910415, 19910422, 19910429, 19910506, 19910513, 19910520, 19910527, 19910603, 19910610, 19910617, 19910624, 19910701, 19910708, 19910715, 19910722, 19910729, 19910805, 19910812, 19910819, 19910826, 19910902, 19910909, 19910916, 19910923, 19910930, 19911007, 19911014, 19911021, 19911028, 19911104, 19911111, 19911118, 19911125, 19911202, 19911209, 19911216, 19911223, 19911230, 19920101, 19920106, 19920113, 19920120, 19920127, 19920203, 19920210, 19920217, 19920224, 19920302, 19920309, 19920316, 19920323, 19920330, 19920406, 19920413, 19920420, 19920427, 19920504, 19920511, 19920518, 19920525, 19920601, 19920608, 19920615, 19920622, 19920629, 19920706, 19920713, 19920720, 19920727, 19920803, 19920810, 19920817, 19920824, 19920831, 19920907, 19920914, 19920921, 19920928, 19921005, 19921012, 19921019, 19921026, 19921102, 19921109, 19921116, 19921123, 19921130, 19921207, 19921214, 19921221, 19921228, 19930101, 19930104, 19930111, 19930118, 19930125, 19930201, 19930208, 19930215, 19930222, 19930301, 19930308, 19930315, 19930322, 19930329, 19930405, 19930412, 19930419, 19930426, 19930503, 19930510, 19930517, 19930524, 19930531, 19930607, 19930614, 19930621, 19930628, 19930705, 19930712, 19930719, 19930726, 19930802, 19930809, 19930816, 19930823, 19930830, 19930906, 19930913, 19930920, 19930927, 19931004, 19931011, 19931018, 19931025, 19931101, 19931108, 19931115, 19931122, 19931129, 19931206, 19931213, 19931220, 19931227, 19940101, 19940103, 19940110, 19940117, 19940124, 19940131, 19940207, 19940214, 19940221, 19940228, 19940307, 19940314, 19940321, 19940328, 19940404, 19940411, 19940418, 19940425, 19940502, 19940509, 19940516, 19940523, 19940530, 19940606, 19940613, 19940620, 19940627, 19940704, 19940711, 19940718, 19940725, 19940801, 19940808, 19940815, 19940822, 19940829, 19940905, 19940912, 19940919, 19940926, 19941003, 19941010, 19941017, 19941024, 19941031, 19941107, 19941114, 19941121, 19941128, 19941205, 19941212, 19941219, 19941226, 19950101, 19950102, 19950109, 19950116, 19950123, 19950130, 19950206, 19950213, 19950220, 19950227, 19950306, 19950313, 19950320, 19950327, 19950403, 19950410, 19950417, 19950424, 19950501, 19950508, 19950515, 19950522, 19950529, 19950605, 19950612, 19950619, 19950626, 19950703, 19950710, 19950717, 19950724, 19950731, 19950807, 19950814, 19950821, 19950828, 19950904, 19950911, 19950918, 19950925, 19951002, 19951009, 19951016, 19951023, 19951030, 19951106, 19951113, 19951120, 19951127, 19951204, 19951211, 19951218, 19951225, 19960101, 19960108, 19960115, 19960122, 19960129, 19960205, 19960212, 19960219, 19960226, 19960304, 19960311, 19960318, 19960325, 19960401, 19960408, 19960415, 19960422, 19960429, 19960506, 19960513, 19960520, 19960527, 19960603, 19960610, 19960617, 19960624, 19960701, 19960708, 19960715, 19960722, 19960729, 19960805, 19960812, 19960819, 19960826, 19960902, 19960909, 19960916, 19960923, 19960930, 19961007, 19961014, 19961021, 19961028, 19961104, 19961111, 19961118, 19961125, 19961202, 19961209, 19961216, 19961223, 19961230, 19970101, 19970106, 19970113, 19970120, 19970127, 19970203, 19970210, 19970217, 19970224, 19970303, 19970310, 19970317, 19970324, 19970331, 19970407, 19970414, 19970421, 19970428, 19970505, 19970512, 19970519, 19970526, 19970602, 19970609, 19970616, 19970623, 19970630, 19970707, 19970714, 19970721, 19970728, 19970804, 19970811, 19970818, 19970825, 19970901, 19970908, 19970915, 19970922, 19970929, 19971006, 19971013, 19971020, 19971027, 19971103, 19971110, 19971117, 19971124, 19971201, 19971208, 19971215, 19971222, 19971229, 19980101, 19980105, 19980112, 19980119, 19980126, 19980202, 19980209, 19980216, 19980223, 19980302, 19980309, 19980316, 19980323, 19980330, 19980406, 19980413, 19980420, 19980427, 19980504, 19980511, 19980518, 19980525, 19980601, 19980608, 19980615, 19980622, 19980629, 19980706, 19980713, 19980720, 19980727, 19980803, 19980810, 19980817, 19980824, 19980831, 19980907, 19980914, 19980921, 19980928, 19981005, 19981012, 19981019, 19981026, 19981102, 19981109, 19981116, 19981123, 19981130, 19981207, 19981214, 19981221, 19981228, 19990101, 19990104, 19990111, 19990118, 19990125, 19990201, 19990208, 19990215, 19990222, 19990301, 19990308, 19990315, 19990322, 19990329, 19990405, 19990412, 19990419, 19990426, 19990503, 19990510, 19990517, 19990524, 19990531, 19990607, 19990614, 19990621, 19990628, 19990705, 19990712, 19990719, 19990726, 19990802, 19990809, 19990816, 19990823, 19990830, 19990906, 19990913, 19990920, 19990927, 19991004, 19991011, 19991018, 19991025, 19991101, 19991108, 19991115, 19991122, 19991129, 19991206, 19991213, 19991220, 19991227, 20000101, 20000103, 20000110, 20000117, 20000124, 20000131, 20000207, 20000214, 20000221, 20000228, 20000306, 20000313, 20000320, 20000327, 20000403, 20000410, 20000417, 20000424, 20000501, 20000508, 20000515, 20000522, 20000529, 20000605, 20000612, 20000619, 20000626, 20000703, 20000710, 20000717, 20000724, 20000731, 20000807, 20000814, 20000821, 20000828, 20000904, 20000911, 20000918, 20000925, 20001002, 20001009, 20001016, 20001023, 20001030, 20001106, 20001113, 20001120, 20001127, 20001204, 20001211, 20001218, 20001225, 20010101, 20010108, 20010115, 20010122, 20010129, 20010205, 20010212, 20010219, 20010226, 20010305, 20010312, 20010319, 20010326, 20010402, 20010409, 20010416, 20010423, 20010430, 20010507, 20010514, 20010521, 20010528, 20010604, 20010611, 20010618, 20010625, 20010702, 20010709, 20010716, 20010723, 20010730, 20010806, 20010813, 20010820, 20010827, 20010903, 20010910, 20010917, 20010924, 20011001, 20011008, 20011015, 20011022, 20011029, 20011105, 20011112, 20011119, 20011126, 20011203, 20011210, 20011217, 20011224, 20011231, 20020101, 20020107, 20020114, 20020121, 20020128, 20020204, 20020211, 20020218, 20020225, 20020304, 20020311, 20020318, 20020325, 20020401, 20020408, 20020415, 20020422, 20020429, 20020506, 20020513, 20020520, 20020527, 20020603, 20020610, 20020617, 20020624, 20020701, 20020708, 20020715, 20020722, 20020729, 20020805, 20020812, 20020819, 20020826, 20020902, 20020909, 20020916, 20020923, 20020930, 20021007, 20021014, 20021021, 20021028, 20021104, 20021111, 20021118, 20021125, 20021202, 20021209, 20021216, 20021223, 20021230, 20030101, 20030106, 20030113, 20030120, 20030127, 20030203, 20030210, 20030217, 20030224, 20030303, 20030310, 20030317, 20030324, 20030331, 20030407, 20030414, 20030421, 20030428, 20030505, 20030512, 20030519, 20030526, 20030602, 20030609, 20030616, 20030623, 20030630, 20030707, 20030714, 20030721, 20030728, 20030804, 20030811, 20030818, 20030825, 20030901, 20030908, 20030915, 20030922, 20030929, 20031006, 20031013, 20031020, 20031027, 20031103, 20031110, 20031117, 20031124, 20031201, 20031208, 20031215, 20031222, 20031229, 20040101, 20040105, 20040112, 20040119, 20040126, 20040202, 20040209, 20040216, 20040223, 20040301, 20040308, 20040315, 20040322, 20040329, 20040405, 20040412, 20040419, 20040426, 20040503, 20040510, 20040517, 20040524, 20040531, 20040607, 20040614, 20040621, 20040628, 20040705, 20040712, 20040719, 20040726, 20040802, 20040809, 20040816, 20040823, 20040830, 20040906, 20040913, 20040920, 20040927, 20041004, 20041011, 20041018, 20041025, 20041101, 20041108, 20041115, 20041122, 20041129, 20041206, 20041213, 20041220, 20041227, 20050101, 20050103, 20050110, 20050117, 20050124, 20050131, 20050207, 20050214, 20050221, 20050228, 20050307, 20050314, 20050321, 20050328, 20050404, 20050411, 20050418, 20050425, 20050502, 20050509, 20050516, 20050523, 20050530, 20050606, 20050613, 20050620, 20050627, 20050704, 20050711, 20050718, 20050725, 20050801, 20050808, 20050815, 20050822, 20050829, 20050905, 20050912, 20050919, 20050926, 20051003, 20051010, 20051017, 20051024, 20051031, 20051107, 20051114, 20051121, 20051128, 20051205, 20051212, 20051219, 20051226, 20060101, 20060102, 20060109, 20060116, 20060123, 20060130, 20060206, 20060213, 20060220, 20060227, 20060306, 20060313, 20060320, 20060327, 20060403, 20060410, 20060417, 20060424, 20060501, 20060508, 20060515, 20060522, 20060529, 20060605, 20060612, 20060619, 20060626, 20060703, 20060710, 20060717, 20060724, 20060731, 20060807, 20060814, 20060821, 20060828, 20060904, 20060911, 20060918, 20060925, 20061002, 20061009, 20061016, 20061023, 20061030, 20061106, 20061113, 20061120, 20061127, 20061204, 20061211, 20061218, 20061225, 20070101, 20070108, 20070115, 20070122, 20070129, 20070205, 20070212, 20070219, 20070226, 20070305, 20070312, 20070319, 20070326, 20070402, 20070409, 20070416, 20070423, 20070430, 20070507, 20070514, 20070521, 20070528, 20070604, 20070611, 20070618, 20070625, 20070702, 20070709, 20070716, 20070723, 20070730, 20070806, 20070813, 20070820, 20070827, 20070903, 20070910, 20070917, 20070924, 20071001, 20071008, 20071015, 20071022, 20071029, 20071105, 20071112, 20071119, 20071126, 20071203, 20071210, 20071217, 20071224, 20071231, 20080101, 20080107, 20080114, 20080121, 20080128, 20080204, 20080211, 20080218, 20080225, 20080303, 20080310, 20080317, 20080324, 20080331, 20080407, 20080414, 20080421, 20080428, 20080505, 20080512, 20080519, 20080526, 20080602, 20080609, 20080616, 20080623, 20080630, 20080707, 20080714, 20080721, 20080728, 20080804, 20080811, 20080818, 20080825, 20080901, 20080908, 20080915, 20080922, 20080929, 20081006, 20081013, 20081020, 20081027, 20081103, 20081110, 20081117, 20081124, 20081201, 20081208, 20081215, 20081222, 20081229, 20090101, 20090105, 20090112, 20090119, 20090126, 20090202, 20090209, 20090216, 20090223, 20090302, 20090309, 20090316, 20090323, 20090330, 20090406, 20090413, 20090420, 20090427, 20090504, 20090511, 20090518, 20090525, 20090601, 20090608, 20090615, 20090622, 20090629, 20090706, 20090713, 20090720, 20090727, 20090803, 20090810, 20090817, 20090824, 20090831, 20090907, 20090914, 20090921, 20090928, 20091005, 20091012, 20091019, 20091026, 20091102, 20091109, 20091116, 20091123, 20091130, 20091207, 20091214, 20091221, 20091228, 20100101, 20100104, 20100111, 20100118, 20100125, 20100201, 20100208, 20100215, 20100222, 20100301, 20100308, 20100315, 20100322, 20100329, 20100405, 20100412, 20100419, 20100426, 20100503, 20100510, 20100517, 20100524, 20100531, 20100607, 20100614, 20100621, 20100628, 20100705, 20100712, 20100719, 20100726, 20100802, 20100809, 20100816, 20100823, 20100830, 20100906, 20100913, 20100920, 20100927, 20101004, 20101011, 20101018, 20101025, 20101101, 20101108, 20101115, 20101122, 20101129, 20101206, 20101213, 20101220, 20101227, 20110101, 20110103, 20110110, 20110117, 20110124, 20110131, 20110207, 20110214, 20110221, 20110228, 20110307, 20110314, 20110321, 20110328, 20110404, 20110411, 20110418, 20110425, 20110502, 20110509, 20110516, 20110523, 20110530, 20110606, 20110613, 20110620, 20110627, 20110704, 20110711, 20110718, 20110725, 20110801, 20110808, 20110815, 20110822, 20110829, 20110905, 20110912, 20110919, 20110926, 20111003, 20111010, 20111017, 20111024, 20111031, 20111107, 20111114, 20111121, 20111128, 20111205, 20111212, 20111219, 20111226, 20120101, 20120102, 20120109, 20120116, 20120123, 20120130, 20120206, 20120213, 20120220, 20120227, 20120305, 20120312, 20120319, 20120326, 20120402, 20120409, 20120416, 20120423, 20120430, 20120507, 20120514, 20120521, 20120528, 20120604, 20120611, 20120618, 20120625, 20120702, 20120709, 20120716, 20120723, 20120730, 20120806, 20120813, 20120820, 20120827, 20120903, 20120910, 20120917, 20120924, 20121001, 20121008, 20121015, 20121022, 20121029, 20121105, 20121112, 20121119, 20121126, 20121203, 20121210, 20121217, 20121224, 20121231, 20130101, 20130107, 20130114, 20130121, 20130128, 20130204, 20130211, 20130218, 20130225, 20130304, 20130311, 20130318, 20130401, 20130408, 20130415, 20130422, 20130429, 20130506, 20130513, 20130520, 20130527, 20130603, 20130610, 20130617, 20130624, 20130708, 20130715, 20130722, 20130729, 20130805, 20130812, 20130819, 20130826, 20130902, 20130909, 20130916, 20130923, 20130930, 20131007, 20131014, 20131021, 20131028, 20131104, 20131111, 20131118, 20131125, 20131202, 20131209, 20131216, 20131223, 20131230, 20140106, 20140113, 20140120, 20140127, 20140203, 20140210, 20140217, 20140224, 20150302, 20150406, 20150413, 20150420, 20150427, 20150511, 20150518, 20150525, 20150608, 20150622, 20150803, 20150810, 20150824, 20150831, 20150914, 20150921, 20151005, 20151012, 20151019, 20151102, 20160111, 20160118, 20160201, 20160208, 20160215, 20160222, 20160229, 20160307, 20160411, 20160418, 20160425, 20160502, 20160509, 20160523, 20160606, 20160620, 20160627, 20160815, 20160919, 20160926, 20161010, 20161031, 20161107, 20161114, 20161121, 20161128, 20161205, 20161212, 20170102, 20170109, 20170116, 20170213, 20170220, 20170306, 20170320, 20170417, 20170424, 20170501, 20170508, 20170515, 20170522, 20170529, 20170612, 20170619, 20170626, 20170703, 20170717, 20170724, 20170731, 20170807, 20170814, 20170821, 20170828, 20170911]], 'classify': [], 'describe': ''}",scatter,sum(tours),ranking_dateind the total number of tours for each ranking date. 
"SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Price', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], 'y_data': [[240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150]], 'classify': [], 'describe': ''}",scatter,Code,Price,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11","240, 120, 150, 5, 240, 180, 90, 270, 66, 180, 150","For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  price ."
"SELECT CID , DNO FROM COURSE ORDER BY Credits",Scatter,Easy,college_3,"{'chart': 'scatter', 'x_name': 'CID', 'y_name': 'DNO', 'x_data': [[600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203]], 'y_data': [[600, 600, 600, 50, 550, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 50, 50, 50, 50, 50, 50, 50, 50, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 50]], 'classify': [], 'describe': ''}",scatter,CID,DNO,"600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203","600, 600, 600, 50, 550, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 50, 50, 50, 50, 50, 50, 50, 50, 550, 550, 550, 550, 550, 550, 550, 550, 520, 520, 520, 50",Draw a scatter chart about the correlation between  CID and  DNO .
"SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'MANAGER_ID', 'x_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,MANAGER_ID,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205","For those employees who was hired before 2002-06-21, what is the relationship between  commission_pct and  manager_id ?"
"SELECT Clean_Jerk , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Clean_Jerk', 'y_name': 'Total', 'x_data': [[175, 177.5, 175, 175, 162.5]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Clean_Jerk,Total,"175, 177.5, 175, 175, 162.5","317.5, 315, 315, 312.5, 292.5",Return a scatter chart about the correlation between  Clean_Jerk and  Total .
"SELECT Final_Table_Made , Best_Finish FROM poker_player",Scatter,Easy,poker_player,"{'chart': 'scatter', 'x_name': 'Final_Table_Made', 'y_name': 'Best_Finish', 'x_data': [[42, 10, 21, 19, 26]], 'y_data': [[1, 2, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Final_Table_Made,Best_Finish,"42, 10, 21, 19, 26","1, 2, 1, 2, 3","Plot a scatter chart, final table made by best_finish."
"SELECT EMPLOYEE_ID , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'MANAGER_ID', 'x_data': [[100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128]], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,MANAGER_ID,"100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, visualize the relationship between  employee_id and  manager_id ."
"SELECT gender , count(*) FROM Customers GROUP BY gender",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [[0, 1]], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",scatter,gender,count(*),"0, 1","9, 6",Scatter plot to show gender on x axis and the total number on y axis.
"SELECT Body_Builder_ID , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'Total', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,Total,"1, 2, 3, 4, 5","317.5, 315, 315, 312.5, 292.5",Show me about the correlation between  Body_Builder_ID and  Total  in a scatter chart.
"SELECT FacID , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",Scatter,Medium,activity_1,"{'chart': 'scatter', 'x_name': 'FacID', 'y_name': 'count(*)', 'x_data': [[1121, 1148, 2192, 2311, 5718, 7134, 7271, 7712, 7723, 7792, 8423, 8721, 8722, 8723, 8741, 8772, 8918, 9172]], 'y_data': [[3, 3, 4, 3, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1]], 'classify': [], 'describe': ''}",scatter,FacID,count(*),"1121, 1148, 2192, 2311, 5718, 7134, 7271, 7712, 7723, 7792, 8423, 8721, 8722, 8723, 8741, 8772, 8918, 9172","3, 3, 4, 3, 2, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1",Show me a scatter chart for what are the faculty id and the number of students each faculty has?
"SELECT product_id , count(DISTINCT order_id) FROM Order_items",Scatter,Medium,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'product_id', 'y_name': 'count(DISTINCT order_id)', 'x_data': [[3, 4, 5, 7, 9, 10, 12, 13, 14, 15]], 'y_data': [[1, 2, 2, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': ''}",scatter,product_id,count(DISTINCT order_id),"3, 4, 5, 7, 9, 10, 12, 13, 14, 15","1, 2, 2, 1, 1, 1, 1, 1, 3, 1",Return a scatter chart on how many distinct order ids correspond to each product?
"SELECT author_tutor_ATB , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",Scatter,Easy,e_learning,"{'chart': 'scatter', 'x_name': 'author_tutor_ATB', 'y_name': 'gender_mf', 'x_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'y_data': [[1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]], 'classify': [], 'describe': ''}",scatter,author_tutor_ATB,gender_mf,"817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388","1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1",Visualize the relationship between  author_tutor_ATB and  gender_mf .
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[178, 201, 202, 203, 204, 205, 206]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"178, 201, 202, 203, 204, 205, 206","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between  employee_id and  department_id  in a scatter chart."
"SELECT Reign , Days_held FROM wrestler",Scatter,Easy,wrestler,"{'chart': 'scatter', 'x_name': 'Reign', 'y_name': 'Days_held', 'x_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'y_data': [[344, 113, 1285, 960, 1, 99, 54, 183, 35, 56]], 'classify': [], 'describe': ''}",scatter,Reign,Days_held,"1, 1, 1, 1, 1, 1, 1, 1, 2, 1","344, 113, 1285, 960, 1, 99, 54, 183, 35, 56",Scatter plot to show reign on x axis and days_held on y axis.
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[90, 110, 80, 30, 80, 80, 80, 80, 60, 100, 80, 50, 80, 80, 100, 100, 80, 80, 100, 80, 50, 40, 80, 80, 80, 60, 60, 50, 50, 50, 50, 50, 50, 50, 50, 30, 50, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","90, 110, 80, 30, 80, 80, 80, 80, 60, 100, 80, 50, 80, 80, 100, 100, 80, 80, 100, 80, 50, 40, 80, 80, 80, 60, 60, 50, 50, 50, 50, 50, 50, 50, 50, 30, 50, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50","For all employees who have the letters D or S in their first name, what is the relationship between  commission_pct and  department_id ?"
"SELECT CID , Instructor FROM COURSE ORDER BY Credits",Scatter,Easy,college_3,"{'chart': 'scatter', 'x_name': 'CID', 'y_name': 'Instructor', 'x_data': [[600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203]], 'y_data': [[4230, 9826, 6191, 9011, 2881, 6112, 1193, 4230, 6112, 6112, 6112, 1121, 9826, 9172, 2192, 1148, 8918, 7712, 2192, 1148, 8918, 7723, 8114, 7712, 7792, 1121, 8423, 1121, 9823, 9823, 8791, 8791, 2738, 8102, 6182, 9823, 8772, 6541, 8122, 9922, 8723, 9210, 6191, 1823, 9824, 6925, 6191, 6191, 2119, 7231, 9514, 6330, 8722, 9379, 7134, 9514, 4432, 6910, 4432, 6910, 8989, 4432, 4432, 5718, 2311, 8772, 6541, 8102, 2881, 1177, 2738, 8772, 9210, 8118, 9210, 9011]], 'classify': [], 'describe': ''}",scatter,CID,Instructor,"600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203","4230, 9826, 6191, 9011, 2881, 6112, 1193, 4230, 6112, 6112, 6112, 1121, 9826, 9172, 2192, 1148, 8918, 7712, 2192, 1148, 8918, 7723, 8114, 7712, 7792, 1121, 8423, 1121, 9823, 9823, 8791, 8791, 2738, 8102, 6182, 9823, 8772, 6541, 8122, 9922, 8723, 9210, 6191, 1823, 9824, 6925, 6191, 6191, 2119, 7231, 9514, 6330, 8722, 9379, 7134, 9514, 4432, 6910, 4432, 6910, 8989, 4432, 4432, 5718, 2311, 8772, 6541, 8102, 2881, 1177, 2738, 8772, 9210, 8118, 9210, 9011",Draw a scatter chart about the correlation between  CID and  Instructor .
"SELECT max(Accelerate) , Cylinders FROM CARS_DATA",Scatter,Easy,car_1,"{'chart': 'scatter', 'x_name': 'max(Accelerate)', 'y_name': 'Cylinders', 'x_data': [[13.5, 24.8, 20.1, 21, 22.2]], 'y_data': [[3, 4, 5, 6, 8]], 'classify': [], 'describe': ''}",scatter,max(Accelerate),Cylinders,"13.5, 24.8, 20.1, 21, 22.2","3, 4, 5, 6, 8", what is the maximum accelerate for different number of cylinders?
"SELECT T1.id , count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id",Scatter,Medium,flight_company,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'count(*)', 'x_data': [[1, 2, 3, 4, 5, 6, 8, 9]], 'y_data': [[1, 3, 1, 3, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,id,count(*),"1, 2, 3, 4, 5, 6, 8, 9","1, 3, 1, 3, 1, 2, 1, 1",plot scatter on how many companies operates airlines in each airport?
"SELECT account_id , account_name FROM Accounts",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[900, 520, 323, 390, 935, 371, 398, 710, 337, 429, 191, 601, 272, 861, 662]], 'classify': [], 'describe': ''}",scatter,account_id,account_name,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","900, 520, 323, 390, 935, 371, 398, 710, 337, 429, 191, 601, 272, 861, 662",What is the relationship between account id and name for all accounts? Return a scatter chart.
"SELECT Classroom , count(*) FROM list GROUP BY classroom",Scatter,Easy,student_1,"{'chart': 'scatter', 'x_name': 'Classroom', 'y_name': 'count(*)', 'x_data': [[101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112]], 'y_data': [[3, 7, 5, 4, 5, 7, 6, 2, 8, 6, 4, 3]], 'classify': [], 'describe': ''}",scatter,Classroom,count(*),"101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112","3, 7, 5, 4, 5, 7, 6, 2, 8, 6, 4, 3",Scatter plot to show classroom on x axis and the total number on y axis.
"SELECT People_ID , Weight FROM people",Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Weight', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[83, 85, 94, 92, 90, 88, 89, 88, 82]], 'classify': [], 'describe': ''}",scatter,People_ID,Weight,"1, 2, 3, 4, 5, 6, 7, 8, 9","83, 85, 94, 92, 90, 88, 89, 88, 82",Visualize a scatter chart about the correlation between  People_ID and  Weight .
"SELECT Statement_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID",Scatter,Easy,cre_Docs_and_Epenses,"{'chart': 'scatter', 'x_name': 'Statement_ID', 'y_name': 'count(*)', 'x_data': [[57, 192]], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",scatter,Statement_ID,count(*),"57, 192","9, 6",Scatter plot to show statement id on x axis and the total number on y axis.
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[178, 201, 202, 203, 204, 205, 206]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"178, 201, 202, 203, 204, 205, 206","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between  employee_id and  department_id ."
"SELECT Snatch , Clean_Jerk FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Snatch', 'y_name': 'Clean_Jerk', 'x_data': [[130, 137.5, 137.5, 140, 142.5]], 'y_data': [[162.5, 177.5, 175, 175, 175]], 'classify': [], 'describe': ''}",scatter,Snatch,Clean_Jerk,"130, 137.5, 137.5, 140, 142.5","162.5, 177.5, 175, 175, 175",List the snatch score and clean jerk score of body builders in ascending order of snatch score in a scatter chart
"SELECT ID , salary FROM instructor ORDER BY salary",Scatter,Easy,college_2,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'salary', 'x_data': [[14365, 50885, 42782, 28097, 36897, 57180, 64871, 80759, 72553, 79081, 59795, 41930, 97302, 95030, 90643, 78699, 22591, 4034, 35579, 58558, 31955, 15347, 81991, 43779, 65931, 3335, 3199, 28400, 48570, 52647, 4233, 79653, 73623, 25946, 99052, 63395, 16807, 77346, 63287, 37687, 6569, 74426, 48507, 50330, 34175, 90376, 95709, 96895, 74420, 19368]], 'y_data': [[32241.56, 32570.5, 34272.67, 35023.18, 43770.36, 43966.29, 45310.53, 45538.32, 46397.59, 47307.1, 48803.38, 50482.03, 51647.57, 54805.11, 57807.09, 59303.62, 59706.49, 61387.56, 62579.61, 66143.25, 71351.42, 72140.88, 77036.18, 79070.08, 79866.95, 80797.83, 82534.37, 84982.92, 87549.8, 87958.01, 88791.45, 89805.83, 90038.09, 90891.69, 93348.83, 94333.99, 98333.65, 99382.59, 103146.87, 104563.38, 105311.38, 106554.73, 107978.47, 108011.81, 115469.11, 117836.5, 118143.98, 119921.41, 121141.99, 124651.41]], 'classify': [], 'describe': ''}",scatter,ID,salary,"14365, 50885, 42782, 28097, 36897, 57180, 64871, 80759, 72553, 79081, 59795, 41930, 97302, 95030, 90643, 78699, 22591, 4034, 35579, 58558, 31955, 15347, 81991, 43779, 65931, 3335, 3199, 28400, 48570, 52647, 4233, 79653, 73623, 25946, 99052, 63395, 16807, 77346, 63287, 37687, 6569, 74426, 48507, 50330, 34175, 90376, 95709, 96895, 74420, 19368","32241.56, 32570.5, 34272.67, 35023.18, 43770.36, 43966.29, 45310.53, 45538.32, 46397.59, 47307.1, 48803.38, 50482.03, 51647.57, 54805.11, 57807.09, 59303.62, 59706.49, 61387.56, 62579.61, 66143.25, 71351.42, 72140.88, 77036.18, 79070.08, 79866.95, 80797.83, 82534.37, 84982.92, 87549.8, 87958.01, 88791.45, 89805.83, 90038.09, 90891.69, 93348.83, 94333.99, 98333.65, 99382.59, 103146.87, 104563.38, 105311.38, 106554.73, 107978.47, 108011.81, 115469.11, 117836.5, 118143.98, 119921.41, 121141.99, 124651.41",Draw a scatter chart about the correlation between  ID and  salary .
"SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'MANAGER_ID', 'x_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'y_data': [[149, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,MANAGER_ID,"0.15, 0, 0, 0, 0, 0, 0","149, 100, 201, 101, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between  commission_pct and  manager_id  in a scatter chart."
"SELECT Snatch , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Snatch', 'y_name': 'Total', 'x_data': [[142.5, 137.5, 140, 137.5, 130]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Snatch,Total,"142.5, 137.5, 140, 137.5, 130","317.5, 315, 315, 312.5, 292.5",Scatter plot to show snatch on x axis and total on y axis.
"SELECT CID , Credits FROM COURSE ORDER BY Credits",Scatter,Easy,college_3,"{'chart': 'scatter', 'x_name': 'CID', 'y_name': 'Credits', 'x_data': [[600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203]], 'y_data': [[1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]], 'classify': [], 'describe': ''}",scatter,CID,Credits,"600.1030000000001, 600.303, 600.601, 50.802, 550.79, 600.101, 600.107, 600.109, 600.113, 600.121, 600.211, 600.227, 600.232, 600.271, 600.315, 600.3330000000001, 600.337, 600.363, 600.415, 600.433, 600.437, 600.445, 600.461, 600.4630000000001, 600.465, 600.509, 600.6569999999999, 600.7869999999999, 500.20300000000003, 500.204, 500.205, 500.20599999999996, 550.62, 550.626, 550.631, 550.661, 550.6709999999999, 550.681, 550.721, 550.75, 520.137, 520.219, 520.325, 520.345, 520.349, 520.3530000000001, 520.401, 520.41, 520.419, 520.4209999999999, 520.432, 520.475, 520.49, 520.605, 520.609, 520.651, 50.102, 50.108999999999995, 50.325, 50.37, 50.381, 50.427, 50.67, 50.821000000000005, 550.111, 550.1709999999999, 550.2909999999999, 550.31, 550.361, 550.413, 550.42, 550.471, 520.2130000000001, 520.435, 520.6030000000001, 50.203","1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",Visualize a scatter chart about the correlation between  CID and  Credits .
"SELECT killed , injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",Scatter,Medium,battle_death,"{'chart': 'scatter', 'x_name': 'killed', 'y_name': 'injured', 'x_data': [[8, 3, 25, 2, 0, 4, 0, 29, 0, 0, 14]], 'y_data': [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,killed,injured,"8, 3, 25, 2, 0, 4, 0, 29, 0, 0, 14","0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0",What are the death and injury situations caused by the ship with tonnage 't'. Visualize by scatter chart.
"SELECT Snatch , Clean_Jerk FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Snatch', 'y_name': 'Clean_Jerk', 'x_data': [[142.5, 137.5, 140, 137.5, 130]], 'y_data': [[175, 177.5, 175, 175, 162.5]], 'classify': [], 'describe': ''}",scatter,Snatch,Clean_Jerk,"142.5, 137.5, 140, 137.5, 130","175, 177.5, 175, 175, 162.5",Scatter plot to show snatch on x axis and clean_jerk on y axis.
"SELECT Account_ID , Account_Details FROM Accounts",Scatter,Easy,cre_Docs_and_Epenses,"{'chart': 'scatter', 'x_name': 'Account_ID', 'y_name': 'Account_Details', 'x_data': [[7, 61, 98, 136, 164, 209, 211, 240, 262, 280, 321, 346, 414, 427, 451]], 'y_data': [[495.06300000000005, 930.14, 6035.84, 199.52, 12223.93, 11130.23, 1230.454, 6352.31, 147.96, 187.14, 745.817, 127.9, 25.41, 1168.32, 658.26]], 'classify': [], 'describe': ''}",scatter,Account_ID,Account_Details,"7, 61, 98, 136, 164, 209, 211, 240, 262, 280, 321, 346, 414, 427, 451","495.06300000000005, 930.14, 6035.84, 199.52, 12223.93, 11130.23, 1230.454, 6352.31, 147.96, 187.14, 745.817, 127.9, 25.41, 1168.32, 658.26",Show all account ids and account details. Plot them as scatter chart.
"SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",Scatter,Medium,local_govt_and_lot,"{'chart': 'scatter', 'x_name': 'property_id', 'y_name': 'count(*)', 'x_data': [[107, 108, 120, 373, 445, 605, 629, 669, 748, 879, 954]], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2]], 'classify': [], 'describe': ''}",scatter,property_id,count(*),"107, 108, 120, 373, 445, 605, 629, 669, 748, 879, 954","2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2",How many residents does each property have? List property id and resident count with a scatter chart.
"SELECT Height , Weight FROM people",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Height', 'y_name': 'Weight', 'x_data': [[215, 205, 196, 195, 192, 182]], 'y_data': [[102, 92, 89, 100, 90, 80]], 'classify': [], 'describe': ''}",scatter,Height,Weight,"215, 205, 196, 195, 192, 182","102, 92, 89, 100, 90, 80",List the height and weight of people in descending order of height in a scatter chart
"SELECT author_id , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Scatter,Easy,e_learning,"{'chart': 'scatter', 'x_name': 'author_id', 'y_name': 'author_tutor_ATB', 'x_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",scatter,author_id,author_tutor_ATB,"6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Draw a scatter chart about the correlation between  author_id and  author_tutor_ATB .
"SELECT People_ID , Snatch FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Snatch', 'x_data': [[1, 2, 3, 5, 6]], 'y_data': [[142.5, 137.5, 140, 137.5, 130]], 'classify': [], 'describe': ''}",scatter,People_ID,Snatch,"1, 2, 3, 5, 6","142.5, 137.5, 140, 137.5, 130",Visualize a scatter chart about the correlation between  People_ID and  Snatch .
"SELECT count(*) , Major FROM student GROUP BY major",Scatter,Easy,dorm_1,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'Major', 'x_data': [[2, 1, 6, 2, 5, 18]], 'y_data': [[50, 100, 520, 540, 550, 600]], 'classify': [], 'describe': ''}",scatter,count(*),Major,"2, 1, 6, 2, 5, 18","50, 100, 520, 540, 550, 600",Show me a scatter plot of count(*) and major for .
"SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",Scatter,Medium,e_learning,"{'chart': 'scatter', 'x_name': 'subject_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 1]], 'y_data': [[4, 5, 6]], 'classify': [], 'describe': ''}",scatter,subject_id,COUNT(*),"2, 3, 1","4, 5, 6",Show the relationship between the subject ID and the corresponding number of courses for each subject in a scatter chart.
"SELECT account_id , account_name FROM Accounts",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[900, 520, 323, 390, 935, 371, 398, 710, 337, 429, 191, 601, 272, 861, 662]], 'classify': [], 'describe': ''}",scatter,account_id,account_name,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","900, 520, 323, 390, 935, 371, 398, 710, 337, 429, 191, 601, 272, 861, 662",Show the relationship between account id and name for all accounts in a scatter chart.
"SELECT T1.customer_id , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",Scatter,Medium,products_for_hire,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[3, 7, 8, 9, 10, 11, 15]], 'y_data': [[4, 3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"3, 7, 8, 9, 10, 11, 15","4, 3, 2, 2, 2, 1, 1",How many bookings did each customer make? List the customer id and the count in the scatter chart.
"SELECT EMPLOYEE_ID , SALARY FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'SALARY', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,SALARY,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between  employee_id and  salary ."
"SELECT SALARY , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'MANAGER_ID', 'x_data': [[7000, 13000, 6000, 6500, 10000, 12000, 8300]], 'y_data': [[149, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,SALARY,MANAGER_ID,"7000, 13000, 6000, 6500, 10000, 12000, 8300","149, 100, 201, 101, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a scatter chart about the correlation between  salary and  manager_id ."
"SELECT SALARY , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'SALARY', 'y_name': 'MANAGER_ID', 'x_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",scatter,SALARY,MANAGER_ID,"24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, show me about the correlation between  salary and  manager_id  in a scatter chart."
"SELECT gender , count(*) FROM Customers GROUP BY gender",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [[0, 1]], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",scatter,gender,count(*),"0, 1","9, 6",Show the number of customers for each gender in a scatter chart
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[178, 201, 202, 203, 204, 205, 206]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"178, 201, 202, 203, 204, 205, 206","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between  employee_id and  department_id ."
"SELECT Body_Builder_ID , Snatch FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'Snatch', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[142.5, 137.5, 140, 137.5, 130]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,Snatch,"1, 2, 3, 4, 5","142.5, 137.5, 140, 137.5, 130",Return a scatter chart about the correlation between  Body_Builder_ID and  Snatch .
"SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'COMMISSION_PCT', 'x_data': [[178, 201, 202, 203, 204, 205, 206]], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,COMMISSION_PCT,"178, 201, 202, 203, 204, 205, 206","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between  employee_id and  commission_pct ?"
"SELECT Body_Builder_ID , People_ID FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Body_Builder_ID', 'y_name': 'People_ID', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[1, 2, 3, 5, 6]], 'classify': [], 'describe': ''}",scatter,Body_Builder_ID,People_ID,"1, 2, 3, 4, 5","1, 2, 3, 5, 6",A scatter chart shows the correlation between  Body_Builder_ID and  People_ID .
"SELECT star_rating_code , avg(price_range) FROM HOTELS GROUP BY star_rating_code",Scatter,Easy,cre_Theme_park,"{'chart': 'scatter', 'x_name': 'star_rating_code', 'y_name': 'avg(price_range)', 'x_data': [[1, 2, 3, 4, 5]], 'y_data': [[12725.062543725, 96606.48756549998, 2763278.3206, 19007487.73924, 113509913.47843349]], 'classify': [], 'describe': ''}",scatter,star_rating_code,avg(price_range),"1, 2, 3, 4, 5","12725.062543725, 96606.48756549998, 2763278.3206, 19007487.73924, 113509913.47843349",What is the average price range of hotels for each each star rating code. Show scatter chart.
"SELECT max(stu_gpa) , min(stu_gpa) FROM student",Scatter,Easy,college_1,"{'chart': 'scatter', 'x_name': 'max(stu_gpa)', 'y_name': 'min(stu_gpa)', 'x_data': [[3.87]], 'y_data': [[2.11]], 'classify': [], 'describe': ''}",scatter,max(stu_gpa),min(stu_gpa),3.87,2.11,Find the relationship between minimum and maximum gpa of all students with a scatter chart.
"SELECT student_id , monthly_rental FROM Student_Addresses ORDER BY monthly_rental DESC",Scatter,Easy,behavior_monitoring,"{'chart': 'scatter', 'x_name': 'student_id', 'y_name': 'monthly_rental', 'x_data': [[13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10]], 'y_data': [[1297.807, 1297.3186, 1287.5604, 1132.742, 1113.0996, 1067.8383, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 644.9306, 620.2801]], 'classify': [], 'describe': ''}",scatter,student_id,monthly_rental,"13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10","1297.807, 1297.3186, 1287.5604, 1132.742, 1113.0996, 1067.8383, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 644.9306, 620.2801",Draw a scatter chart about the correlation between  student_id and  monthly_rental .
"SELECT gender , count(*) FROM Customers GROUP BY gender",Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [[0, 1]], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",scatter,gender,count(*),"0, 1","9, 6",How many customers are there of each gender. Visualize by scatter chart.
"SELECT EMPLOYEE_ID , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'COMMISSION_PCT', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,COMMISSION_PCT,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between  employee_id and  commission_pct ."
"SELECT Major , count(*) FROM Student GROUP BY major",Scatter,Easy,allergy_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'count(*)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[2, 1, 6, 2, 5, 18]], 'classify': [], 'describe': ''}",scatter,Major,count(*),"50, 100, 520, 540, 550, 600","2, 1, 6, 2, 5, 18",Show all majors and corresponding number of students by a scatter chart.
"SELECT People_ID , Height FROM people",Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Height', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[188, 197, 200, 202, 195, 196, 193, 194, 196]], 'classify': [], 'describe': ''}",scatter,People_ID,Height,"1, 2, 3, 4, 5, 6, 7, 8, 9","188, 197, 200, 202, 195, 196, 193, 194, 196",A scatter chart shows the correlation between  People_ID and  Height .
"SELECT T1.Code , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",Scatter,Easy,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Revenue', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], 'y_data': [[130, 30, 200, 30, 120, 100, 100, 50, 50, 100, 50]], 'classify': [], 'describe': ''}",scatter,Code,Revenue,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11","130, 30, 200, 30, 120, 100, 100, 50, 50, 100, 50","For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between  code and  revenue ."
"SELECT order_id , count(DISTINCT product_id) FROM Order_items",Scatter,Medium,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'order_id', 'y_name': 'count(DISTINCT product_id)', 'x_data': [[1, 2, 4, 10, 12, 13, 14, 15]], 'y_data': [[2, 1, 3, 1, 1, 3, 1, 2]], 'classify': [], 'describe': ''}",scatter,order_id,count(DISTINCT product_id),"1, 2, 4, 10, 12, 13, 14, 15","2, 1, 3, 1, 1, 3, 1, 2",Show order ids and the number of products in each order by a scatter chart.
"SELECT EMPLOYEE_ID , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'SALARY', 'x_data': [[100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128]], 'y_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,SALARY,"100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128","24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between  employee_id and  salary ."
"SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'MANAGER_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 114, 114, 114, 114, 114, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 201, 101, 101, 101, 205]], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,MANAGER_ID,DEPARTMENT_ID,"0, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 114, 114, 114, 114, 114, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 201, 101, 101, 101, 205","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, visualize a scatter chart about the correlation between  manager_id and  department_id ."
"SELECT COMMISSION_PCT , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'MANAGER_ID', 'x_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'y_data': [[149, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,MANAGER_ID,"0.15, 0, 0, 0, 0, 0, 0","149, 100, 201, 101, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between  commission_pct and  manager_id ."
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0.15, 0, 0, 0, 0, 0, 0","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between  commission_pct and  department_id ."
"SELECT COMMISSION_PCT , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Scatter,Hard,hr_1,"{'chart': 'scatter', 'x_name': 'COMMISSION_PCT', 'y_name': 'DEPARTMENT_ID', 'x_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'y_data': [[90, 110, 80, 30, 80, 80, 80, 80, 60, 100, 80, 50, 80, 80, 100, 100, 80, 80, 100, 80, 50, 40, 80, 80, 80, 60, 60, 50, 50, 50, 50, 50, 50, 50, 50, 30, 50, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50]], 'classify': [], 'describe': ''}",scatter,COMMISSION_PCT,DEPARTMENT_ID,"0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","90, 110, 80, 30, 80, 80, 80, 80, 60, 100, 80, 50, 80, 80, 100, 100, 80, 80, 100, 80, 50, 40, 80, 80, 80, 60, 60, 50, 50, 50, 50, 50, 50, 50, 50, 30, 50, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50","For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between  commission_pct and  department_id ."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match",Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.875, 0.813, 0.625, 0.563]], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",scatter,ACC_Percent,All_Games_Percent,"0.875, 0.813, 0.625, 0.563","0.946, 0.8240000000000001, 0.706, 0.6",Scatter plot to show acc percent on x axis and all_games_percent on y axis.
"SELECT author_id , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",Scatter,Easy,e_learning,"{'chart': 'scatter', 'x_name': 'author_id', 'y_name': 'gender_mf', 'x_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'y_data': [[1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]], 'classify': [], 'describe': ''}",scatter,author_id,gender_mf,"6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5","1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1",Draw a scatter chart about the correlation between  author_id and  gender_mf .
"SELECT student_id , monthly_rental FROM Student_Addresses ORDER BY monthly_rental DESC",Scatter,Easy,behavior_monitoring,"{'chart': 'scatter', 'x_name': 'student_id', 'y_name': 'monthly_rental', 'x_data': [[13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10]], 'y_data': [[1297.807, 1297.3186, 1287.5604, 1132.742, 1113.0996, 1067.8383, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 644.9306, 620.2801]], 'classify': [], 'describe': ''}",scatter,student_id,monthly_rental,"13, 8, 2, 4, 3, 7, 5, 12, 15, 1, 7, 2, 6, 2, 4, 11, 8, 9, 13, 10","1297.807, 1297.3186, 1287.5604, 1132.742, 1113.0996, 1067.8383, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 644.9306, 620.2801",Visualize the relationship between  student_id and  monthly_rental .
"SELECT Support_rate , Consider_rate FROM candidate",Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'Support_rate', 'y_name': 'Consider_rate', 'x_data': [[0.25, 0.33, 0.24, 0.18, 0.24, 0.17]], 'y_data': [[0.3, 0.2, 0.27, 0.34, 0.3, 0.42]], 'classify': [], 'describe': ''}",scatter,Support_rate,Consider_rate,"0.25, 0.33, 0.24, 0.18, 0.24, 0.17","0.3, 0.2, 0.27, 0.34, 0.3, 0.42",What is the relationship between support and consider rates of each candidate?
"SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'MANAGER_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[149, 100, 201, 101, 101, 101, 205]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,MANAGER_ID,DEPARTMENT_ID,"149, 100, 201, 101, 101, 101, 205","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between  manager_id and  department_id ?"
"SELECT Clean_Jerk , Total FROM body_builder",Scatter,Easy,body_builder,"{'chart': 'scatter', 'x_name': 'Clean_Jerk', 'y_name': 'Total', 'x_data': [[175, 177.5, 175, 175, 162.5]], 'y_data': [[317.5, 315, 315, 312.5, 292.5]], 'classify': [], 'describe': ''}",scatter,Clean_Jerk,Total,"175, 177.5, 175, 175, 162.5","317.5, 315, 315, 312.5, 292.5",A scatter chart shows the correlation between  Clean_Jerk and  Total .
"SELECT T1.driverId , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid",Scatter,Medium,formula_1,"{'chart': 'scatter', 'x_name': 'driverId', 'y_name': 'count(*)', 'x_data': [[7, 12, 19, 26, 28, 29, 34, 36, 38, 40, 42, 43, 45, 46, 47, 51, 52, 53, 54, 58, 59, 60, 61, 62, 66, 72, 73, 74, 76, 80, 82, 85, 86, 89, 93, 96, 97, 98, 101, 106, 107, 108, 111, 113, 115, 116, 120, 121, 124, 125, 126, 128, 130, 132, 134, 135, 141, 142, 143, 144, 147, 148, 149, 150, 151, 161, 162, 164, 165, 167, 168, 169, 171, 174, 179, 180, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 198, 201, 204, 208, 209, 210, 213, 214, 215, 216, 217, 218, 220, 225, 226, 227, 228, 229, 234, 236, 237, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 810, 812, 816, 823, 827, 829, 833, 834, 837, 838, 839, 840, 841, 842, 843]], 'y_data': [[27, 28, 24, 28, 1, 21, 4, 7, 11, 11, 20, 28, 14, 18, 20, 16, 14, 5, 15, 26, 29, 21, 3, 16, 17, 1, 30, 16, 25, 1, 4, 28, 10, 18, 7, 11, 7, 3, 30, 10, 3, 27, 9, 2, 3, 2, 20, 13, 1, 6, 2, 29, 10, 3, 6, 7, 20, 13, 4, 2, 15, 22, 14, 2, 15, 10, 17, 7, 21, 21, 2, 12, 2, 16, 28, 9, 20, 22, 9, 23, 8, 19, 5, 15, 29, 30, 3, 15, 8, 14, 12, 5, 17, 2, 4, 13, 11, 1, 2, 7, 1, 2, 1, 29, 3, 5, 20, 6, 5, 3, 3, 6, 15, 5, 1, 2, 20, 6, 7, 15, 7, 13, 11, 5, 1, 2, 1, 16, 1, 12, 1, 4, 11, 6, 1, 2, 2, 17, 12, 8, 1, 1, 2, 8, 4, 3, 1, 1, 15, 1, 3, 13, 10, 6, 15, 2, 9, 2, 2, 1, 2, 1, 4, 2, 4, 13, 13, 2, 6, 23, 1, 3, 30, 14, 7, 1, 3, 1, 2, 29, 17, 1, 12, 4, 2, 1, 9, 11, 9, 10, 6, 3, 2, 1, 1, 13, 18, 13, 11, 2, 1, 15, 12, 29, 4, 4, 3, 1, 1, 6, 2, 17, 2, 1, 13, 19, 2, 1, 2, 9, 1, 8, 26, 1, 7, 10, 13, 2, 1, 2, 1, 26, 1, 9, 15, 2, 5, 2, 29, 3, 11, 3, 2, 27, 2, 3, 3, 2, 3, 1, 1, 1, 1, 1, 7, 1, 1, 5, 4, 5, 1, 6, 15, 7, 5, 4, 6, 12, 5, 26, 10, 5, 12, 4, 2, 1, 3, 2, 2, 2, 1, 12, 1, 1, 1, 11, 6, 13, 1, 1, 9, 5, 2, 3, 3, 3, 7, 1, 2, 2, 1, 1, 1, 1, 1, 1, 28, 18, 20, 4, 10, 17, 15, 9, 1, 13, 2, 1, 2, 1, 2, 1, 1, 2, 1, 12, 1, 29, 1, 4, 7, 1, 1, 4, 9, 6, 4, 12, 3, 2, 9, 9, 5, 1, 5, 2, 10, 3, 9, 7, 2, 3, 1, 9, 9, 4, 8, 13, 1, 3, 4, 6, 2, 2, 3, 5, 5, 2, 2, 15, 3, 4, 1, 1, 1, 18, 1, 6, 1, 5, 1, 2, 9, 7, 1, 5, 6, 3, 3, 4, 4, 2, 3, 9, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 26, 14, 1, 7, 1, 2, 9, 1, 1, 17, 14, 1, 6, 10, 3, 2, 5, 5, 1, 1, 1, 2, 1, 1, 1, 1, 6, 9, 17, 12, 3, 9, 11, 4, 1, 8, 1, 1, 1, 7, 10, 1, 6, 2, 8, 7, 29, 5, 3, 4, 2, 11, 1, 1, 1, 1, 3, 1, 23, 18, 17, 9, 5, 1, 12, 2, 5, 15, 1, 6, 5, 3, 4, 5, 6, 5, 25, 4, 1, 16, 7, 2, 3, 2, 1, 19, 12, 1, 2, 3, 1, 4, 1, 4, 1, 2, 7, 2, 1, 1, 1, 1, 7, 12, 5, 9, 2, 2, 3, 3, 1, 1, 1, 17, 1, 3, 2, 2, 5, 2, 13, 2, 1, 1, 5, 2, 2, 1, 2, 1, 1, 2, 1, 4, 1, 1, 2, 5, 3, 7, 2, 2, 3, 1, 2, 3, 3, 3, 3, 2, 2, 3, 2, 1, 4, 1, 2, 12, 2, 1, 2, 1, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 3, 1, 1, 2, 1, 1, 5, 5, 3, 2, 2, 1, 2, 1, 2, 2, 2, 6, 3, 1, 2, 1, 2, 1, 3, 1, 1, 1, 2, 2, 8, 3, 1, 2, 1, 1, 1, 5, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 19, 11, 20, 19, 1, 19, 13, 5, 12, 21, 29, 20, 2, 5, 4]], 'classify': [], 'describe': ''}",scatter,driverId,count(*),"7, 12, 19, 26, 28, 29, 34, 36, 38, 40, 42, 43, 45, 46, 47, 51, 52, 53, 54, 58, 59, 60, 61, 62, 66, 72, 73, 74, 76, 80, 82, 85, 86, 89, 93, 96, 97, 98, 101, 106, 107, 108, 111, 113, 115, 116, 120, 121, 124, 125, 126, 128, 130, 132, 134, 135, 141, 142, 143, 144, 147, 148, 149, 150, 151, 161, 162, 164, 165, 167, 168, 169, 171, 174, 179, 180, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 198, 201, 204, 208, 209, 210, 213, 214, 215, 216, 217, 218, 220, 225, 226, 227, 228, 229, 234, 236, 237, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 810, 812, 816, 823, 827, 829, 833, 834, 837, 838, 839, 840, 841, 842, 843","27, 28, 24, 28, 1, 21, 4, 7, 11, 11, 20, 28, 14, 18, 20, 16, 14, 5, 15, 26, 29, 21, 3, 16, 17, 1, 30, 16, 25, 1, 4, 28, 10, 18, 7, 11, 7, 3, 30, 10, 3, 27, 9, 2, 3, 2, 20, 13, 1, 6, 2, 29, 10, 3, 6, 7, 20, 13, 4, 2, 15, 22, 14, 2, 15, 10, 17, 7, 21, 21, 2, 12, 2, 16, 28, 9, 20, 22, 9, 23, 8, 19, 5, 15, 29, 30, 3, 15, 8, 14, 12, 5, 17, 2, 4, 13, 11, 1, 2, 7, 1, 2, 1, 29, 3, 5, 20, 6, 5, 3, 3, 6, 15, 5, 1, 2, 20, 6, 7, 15, 7, 13, 11, 5, 1, 2, 1, 16, 1, 12, 1, 4, 11, 6, 1, 2, 2, 17, 12, 8, 1, 1, 2, 8, 4, 3, 1, 1, 15, 1, 3, 13, 10, 6, 15, 2, 9, 2, 2, 1, 2, 1, 4, 2, 4, 13, 13, 2, 6, 23, 1, 3, 30, 14, 7, 1, 3, 1, 2, 29, 17, 1, 12, 4, 2, 1, 9, 11, 9, 10, 6, 3, 2, 1, 1, 13, 18, 13, 11, 2, 1, 15, 12, 29, 4, 4, 3, 1, 1, 6, 2, 17, 2, 1, 13, 19, 2, 1, 2, 9, 1, 8, 26, 1, 7, 10, 13, 2, 1, 2, 1, 26, 1, 9, 15, 2, 5, 2, 29, 3, 11, 3, 2, 27, 2, 3, 3, 2, 3, 1, 1, 1, 1, 1, 7, 1, 1, 5, 4, 5, 1, 6, 15, 7, 5, 4, 6, 12, 5, 26, 10, 5, 12, 4, 2, 1, 3, 2, 2, 2, 1, 12, 1, 1, 1, 11, 6, 13, 1, 1, 9, 5, 2, 3, 3, 3, 7, 1, 2, 2, 1, 1, 1, 1, 1, 1, 28, 18, 20, 4, 10, 17, 15, 9, 1, 13, 2, 1, 2, 1, 2, 1, 1, 2, 1, 12, 1, 29, 1, 4, 7, 1, 1, 4, 9, 6, 4, 12, 3, 2, 9, 9, 5, 1, 5, 2, 10, 3, 9, 7, 2, 3, 1, 9, 9, 4, 8, 13, 1, 3, 4, 6, 2, 2, 3, 5, 5, 2, 2, 15, 3, 4, 1, 1, 1, 18, 1, 6, 1, 5, 1, 2, 9, 7, 1, 5, 6, 3, 3, 4, 4, 2, 3, 9, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 26, 14, 1, 7, 1, 2, 9, 1, 1, 17, 14, 1, 6, 10, 3, 2, 5, 5, 1, 1, 1, 2, 1, 1, 1, 1, 6, 9, 17, 12, 3, 9, 11, 4, 1, 8, 1, 1, 1, 7, 10, 1, 6, 2, 8, 7, 29, 5, 3, 4, 2, 11, 1, 1, 1, 1, 3, 1, 23, 18, 17, 9, 5, 1, 12, 2, 5, 15, 1, 6, 5, 3, 4, 5, 6, 5, 25, 4, 1, 16, 7, 2, 3, 2, 1, 19, 12, 1, 2, 3, 1, 4, 1, 4, 1, 2, 7, 2, 1, 1, 1, 1, 7, 12, 5, 9, 2, 2, 3, 3, 1, 1, 1, 17, 1, 3, 2, 2, 5, 2, 13, 2, 1, 1, 5, 2, 2, 1, 2, 1, 1, 2, 1, 4, 1, 1, 2, 5, 3, 7, 2, 2, 3, 1, 2, 3, 3, 3, 3, 2, 2, 3, 2, 1, 4, 1, 2, 12, 2, 1, 2, 1, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 3, 1, 1, 2, 1, 1, 5, 5, 3, 2, 2, 1, 2, 1, 2, 2, 2, 6, 3, 1, 2, 1, 2, 1, 3, 1, 1, 1, 2, 2, 8, 3, 1, 2, 1, 1, 1, 5, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 19, 11, 20, 19, 1, 19, 13, 5, 12, 21, 29, 20, 2, 5, 4","For each id of a driver who participated in at most 30 races, how many races did they participate in. Plot them as scatter chart."
"SELECT EMPLOYEE_ID , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Scatter,Easy,hr_1,"{'chart': 'scatter', 'x_name': 'EMPLOYEE_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,EMPLOYEE_ID,DEPARTMENT_ID,"100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, show me about the correlation between  employee_id and  department_id  in a scatter chart."
"SELECT count(*) , company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",Scatter,Medium,assets_maintenance,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'company_id', 'x_data': [[1, 3, 2, 3, 1, 1, 1, 1, 1, 1]], 'y_data': [[1, 2, 5, 6, 7, 8, 11, 12, 13, 14]], 'classify': [], 'describe': ''}",scatter,count(*),company_id,"1, 3, 2, 3, 1, 1, 1, 1, 1, 1","1, 2, 5, 6, 7, 8, 11, 12, 13, 14",Return a scatter chart on how many assets does each third party company supply? List the count and the company id.
"SELECT MANAGER_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Scatter,Extra Hard,hr_1,"{'chart': 'scatter', 'x_name': 'MANAGER_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [[149, 100, 201, 101, 101, 101, 205]], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",scatter,MANAGER_ID,DEPARTMENT_ID,"149, 100, 201, 101, 101, 101, 205","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between  manager_id and  department_id ."
"SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",Pie,Easy,device,"{'chart': 'pie', 'x_name': 'Software_Platform', 'y_name': 'COUNT(*)', 'x_data': [['Android', 'iOS']], 'y_data': [[5, 1]], 'classify': [], 'describe': ''}",pie,Software_Platform,COUNT(*),"Android, iOS","5, 1",Give me a pie to show the total number from different software platform.
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name",Pie,Medium,course_teach,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",Show the number of courses each teacher is arranged to teach in a pie chart.
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id",Pie,Easy,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Society Research project', 'Internet of Things project', 'Graph Database project', 'Human Resource project']], 'y_data': [[30, 35, 105, 134]], 'classify': [], 'describe': ''}",pie,Project_Details,Project_ID,"Society Research project, Internet of Things project, Graph Database project, Human Resource project","30, 35, 105, 134",Pie chart. what is the project id and detail for the project with at least two documents?
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title",Pie,Easy,cinema,"{'chart': 'pie', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case of the Mystery Weekend', 'The Case of the Smart Dummy', 'The Case: Off the Record', 'The Case of the Bermuda Triangle', 'The Case of the Piggy Banker']], 'y_data': [[15.99, 12.99, 8.99, 9.99, 12.99]], 'classify': [], 'describe': ''}",pie,Title,max(T1.price),"The Case of the Mystery Weekend, The Case of the Smart Dummy, The Case: Off the Record, The Case of the Bermuda Triangle, The Case of the Piggy Banker","15.99, 12.99, 8.99, 9.99, 12.99",Display a pie chart for what are the title and maximum price of each film?
"SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE",Pie,Easy,tvshow,"{'chart': 'pie', 'x_name': 'Language', 'y_name': 'count(*)', 'x_data': [['English', 'Italian']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",pie,Language,count(*),"English, Italian","3, 12",List each language and the number of TV Channels using it with a pie chart.
"SELECT gender , count(*) FROM dorm GROUP BY gender",Pie,Easy,dorm_1,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['F', 'M', 'X']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': ''}",pie,gender,count(*),"F, M, X","1, 1, 5",How many dorms are there for each gender? Plot apie chart.
"SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name",Pie,Hard,product_catalog,"{'chart': 'pie', 'x_name': 'attribute_name', 'y_name': 'COUNT(attribute_name)', 'x_data': [['Black', 'Sweet', 'Yellow']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': 'GROUP BY attribute_name'}",pie,attribute_name,COUNT(attribute_name),"Black, Sweet, Yellow","3, 3, 2",Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a pie chart.
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype",Pie,Easy,allergy_1,"{'chart': 'pie', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[4, 3, 7]], 'classify': [], 'describe': ''}",pie,AllergyType,count(*),"animal, environmental, food","4, 3, 7",Show all allergy types and the number of allergies in each type. Visualize by pie chart.
"SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION",Pie,Easy,performance_attendance,"{'chart': 'pie', 'x_name': 'Location', 'y_name': 'COUNT(*)', 'x_data': [['Bell Centre', 'Madison Square Garden', 'Scotiabank Place', 'TD Garden', 'Verizon Center']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",pie,Location,COUNT(*),"Bell Centre, Madison Square Garden, Scotiabank Place, TD Garden, Verizon Center","1, 1, 1, 1, 2",Show different locations and the number of performances at each location. 
"SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName",Pie,Hard,soccer_2,"{'chart': 'pie', 'x_name': 'pName', 'y_name': 'COUNT(pName)', 'x_data': [['Andrew', 'Blake', 'Charles', 'David', 'Eddie']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY pName'}",pie,pName,COUNT(pName),"Andrew, Blake, Charles, David, Eddie","2, 1, 1, 1, 1",What are the number of the names of all students who tried out in alphabetical order?
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY All_Home'}",pie,All_Home,COUNT(All_Home),"14–2, 14–3, 15–1","2, 1, 1","For the attribute  All_Home and the amount of All_Home, show their proportion by a pie chart."
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",Pie,Easy,perpetrator,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['China', 'India', 'Japan', 'South Korea']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"China, India, Japan, South Korea","2, 1, 1, 1",I want to know the proportion of the total number for each country.
"SELECT job , min(age) FROM Person GROUP BY job",Pie,Easy,network_2,"{'chart': 'pie', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25]], 'classify': [], 'describe': ''}",pie,job,min(age),"doctor, engineer, student","45, 35, 25",Create a pie chart showing minimal age across job.
"SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District",Pie,Medium,phone_market,"{'chart': 'pie', 'x_name': 'District', 'y_name': 'COUNT(District)', 'x_data': [['Alberta', 'British Columbia', 'Ontario', 'Quebec']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY District'}",pie,District,COUNT(District),"Alberta, British Columbia, Ontario, Quebec","2, 2, 1, 1",How about grouping and counting the district for visualizing a pie chart?
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job",Pie,Medium,network_2,"{'chart': 'pie', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer']], 'y_data': [[45, 35]], 'classify': [], 'describe': ''}",pie,job,avg(age),"doctor, engineer","45, 35",Draw a pie chart for what is the average age for a male in each job?
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Pie,Easy,apartment_rentals,"{'chart': 'pie', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Confirmed', 'Provisional']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,booking_status_code,COUNT(*),"Confirmed, Provisional","7, 8",How many bookings does each booking status have? List the booking status code and the number of corresponding bookings. Show a pie chart.
"SELECT name , elevation FROM airports WHERE city = 'New York'",Pie,Easy,flight_4,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'elevation', 'x_data': [['La Guardia Airport', 'John F Kennedy International Airport', 'Indianola Municipal Airport', 'One Police Plaza Heliport']], 'y_data': [[21, 13, 126, 244]], 'classify': [], 'describe': ''}",pie,name,elevation,"La Guardia Airport, John F Kennedy International Airport, Indianola Municipal Airport, One Police Plaza Heliport","21, 13, 126, 244",Find the altitude (or elevation) of the airports in the city of New York with a pie chart.
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",pie,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1",Give me a pie chart to reflect the proportion of  ACC_Road and the sum of Team_ID.
"SELECT PetType , max(pet_age) FROM pets GROUP BY PetType",Pie,Easy,pets_1,"{'chart': 'pie', 'x_name': 'PetType', 'y_name': 'max(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",pie,PetType,max(pet_age),"cat, dog","3, 2",I want to know the proportion of max pet age for each pettype.
"SELECT T1.name , T1.id FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id",Pie,Easy,architecture,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Frank Lloyd Wright', 'Frank Gehry', 'Le Corbusier']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",pie,name,id,"Frank Lloyd Wright, Frank Gehry, Le Corbusier","1, 2, 5",Pie chart. what are the ids and names of the architects who built at least 3 bridges ?
"SELECT All_Games , All_Games_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",pie,All_Games,All_Games_Percent,"35–2, 28–6, 24–10, 21–14","0.946, 0.8240000000000001, 0.706, 0.6",Show me about the proportion of  All_Games_Percent and  All_Games_Percent in a pie chart.
"SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation",Pie,Medium,university_basketball,"{'chart': 'pie', 'x_name': 'Affiliation', 'y_name': 'sum(Enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 43092]], 'classify': [], 'describe': ''}",pie,Affiliation,sum(Enrollment),"Private/Methodist, Public","2100, 43092","Visualize a pie chart with what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?"
"SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description",Pie,Medium,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Document_Type_Description', 'y_name': 'COUNT(Document_Type_Description)', 'x_data': [['excellent', 'fun', 'good']], 'y_data': [[9, 1, 5]], 'classify': [], 'describe': 'GROUP BY Document_Type_Description'}",pie,Document_Type_Description,COUNT(Document_Type_Description),"excellent, fun, good","9, 1, 5",Return a pie chart showing the number of documents for each document type description.
"SELECT premises_type , count(*) FROM premises GROUP BY premises_type",Pie,Easy,customers_campaigns_ecommerce,"{'chart': 'pie', 'x_name': 'premises_type', 'y_name': 'count(*)', 'x_data': [['Office', 'Residence', 'Warehouse']], 'y_data': [[7, 4, 4]], 'classify': [], 'describe': ''}",pie,premises_type,count(*),"Office, Residence, Warehouse","7, 4, 4",Give me a pie to show the total number from different premises type.
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code",Pie,Easy,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[165, 42, 147, 120, 102]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,sum(stu_hrs),"ACCT, BIOL, CIS, EDU, ENGL","165, 42, 147, 120, 102",I want to know the proportion of how many hours do the students spend studying for each dept code.
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",Pie,Medium,car_1,"{'chart': 'pie', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['america', 'europe', 'asia', 'africa', 'australia']], 'y_data': [[3, 6, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,Continent,count(*),"america, europe, asia, africa, australia","3, 6, 2, 2, 2","For each continent, list how many countries it has in a pie chart."
"SELECT All_Road , School_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Road', 'y_name': 'School_ID', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",pie,All_Road,School_ID,"13–0, 8–2, 6–5, 4–8","1, 2, 4, 5","For the attribute All_Road and  School_ID, show their proportion by a pie chart."
"SELECT All_Games , School_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",pie,All_Games,School_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 4, 5","For the attribute  All_Games and  School_ID, show their proportion by a pie chart."
"SELECT Result , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC",Pie,Medium,music_4,"{'chart': 'pie', 'x_name': 'Result', 'y_name': 'COUNT(*)', 'x_data': [['Nominated', 'Awarded']], 'y_data': [[6, 3]], 'classify': [], 'describe': ''}",pie,Result,COUNT(*),"Nominated, Awarded","6, 3","Display a pie chart for how many music festivals have had each kind of result, ordered descending by count?"
"SELECT decor , COUNT(decor) FROM Rooms WHERE bedtype = 'King' GROUP BY decor",Pie,Medium,inn_1,"{'chart': 'pie', 'x_name': 'decor', 'y_name': 'COUNT(decor)', 'x_data': [['modern', 'traditional']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY decor'}",pie,decor,COUNT(decor),"modern, traditional","1, 3","Pie chart, group and count the decor of rooms that have a king bed."
"SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Venue",Pie,Medium,debate,"{'chart': 'pie', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Abu Dhabi , UAE', 'Dubai , UAE', 'Manama , Bahrain']], 'y_data': [[1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Venue'}",pie,Venue,COUNT(Venue),"Abu Dhabi , UAE, Dubai , UAE, Manama , Bahrain","1, 1, 3",A pie chart showing the number of debates in each venue for those on the affirmative side.
"SELECT Class , avg(age) FROM captain GROUP BY CLASS",Pie,Easy,ship_1,"{'chart': 'pie', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[45, 43, 38, 38, 51.33333333333334]], 'classify': [], 'describe': ''}",pie,Class,avg(age),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","45, 43, 38, 38, 51.33333333333334",Return the average age of captains in each class with a pie chart.
"SELECT decor , min(basePrice) FROM Rooms GROUP BY decor",Pie,Easy,inn_1,"{'chart': 'pie', 'x_name': 'decor', 'y_name': 'min(basePrice)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[75, 150, 150]], 'classify': [], 'describe': ''}",pie,decor,min(basePrice),"modern, rustic, traditional","75, 150, 150",Please use a pie chart to show the proportion of the minimum price of the rooms in a different decor.
"SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender",Pie,Easy,dorm_1,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'sum(student_capacity)', 'x_data': [['F', 'M', 'X']], 'y_data': [[128, 116, 1136]], 'classify': [], 'describe': ''}",pie,gender,sum(student_capacity),"F, M, X","128, 116, 1136",What is the total capacity of dorms for each gender? Show me a pie chart.
"SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",Pie,Medium,course_teach,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,COUNT(*),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",Show names of teachers and the number of courses they teach by a pie chart.
"SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name",Pie,Hard,dorm_1,"{'chart': 'pie', 'x_name': 'dorm_name', 'y_name': 'count(*)', 'x_data': [['Anonymous Donor Hall', 'Dorm-plex 2000', 'Fawlty Towers', 'Smith Hall']], 'y_data': [[1, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,dorm_name,count(*),"Anonymous Donor Hall, Dorm-plex 2000, Fawlty Towers, Smith Hall","1, 2, 2, 2",Pie. how many students are older than 20 in each dorm?
"SELECT Rank , count(*) FROM Faculty GROUP BY rank",Pie,Easy,activity_1,"{'chart': 'pie', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AssocProf', 'AsstProf', 'Instructor', 'Professor']], 'y_data': [[8, 15, 8, 27]], 'classify': [], 'describe': ''}",pie,Rank,count(*),"AssocProf, AsstProf, Instructor, Professor","8, 15, 8, 27",Return a pie on how many faculty members do we have for each faculty rank?
"SELECT Party , COUNT(*) FROM people GROUP BY Party",Pie,Easy,debate,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Anti-Lecompton Democrat', 'Democratic', 'Independent Democrat', 'Republican']], 'y_data': [[2, 3, 1, 4]], 'classify': [], 'describe': ''}",pie,Party,COUNT(*),"Anti-Lecompton Democrat, Democratic, Independent Democrat, Republican","2, 3, 1, 4",Show different parties of people along with the number of people in each party. Plot them as pie chart.
"SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Pie,Extra Hard,allergy_1,"{'chart': 'pie', 'x_name': 'LName', 'y_name': 'Age', 'x_data': [['Apap', 'Lee']], 'y_data': [[18, 17]], 'classify': [], 'describe': ''}",pie,LName,Age,"Apap, Lee","18, 17",What are the last names and ages of the students who are allergic to milk and cat. 
"SELECT premises_type , COUNT(premises_type) FROM premises GROUP BY premises_type",Pie,Easy,customers_campaigns_ecommerce,"{'chart': 'pie', 'x_name': 'premises_type', 'y_name': 'COUNT(premises_type)', 'x_data': [['Office', 'Residence', 'Warehouse']], 'y_data': [[7, 4, 4]], 'classify': [], 'describe': 'GROUP BY premises_type'}",pie,premises_type,COUNT(premises_type),"Office, Residence, Warehouse","7, 4, 4",Give me a pie to show the number of premises type from different premises type.
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code",Pie,Easy,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[165, 42, 147, 120, 102]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,sum(stu_hrs),"ACCT, BIOL, CIS, EDU, ENGL","165, 42, 147, 120, 102",Give the proportion of how many hours do the students spend studying in each department?
"SELECT All_Road , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Road', 'y_name': 'Team_ID', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,All_Road,Team_ID,"13–0, 8–2, 6–5, 4–8","1, 2, 3, 4",Give me a pie to show team_id from different all road.
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_and_invoices,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",pie,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69",Create a pie chart showing total number of transaction amount across transaction type.
"SELECT other_details , COUNT(other_details) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Pie,Medium,behavior_monitoring,"{'chart': 'pie', 'x_name': 'other_details', 'y_name': 'COUNT(other_details)', 'x_data': [['apartment', 'house']], 'y_data': [[7, 13]], 'classify': [], 'describe': 'GROUP BY other_details'}",pie,other_details,COUNT(other_details),"apartment, house","7, 13",Give me a pie chart to reflect the proportion of  other_details and the amount of other_details.
"SELECT formats , count(*) FROM files GROUP BY formats",Pie,Easy,music_1,"{'chart': 'pie', 'x_name': 'formats', 'y_name': 'count(*)', 'x_data': [['mp3', 'mp4']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",pie,formats,count(*),"mp3, mp4","2, 4",Show me a pie chart for how many songs were released for each format?
"SELECT gender , avg(age) FROM Person GROUP BY gender",Pie,Easy,network_2,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",pie,gender,avg(age),"female, male","25.5, 40",What is the average age for each gender. Show a pie chart.
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time",Pie,Easy,employee_hire_evaluation,"{'chart': 'pie', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[10, 17]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",pie,Is_full_time,SUM(Shop_ID),"F, T","10, 17","For the attribute  Is_full_time and the sum of Shop_ID, show their proportion by a pie chart."
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time",Pie,Easy,employee_hire_evaluation,"{'chart': 'pie', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",pie,Is_full_time,SUM(Employee_ID),"F, T","9, 19",Visualize a pie chart about the proportion of  Is_full_time and the sum of Employee_ID.
"SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",Pie,Medium,debate,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['James Humphrey', 'Luther C. Carter', 'Thomas J. Barr', 'William B. Maclay']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",pie,Name,COUNT(*),"James Humphrey, Luther C. Carter, Thomas J. Barr, William B. Maclay","1, 1, 1, 2",Show the names of people and the number of times they have been on the affirmative side of debates. Show a pie chart.
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details",Pie,Medium,tracking_grants_for_research,"{'chart': 'pie', 'x_name': 'organisation_details', 'y_name': 'SUM(organisation_id)', 'x_data': [['a', 'eius', 'itaque', 'officiis', 'quo']], 'y_data': [[9, 2, 19, 10, 14]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",pie,organisation_details,SUM(organisation_id),"a, eius, itaque, officiis, quo","9, 2, 19, 10, 14",A pie chart about what are the ids and details for all organizations that have grants of more than 6000 dollars?
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code",Pie,Easy,driving_school,"{'chart': 'pie', 'x_name': 'customer_status_code', 'y_name': 'count(*)', 'x_data': [['Bad Customer', 'Good Customer']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",pie,customer_status_code,count(*),"Bad Customer, Good Customer","9, 6",List all customer status codes and the number of customers having each status code by a pie chart.
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",Pie,Easy,loan_1,"{'chart': 'pie', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Mary', 'Owen']], 'y_data': [[30, 210]], 'classify': [], 'describe': ''}",pie,cust_name,credit_score,"Mary, Owen","30, 210",Visualize a pie chart to show the credit scores of customers who have taken a loan by different names.
"SELECT born_state , COUNT(born_state) FROM head GROUP BY born_state",Pie,Easy,department_management,"{'chart': 'pie', 'x_name': 'born_state', 'y_name': 'COUNT(born_state)', 'x_data': [['Alabama', 'California', 'Connecticut', 'Delaware', 'Florida']], 'y_data': [[2, 4, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY born_state'}",pie,born_state,COUNT(born_state),"Alabama, California, Connecticut, Delaware, Florida","2, 4, 2, 1, 1",Compute the total the number of born state across born state as a pie chart.
"SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid",Pie,Easy,twitter_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'partitionid', 'x_data': [['Black Widow\n', 'Tyler Swift']], 'y_data': [[23, 10]], 'classify': [], 'describe': ''}",pie,name,partitionid,"Black Widow
, Tyler Swift","23, 10",Find the name and partition id for users who tweeted less than twice. Show a pie chart.
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType",Pie,Easy,inn_1,"{'chart': 'pie', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[100, 181.25, 150]], 'classify': [], 'describe': ''}",pie,bedType,avg(basePrice),"Double, King, Queen","100, 181.25, 150","Return a pie on what is the average base price of rooms, for each bed type?"
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code",Pie,Easy,department_store,"{'chart': 'pie', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",pie,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665",Return a pie chart on what is the average price for each type of product?
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",Pie,Medium,manufactory_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony']], 'y_data': [[150, 240, 162, 150, 240]], 'classify': [], 'describe': ''}",pie,Name,avg(T1.Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony","150, 240, 162, 150, 240",Draw a pie chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?
"SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state",Pie,Medium,voter_1,"{'chart': 'pie', 'x_name': 'state', 'y_name': 'COUNT(state)', 'x_data': [['CA', 'NJ\n', 'NY']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY state'}",pie,state,COUNT(state),"CA, NJ
, NY","1, 1, 2",Show me about the proportion of the number of distinct states with a pie chart.
"SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag",Pie,Medium,ship_1,"{'chart': 'pie', 'x_name': 'Flag', 'y_name': 'COUNT(Flag)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'GROUP BY Flag'}",pie,Flag,COUNT(Flag),"Malta, Panama","1, 4",What is the proportion of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a pie chart.
"SELECT role_code , count(*) FROM users GROUP BY role_code",Pie,Easy,document_management,"{'chart': 'pie', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['DBA', 'PROJ-MGR']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",pie,role_code,count(*),"DBA, PROJ-MGR","8, 7","What are the different role codes for users, and how many users have each. "
"SELECT Sex , avg(age) FROM Student GROUP BY sex",Pie,Easy,allergy_1,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",pie,Sex,avg(age),"F, M","19.7, 19.5",Pie chart. what are the average ages for male and female students?
"SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description",Pie,Easy,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Document_Type_Description', 'y_name': 'COUNT(Document_Type_Description)', 'x_data': [['excellent', 'fun', 'good', 'very good']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Type_Description'}",pie,Document_Type_Description,COUNT(Document_Type_Description),"excellent, fun, good, very good","2, 1, 1, 1",Compute the total the number of document type description across document type description as a pie chart.
"SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME",Pie,Extra Hard,college_1,"{'chart': 'pie', 'x_name': 'STU_FNAME', 'y_name': 'COUNT(STU_FNAME)', 'x_data': [['Anne', 'William']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",pie,STU_FNAME,COUNT(STU_FNAME),"Anne, William","1, 3",How many students taking a course who received an A or C? Group by students' first name with a pie chart. 
"SELECT All_Road , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Road', 'y_name': 'Team_ID', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,All_Road,Team_ID,"13–0, 8–2, 6–5, 4–8","1, 2, 3, 4","For the attribute  All_Road and  Team_ID, show their proportion by a pie chart."
"SELECT Sex , avg(age) FROM Student GROUP BY sex",Pie,Easy,allergy_1,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",pie,Sex,avg(age),"F, M","19.7, 19.5",Give me a pie to show the average of age from different sex.
"SELECT County_name , Population FROM county",Pie,Easy,election,"{'chart': 'pie', 'x_name': 'County_name', 'y_name': 'Population', 'x_data': [['Howard', 'Baltimore County', 'Colony', 'Mansfield', 'Manning']], 'y_data': [[21000, 90000, 79000, 87200, 13300]], 'classify': [], 'describe': ''}",pie,County_name,Population,"Howard, Baltimore County, Colony, Mansfield, Manning","21000, 90000, 79000, 87200, 13300",Give the proportion of what are the name and population of each county?
"SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender",Pie,Medium,network_2,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['female', 'male']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,gender,count(*),"female, male","2, 1",Give the proportion of how many people are under 40 for each gender?
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",Pie,Easy,workshop_paper,"{'chart': 'pie', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Accepted', 'Rejected']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Result'}",pie,Result,COUNT(Result),"Accepted, Rejected","2, 4","Compute the proportion of acceptance result, and return a pie chart."
"SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name",Pie,Medium,phone_market,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['IPhone 5s', 'IPhone 6s', 'IPhone 7', 'IPhone X']], 'y_data': [[2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"IPhone 5s, IPhone 6s, IPhone 7, IPhone X","2, 1, 1, 2",Show the proportion of names of phones with a pie chart.
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank",Pie,Hard,machine_repair,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Sewell', 'John Brown', 'Tony Sewell']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Sewell, John Brown, Tony Sewell","1, 1, 5, 1, 1","Show names of technicians in ascending order of quality rank of the machine they are assigned, and count them by a pie chart"
"SELECT City , COUNT(City) FROM branch GROUP BY City",Pie,Easy,shop_membership,"{'chart': 'pie', 'x_name': 'City', 'y_name': 'COUNT(City)', 'x_data': [['London', 'Oxford']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY City'}",pie,City,COUNT(City),"London, Oxford","5, 3",Show me the proportion of cities of the branch table.
"SELECT Team_Name , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,Team_Name,Team_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 3, 4",Create a pie chart showing team_id across team name.
"SELECT Pilot , COUNT(Pilot) FROM flight GROUP BY Pilot",Pie,Easy,flight_company,"{'chart': 'pie', 'x_name': 'Pilot', 'y_name': 'COUNT(Pilot)', 'x_data': [['Peterson', 'Thompson']], 'y_data': [[3, 10]], 'classify': [], 'describe': 'GROUP BY Pilot'}",pie,Pilot,COUNT(Pilot),"Peterson, Thompson","3, 10",Create a pie chart showing how many pilot across pilot.
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%""",Pie,Medium,department_store,"{'chart': 'pie', 'x_name': 'customer_name', 'y_name': 'customer_id', 'x_data': [['Lukas', 'Kenya']], 'y_data': [[3, 13]], 'classify': [], 'describe': ''}",pie,customer_name,customer_id,"Lukas, Kenya","3, 13",What are the names and ids of customers whose address contains TN. Visualize by pie chart.
"SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day",Pie,Easy,program_share,"{'chart': 'pie', 'x_name': 'Time_of_day', 'y_name': 'count(*)', 'x_data': [['Morning', 'Night', 'Noon']], 'y_data': [[4, 5, 2]], 'classify': [], 'describe': ''}",pie,Time_of_day,count(*),"Morning, Night, Noon","4, 5, 2",Count the number of programs broadcast for each time section of a day by a pie chart.
"SELECT pName , HS FROM Player WHERE HS < 1500",Pie,Easy,soccer_2,"{'chart': 'pie', 'x_name': 'pName', 'y_name': 'HS', 'x_data': [['Andrew', 'Charles', 'Eddie']], 'y_data': [[1200, 300, 600]], 'classify': [], 'describe': ''}",pie,pName,HS,"Andrew, Charles, Eddie","1200, 300, 600",What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by pie chart.
"SELECT state , SUM(vote_id) FROM votes GROUP BY state",Pie,Easy,voter_1,"{'chart': 'pie', 'x_name': 'state', 'y_name': 'SUM(vote_id)', 'x_data': [['CA', 'NJ\n', 'NY']], 'y_data': [[3, 5, 3]], 'classify': [], 'describe': 'GROUP BY state'}",pie,state,SUM(vote_id),"CA, NJ
, NY","3, 5, 3",I want to know the proportion of sum of vote id for each state.
"SELECT Team_Name , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,Team_Name,Team_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 3, 4",Show me about the proportion of  Team_ID and  Team_ID in a pie chart.
"SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",Pie,Medium,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[5, 8]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,count(*),"ACCT, CIS","5, 8",Visualize a pie chart with how many classes are held in each department?
"SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details",Pie,Medium,local_govt_in_alabama,"{'chart': 'pie', 'x_name': 'Event_Details', 'y_name': 'SUM(Event_ID)', 'x_data': [['Fail', 'Success']], 'y_data': [[70, 83]], 'classify': [], 'describe': 'GROUP BY Event_Details'}",pie,Event_Details,SUM(Event_ID),"Fail, Success","70, 83",Visualize a pie chart with what are the ids and details of events that have more than one participants?
"SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Pie,Medium,behavior_monitoring,"{'chart': 'pie', 'x_name': 'other_details', 'y_name': 'SUM(monthly_rental)', 'x_data': [['apartment', 'house']], 'y_data': [[7345, 11469]], 'classify': [], 'describe': 'GROUP BY other_details'}",pie,other_details,SUM(monthly_rental),"apartment, house","7345, 11469","For the attribute  other_details and the sum of monthly_rental, show their proportion by a pie chart."
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",pie,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1",Give me a pie to show sum team id from different acc road.
"SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Pie,Medium,behavior_monitoring,"{'chart': 'pie', 'x_name': 'other_details', 'y_name': 'SUM(monthly_rental)', 'x_data': [['apartment', 'house']], 'y_data': [[7345, 11469]], 'classify': [], 'describe': 'GROUP BY other_details'}",pie,other_details,SUM(monthly_rental),"apartment, house","7345, 11469",Give me a pie chart to reflect the proportion of  other_details and the sum of monthly_rental.
"SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id",Pie,Extra Hard,battle_death,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Battle of Messinopolis', 'Battle of Boruy', 'Siege of Constantinople']], 'y_data': [[5, 6, 8]], 'classify': [], 'describe': ''}",pie,name,id,"Battle of Messinopolis, Battle of Boruy, Siege of Constantinople","5, 6, 8",Show me the proportion on what are the ids and names of the battles that led to more than 10 people killed in total.
"SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department",Pie,Medium,college_1,"{'chart': 'pie', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_name)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",pie,SCHOOL_CODE,count(DISTINCT dept_name),"A&SCI, BUS","7, 4",Pie. how many departments are in each school?
"SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code",Pie,Easy,apartment_rentals,"{'chart': 'pie', 'x_name': 'apt_type_code', 'y_name': 'min(room_count)', 'x_data': [['Duplex', 'Flat', 'Studio']], 'y_data': [[3, 3, 6]], 'classify': [], 'describe': ''}",pie,apt_type_code,min(room_count),"Duplex, Flat, Studio","3, 3, 6",Show the minimum room count of apartments in different type with a pie chart.
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job",Pie,Medium,network_2,"{'chart': 'pie', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer']], 'y_data': [[45, 35]], 'classify': [], 'describe': ''}",pie,job,avg(age),"doctor, engineer","45, 35",Return a pie on what is the average age for a male in each job?
"SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name",Pie,Hard,journal_committee,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Grażyna Wolszczak', 'Kamila Porczyk', 'Maria Góralczyk', 'Władysław Grzywna']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Grażyna Wolszczak, Kamila Porczyk, Maria Góralczyk, Władysław Grzywna","2, 1, 1, 1",A pie chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code",Pie,Easy,department_store,"{'chart': 'pie', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",pie,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","What is the highest price of product, grouped by product type? Show a pie chart."
"SELECT born_state , COUNT(born_state) FROM head GROUP BY born_state",Pie,Easy,department_management,"{'chart': 'pie', 'x_name': 'born_state', 'y_name': 'COUNT(born_state)', 'x_data': [['Alabama', 'California', 'Connecticut', 'Delaware', 'Florida']], 'y_data': [[2, 4, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY born_state'}",pie,born_state,COUNT(born_state),"Alabama, California, Connecticut, Delaware, Florida","2, 4, 2, 1, 1",Show the number of heads of departments born in each state with a pie chart.
"SELECT Industry , COUNT(Industry) FROM company GROUP BY Industry",Pie,Easy,company_employee,"{'chart': 'pie', 'x_name': 'Industry', 'y_name': 'COUNT(Industry)', 'x_data': [['Automotive', 'Banking', 'Conglomerate', 'Oil and gas', 'Retailing']], 'y_data': [[1, 7, 2, 8, 1]], 'classify': [], 'describe': 'GROUP BY Industry'}",pie,Industry,COUNT(Industry),"Automotive, Banking, Conglomerate, Oil and gas, Retailing","1, 7, 2, 8, 1",A pie chart showing the number of companies for each industry.
"SELECT Document_Type_Name , COUNT(Document_Type_Name) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name",Pie,Medium,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Document_Type_Name', 'y_name': 'COUNT(Document_Type_Name)', 'x_data': [['Book', 'CV', 'Film', 'Paper']], 'y_data': [[6, 3, 1, 5]], 'classify': [], 'describe': 'GROUP BY Document_Type_Name'}",pie,Document_Type_Name,COUNT(Document_Type_Name),"Book, CV, Film, Paper","6, 3, 1, 5",Return a pie chart showing the number of documents for each document type name.
"SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE",Pie,Easy,ship_mission,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'avg(Tonnage)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[4845, 3932.2]], 'classify': [], 'describe': ''}",pie,Type,avg(Tonnage),"Battle ship, Cargo ship","4845, 3932.2",Show different types of ships and the average tonnage of ships of each type in a pie chart.
"SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name",Pie,Medium,cinema,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Carrowleagh', 'Codling', 'Gortahile', 'Mount Callan', 'Oriel']], 'y_data': [[1, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Carrowleagh, Codling, Gortahile, Mount Callan, Oriel","1, 3, 1, 1, 1",Show the number of films for each cinema in a pie chart.
"SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",Pie,Medium,cre_Drama_Workshop_Groups,"{'chart': 'pie', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(*)', 'x_data': [['provide photo service', 'provide dinning service', 'provide filming service', 'provide adv promoting service']], 'y_data': [[5, 5, 3, 2]], 'classify': [], 'describe': ''}",pie,Service_Type_Description,COUNT(*),"provide photo service, provide dinning service, provide filming service, provide adv promoting service","5, 5, 3, 2",How many services for each service type description? Use a pie chart to show it.
"SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code",Pie,Easy,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Document_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'CV', 'FM', 'PP']], 'y_data': [[6, 3, 1, 5]], 'classify': [], 'describe': ''}",pie,Document_Type_Code,count(*),"BK, CV, FM, PP","6, 3, 1, 5",How many documents are there of each type. Plot them as pie chart.
"SELECT Sex , SUM(Height) FROM people GROUP BY Sex",Pie,Easy,candidate_poll,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'SUM(Height)', 'x_data': [['F', 'M']], 'y_data': [[395, 1366]], 'classify': [], 'describe': 'GROUP BY Sex'}",pie,Sex,SUM(Height),"F, M","395, 1366",Visualize a pie chart about the proportion of  Sex and the sum of Height.
"SELECT Team_Name , School_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'School_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",pie,Team_Name,School_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 4, 5",School_ID across team name in a pie chart.
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_and_invoices,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",pie,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69",Show the transaction types and the total amount of transactions with a pie chart.
"SELECT City , count(*) FROM employee GROUP BY city",Pie,Easy,employee_hire_evaluation,"{'chart': 'pie', 'x_name': 'City', 'y_name': 'count(*)', 'x_data': [['Bath', 'Bristol', 'Leicester', 'Sale', 'Wasps']], 'y_data': [[3, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",pie,City,count(*),"Bath, Bristol, Leicester, Sale, Wasps","3, 3, 1, 1, 2",A pie chart about what is the number of employees from each city?
"SELECT Rank , count(*) FROM captain GROUP BY rank",Pie,Easy,ship_1,"{'chart': 'pie', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 2, 4]], 'classify': [], 'describe': ''}",pie,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 2, 4",Count the number of captains that have each rank with a pie chart.
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION",Pie,Easy,match_season,"{'chart': 'pie', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Defender', 'Forward', 'Midfielder']], 'y_data': [[7, 3, 6]], 'classify': [], 'describe': ''}",pie,Position,COUNT(*),"Defender, Forward, Midfielder","7, 3, 6",How many players played each position. Show a pie chart.
"SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name",Pie,Medium,election,"{'chart': 'pie', 'x_name': 'County_name', 'y_name': 'COUNT(County_name)', 'x_data': [['Baltimore County', 'Colony', 'Howard', 'Mansfield']], 'y_data': [[2, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY County_name'}",pie,County_name,COUNT(County_name),"Baltimore County, Colony, Howard, Mansfield","2, 2, 3, 1",Use a pie chart to show the number of delegates in each county.
"SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",Pie,Medium,epinions_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Helen', 'Mark']], 'y_data': [[3, 4]], 'classify': [], 'describe': ''}",pie,name,count(*),"Helen, Mark","3, 4","For each user, find their name and the number of reviews written by them. Plot them as pie chart."
"SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code",Pie,Easy,cre_Docs_and_Epenses,"{'chart': 'pie', 'x_name': 'Document_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'CV', 'FM', 'PP']], 'y_data': [[6, 3, 1, 5]], 'classify': [], 'describe': ''}",pie,Document_Type_Code,count(*),"BK, CV, FM, PP","6, 3, 1, 5",Show me a pie chart for how many documents are there of each type?
"SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",Pie,Medium,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[5, 8]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,count(*),"ACCT, CIS","5, 8",Find the number of classes in each department. Plot them as pie chart.
"SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",Pie,Easy,wedding,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Graeme McDowell', 'Adam Scott']], 'y_data': [[34, 26]], 'classify': [], 'describe': ''}",pie,Name,Age,"Graeme McDowell, Adam Scott","34, 26",Show the name and age for all male people who don't have a wedding by a pie chart.
"SELECT Team_Name , All_Games_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",pie,Team_Name,All_Games_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.946, 0.8240000000000001, 0.706, 0.6",Draw a pie chart about the proportion of  Team_Name and  All_Games_Percent.
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",Pie,Medium,allergy_1,"{'chart': 'pie', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",pie,AllergyType,count(*),"animal, environmental, food","8, 23, 28",How many students are affected by each allergy type. 
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code",Pie,Easy,department_store,"{'chart': 'pie', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",pie,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44",Compute the total maximal product price across product type code as a pie chart.
"SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'ACC_Road', 'y_name': 'SUM(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[9, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",pie,ACC_Road,SUM(School_ID),"3–5, 6–2, 8–0","9, 2, 1",Give me a pie chart to reflect the proportion of  ACC_Road and the sum of School_ID.
"SELECT decor , min(basePrice) FROM Rooms GROUP BY decor",Pie,Easy,inn_1,"{'chart': 'pie', 'x_name': 'decor', 'y_name': 'min(basePrice)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[75, 150, 150]], 'classify': [], 'describe': ''}",pie,decor,min(basePrice),"modern, rustic, traditional","75, 150, 150",What is the proportion of the minimum price of the rooms for each different decor? Show me a pie chart!
"SELECT Flag , count(*) FROM ship GROUP BY flag",Pie,Easy,ship_1,"{'chart': 'pie', 'x_name': 'Flag', 'y_name': 'count(*)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 8]], 'classify': [], 'describe': ''}",pie,Flag,count(*),"Malta, Panama","1, 8","Draw a pie chart for what are the different ship flags, and how many ships have each?"
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details",Pie,Medium,tracking_grants_for_research,"{'chart': 'pie', 'x_name': 'organisation_details', 'y_name': 'SUM(organisation_id)', 'x_data': [['a', 'eius', 'itaque', 'officiis', 'quo']], 'y_data': [[9, 2, 19, 10, 14]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",pie,organisation_details,SUM(organisation_id),"a, eius, itaque, officiis, quo","9, 2, 19, 10, 14",Find the organisation ids and details of the organisations which are involved i. Visualize by pie chart.
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code",Pie,Easy,driving_school,"{'chart': 'pie', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",pie,payment_method_code,count(*),"Credit Card, Direct Debit","5, 10",List all payment methods and number of payments using each payment methods. Show a pie chart.
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee",Pie,Hard,musical,"{'chart': 'pie', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Nominee'}",pie,Nominee,COUNT(Nominee),"Bob Fosse, Cleavant Derricks","3, 1","Show the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks""."
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date",Pie,Hard,performance_attendance,"{'chart': 'pie', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 2', 'February 5']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",pie,Date,COUNT(Date),"February 11, February 2, February 5","1, 2, 1","Show the number of the dates of performances with attending members whose roles are ""Violin""."
"SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category",Pie,Easy,customers_campaigns_ecommerce,"{'chart': 'pie', 'x_name': 'product_category', 'y_name': 'count(*)', 'x_data': [['clothes', 'food']], 'y_data': [[9, 11]], 'classify': [], 'describe': ''}",pie,product_category,count(*),"clothes, food","9, 11",Show all distinct product categories along with the number of mailshots in each category in a pie chart.
"SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = ""Lisa"" GROUP BY AllergyType",Pie,Hard,allergy_1,"{'chart': 'pie', 'x_name': 'AllergyType', 'y_name': 'COUNT(AllergyType)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': 'GROUP BY AllergyType'}",pie,AllergyType,COUNT(AllergyType),"animal, environmental, food","2, 4, 4",What is the number of each allergie type the girl named Lisa has? Show a pie chart.
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location",Pie,Easy,wrestler,"{'chart': 'pie', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Nagoya , Japan', 'Osaka , Japan', 'Sapporo , Japan', 'Tijuana , Mexico', 'Tokyo , Japan']], 'y_data': [[1, 1, 1, 3, 4]], 'classify': [], 'describe': 'GROUP BY Location'}",pie,Location,COUNT(Location),"Nagoya , Japan, Osaka , Japan, Sapporo , Japan, Tijuana , Mexico, Tokyo , Japan","1, 1, 1, 3, 4",A pie chart shows the proportion of the number of locations of the wrestlers.
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",Pie,Easy,cre_Theme_park,"{'chart': 'pie', 'x_name': 'How_to_Get_There', 'y_name': 'COUNT(*)', 'x_data': [['bus', 'shuttle', 'walk']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",pie,How_to_Get_There,COUNT(*),"bus, shuttle, walk","6, 4, 5",Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. Show the proportion.
"SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier",Pie,Easy,phone_market,"{'chart': 'pie', 'x_name': 'Carrier', 'y_name': 'COUNT(Carrier)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Carrier'}",pie,Carrier,COUNT(Carrier),"Sprint, TMobile","2, 3",Can you visualize a pie chart to show the proportion of carriers?
"SELECT gender , avg(age) FROM Person GROUP BY gender",Pie,Easy,network_2,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",pie,gender,avg(age),"female, male","25.5, 40","Visualize a pie chart with how old is each gender, on average?"
"SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier",Pie,Easy,phone_market,"{'chart': 'pie', 'x_name': 'Carrier', 'y_name': 'COUNT(Carrier)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Carrier'}",pie,Carrier,COUNT(Carrier),"Sprint, TMobile","2, 3",Create a pie chart showing the number of carrier across carrier.
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",Pie,Medium,machine_repair,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Sewell', 'John Brown', 'Tony Sewell']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,COUNT(*),"Charlie Hollocher, Eddie Collins, Joe Sewell, John Brown, Tony Sewell","1, 1, 5, 1, 1",what are the names of the technicians  and how many machines are they assigned to repair?
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor",Pie,Medium,inn_1,"{'chart': 'pie', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': ''}",pie,decor,count(*),"modern, rustic, traditional","2, 2, 4","How many rooms cost more than 120, for each different decor. Plot them as pie chart."
"SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",Pie,Medium,course_teach,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,COUNT(*),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",Show me the proportion on what are the names of the teachers and how many courses do they teach?
"SELECT Sex , max(age) FROM student GROUP BY Sex",Pie,Easy,dorm_1,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'max(age)', 'x_data': [['F', 'M']], 'y_data': [[26, 27]], 'classify': [], 'describe': ''}",pie,Sex,max(age),"F, M","26, 27",Find the oldest age for students with different sex in a pie chart.
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name",Pie,Hard,machine_repair,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Eddie Collins', 'Joe Sewell', 'Tony Sewell']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Eddie Collins, Joe Sewell, Tony Sewell","1, 5, 1",A pie chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?
"SELECT Competition , count(*) FROM MATCH GROUP BY Competition",Pie,Easy,city_record,"{'chart': 'pie', 'x_name': 'Competition', 'y_name': 'count(*)', 'x_data': [['1994 FIFA World Cup qualification', '2002 FIFA World Cup qualification', 'Friendly match']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Competition,count(*),"1994 FIFA World Cup qualification, 2002 FIFA World Cup qualification, Friendly match","4, 1, 1","For each competition, count the number of matches. Visualize by pie chart."
"SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",Pie,Medium,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'sum(T1.crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[15, 27]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,sum(T1.crs_credit),"ACCT, CIS","15, 27",Show me a pie chart for what are the total number of credits offered by each department?
"SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME",Pie,Extra Hard,college_1,"{'chart': 'pie', 'x_name': 'STU_LNAME', 'y_name': 'COUNT(STU_LNAME)', 'x_data': [['Bowser', 'Smithson']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY STU_LNAME'}",pie,STU_LNAME,COUNT(STU_LNAME),"Bowser, Smithson","3, 1",How many students taking a course who received an A or C? Group by students' last name with a pie chart.
"SELECT hand , count(*) FROM players GROUP BY hand",Pie,Easy,wta_1,"{'chart': 'pie', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['', 'L', 'R', 'U']], 'y_data': [[954, 487, 5028, 14193]], 'classify': [], 'describe': ''}",pie,hand,count(*),", L, R, U","954, 487, 5028, 14193",Give me a pie to show the total number from different hand.
"SELECT Sex , max(age) FROM student GROUP BY Sex",Pie,Easy,dorm_1,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'max(age)', 'x_data': [['F', 'M']], 'y_data': [[26, 27]], 'classify': [], 'describe': ''}",pie,Sex,max(age),"F, M","26, 27",Give me a pie to show maximal age from different sex.
"SELECT Country , COUNT(*) FROM member GROUP BY Country",Pie,Easy,decoration_competition,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Canada', 'United States']], 'y_data': [[4, 6]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"Canada, United States","4, 6",I want to know the proportion of the number of members for each country.
"SELECT time , train_number FROM train WHERE destination = 'Chennai'",Pie,Easy,station_weather,"{'chart': 'pie', 'x_name': 'time', 'y_name': 'train_number', 'x_data': [['17:15', '4:49']], 'y_data': [[16724, 16128]], 'classify': [], 'describe': ''}",pie,time,train_number,"17:15, 4:49","16724, 16128",Show me the proportion of times and numbers of all trains that go to Chennai with a pie chart.
"SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender",Pie,Medium,network_2,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['female', 'male']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,gender,count(*),"female, male","2, 1",Pie chart. how many people are under 40 for each gender?
"SELECT time , train_number FROM train WHERE destination = 'Chennai'",Pie,Easy,station_weather,"{'chart': 'pie', 'x_name': 'time', 'y_name': 'train_number', 'x_data': [['17:15', '4:49']], 'y_data': [[16724, 16128]], 'classify': [], 'describe': ''}",pie,time,train_number,"17:15, 4:49","16724, 16128",Give me the times and numbers of all trains that go to Chennai with a pie chart.
"SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",Pie,Medium,cre_Drama_Workshop_Groups,"{'chart': 'pie', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(*)', 'x_data': [['provide photo service', 'provide dinning service', 'provide filming service', 'provide adv promoting service']], 'y_data': [[5, 5, 3, 2]], 'classify': [], 'describe': ''}",pie,Service_Type_Description,COUNT(*),"provide photo service, provide dinning service, provide filming service, provide adv promoting service","5, 5, 3, 2",Show the number of services for each service type description with a pie chart.
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name",Pie,Hard,formula_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Honda', 'Toyota']], 'y_data': [[45, 95]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Honda, Toyota","45, 95",A pie chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?
"SELECT T1.name , T1.id FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id",Pie,Easy,flight_company,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Dragonair', 'Cathay Pacific Cargo', 'Vogue Laundry Service Limited']], 'y_data': [[4, 5, 11]], 'classify': [], 'describe': ''}",pie,name,id,"Dragonair, Cathay Pacific Cargo, Vogue Laundry Service Limited","4, 5, 11",Show me the proportion on what are the ids and names of the companies that operated more than one flight?
"SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",Pie,Medium,soccer_2,"{'chart': 'pie', 'x_name': 'state', 'y_name': 'enr', 'x_data': [['AZ', 'FL']], 'y_data': [[12000, 19000]], 'classify': [], 'describe': ''}",pie,state,enr,"AZ, FL","12000, 19000",Return a pie on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",Pie,Easy,cre_Theme_park,"{'chart': 'pie', 'x_name': 'How_to_Get_There', 'y_name': 'COUNT(*)', 'x_data': [['bus', 'shuttle', 'walk']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",pie,How_to_Get_There,COUNT(*),"bus, shuttle, walk","6, 4, 5",Compute the total the total number across how to get there as a pie chart.
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",Pie,Easy,workshop_paper,"{'chart': 'pie', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Accepted', 'Rejected']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Result'}",pie,Result,COUNT(Result),"Accepted, Rejected","2, 4","For each submission, group its acceptance result and count them. Visualize them in a bar chart."
"SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code",Pie,Easy,solvency_ii,"{'chart': 'pie', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(Product_Type_Code)', 'x_data': [['Books', 'Clothes', 'Electronics', 'Food']], 'y_data': [[4, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY Product_Type_Code'}",pie,Product_Type_Code,COUNT(Product_Type_Code),"Books, Clothes, Electronics, Food","4, 2, 4, 5",A pie chart shows the proportion of different product type codes.
"SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",Pie,Medium,twitter_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Iron Man', 'Black Widow\n', 'Susan', 'Tyler Swift', 'Celine Dion']], 'y_data': [[2, 1, 2, 1, 2]], 'classify': [], 'describe': ''}",pie,name,count(*),"Iron Man, Black Widow
, Susan, Tyler Swift, Celine Dion","2, 1, 2, 1, 2",Find the name of each user and number of tweets tweeted by each of them. Visualize by pie chart.
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title",Pie,Easy,cinema,"{'chart': 'pie', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case of the Mystery Weekend', 'The Case of the Smart Dummy', 'The Case: Off the Record', 'The Case of the Bermuda Triangle', 'The Case of the Piggy Banker']], 'y_data': [[15.99, 12.99, 8.99, 9.99, 12.99]], 'classify': [], 'describe': ''}",pie,Title,max(T1.price),"The Case of the Mystery Weekend, The Case of the Smart Dummy, The Case: Off the Record, The Case of the Bermuda Triangle, The Case of the Piggy Banker","15.99, 12.99, 8.99, 9.99, 12.99",Give me the title and highest price for each film. 
"SELECT All_Games , All_Games_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",pie,All_Games,All_Games_Percent,"35–2, 28–6, 24–10, 21–14","0.946, 0.8240000000000001, 0.706, 0.6",Create a pie chart showing all_games_percent across all games.
"SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name",Pie,Medium,tracking_orders,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'SUM(count(*))', 'x_data': [['book', 'clothes', 'food', 'music', 'phone']], 'y_data': [[1, 1, 5, 5, 3]], 'classify': [], 'describe': 'GROUP BY product_name'}",pie,product_name,SUM(count(*)),"book, clothes, food, music, phone","1, 1, 5, 5, 3","For each product, show its name and the number of times it was ordered. Show the proportion."
"SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality",Pie,Easy,news_report,"{'chart': 'pie', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[9, 1, 1]], 'classify': [], 'describe': ''}",pie,Nationality,COUNT(*),"England, Northern Ireland, Wales","9, 1, 1",Create a pie chart showing the total number across nationality.
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code",Pie,Easy,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[165, 42, 147, 120, 102]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,sum(stu_hrs),"ACCT, BIOL, CIS, EDU, ENGL","165, 42, 147, 120, 102",How many hours do the students spend studying in each department. Show the proportion.
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date",Pie,Hard,performance_attendance,"{'chart': 'pie', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 2', 'February 5']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",pie,Date,COUNT(Date),"February 11, February 2, February 5","1, 2, 1","Show the dates of performances with attending members whose roles are ""Violin"", and count them by a pie chart"
"SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",Pie,Medium,assets_maintenance,"{'chart': 'pie', 'x_name': 'part_name', 'y_name': 'count(*)', 'x_data': [['middle', 'package', 'top']], 'y_data': [[5, 6, 4]], 'classify': [], 'describe': ''}",pie,part_name,count(*),"middle, package, top","5, 6, 4",Show me the proportion on how many assets can each parts be used in? List the part name and the number.
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",pie,ACC_Regular_Season,ACC_Percent,"14–2, 13–3, 10–6, 9–7","0.875, 0.813, 0.625, 0.563","For the attribute  ACC_Regular_Season and  ACC_Percent, show their proportion by a pie chart."
"SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description",Pie,Easy,aircraft,"{'chart': 'pie', 'x_name': 'Description', 'y_name': 'COUNT(Description)', 'x_data': [['Heavy-lift helicopter', 'Light utility helicopter', 'Tandem rotor helicopter', 'Turboshaft utility helicopter']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Description'}",pie,Description,COUNT(Description),"Heavy-lift helicopter, Light utility helicopter, Tandem rotor helicopter, Turboshaft utility helicopter","2, 1, 1, 1",A pie chart for what are the number of the descriptions for the aircrafts?
"SELECT Class , count(*) FROM race GROUP BY CLASS",Pie,Easy,race_track,"{'chart': 'pie', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",pie,Class,count(*),"DP/GT, GT","5, 2","Visualize a pie chart with what are the different classes of races, and how many races correspond to each?"
"SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country",Pie,Hard,railway,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'England', 'United States']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"Australia, England, United States","1, 1, 2",Show the number of the countries that have managers of age above 50 or below 46.
"SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor",Pie,Easy,entrepreneur,"{'chart': 'pie', 'x_name': 'Investor', 'y_name': 'COUNT(*)', 'x_data': [['Doug Richard', 'Duncan Bannatyne', 'Peter Jones', 'Rachel Elnaugh', 'Simon Woodroffe']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Investor,COUNT(*),"Doug Richard, Duncan Bannatyne, Peter Jones, Rachel Elnaugh, Simon Woodroffe","1, 2, 1, 1, 1",Return a pie on what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?
"SELECT Team_Name , ACC_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'ACC_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",pie,Team_Name,ACC_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.875, 0.813, 0.625, 0.563","For the attribute  Team_Name and  ACC_Percent, show their proportion by a pie chart."
"SELECT gender , avg(age) FROM Person GROUP BY gender",Pie,Easy,network_2,"{'chart': 'pie', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",pie,gender,avg(age),"female, male","25.5, 40",Give me a pie to show the average of age from different gender.
"SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'ACC_Road', 'y_name': 'COUNT(ACC_Road)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",pie,ACC_Road,COUNT(ACC_Road),"3–5, 6–2, 8–0","2, 1, 1",A pie chart shows the proportion of  ACC_Road and the amount of ACC_Road.
"SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",Pie,Medium,cinema,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'sum(T1.show_times_per_day)', 'x_data': [['Codling', 'Carrowleagh', 'Gortahile', 'Mount Callan', 'Oriel']], 'y_data': [[10, 5, 4, 5, 5]], 'classify': [], 'describe': ''}",pie,Name,sum(T1.show_times_per_day),"Codling, Carrowleagh, Gortahile, Mount Callan, Oriel","10, 5, 4, 5, 5",What is total number of show times per dat for each cinema. 
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code",Pie,Easy,cre_Drama_Workshop_Groups,"{'chart': 'pie', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['American E', 'MasterCard', 'Visa']], 'y_data': [[4, 6, 5]], 'classify': [], 'describe': ''}",pie,payment_method_code,count(*),"American E, MasterCard, Visa","4, 6, 5",Show all payment method codes and the number of orders for each code. Visualize by pie chart.
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id",Pie,Easy,assets_maintenance,"{'chart': 'pie', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['top', 'package']], 'y_data': [[1, 3]], 'classify': [], 'describe': ''}",pie,part_name,part_id,"top, package","1, 3",Visualize a pie chart with which parts have more than 2 faults? Show the part name and id.
"SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type",Pie,Medium,loan_1,"{'chart': 'pie', 'x_name': 'acc_type', 'y_name': 'avg(acc_bal)', 'x_data': [['checking', 'saving']], 'y_data': [[1000, 2000]], 'classify': [], 'describe': ''}",pie,acc_type,avg(acc_bal),"checking, saving","1000, 2000",Show me a pie chart for what is the average account balance of customers with credit score below 50 for the different account types?
"SELECT City , COUNT(City) FROM branch GROUP BY City",Pie,Easy,shop_membership,"{'chart': 'pie', 'x_name': 'City', 'y_name': 'COUNT(City)', 'x_data': [['London', 'Oxford']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY City'}",pie,City,COUNT(City),"London, Oxford","5, 3",Compute the total how many city across city as a pie chart.
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name",Pie,Medium,course_teach,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",What is the number of courses each teacher teaches? Return a pie chart.
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE",Pie,Easy,college_1,"{'chart': 'pie', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[2.26, 2.84, 3.09, 3.87, 2.11]], 'classify': [], 'describe': ''}",pie,DEPT_CODE,min(stu_gpa),"ACCT, BIOL, CIS, EDU, ENGL","2.26, 2.84, 3.09, 3.87, 2.11",Compute the total minimal stu gpa across dept code as a pie chart.
"SELECT All_Games , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Games', 'y_name': 'Team_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,All_Games,Team_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 3, 4",Compute the total team_id across all games as a pie chart.
"SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller",Pie,Extra Hard,election,"{'chart': 'pie', 'x_name': 'Comptroller', 'y_name': 'COUNT(Comptroller)', 'x_data': [['Alan Hevesi', 'Carl McCall', 'John Faso']], 'y_data': [[1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Comptroller'}",pie,Comptroller,COUNT(Comptroller),"Alan Hevesi, Carl McCall, John Faso","1, 3, 1","Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties, and count them by a pie chart"
"SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION",Pie,Easy,train_station,"{'chart': 'pie', 'x_name': 'Location', 'y_name': 'sum(number_of_platforms)', 'x_data': [['Birmingham', 'Glasgow', 'London']], 'y_data': [[13, 17, 140]], 'classify': [], 'describe': ''}",pie,Location,sum(number_of_platforms),"Birmingham, Glasgow, London","13, 17, 140",Show all locations and the total number of platforms for all train stations in each location in a pie chart.
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time",Pie,Easy,employee_hire_evaluation,"{'chart': 'pie', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['F', 'T']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",pie,Is_full_time,COUNT(Is_full_time),"F, T","2, 5",Give me a pie to show how many is full time from different is full time.
"SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code",Pie,Easy,department_store,"{'chart': 'pie', 'x_name': 'product_type_code', 'y_name': 'min(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[408.82, 612.46]], 'classify': [], 'describe': ''}",pie,product_type_code,min(product_price),"Clothes, Hardware","408.82, 612.46",Give the minimum product price for each product type in a pie chart.
"SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER",Pie,Easy,program_share,"{'chart': 'pie', 'x_name': 'Owner', 'y_name': 'sum(Rating_in_percent)', 'x_data': [['Anhui Television', 'CCTV', 'HBS', 'Shandong Television']], 'y_data': [[0.2, 2.43, 0.53, 0.19]], 'classify': [], 'describe': ''}",pie,Owner,sum(Rating_in_percent),"Anhui Television, CCTV, HBS, Shandong Television","0.2, 2.43, 0.53, 0.19",Find the total rating ratio for each channel owner. Show a pie chart.
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",Pie,Medium,loan_1,"{'chart': 'pie', 'x_name': 'cust_name', 'y_name': 'acc_bal', 'x_data': [['Mary', 'Jack']], 'y_data': [[2000, 1000]], 'classify': [], 'describe': ''}",pie,cust_name,acc_bal,"Mary, Jack","2000, 1000",Find the name and account balance of the customer whose name includes the letter ‘a’. Show a pie chart.
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",Pie,Easy,loan_1,"{'chart': 'pie', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Mary', 'Owen']], 'y_data': [[30, 210]], 'classify': [], 'describe': ''}",pie,cust_name,credit_score,"Mary, Owen","30, 210",Display a pie chart for what are the different names and credit scores of customers who have taken a loan?
"SELECT Team_Name , ACC_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'Team_Name', 'y_name': 'ACC_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",pie,Team_Name,ACC_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.875, 0.813, 0.625, 0.563",Draw a pie chart about the proportion of  Team_Name and  ACC_Percent.
"SELECT Building , count(*) FROM Faculty GROUP BY building",Pie,Easy,activity_1,"{'chart': 'pie', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Barton', 'Krieger', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",pie,Building,count(*),"Barton, Krieger, NEB","20, 20, 18",Create a pie chart showing the total number across building.
"SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Home', 'y_name': 'SUM(School_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[5, 5, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",pie,All_Home,SUM(School_ID),"14–2, 14–3, 15–1","5, 5, 2",Give me a pie chart to reflect the proportion of  All_Home and the sum of School_ID.
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName",Pie,Extra Hard,inn_1,"{'chart': 'pie', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Convoke and sanguine', 'Frugal not apropos', 'Harbinger but bequest', 'Thrift and accolade']], 'y_data': [[1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",pie,roomName,COUNT(roomName),"Convoke and sanguine, Frugal not apropos, Harbinger but bequest, Thrift and accolade","1, 2, 3, 1",A pie chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.
"SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR",Pie,Medium,tvshow,"{'chart': 'pie', 'x_name': 'Pixel_aspect_ratio_PAR', 'y_name': 'COUNT(Pixel_aspect_ratio_PAR)', 'x_data': [['16:9', '4:3', '4:3 / 16:9']], 'y_data': [[3, 6, 3]], 'classify': [], 'describe': 'GROUP BY Pixel_aspect_ratio_PAR'}",pie,Pixel_aspect_ratio_PAR,COUNT(Pixel_aspect_ratio_PAR),"16:9, 4:3, 4:3 / 16:9","3, 6, 3",What is the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the proportion of the pixel aspect ratio with a pie chart.
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype",Pie,Easy,allergy_1,"{'chart': 'pie', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[4, 3, 7]], 'classify': [], 'describe': ''}",pie,AllergyType,count(*),"animal, environmental, food","4, 3, 7",Give the proportion of what are the allergy types and how many allergies correspond to each one?
"SELECT Rank , count(*) FROM captain GROUP BY rank",Pie,Easy,ship_1,"{'chart': 'pie', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 2, 4]], 'classify': [], 'describe': ''}",pie,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 2, 4",Count the number of captains that have each rank. Show the proportion.
"SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester",Pie,Hard,college_2,"{'chart': 'pie', 'x_name': 'semester', 'y_name': 'COUNT(semester)', 'x_data': [['Fall', 'Spring']], 'y_data': [[3, 9]], 'classify': [], 'describe': 'GROUP BY semester'}",pie,semester,COUNT(semester),"Fall, Spring","3, 9",How many courses are in the Psychology department for each semester? Return a pie chart.
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party",Pie,Medium,election,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Independence', 'Liberal', 'Working Families']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",pie,Party,COUNT(Party),"Democratic, Independence, Liberal, Working Families","2, 1, 1, 1",Can you tell me the proportion of each party for the election?
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party",Pie,Medium,election,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Independence', 'Liberal', 'Working Families']], 'y_data': [[4, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",pie,Party,COUNT(Party),"Democratic, Independence, Liberal, Working Families","4, 1, 2, 1","For each party, use a pie chart to show the number of its delegates."
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result",Pie,Easy,music_4,"{'chart': 'pie', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Awarded', 'Nominated']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY Result'}",pie,Result,COUNT(Result),"Awarded, Nominated","3, 6",Create a pie chart showing the number of result across result.
"SELECT All_Road , ACC_Percent FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Road', 'y_name': 'ACC_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",pie,All_Road,ACC_Percent,"13–0, 8–2, 6–5, 4–8","0.875, 0.813, 0.625, 0.563",Return a pie chart about the proportion of  All_Road and  ACC_Percent.
"SELECT cName , enr FROM College ORDER BY enr",Pie,Easy,soccer_2,"{'chart': 'pie', 'x_name': 'cName', 'y_name': 'enr', 'x_data': [['ASU', 'LSU', 'FSU', 'OU']], 'y_data': [[12000, 18000, 19000, 22000]], 'classify': [], 'describe': ''}",pie,cName,enr,"ASU, LSU, FSU, OU","12000, 18000, 19000, 22000","For the attribute  cName and  enr, show their proportion by a pie chart."
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date",Pie,Hard,performance_attendance,"{'chart': 'pie', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 2', 'February 5']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",pie,Date,COUNT(Date),"February 11, February 2, February 5","1, 2, 1","A pie chart for showing the number of the dates of performances with attending members whose roles are ""Violin""."
"SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",Pie,Easy,pets_1,"{'chart': 'pie', 'x_name': 'Fname', 'y_name': 'Age', 'x_data': [['Linda', 'Tracy']], 'y_data': [[18, 19]], 'classify': [], 'describe': ''}",pie,Fname,Age,"Linda, Tracy","18, 19",What are the different first names and ages of the students who do have pets. Visualize by pie chart.
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType",Pie,Easy,inn_1,"{'chart': 'pie', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[100, 181.25, 150]], 'classify': [], 'describe': ''}",pie,bedType,avg(basePrice),"Double, King, Queen","100, 181.25, 150",What is the average base price of different bed type? List bed type and average base price. Visualize by pie chart.
"SELECT All_Games , School_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",pie,All_Games,School_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 4, 5",A pie chart shows the proportion of  All_Games and  School_ID.
"SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality",Pie,Easy,news_report,"{'chart': 'pie', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[9, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",pie,Nationality,COUNT(Nationality),"England, Northern Ireland, Wales","9, 1, 1",Show me the propotion of the journalist's nationality using a pie chart.
"SELECT All_Neutral , School_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",pie,All_Neutral,School_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 4, 5",Create a pie chart showing school_id across all neutral.
"SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",Pie,Medium,store_product,"{'chart': 'pie', 'x_name': 'Headquartered_City', 'y_name': 'count(*)', 'x_data': [['Bahawalpur City', 'Bhakkar City', 'Hafizabad City', 'Khanewal City']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",pie,Headquartered_City,count(*),"Bahawalpur City, Bhakkar City, Hafizabad City, Khanewal City","1, 1, 1, 2",How many stores are headquarted in each city. Show a pie chart.
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",Pie,Medium,workshop_paper,"{'chart': 'pie', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Jeff Lloyd', 'Sammy Green', 'Sherman Smith', 'Steve Niehaus', 'Steve Raible']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Author,COUNT(DISTINCT T1.workshop_id),"Jeff Lloyd, Sammy Green, Sherman Smith, Steve Niehaus, Steve Raible","1, 2, 1, 1, 1",Show each author and the number of workshops they submitted to. Show a pie chart.
"SELECT cName , enr FROM College ORDER BY enr",Pie,Easy,soccer_2,"{'chart': 'pie', 'x_name': 'cName', 'y_name': 'enr', 'x_data': [['ASU', 'LSU', 'FSU', 'OU']], 'y_data': [[12000, 18000, 19000, 22000]], 'classify': [], 'describe': ''}",pie,cName,enr,"ASU, LSU, FSU, OU","12000, 18000, 19000, 22000",A pie chart shows the proportion of  cName and  enr.
"SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor",Pie,Hard,election,"{'chart': 'pie', 'x_name': 'Governor', 'y_name': 'COUNT(Governor)', 'x_data': [['Peter Vallone', 'Tom Golisano']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Governor'}",pie,Governor,COUNT(Governor),"Peter Vallone, Tom Golisano","2, 1",A pie chart for finding the number of the parties associated with the delegates from district 1. Who served as governors of the parties?
"SELECT job , min(age) FROM Person GROUP BY job",Pie,Easy,network_2,"{'chart': 'pie', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25]], 'classify': [], 'describe': ''}",pie,job,min(age),"doctor, engineer, student","45, 35, 25",Pie chart. how old is the youngest person for each job?
"SELECT Team , COUNT(*) FROM technician GROUP BY Team",Pie,Easy,machine_repair,"{'chart': 'pie', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['CHC', 'CLE', 'CWS', 'NYY', 'PHA']], 'y_data': [[1, 4, 2, 2, 1]], 'classify': [], 'describe': ''}",pie,Team,COUNT(*),"CHC, CLE, CWS, NYY, PHA","1, 4, 2, 2, 1",Show different teams of technicians and the number of technicians in each team in a pie chart.
"SELECT Category , count(*) FROM book_club GROUP BY category",Pie,Easy,culture_company,"{'chart': 'pie', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",pie,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5",Create a pie chart showing the total number across category.
"SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = ""Delivered"" GROUP BY customer_name",Pie,Hard,customers_and_addresses,"{'chart': 'pie', 'x_name': 'customer_name', 'y_name': 'COUNT(customer_name)', 'x_data': [['Clifford Pagac', 'Kitty Padberg III', 'Prof. Alexzander Hamill', 'Prof. Reyes Berge II']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_name'}",pie,customer_name,COUNT(customer_name),"Clifford Pagac, Kitty Padberg III, Prof. Alexzander Hamill, Prof. Reyes Berge II","1, 2, 1, 1","A pie chart showing the proportion of the number of orders that have the status ""Delivered"" for each customer name."
"SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME",Pie,Hard,hr_1,"{'chart': 'pie', 'x_name': 'FIRST_NAME', 'y_name': 'SUM(SALARY)', 'x_data': [['Adam', 'Payam', 'William']], 'y_data': [[8200, 7900, 15700]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",pie,FIRST_NAME,SUM(SALARY),"Adam, Payam, William","8200, 7900, 15700","For those employees whose first name is ending with the letter m, sum their salary for visualizing a pie chart."
"SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier",Pie,Easy,phone_market,"{'chart': 'pie', 'x_name': 'Carrier', 'y_name': 'SUM(Memory_in_G)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[160, 208]], 'classify': [], 'describe': 'GROUP BY Carrier'}",pie,Carrier,SUM(Memory_in_G),"Sprint, TMobile","160, 208",Give me a pie to show total number of memory in g from different carrier.
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name",Pie,Hard,machine_repair,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Eddie Collins', 'Joe Sewell', 'Tony Sewell']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Eddie Collins, Joe Sewell, Tony Sewell","1, 5, 1","What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a pie chart"
"SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location",Pie,Easy,train_station,"{'chart': 'pie', 'x_name': 'Location', 'y_name': 'SUM(Number_of_Platforms)', 'x_data': [['Birmingham', 'Glasgow', 'London']], 'y_data': [[13, 17, 140]], 'classify': [], 'describe': 'GROUP BY Location'}",pie,Location,SUM(Number_of_Platforms),"Birmingham, Glasgow, London","13, 17, 140",What is the number of platforms for each location? Show the proportion with a pie chart.
"SELECT Class , count(*) FROM race GROUP BY CLASS",Pie,Easy,race_track,"{'chart': 'pie', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",pie,Class,count(*),"DP/GT, GT","5, 2",Compute the total the total number across class as a pie chart.
"SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex",Pie,Medium,dorm_1,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",pie,Sex,count(*),"F, M","5, 10",Find the number of students whose age is older than the average age for each gender. Visualize by pie chart.
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description",Pie,Extra Hard,products_gen_characteristics,"{'chart': 'pie', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Herbs', 'Seeds', 'Spices']], 'y_data': [[2, 3, 1]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",pie,product_category_description,COUNT(product_category_description),"Herbs, Seeds, Spices","2, 3, 1","Find the category descriptions of the products whose descriptions include letter 't', and count them by a pie chart"
"SELECT Class , COUNT(Class) FROM captain GROUP BY Class",Pie,Easy,ship_1,"{'chart': 'pie', 'x_name': 'Class', 'y_name': 'COUNT(Class)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[1, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Class'}",pie,Class,COUNT(Class),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","1, 1, 1, 1, 3",Visualize the proportion of the total number of captains in each class using a pie chart.
"SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code",Pie,Easy,apartment_rentals,"{'chart': 'pie', 'x_name': 'apt_type_code', 'y_name': 'min(room_count)', 'x_data': [['Duplex', 'Flat', 'Studio']], 'y_data': [[3, 3, 6]], 'classify': [], 'describe': ''}",pie,apt_type_code,min(room_count),"Duplex, Flat, Studio","3, 3, 6",Create a pie chart showing minimal room count across apt type code.
"SELECT payment_method_code , COUNT(payment_method_code) FROM customers GROUP BY payment_method_code",Pie,Easy,customers_and_products_contacts,"{'chart': 'pie', 'x_name': 'payment_method_code', 'y_name': 'COUNT(payment_method_code)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY payment_method_code'}",pie,payment_method_code,COUNT(payment_method_code),"Credit Card, Direct Debit","7, 8",Create a pie chart showing the number of payment method code across payment method code.
"SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name",Pie,Medium,tracking_orders,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'SUM(count(*))', 'x_data': [['book', 'clothes', 'food', 'music', 'phone']], 'y_data': [[1, 1, 5, 5, 3]], 'classify': [], 'describe': 'GROUP BY product_name'}",pie,product_name,SUM(count(*)),"book, clothes, food, music, phone","1, 1, 5, 5, 3",List the name and count of each product in all orders with a pie chart.
"SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country",Pie,Hard,flight_4,"{'chart': 'pie', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['Azerbaijan', 'Turkey', 'United States']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY country'}",pie,country,COUNT(country),"Azerbaijan, Turkey, United States","1, 1, 4",Find the number of the country of the airlines whose name starts with 'Orbit'.
"SELECT Sex , SUM(Height) FROM people GROUP BY Sex",Pie,Easy,candidate_poll,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'SUM(Height)', 'x_data': [['F', 'M']], 'y_data': [[395, 1366]], 'classify': [], 'describe': 'GROUP BY Sex'}",pie,Sex,SUM(Height),"F, M","395, 1366",A pie chart shows the proportion of  Sex and the sum of Height.
"SELECT Type , COUNT(Type) FROM ship GROUP BY Type",Pie,Easy,ship_mission,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Type'}",pie,Type,COUNT(Type),"Battle ship, Cargo ship","3, 5",Show me a pie chart showing the total number of each ship type.
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description",Pie,Medium,dog_kennels,"{'chart': 'pie', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Physical examination', 'Take for a Walk', 'Vaccination']], 'y_data': [[2429, 2392, 2540]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",pie,treatment_type_description,SUM(cost_of_treatment),"Physical examination, Take for a Walk, Vaccination","2429, 2392, 2540",Pie chart. what are the cost and treatment type description of each treatment?
"SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",Pie,Medium,soccer_2,"{'chart': 'pie', 'x_name': 'state', 'y_name': 'enr', 'x_data': [['AZ', 'FL']], 'y_data': [[12000, 19000]], 'classify': [], 'describe': ''}",pie,state,enr,"AZ, FL","12000, 19000",what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.
"SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team",Pie,Easy,game_injury,"{'chart': 'pie', 'x_name': 'Away_team', 'y_name': 'COUNT(Away_team)', 'x_data': [['Bunyodkor', 'Pakhtakor', 'Quruvchi']], 'y_data': [[7, 10, 3]], 'classify': [], 'describe': 'GROUP BY Away_team'}",pie,Away_team,COUNT(Away_team),"Bunyodkor, Pakhtakor, Quruvchi","7, 10, 3",Create a pie chart showing how many away team across away team.
"SELECT name , elevation FROM airports WHERE city = 'New York'",Pie,Easy,flight_4,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'elevation', 'x_data': [['La Guardia Airport', 'John F Kennedy International Airport', 'Indianola Municipal Airport', 'One Police Plaza Heliport']], 'y_data': [[21, 13, 126, 244]], 'classify': [], 'describe': ''}",pie,name,elevation,"La Guardia Airport, John F Kennedy International Airport, Indianola Municipal Airport, One Police Plaza Heliport","21, 13, 126, 244",What is the altitude (or elevation) of the airports in the city of New York? Show me a pie chart.
"SELECT Type , COUNT(Type) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY Type",Pie,Medium,flight_company,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Corporate', 'Joint Venture', 'Subsidiary']], 'y_data': [[1, 3, 9]], 'classify': [], 'describe': 'GROUP BY Type'}",pie,Type,COUNT(Type),"Corporate, Joint Venture, Subsidiary","1, 3, 9",How many companies that have ever operated a flight for each type? Draw a pie chart.
"SELECT Party , COUNT(*) FROM representative GROUP BY Party",Pie,Easy,election_representative,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Democratic', 'Republican']], 'y_data': [[3, 4]], 'classify': [], 'describe': ''}",pie,Party,COUNT(*),"Democratic, Republican","3, 4",What are the different parties of representative? Show the party name and the number of representatives in each party. Plot them as pie chart.
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank",Pie,Medium,ship_1,"{'chart': 'pie', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 1, 3]], 'classify': [], 'describe': ''}",pie,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 1, 3",Count the number of captains younger than 50 of each rank in a pie chart.
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name",Pie,Hard,scientist_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['A Silver-Cleaning Battery', 'Aerodynamics and Ice Hockey', 'Build Your Own Telescope', 'Juicy: Extracting Apple Juice with Pectinase']], 'y_data': [[2, 1, 3, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"A Silver-Cleaning Battery, Aerodynamics and Ice Hockey, Build Your Own Telescope, Juicy: Extracting Apple Juice with Pectinase","2, 1, 3, 1",Find the number of scientists involved for the projects that require more than 300 hours. Show a pie chart.
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code",Pie,Hard,apartment_rentals,"{'chart': 'pie', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Cable TV', 'Gym']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY facility_code'}",pie,facility_code,COUNT(facility_code),"Cable TV, Gym","1, 2",What are the number of the facility codes of the apartments with more than four bedrooms?
"SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)",Pie,Medium,network_2,"{'chart': 'pie', 'x_name': 'friend', 'y_name': 'age', 'x_data': [['Bob', 'Zach']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",pie,friend,age,"Bob, Zach","35, 45",Who has friends that are older than the average age? Print their friends and their ages as well using a pie chart.
"SELECT Sex , min(weight) FROM people GROUP BY Sex",Pie,Easy,candidate_poll,"{'chart': 'pie', 'x_name': 'Sex', 'y_name': 'min(weight)', 'x_data': [['F', 'M']], 'y_data': [[90, 82]], 'classify': [], 'describe': ''}",pie,Sex,min(weight),"F, M","90, 82",Create a pie chart showing minimal weight across sex.
"SELECT Category , count(*) FROM book_club GROUP BY category",Pie,Easy,culture_company,"{'chart': 'pie', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",pie,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5",Pie. how many books fall into each category?
"SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3",Pie,Extra Hard,music_1,"{'chart': 'pie', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['India', 'UK']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY country'}",pie,country,COUNT(country),"India, UK","2, 1",How many the artists who produced the top three highly rated songs of each country? Show the result using a pie chart.
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos",Pie,Easy,soccer_2,"{'chart': 'pie', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['goalie', 'mid', 'striker']], 'y_data': [[1200, 300, 1600]], 'classify': [], 'describe': ''}",pie,pPos,min(T2.HS),"goalie, mid, striker","1200, 300, 1600",What is minimum hours of the students playing in different position. Show the proportion.
"SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",Pie,Medium,apartment_rentals,"{'chart': 'pie', 'x_name': 'apt_type_code', 'y_name': 'COUNT(*)', 'x_data': [['Studio', 'Duplex', 'Flat']], 'y_data': [[4, 5, 6]], 'classify': [], 'describe': ''}",pie,apt_type_code,COUNT(*),"Studio, Duplex, Flat","4, 5, 6",Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order by a pie chart.
"SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker",Pie,Easy,car_1,"{'chart': 'pie', 'x_name': 'FullName', 'y_name': 'Id', 'x_data': [['General Motors', 'Chrysler']], 'y_data': [[4, 6]], 'classify': [], 'describe': ''}",pie,FullName,Id,"General Motors, Chrysler","4, 6",Pie chart. what are the names and ids of all makers with more than 3 models?
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name",Pie,Hard,formula_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Honda', 'Toyota']], 'y_data': [[45, 95]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Honda, Toyota","45, 95",A pie chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?
"SELECT All_Neutral , Team_ID FROM basketball_match",Pie,Easy,university_basketball,"{'chart': 'pie', 'x_name': 'All_Neutral', 'y_name': 'Team_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,All_Neutral,Team_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 3, 4",Return a pie chart about the proportion of All_Neutral and Team_ID.
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name",Pie,Hard,product_catalog,"{'chart': 'pie', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Carbonated Water', 'Cola', 'Ginger Beer', 'Root beer']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",pie,catalog_entry_name,COUNT(catalog_entry_name),"Carbonated Water, Cola, Ginger Beer, Root beer","1, 2, 1, 1","Find the names of catalog entries with level number 8, and count them by a pie chart"
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",Pie,Medium,car_1,"{'chart': 'pie', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['america', 'europe', 'asia', 'africa', 'australia']], 'y_data': [[3, 6, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,Continent,count(*),"america, europe, asia, africa, australia","3, 6, 2, 2, 2",How many countries does each continent have? List the continent name and the number of countries in a pie chart.
"SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",Pie,Medium,loan_1,"{'chart': 'pie', 'x_name': 'bname', 'y_name': 'sum(amount)', 'x_data': [['broadway', 'downtown', 'morningside']], 'y_data': [[5000, 3000, 2050]], 'classify': [], 'describe': ''}",pie,bname,sum(amount),"broadway, downtown, morningside","5000, 3000, 2050",Find the total amount of loans offered by each bank branch. Show the proportion.
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[9175, 3993.3333333333335, 8469.23076923077, 4491.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept","9175, 3993.3333333333335, 8469.23076923077, 4491.666666666667","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail"" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-03-22', '2018-03-07', '2018-03-06', '2018-03-04', '2018-03-02', '2018-02-26']], 'y_data': [[2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",bar,date_of_completion,COUNT(date_of_completion),"2018-03-22, 2018-03-07, 2018-03-06, 2018-03-04, 2018-03-02, 2018-02-26","2, 1, 1, 1, 1, 1","A bar chart for returning the number of the completion date for all the tests that have ""Fail"" result, and list from high to low by the Y-axis."
"SELECT T2.name , COUNT(T2.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T2.name ORDER BY T2.name ASC",Bar,Hard,company_office,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Corporativo BBVA Bancomer', 'LIU East', 'Punto Chapultepec', 'Reforma 432', 'Reforma 90', 'Residencial Vidalta Torre Altaire 2', 'Residencial Vidalta Torre Altaire 3', 'Torre KOI', 'Torre Mitikah', 'Torre New York Life', 'Torre Reforma']], 'y_data': [[2, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Corporativo BBVA Bancomer, LIU East, Punto Chapultepec, Reforma 432, Reforma 90, Residencial Vidalta Torre Altaire 2, Residencial Vidalta Torre Altaire 3, Torre KOI, Torre Mitikah, Torre New York Life, Torre Reforma","2, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1","Return a bar chart showing the number of companies in each building, and rank X-axis from low to high order please."
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': ''}",bar,decor,count(*),"modern, rustic, traditional","2, 2, 4","Find the number of rooms with price higher than 120 for different decor Show bar chart, and could you list Y-axis from low to high order?"
"SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code ORDER BY COUNT(*) ASC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(*)', 'x_data': [['provide adv promoting service', 'provide filming service', 'provide dinning service', 'provide photo service']], 'y_data': [[2, 3, 5, 5]], 'classify': [], 'describe': ''}",bar,Service_Type_Description,COUNT(*),"provide adv promoting service, provide filming service, provide dinning service, provide photo service","2, 3, 5, 5","Show the number of services for each service type description with a bar chart, I want to display by the the total number from low to high."
"SELECT Open_Date , COUNT(Open_Date) FROM Church",Bar,Easy,wedding,"{'chart': 'bar', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 0, 2, 2, 2]], 'classify': [], 'describe': 'BIN Open_Date BY WEEKDAY'}",bar,Open_Date,COUNT(Open_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 0, 2, 2, 2",Bar chart x axis open date y axis how many open date
"SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(School_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2.5, 5, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(School_ID),"14–2, 14–3, 15–1","2.5, 5, 2","Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, display X from low to high order."
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) ASC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['mid', 'goalie', 'striker']], 'y_data': [[300, 1200, 1600]], 'classify': [], 'describe': ''}",bar,pPos,min(T2.HS),"mid, goalie, striker","300, 1200, 1600","For each position, what is the minimum time students spent practicing Plot them as bar chart, and display by the y-axis in asc."
"SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['24th', '25th']], 'y_data': [[3, 12]], 'classify': [], 'describe': 'BIN date_departed BY DAY'}",bar,date_departed,COUNT(date_departed),"24th, 25th","3, 12","Bar chart x axis date departed y axis the number of date departed, show Y in asc order please."
"SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'COUNT(Budget_Type_Code)', 'x_data': [['GV', 'ORG', 'SF']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': 'GROUP BY Budget_Type_Code'}",bar,Budget_Type_Code,COUNT(Budget_Type_Code),"GV, ORG, SF","6, 2, 2",Return a bar chart to show how many documents for different budget type code.
"SELECT first_name , COUNT(first_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY first_name ORDER BY first_name ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Alexys', 'Archibald', 'Brian', 'Clemens', 'Courtney', 'Cullen', 'Josie', 'Lorine', 'Manley', 'Naomi', 'Nellie', 'Samanta', 'Weston']], 'y_data': [[1, 2, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Alexys, Archibald, Brian, Clemens, Courtney, Cullen, Josie, Lorine, Manley, Naomi, Nellie, Samanta, Weston","1, 2, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 2","List the number of enginners and group by first name in a bar chart, and rank by the bars from low to high."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['PROJ-MGR', 'DBA']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"PROJ-MGR, DBA","7, 8","Bar graph to show the total number from different role code, and sort from high to low by the bar."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'Aug', 'Oct', 'Sept', 'July']], 'y_data': [[9885.714285714286, 9074.193548387097, 8300, 4880, 3774.1935483870966]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, Aug, Oct, Sept, July","9885.714285714286, 9074.193548387097, 8300, 4880, 3774.1935483870966","For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, and rank by the y axis in descending."
"SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName DESC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'CountryName', 'y_name': 'CountryId', 'x_data': [['usa', 'uk', 'sweden', 'korea', 'japan', 'italy', 'germany', 'france']], 'y_data': [[1, 7, 6, 8, 4, 5, 2, 3]], 'classify': [], 'describe': ''}",bar,CountryName,CountryId,"usa, uk, sweden, korea, japan, italy, germany, france","1, 7, 6, 8, 4, 5, 2, 3","Visualize a bar chart for what are the countries having at least one car maker? List name and id, sort x-axis in desc order."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 34000, 39600, 12000, 6500, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 34000, 39600, 12000, 6500, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400","For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the  job_id , and group by attribute job_id."
"SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'Room', 'y_name': 'count(*)', 'x_data': [['AOB', 'CAS', 'FNA', 'HBB', 'IBD', 'IBS', 'MWC', 'RND', 'RTE', 'TAA']], 'y_data': [[51, 69, 66, 60, 63, 59, 56, 62, 55, 59]], 'classify': [], 'describe': ''}",bar,Room,count(*),"AOB, CAS, FNA, HBB, IBD, IBS, MWC, RND, RTE, TAA","51, 69, 66, 60, 63, 59, 56, 62, 55, 59",Return the room and number of reservations made for each of the rooms to draw a bar chart.
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AD_PRES', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'SA_REP', 'FI_ACCOUNT', 'ST_MAN', 'HR_REP', 'IT_PROG', 'SH_CLERK', 'PU_CLERK', 'ST_CLERK']], 'y_data': [[24000, 12000, 11000, 11000, 8100, 7850, 7350, 6500, 6000, 3244.4444444444443, 2933.3333333333335, 2822.222222222222]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AD_PRES, AC_MGR, SA_MAN, PU_MAN, SA_REP, FI_ACCOUNT, ST_MAN, HR_REP, IT_PROG, SH_CLERK, PU_CLERK, ST_CLERK","24000, 12000, 11000, 11000, 8100, 7850, 7350, 6500, 6000, 3244.4444444444443, 2933.3333333333335, 2822.222222222222","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, show Y from high to low order."
"SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Name ASC",Bar,Medium,museum_visit,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Arjen Robben', 'Fernando Gago', 'Rafael van der Vaart']], 'y_data': [[27, 36, 25]], 'classify': [], 'describe': ''}",bar,Name,Age,"Arjen Robben, Fernando Gago, Rafael van der Vaart","27, 36, 25","Show name and age for visitors who visited some museums more than once using a bar chart, could you rank in ascending by the x-axis?"
"SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'AVG(monthly_rental)', 'x_data': [['2017', '2018']], 'y_data': [[950.6428571428571, 917.5]], 'classify': [], 'describe': 'BIN date_address_from BY YEAR'}",bar,date_address_from,AVG(monthly_rental),"2017, 2018","950.6428571428571, 917.5",Show me about the distribution of  date_address_from and the average of monthly_rental bin date_address_from by time in a bar chart.
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Manufacturer ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[1, 2, 2, 3, 3, 4, 5, 5, 6, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Manufacturer),"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","1, 2, 2, 3, 3, 4, 5, 5, 6, 6","For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, show in ascending by the sum manufacturer."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 122, 122, 147, 100, 100, 114, 101, 201, 100, 102.8, 101, 108, 100, 0, 101, 101, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","100, 122, 122, 147, 100, 100, 114, 101, 201, 100, 102.8, 101, 108, 100, 0, 101, 101, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and rank names in desc order please."
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Working Families', 'Liberal', 'Independence', 'Democratic']], 'y_data': [[1, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Working Families, Liberal, Independence, Democratic","1, 2, 1, 4","For each party, use a bar chart to show the number of its delegates, show from high to low by the x axis."
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name ORDER BY name DESC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Toyota', 'Honda']], 'y_data': [[95, 45]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Toyota, Honda","95, 45","What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and display by the X-axis from high to low please."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[300, 130, 150, 200, 120, 60]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","300, 130, 150, 200, 120, 60","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of revenue , and group by attribute name, list from low to high by the x axis."
"SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY Document_Type_Description DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Type_Description', 'y_name': 'COUNT(Document_Type_Description)', 'x_data': [['very good', 'good', 'fun', 'excellent']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Document_Type_Description'}",bar,Document_Type_Description,COUNT(Document_Type_Description),"very good, good, fun, excellent","1, 1, 1, 2","Bar graph to show the number of document type description from different document type description, and I want to list in descending by the x axis."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_MAN', 'AD_VP', 'SA_REP', 'MK_MAN', 'FI_MGR', 'AD_PRES', 'AC_MGR']], 'y_data': [[3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_MAN, AD_VP, SA_REP, MK_MAN, FI_MGR, AD_PRES, AC_MGR","3, 2, 1, 1, 1, 1, 1","Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, and show by the the number of job id in desc."
"SELECT g_name , rating FROM genre ORDER BY g_name",Bar,Easy,music_1,"{'chart': 'bar', 'x_name': 'g_name', 'y_name': 'rating', 'x_data': [['blues', 'folk', 'modern', 'nazrul', 'pop', 'tagore']], 'y_data': [[7, 9, 8, 7, 9, 8]], 'classify': [], 'describe': ''}",bar,g_name,rating,"blues, folk, modern, nazrul, pop, tagore","7, 9, 8, 7, 9, 8","Return a bar chart on what are the names of all genres in alphabetical order, combined with its ratings?"
"SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name DESC",Bar,Medium,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Number_Deaths', 'x_data': [['Two', 'Three', 'Six', 'Four', 'Five', '9 cyclones']], 'y_data': [[7, 52, 2, 7, 3, 71]], 'classify': [], 'describe': ''}",bar,Name,Number_Deaths,"Two, Three, Six, Four, Five, 9 cyclones","7, 52, 2, 7, 3, 71","For all storms with at least 1 death, compare the number of deaths by name with a bar graph, and order by the bar in descending."
"SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetID', 'y_name': 'weight', 'x_data': [['2001-01-01', '2002-01-01']], 'y_data': [[12, 13.4]], 'classify': [], 'describe': ''}",bar,PetID,weight,"2001-01-01, 2002-01-01","12, 13.4","Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, and show weight from low to high order."
"SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier",Bar,Easy,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'AVG(Memory_in_G)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[80, 69.33333333333333]], 'classify': [], 'describe': 'GROUP BY Carrier'}",bar,Carrier,AVG(Memory_in_G),"Sprint, TMobile","80, 69.33333333333333",A bar chart about what are the memories and carriers of phones?
"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC",Bar,Medium,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(*)', 'x_data': [['RCA', 'Philips Classics Records', 'Philips', 'Mercury Records', 'Kultur', 'Koch Records / Naxos Records', 'EMI', 'Deutsche Grammophon', 'Delos Records', 'Decca Records', 'Columbia Masterworks']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Record_Company,COUNT(*),"RCA, Philips Classics Records, Philips, Mercury Records, Kultur, Koch Records / Naxos Records, EMI, Deutsche Grammophon, Delos Records, Decca Records, Columbia Masterworks","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","How many orchestras does each record company manage Show bar chart, and I want to list in desc by the bars."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Weight ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['28.09.1981', '06.10.1976', '10.11.1972', '01.09.1977', '22.04.1977', '20.08.1970', '10.03.1976', '05.05.1972', '03.02.1976']], 'y_data': [[82, 83, 85, 88, 88, 89, 90, 92, 94]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"28.09.1981, 06.10.1976, 10.11.1972, 01.09.1977, 22.04.1977, 20.08.1970, 10.03.1976, 05.05.1972, 03.02.1976","82, 83, 85, 88, 88, 89, 90, 92, 94","Show weight from each date of birth, and I want to rank in asc by the y axis please."
"SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': ''}",bar,Name,sum(revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30","Bar graph to show sum revenue from different name, and rank bars in asc order."
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Marketing', 'Statistics', 'Biology', 'Pol. Sci.', 'Elec. Eng.', 'English', 'History', 'Athletics', 'Geology', 'Civil Eng.', 'Math', 'Astronomy', 'Comp. Sci.', 'Languages', 'Physics', 'Accounting', 'Mech. Eng.', 'Psychology', 'Finance', 'Cybernetics']], 'y_data': [[20, 21, 23, 23, 28, 28, 29, 30, 33, 34, 34, 37, 37, 37, 38, 40, 40, 44, 49, 67]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Marketing, Statistics, Biology, Pol. Sci., Elec. Eng., English, History, Athletics, Geology, Civil Eng., Math, Astronomy, Comp. Sci., Languages, Physics, Accounting, Mech. Eng., Psychology, Finance, Cybernetics","20, 21, 23, 23, 28, 28, 29, 30, 33, 34, 34, 37, 37, 37, 38, 40, 40, 44, 49, 67","Find the total credits of courses provided by different department Plot them as bar chart, and display Y in asc order."
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title",Bar,Easy,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case of the Mystery Weekend', 'The Case of the Smart Dummy', 'The Case: Off the Record', 'The Case of the Bermuda Triangle', 'The Case of the Piggy Banker']], 'y_data': [[15.99, 12.99, 8.99, 9.99, 12.99]], 'classify': [], 'describe': ''}",bar,Title,max(T1.price),"The Case of the Mystery Weekend, The Case of the Smart Dummy, The Case: Off the Record, The Case of the Bermuda Triangle, The Case of the Piggy Banker","15.99, 12.99, 8.99, 9.99, 12.99",A bar chart about what are the title and maximum price of each film?
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) DESC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sat', 'Mon', 'Tue', 'Fri', 'Wed', 'Thur', 'Sun']], 'y_data': [[4, 4, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sat, Mon, Tue, Fri, Wed, Thur, Sun","4, 4, 2, 2, 1, 1, 1","Plot how many booking start date by grouped by booking start date as a bar graph, display by the total number from high to low please."
"SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY country ASC",Bar,Extra Hard,flight_4,"{'chart': 'bar', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['Azerbaijan', 'Turkey', 'United States']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY country'}",bar,country,COUNT(country),"Azerbaijan, Turkey, United States","1, 1, 4","Find the number of the country of the airlines whose name starts with 'Orbit', and rank by the bar in asc."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Mon', 'Sat', 'Wed', 'Tue', 'Fri', 'Sun', 'Thur']], 'y_data': [[1744, 1818, 1827, 1833, 1870, 1942, 2090]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Mon, Sat, Wed, Tue, Fri, Sun, Thur","1744, 1818, 1827, 1833, 1870, 1942, 2090","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, order in ascending by the y axis."
"SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id ORDER BY T1.name DESC",Bar,Medium,battle_death,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Siege of Constantinople', 'Battle of Messinopolis', 'Battle of Boruy']], 'y_data': [[8, 5, 6]], 'classify': [], 'describe': ''}",bar,name,id,"Siege of Constantinople, Battle of Messinopolis, Battle of Boruy","8, 5, 6","What are the ids and names of the battles that led to more than 10 people killed in total, and could you order from high to low by the x axis?"
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['parking', 'jungle cruise', 'fun games', 'exploration trial', 'US museum']], 'y_data': [[9919, 8698, 6523, 6852, 6476]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"parking, jungle cruise, fun games, exploration trial, US museum","9919, 8698, 6523, 6852, 6476","Show the names and ids of tourist attractions that are visited at least two times Visualize by bar chart, I want to list in descending by the bars."
"SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(grade)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(grade),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11","Bar chart x axis name y axis total number of grade, display by the bar in desc."
"SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY JOB_TITLE ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'AVG(salary)', 'x_data': [['Accountant', 'Accounting Manager', 'Administration Assistant', 'Administration Vice President', 'Finance Manager', 'Human Resources Representative', 'Marketing Manager', 'Marketing Representative', 'President', 'Programmer', 'Public Accountant', 'Public Relations Representative', 'Purchasing Clerk', 'Purchasing Manager', 'Sales Manager', 'Sales Representative', 'Shipping Clerk', 'Stock Clerk', 'Stock Manager']], 'y_data': [[7920, 12000, 4400, 17000, 12000, 6500, 13000, 6000, 24000, 5760, 8300, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280]], 'classify': [], 'describe': ''}",bar,JOB_TITLE,AVG(salary),"Accountant, Accounting Manager, Administration Assistant, Administration Vice President, Finance Manager, Human Resources Representative, Marketing Manager, Marketing Representative, President, Programmer, Public Accountant, Public Relations Representative, Purchasing Clerk, Purchasing Manager, Sales Manager, Sales Representative, Shipping Clerk, Stock Clerk, Stock Manager","7920, 12000, 4400, 17000, 12000, 6500, 13000, 6000, 24000, 5760, 8300, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280","Display a bar chart for what is the average salary for each job title?, display from low to high by the bars."
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 1, 3]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 1, 3",Count the number of captains younger than 50 of each rank by a bar chart.
"SELECT All_Neutral , School_ID FROM basketball_match ORDER BY All_Neutral DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Neutral,School_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 4, 5","Give me the comparison about School_ID over the All_Neutral , and rank All_Neutral in descending order."
"SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'services', 'y_name': 'COUNT(services)', 'x_data': [['Greater Anglia', 'London Overground', 'London Overground and London Midland', 'Metropolitan line', 'Metropolitan line and Chiltern Railways', 'c2c']], 'y_data': [[3, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY services'}",bar,services,COUNT(services),"Greater Anglia, London Overground, London Overground and London Midland, Metropolitan line, Metropolitan line and Chiltern Railways, c2c","3, 1, 1, 1, 2, 1","Give me a bar chart that the x-axis is the services and the Y is the count(services), and could you show bars from low to high order?"
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, give me the comparison about the average of price over the  name , and group by attribute name by a bar chart."
"SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code",Bar,Extra Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'Type_of_Thing_Code', 'y_name': 'COUNT(Type_of_Thing_Code)', 'x_data': [['Commen', 'Electronics', 'Furniture']], 'y_data': [[4, 3, 1]], 'classify': [], 'describe': 'GROUP BY Type_of_Thing_Code'}",bar,Type_of_Thing_Code,COUNT(Type_of_Thing_Code),"Commen, Electronics, Furniture","4, 3, 1",Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'.
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2310, 2325, 2440, 2456, 2265, 2280, 2295]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2310, 2325, 2440, 2456, 2265, 2280, 2295","For those employees who was hired before 2002-06-21, find  hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart."
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD burner', 'CD drive']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"DVD drive, ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD burner, CD drive","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, could you display by the Y-axis from high to low?"
"SELECT DEPT_CODE , avg(stu_gpa) FROM student GROUP BY dept_code ORDER BY avg(stu_gpa) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'avg(stu_gpa)', 'x_data': [['EDU', 'CIS', 'BIOL', 'ACCT', 'ENGL']], 'y_data': [[3.87, 3.18, 2.84, 2.776666666666667, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,avg(stu_gpa),"EDU, CIS, BIOL, ACCT, ENGL","3.87, 3.18, 2.84, 2.776666666666667, 2.11","Bar chart of mean stu gpa from each dept code, sort in descending by the total number."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[488, 2690, 3790, 4759, 735, 585, 204, 202, 525, 203, 108, 555, 100, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","488, 2690, 3790, 4759, 735, 585, 204, 202, 525, 203, 108, 555, 100, 205, 206","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and rank in desc by the bars."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Thur', 'Sat', 'Wed', 'Fri', 'Mon', 'Tue', 'Sun']], 'y_data': [[46, 58.888888888888886, 60.90909090909091, 67.14285714285714, 67.5, 72, 86.66666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Thur, Sat, Wed, Fri, Mon, Tue, Sun","46, 58.888888888888886, 60.90909090909091, 67.14285714285714, 67.5, 72, 86.66666666666667","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, display by the the average of department id in asc."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Aug', 'June', 'Sept', 'July']], 'y_data': [[260500, 122900, 107800, 82300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Aug, June, Sept, July","260500, 122900, 107800, 82300","Bin the hire date into Month interval, and then calculate the total salary of employees in each month for a bar chart, note that just select those employees without the letter M in their first name, and could you show by the Y-axis in descending please?"
"SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Made', 'y_name': 'COUNT(Date_Claim_Made)', 'x_data': [['2017', '2018', '2016']], 'y_data': [[4, 2, 1]], 'classify': [], 'describe': 'BIN Date_Claim_Made BY YEAR'}",bar,Date_Claim_Made,COUNT(Date_Claim_Made),"2017, 2018, 2016","4, 2, 1","A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and rank from high to low by the y axis."
"SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[45, 43, 38, 38, 51.33333333333334]], 'classify': [], 'describe': ''}",bar,Class,avg(age),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","45, 43, 38, 38, 51.33333333333334","Visualize a bar chart showing the average age of captains in each class, I want to rank in asc by the x axis."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[3, 2, 4, 4, 3, 1, 3]], 'classify': [], 'describe': 'BIN date_of_completion BY WEEKDAY'}",bar,date_of_completion,COUNT(date_of_completion),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","3, 2, 4, 4, 3, 1, 3",Bar chart of how many date of completion from each date of completion
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Grant', 'Hartstein', 'Fay', 'Mavris', 'Baer', 'Higgins', 'Gietz']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Grant, Hartstein, Fay, Mavris, Baer, Higgins, Gietz","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, find  last_name and  commission_pct , and visualize them by a bar chart."
"SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['L', '', 'R', 'U']], 'y_data': [[487, 954, 5028, 14193]], 'classify': [], 'describe': ''}",bar,hand,count(*),"L, , R, U","487, 954, 5028, 14193","Show me a bar chart for how many players are there for each hand type?, could you list by the total number in asc?"
"SELECT Date_of_Birth , Height FROM people ORDER BY Date_of_Birth ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['01.09.1977', '03.02.1976', '05.05.1972', '06.10.1976', '10.03.1976', '10.11.1972', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[196, 200, 202, 188, 195, 197, 193, 194, 196]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"01.09.1977, 03.02.1976, 05.05.1972, 06.10.1976, 10.03.1976, 10.11.1972, 20.08.1970, 22.04.1977, 28.09.1981","196, 200, 202, 188, 195, 197, 193, 194, 196","Bar chart x axis date of birth y axis height, and list by the bar in ascending."
"SELECT Year , COUNT(Year) FROM CARS_DATA  ORDER BY COUNT(Year) ASC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Sun', 'Wed', 'Fri', 'Mon', 'Sat', 'Tue', 'Thur']], 'y_data': [[1, 1, 2, 2, 2, 2, 3]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Sun, Wed, Fri, Mon, Sat, Tue, Thur","1, 1, 2, 2, 2, 2, 3","How many cars each weekday (by bin the year into a day of the week interval)? Show me the bar chart, and sort in asc by the Y."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–3', '15–1', '14–2']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–3, 15–1, 14–2","4, 2, 2","Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort in desc by the total number."
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Kimberely', 'Michael', 'Pat', 'Susan', 'Hermann', 'Shelley', 'William']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"Kimberely, Michael, Pat, Susan, Hermann, Shelley, William","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, I want to sort from low to high by the total number."
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[17, 10]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"T, F","17, 10","A bar chart shows the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, and I want to list by the X from high to low."
"SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'subject_name', 'y_name': 'COUNT(*)', 'x_data': [['Arts', 'Language', 'Computer Science']], 'y_data': [[4, 5, 6]], 'classify': [], 'describe': ''}",bar,subject_name,COUNT(*),"Arts, Language, Computer Science","4, 5, 6","Find the number of courses for each subject in a bar chart, and list by the Y in asc please."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AD_PRES', 'AD_VP', 'MK_MAN', 'PU_MAN', 'SA_MAN', 'ST_MAN', 'AC_MGR', 'AD_ASST', 'FI_MGR', 'PR_REP', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SH_CLERK', 'ST_CLERK', 'SA_REP', 'MK_REP', 'AC_ACCOUNT']], 'y_data': [[0, 100, 100, 100, 100, 100, 101, 101, 101, 101, 102.8, 108, 114, 122, 122, 147, 201, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AD_PRES, AD_VP, MK_MAN, PU_MAN, SA_MAN, ST_MAN, AC_MGR, AD_ASST, FI_MGR, PR_REP, IT_PROG, FI_ACCOUNT, PU_CLERK, SH_CLERK, ST_CLERK, SA_REP, MK_REP, AC_ACCOUNT","0, 100, 100, 100, 100, 100, 101, 101, 101, 101, 102.8, 108, 114, 122, 122, 147, 201, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, could you rank in asc by the Y-axis?"
"SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'ACC_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",bar,All_Neutral,ACC_Percent,"9–1, 5–3, 4–3, 3–3","0.875, 0.813, 0.625, 0.563","A bar chart shows the distribution of All_Neutral and ACC_Percent , and show in desc by the x axis."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[8, 15, 13, 12]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept","8, 15, 13, 12","For all employees who have the letters D or S in their first name, show me about the distribution of  hire_date and the amount of hire_date bin hire_date by time in a bar chart."
"SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY Venue ASC",Bar,Medium,debate,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Abu Dhabi , UAE', 'Doha , Qatar', 'Dubai , UAE', 'Manama , Bahrain']], 'y_data': [[1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"Abu Dhabi , UAE, Doha , Qatar, Dubai , UAE, Manama , Bahrain","1, 1, 1, 3","Bar chart x axis venue y axis how many venue, order in ascending by the x axis."
"SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(Team_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[4, 4, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(Team_ID),"14–2, 14–3, 15–1","4, 4, 2","Visualize a bar chart about the distribution of  All_Home and the sum of Team_ID , and group by attribute All_Home."
"SELECT skill_description , COUNT(skill_description) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ORDER BY skill_description DESC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['TV, Video', 'Mechanical', 'Electrical']], 'y_data': [[5, 6, 9]], 'classify': [], 'describe': 'GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"TV, Video, Mechanical, Electrical","5, 6, 9","Give me a pie chart showing the number of engineers for different skill description, and display skill_description in descending order."
"SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Actual_Delivery_Date) ASC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Actual_Delivery_Date', 'y_name': 'COUNT(Actual_Delivery_Date)', 'x_data': [['Tue', 'Wed', 'Mon', 'Sat', 'Sun', 'Thur', 'Fri']], 'y_data': [[0, 1, 2, 2, 3, 3, 4]], 'classify': [], 'describe': 'BIN Actual_Delivery_Date BY WEEKDAY'}",bar,Actual_Delivery_Date,COUNT(Actual_Delivery_Date),"Tue, Wed, Mon, Sat, Sun, Thur, Fri","0, 1, 2, 2, 3, 3, 4","Show all the actual delivery dates and bin by weekday in a bar chart, could you display how many actual delivery date in ascending order?"
"SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",Bar,Medium,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",Show names of teachers and the number of courses they teach. Visualize by bar chart.
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Michael', 'Sarah', 'Shiela', 'Stacy', 'Tracy']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Michael, Sarah, Shiela, Stacy, Tracy","1, 2, 1, 1, 1",What are the number of the first names of all students in Smith Hall?
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC",Bar,Medium,party_host,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Argentina', 'Hungary', 'United States']], 'y_data': [[1, 1, 8]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Argentina, Hungary, United States","1, 1, 8","Show different nationalities along with the number of hosts of each nationality in a bar chart, and could you list in ascending by the y axis?"
"SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'staff_name', 'y_name': 'count(*)', 'x_data': [['Berneice', 'Bernice', 'Christophe', 'Cyrus', 'Edmond', 'Kadin', 'Oren', 'Rodger']], 'y_data': [[2, 2, 1, 1, 3, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,staff_name,count(*),"Berneice, Bernice, Christophe, Cyrus, Edmond, Kadin, Oren, Rodger","2, 2, 1, 1, 3, 4, 1, 1","Give me a histogram for how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and I want to order from low to high by the bars."
"SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type DESC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'acc_type', 'y_name': 'avg(acc_bal)', 'x_data': [['saving', 'checking']], 'y_data': [[2000, 1000]], 'classify': [], 'describe': ''}",bar,acc_type,avg(acc_bal),"saving, checking","2000, 1000","For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, and display by the bars in desc please."
"SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(*)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[12, 10]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(*),"A&SCI, BUS","12, 10","A bar chart about how many different professors are there for the different schools?, and could you list by the bar from low to high?"
"SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY Directed_by DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'count(*)', 'x_data': [['Jesus Salvador Treviño', 'Bill Schreiner']], 'y_data': [[1, 4]], 'classify': [], 'describe': ''}",bar,Directed_by,count(*),"Jesus Salvador Treviño, Bill Schreiner","1, 4","Plot the total number by grouped by directed by as a bar graph, list from high to low by the X."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['cat', 'dog']], 'y_data': [[12, 11.35]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"cat, dog","12, 11.35",Find the average weight for each pet type. 
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Austin', 'Cassandra', 'Haley', 'Jessica', 'Kyle', 'Logan', 'Tiffany', 'Gabriel', 'Jordan', 'Alexis', 'Kris', 'Andrew']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Austin, Cassandra, Haley, Jessica, Kyle, Logan, Tiffany, Gabriel, Jordan, Alexis, Kris, Andrew","1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 2, 2, 3","A bar chart about what are the names of the high schoolers and how many friends does each have?, show in ascending by the Y."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC",Bar,Medium,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Russia', 'Bulgaria']], 'y_data': [[6, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Russia, Bulgaria","6, 1","What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, and order from high to low by the Y-axis."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7125, 2785, 3215, 8341.379310344828, 12200, 2780, 10000, 6000, 5760, 6500, 12000, 7920, 24000, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","7125, 2785, 3215, 8341.379310344828, 12200, 2780, 10000, 6000, 5760, 6500, 12000, 7920, 24000, 12000, 8300","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to sort by the bar in desc."
"SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY Name DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(revenue)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[30, 120, 200, 50, 130, 100]], 'classify': [], 'describe': ''}",bar,Name,sum(revenue),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","30, 120, 200, 50, 130, 100","Find the total revenue for each manufacturer Plot them as bar chart, and show by the x axis from high to low."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Wed', 'Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri']], 'y_data': [[1010, 930, 910, 900, 890, 860, 830]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Wed, Mon, Sun, Tue, Sat, Thur, Fri","1010, 930, 910, 900, 890, 860, 830","For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and list y axis in desc order."
"SELECT Type , COUNT(*) FROM ship GROUP BY TYPE",Bar,Easy,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[3, 5]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Battle ship, Cargo ship","3, 5","For each type, how many ships are there. Plot them as bar chart."
"SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code",Bar,Easy,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'COUNT(Payment_Method_Code)', 'x_data': [['American Express', 'Discover Card', 'MasterCard', 'Visa']], 'y_data': [[1, 3, 7, 4]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,COUNT(Payment_Method_Code),"American Express, Discover Card, MasterCard, Visa","1, 3, 7, 4",Plot the number of payment method code by grouped by payment method code as a bar graph
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 17000, 7920, 12000, 5760, 13000, 6000, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 17000, 7920, 12000, 5760, 13000, 6000, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  job_id and the average of salary , and group by attribute job_id."
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United Kingdom', 'United States']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United Kingdom, United States","5, 3","Return a bar chart showing the total number of ships' nationalities, and order Nationality in asc order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[106.5, 129, 160, 190.5, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","106.5, 129, 160, 190.5, 206","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of  hire_date and the average of employee_id bin hire_date by time."
"SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name ORDER BY Product_Name DESC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'avg(Product_Price)', 'x_data': [['photo', 'film', 'dinning']], 'y_data': [[5102691.666666667, 11385515.333333336, 238704.33333333328]], 'classify': [], 'describe': ''}",bar,Product_Name,avg(Product_Price),"photo, film, dinning","5102691.666666667, 11385515.333333336, 238704.33333333328","What are the different product names? What is the average product price for each of them Show bar chart, rank by the bar in desc."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['fun shops', 'presidents hall', 'history gallery', 'flying elephant', 'UK gallery']], 'y_data': [[9360, 8429, 6653, 5076, 2701]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"fun shops, presidents hall, history gallery, flying elephant, UK gallery","9360, 8429, 6653, 5076, 2701","Show the names and ids of tourist attractions that are visited at most once, I want to order by the y-axis from high to low."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications']], 'y_data': [[3, 2, 1, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Accounting I, Accounting II, Database Design and Implementation, Intro. to Microcomputing, Intro. to Statistics, Statistical Applications","3, 2, 1, 3, 2, 2","Show the number of courses for each course description in a bar chart, I want to sort x axis from low to high order please."
"SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T1.show_times_per_day)', 'x_data': [['Codling', 'Carrowleagh', 'Gortahile', 'Mount Callan', 'Oriel']], 'y_data': [[10, 5, 4, 5, 5]], 'classify': [], 'describe': ''}",bar,Name,sum(T1.show_times_per_day),"Codling, Carrowleagh, Gortahile, Mount Callan, Oriel","10, 5, 4, 5, 5",What is total number of show times per dat for each cinema. Show bar chart.
"SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY count(*) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Fujits', 'Iomega', 'Sony', 'Winchester', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Fujits, Iomega, Sony, Winchester, Creative Labs, Hewlett-Packard","1, 1, 1, 2, 3, 3","how many products are there for each manufacturer?, and rank in ascending by the Y."
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority",Bar,Easy,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Brentwood', 'Broxbourne', 'Chiltern', 'Three Rivers', 'Thurrock', 'Watford']], 'y_data': [[1, 2, 3, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Brentwood, Broxbourne, Chiltern, Three Rivers, Thurrock, Watford","1, 2, 3, 3, 1, 1",Bar chart of how many local authority from each local authority
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[124.57142857142857, 122.2, 114.1875, 130.625, 124.66666666666667, 121.2, 129.46666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","124.57142857142857, 122.2, 114.1875, 130.625, 124.66666666666667, 121.2, 129.46666666666667","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart."
"SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY All_Road DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'ACC_Percent', 'x_data': [['8–2', '6–5', '4–8', '13–0']], 'y_data': [[0.813, 0.625, 0.563, 0.875]], 'classify': [], 'describe': ''}",bar,All_Road,ACC_Percent,"8–2, 6–5, 4–8, 13–0","0.813, 0.625, 0.563, 0.875","Draw a bar chart about the distribution of All_Road and ACC_Percent , order X from high to low order."
"SELECT Season , COUNT(Season) FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'  ORDER BY COUNT(Season) DESC",Bar,Extra Hard,game_injury,"{'chart': 'bar', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2011', '2008', '2007', '2010', '2009']], 'y_data': [[1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Season BY YEAR'}",bar,Season,COUNT(Season),"2011, 2008, 2007, 2010, 2009","1, 1, 1, 0, 0","How many players having an injury of 'Foot injury' or 'Knee problem' in each season? Draw a bar chart, and could you order from high to low by the Y?"
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Grant', 'Mavris', 'Higgins', 'Hartstein', 'Gietz', 'Fay', 'Baer']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Grant, Mavris, Higgins, Hartstein, Gietz, Fay, Baer","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , and show from high to low by the Y."
"SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY Description ASC",Bar,Medium,aircraft,"{'chart': 'bar', 'x_name': 'Description', 'y_name': 'COUNT(Description)', 'x_data': [['Heavy-lift helicopter', 'Light utility helicopter', 'Tandem rotor helicopter', 'Turboshaft utility helicopter']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Description'}",bar,Description,COUNT(Description),"Heavy-lift helicopter, Light utility helicopter, Tandem rotor helicopter, Turboshaft utility helicopter","2, 1, 1, 1","What are the number of the descriptions for the aircrafts?, sort bar in ascending order."
"SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(Team)', 'x_data': [['Team Orton', 'Team Batista']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Team'}",bar,Team,COUNT(Team),"Team Orton, Team Batista","2, 4","Show the number of teams in elimination in a bar chart, could you sort by the x-axis from high to low?"
"SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'count(*)', 'x_data': [['middle', 'package', 'top']], 'y_data': [[5, 6, 4]], 'classify': [], 'describe': ''}",bar,part_name,count(*),"middle, package, top","5, 6, 4",How many assets can each parts be used in? List the part name and the number with a bar chart.
"SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'COMMISSION_PCT', 'x_data': [['KGRANT', 'MHARTSTE', 'PFAY', 'SMAVRIS', 'HBAER', 'SHIGGINS', 'WGIETZ']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,EMAIL,COMMISSION_PCT,"KGRANT, MHARTSTE, PFAY, SMAVRIS, HBAER, SHIGGINS, WGIETZ","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, find  email and  commission_pct , and visualize them by a bar chart."
"SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination DESC",Bar,Hard,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Tokyo', 'Honolul']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Tokyo, Honolul","1, 2","How many flights with price higher than 300 for each destination city? Return a bar chart, I want to show X-axis from high to low order."
"SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_Details ASC",Bar,Hard,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Event_Details', 'y_name': 'AVG(Event_ID)', 'x_data': [['Fail', 'Success']], 'y_data': [[23.333333333333332, 41.5]], 'classify': [], 'describe': 'GROUP BY Event_Details'}",bar,Event_Details,AVG(Event_ID),"Fail, Success","23.333333333333332, 41.5","Return a bar chart on what are the ids and details of events that have more than one participants?, could you order in ascending by the X?"
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","3, 5","Return a bar chart showing the total number of ships' nationalities, display from low to high by the how many nationality."
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'AVG(organisation_id)', 'x_data': [['a', 'eius', 'itaque', 'officiis', 'quo']], 'y_data': [[9, 2, 9.5, 10, 14]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,AVG(organisation_id),"a, eius, itaque, officiis, quo","9, 2, 9.5, 10, 14","What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort bar from low to high order."
"SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age DESC",Bar,Medium,museum_visit,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Fernando Gago', 'Arjen Robben', 'Rafael van der Vaart']], 'y_data': [[36, 27, 25]], 'classify': [], 'describe': ''}",bar,Name,Age,"Fernando Gago, Arjen Robben, Rafael van der Vaart","36, 27, 25","histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, display y-axis in descending order."
"SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code ORDER BY count(*) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'CIS', 'ENGL', 'EDU', 'BIOL']], 'y_data': [[3, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, CIS, ENGL, EDU, BIOL","3, 2, 1, 1, 1","Return a histogram on how many students are in each department?, and sort in desc by the Y-axis."
"SELECT EMAIL , EMPLOYEE_ID FROM employees ORDER BY EMPLOYEE_ID DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SHIGGINS', 'HBAER', 'SMAVRIS', 'MHARTSTE', 'JWHALEN', 'JRUSSEL', 'AFRIPP', 'DRAPHEAL', 'NGREENBE', 'AHUNOLD', 'SKING']], 'y_data': [[205, 204, 203, 201, 200, 145, 121, 114, 108, 103, 100]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"SHIGGINS, HBAER, SMAVRIS, MHARTSTE, JWHALEN, JRUSSEL, AFRIPP, DRAPHEAL, NGREENBE, AHUNOLD, SKING","205, 204, 203, 201, 200, 145, 121, 114, 108, 103, 100","Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id, and could you order by the Y in desc?"
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 100, 445, 203, 315, 348, 114, 148, 2142, 1706, 1219, 244]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 100, 445, 203, 315, 348, 114, 148, 2142, 1706, 1219, 244","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list in asc by the JOB_ID."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""  ORDER BY COUNT(date_of_completion) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1, 6]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Feb, Mar","1, 6","Return the completion date for all the tests that have ""Fail"" result, and count them by a bar chart, and display Y from low to high order please."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['male', 'female']], 'y_data': [[40, 25.5]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"male, female","40, 25.5","Give me a histogram for how old is each gender, on average?, and show by the Y-axis from high to low."
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","Give the maximum product price for each product type in a bar chart, I want to sort in asc by the total number."
"SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY COUNT(Directed_by) DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'COUNT(Directed_by)', 'x_data': [['Bill Schreiner', 'Jesus Salvador Treviño']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'GROUP BY Directed_by'}",bar,Directed_by,COUNT(Directed_by),"Bill Schreiner, Jesus Salvador Treviño","4, 1","Give me a bar chart showing the number of films for each director, and I want to list total number from high to low order please."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['July', 'Sept', 'Aug', 'June', 'Oct']], 'y_data': [[46.12903225806452, 50.689655172413794, 80, 83.57142857142857, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"July, Sept, Aug, June, Oct","46.12903225806452, 50.689655172413794, 80, 83.57142857142857, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you display in ascending by the y-axis?"
"SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code",Bar,Easy,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'outcome_code', 'y_name': 'count(*)', 'x_data': [['No Response', 'Order']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,outcome_code,count(*),"No Response, Order","5, 10",Show the outcome code of mailshots along with the number of mailshots in each outcome code in a bar chart.
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date",Bar,Hard,performance_attendance,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 2', 'February 5']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",bar,Date,COUNT(Date),"February 11, February 2, February 5","1, 2, 1","A bar chart for showing the number of the dates of performances with attending members whose roles are ""Violin""."
"SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY COUNT(Headquarter) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'COUNT(Headquarter)', 'x_data': [['Los Angeles', 'Austin', 'Paris', 'Tokyo', 'Taiwan', 'Beijing']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,COUNT(Headquarter),"Los Angeles, Austin, Paris, Tokyo, Taiwan, Beijing","3, 3, 2, 1, 1, 1","For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter, and could you order in descending by the Y please?"
"SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY Product_Name ASC",Bar,Hard,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'COUNT(*)', 'x_data': [['Conference Equipments', 'Dinning', 'Men suits', 'Special Dinning', 'TV Equipments', 'Trading Policy', 'Trading Policy B']], 'y_data': [[1, 1, 2, 4, 5, 1, 1]], 'classify': [], 'describe': ''}",bar,Product_Name,COUNT(*),"Conference Equipments, Dinning, Men suits, Special Dinning, TV Equipments, Trading Policy, Trading Policy B","1, 1, 2, 4, 5, 1, 1","Show the names of products and the number of events they are in by a bar chart, and sort by the X in asc."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'PR_REP', 'HR_REP', 'MK_REP', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'ST_CLERK', 'ST_MAN', 'PU_CLERK', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'AD_PRES']], 'y_data': [[206, 205, 204, 203, 202, 189.5, 164.10344827586206, 147, 134.5, 122, 117, 111, 108, 105, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, PR_REP, HR_REP, MK_REP, SH_CLERK, SA_REP, SA_MAN, ST_CLERK, ST_MAN, PU_CLERK, FI_ACCOUNT, FI_MGR, IT_PROG, AD_PRES","206, 205, 204, 203, 202, 189.5, 164.10344827586206, 147, 134.5, 122, 117, 111, 108, 105, 100","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, sort the average of employee id in desc order."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail"" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-02-26', '2018-03-02', '2018-03-04', '2018-03-06', '2018-03-07', '2018-03-22']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",bar,date_of_completion,COUNT(date_of_completion),"2018-02-26, 2018-03-02, 2018-03-04, 2018-03-06, 2018-03-07, 2018-03-22","1, 1, 1, 1, 1, 2","A bar chart for returning the number of the completion date for all the tests that have ""Fail"" result, and rank from low to high by the the number of date of completion."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AD_PRES', 'PU_MAN', 'SA_MAN', 'AC_MGR', 'HR_REP', 'ST_MAN', 'IT_PROG', 'PU_CLERK', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[0, 100, 100, 101, 101, 200, 308, 342, 432, 1098, 1100, 1911]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AD_PRES, PU_MAN, SA_MAN, AC_MGR, HR_REP, ST_MAN, IT_PROG, PU_CLERK, FI_ACCOUNT, SH_CLERK, ST_CLERK, SA_REP","0, 100, 100, 101, 101, 200, 308, 342, 432, 1098, 1100, 1911","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you rank total number of manager id in ascending order please?"
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name ASC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Abu Dhabi Grand Prix', 'Australian Grand Prix', 'Bahrain Grand Prix', 'Belgian Grand Prix', 'Brazilian Grand Prix', 'British Grand Prix', 'Canadian Grand Prix', 'Chinese Grand Prix', 'European Grand Prix', 'German Grand Prix', 'Hungarian Grand Prix', 'Indian Grand Prix', 'Italian Grand Prix', 'Japanese Grand Prix', 'Korean Grand Prix', 'Malaysian Grand Prix', 'Monaco Grand Prix', 'Singapore Grand Prix', 'Spanish Grand Prix', 'Turkish Grand Prix']], 'y_data': [[3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Abu Dhabi Grand Prix, Australian Grand Prix, Bahrain Grand Prix, Belgian Grand Prix, Brazilian Grand Prix, British Grand Prix, Canadian Grand Prix, Chinese Grand Prix, European Grand Prix, German Grand Prix, Hungarian Grand Prix, Indian Grand Prix, Italian Grand Prix, Japanese Grand Prix, Korean Grand Prix, Malaysian Grand Prix, Monaco Grand Prix, Singapore Grand Prix, Spanish Grand Prix, Turkish Grand Prix","3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3","What are the names of all races held between 2009 and 2011, and count them by a bar chart, and list from low to high by the names."
"SELECT PetType , max(pet_age) FROM pets GROUP BY PetType",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,PetType,max(pet_age),"cat, dog","3, 2",Find the maximum age for each type of pet. Return the result with a bar chart.
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos",Bar,Easy,soccer_2,"{'chart': 'bar', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['goalie', 'mid', 'striker']], 'y_data': [[1200, 300, 1600]], 'classify': [], 'describe': ''}",bar,pPos,min(T2.HS),"goalie, mid, striker","1200, 300, 1600",What is minimum hours of the students playing in different position. Plot them as bar chart.
"SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'max(revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[100, 200, 50, 30, 130, 120]], 'classify': [], 'describe': ''}",bar,Headquarter,max(revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","100, 200, 50, 30, 130, 120",Give me a bar chart to show the revenue of the company that earns the highest revenue in each headquarter city.
"SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Evangeline', 'Kacey', 'Lyric']], 'y_data': [[1, 6, 4]], 'classify': [], 'describe': ''}",bar,name,age,"Evangeline, Kacey, Lyric","1, 6, 4","List the dog name and age of the dogs who have been abandoned in a bar chart, rank by the X-axis in asc."
"SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SALARY', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7000, 10000, 6000, 13000, 6500, 12000, 8300]], 'classify': [], 'describe': ''}",bar,JOB_ID,SALARY,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","7000, 10000, 6000, 13000, 6500, 12000, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , and order by the X in descending."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Sat', 'Fri', 'Sun', 'Tue', 'Mon', 'Wed', 'Thur']], 'y_data': [[148.5, 151, 153, 153.5, 154, 155.06666666666666, 159.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Sat, Fri, Sun, Tue, Mon, Wed, Thur","148.5, 151, 153, 153.5, 154, 155.06666666666666, 159.5","For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday, and show in ascending by the y axis."
"SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = ""Awarded"" GROUP BY Category ORDER BY COUNT(Category) DESC",Bar,Hard,music_4,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'COUNT(Category)', 'x_data': [['Best Song', 'Best Sound Song']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Category'}",bar,Category,COUNT(Category),"Best Song, Best Sound Song","2, 1","A bar chart for returning the number of the categories of music festivals that have the result ""Awarded"", and I want to rank y-axis in desc order please."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['pl', 'db', 'ml', 'dl', 'nlp', 'cal', 'la', 'fr', 'en', 'math', 'ds']], 'y_data': [[14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"pl, db, ml, dl, nlp, cal, la, fr, en, math, ds","14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1","Display a bar chart for what are the names and id of courses having at most 2 sections?, display Y-axis from high to low order."
"SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY Statement_Details DESC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Statement_Details', 'y_name': 'SUM(Account_Details)', 'x_data': [['Private Project', 'Open Project']], 'y_data': [[21335, 20316]], 'classify': [], 'describe': 'GROUP BY Statement_Details'}",bar,Statement_Details,SUM(Account_Details),"Private Project, Open Project","21335, 20316","Show the sum of account details for different statement details in a bar chart, and I want to list by the bar in desc."
"SELECT cName , min(enr) FROM college GROUP BY state",Bar,Easy,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['ASU', 'FSU', 'LSU', 'OU']], 'y_data': [[12000, 19000, 18000, 22000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"ASU, FSU, LSU, OU","12000, 19000, 18000, 22000",What is the name of the school that has the smallest enrollment in each state?
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC",Bar,Extra Hard,products_gen_characteristics,"{'chart': 'bar', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Seeds', 'Herbs', 'Spices']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",bar,product_category_description,COUNT(product_category_description),"Seeds, Herbs, Spices","3, 2, 1","What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, display by the total number in desc."
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[10, 17]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"F, T","10, 17","Return a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, list from low to high by the Y please."
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm",Bar,Easy,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Commonwealth of the US', 'Constitutional Monarchy (Emirate)', 'Constitutional Monarchy, Federation', 'Dependent Territory of the UK', 'Emirate Federation', 'Federation', 'Monarchy (Emirate)', 'Monarchy (Sultanate)', 'Nonmetropolitan Territory of France', 'Nonmetropolitan Territory of The Netherlands', 'Overseas Department of France', 'Parliamentary Coprincipality', 'Part of Denmark', 'Socialistic Republic', 'Socialistic State', 'Special Administrative Region of China', 'US Territory']], 'y_data': [[3947000, 1972000, 82516000, 193050, 2441000, 7160400, 617000, 2870000, 464000, 320000, 1731000, 78000, 99000, 115072000, 5605000, 7255000, 329000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Commonwealth of the US, Constitutional Monarchy (Emirate), Constitutional Monarchy, Federation, Dependent Territory of the UK, Emirate Federation, Federation, Monarchy (Emirate), Monarchy (Sultanate), Nonmetropolitan Territory of France, Nonmetropolitan Territory of The Netherlands, Overseas Department of France, Parliamentary Coprincipality, Part of Denmark, Socialistic Republic, Socialistic State, Special Administrative Region of China, US Territory","3947000, 1972000, 82516000, 193050, 2441000, 7160400, 617000, 2870000, 464000, 320000, 1731000, 78000, 99000, 115072000, 5605000, 7255000, 329000",Find the government form name and total population for each government form whose average life expectancy is longer than 72. 
"SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats ASC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'formats', 'y_name': 'count(*)', 'x_data': [['mp3', 'mp4']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",bar,formats,count(*),"mp3, mp4","2, 4","How many songs were released for each format Show bar chart, and order by the formats from low to high."
"SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[4, 1, 2, 3]], 'classify': [], 'describe': ''}",bar,Team_Name,Team_ID,"Virginia Tech, North Carolina, Duke, Clemson","4, 1, 2, 3","Visualize a bar chart about the distribution of Team_Name and Team_ID , and list X-axis in descending order."
"SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY COUNT(result) DESC",Bar,Hard,battle_death,"{'chart': 'bar', 'x_name': 'result', 'y_name': 'COUNT(result)', 'x_data': [['Bulgarian victory', 'Two Year Truce']], 'y_data': [[5, 1]], 'classify': [], 'describe': 'GROUP BY result'}",bar,result,COUNT(result),"Bulgarian victory, Two Year Truce","5, 1","Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril', and I want to order by the the number of result from high to low."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender"" ORDER BY Draft_Class DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['2009 MLS SuperDraft', '2008 MLS SuperDraft', '2006 MLS SuperDraft', '2005 MLS SuperDraft', '2000 MLS SuperDraft', '1999 MLS College Draft', '1996 MLS Inaugural Player Draft']], 'y_data': [[3, 4, 37, 9, 4, 5, 87]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"2009 MLS SuperDraft, 2008 MLS SuperDraft, 2006 MLS SuperDraft, 2005 MLS SuperDraft, 2000 MLS SuperDraft, 1999 MLS College Draft, 1996 MLS Inaugural Player Draft","3, 4, 37, 9, 4, 5, 87","Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list by the Draft_Class from high to low."
"SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(other_account_details) DESC",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'other_account_details', 'y_name': 'COUNT(other_account_details)', 'x_data': [['Regular', 'VIP']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY other_account_details'}",bar,other_account_details,COUNT(other_account_details),"Regular, VIP","8, 7","Show the number of accounts in a bar chart that groups by other account details, and order total number in descending order."
"SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = ""F"" GROUP BY LName ORDER BY Age DESC",Bar,Hard,college_3,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Apap', 'Cheng', 'Jones', 'Kim', 'Lee', 'Nelson', 'Prater', 'Schmidt', 'Smith']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Apap, Cheng, Jones, Kim, Lee, Nelson, Prater, Schmidt, Smith","1, 1, 1, 1, 1, 1, 1, 1, 2","Find the last name of female (sex is F) students in the descending order of age, and count them by a bar chart"
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name ORDER BY name DESC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Toyota', 'Honda']], 'y_data': [[95, 45]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Toyota, Honda","95, 45","What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and order by the names in descending please."
"SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Manufacturer) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Robert', 'James', 'Owen', 'John', 'Mary', 'Andy']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Manufacturer),"Robert, James, Owen, John, Mary, Andy","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and display by the y-axis from high to low."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[5740, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","5740, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667","For those employees who was hired before 2002-06-21, give me the comparison about the average of salary over the  hire_date bin hire_date by weekday."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC",Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['2018', '2017']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'BIN active_from_date BY YEAR'}",bar,active_from_date,COUNT(active_from_date),"2018, 2017","1, 3","Find the number of customers that use email as the contact channel for each year Visualize with a bar chart, and order in ascending by the y axis."
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There ASC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'How_to_Get_There', 'y_name': 'COUNT(*)', 'x_data': [['bus', 'shuttle', 'walk']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",bar,How_to_Get_There,COUNT(*),"bus, shuttle, walk","6, 4, 5","List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart, and sort names in asc order please."
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['MasterCard', 'Visa', 'American E']], 'y_data': [[6, 5, 4]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"MasterCard, Visa, American E","6, 5, 4","Give me a bar chart for the total number of each payment method code, and show in descending by the Y-axis."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2, 4, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–2, 14–3, 15–1","2, 4, 2",Give me a bar chart for mean team id of each all home
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Research Patent', 'Published Research Paper']], 'y_data': [[5, 10]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Research Patent, Published Research Paper","5, 10","What are the number of the descriptions of all the project outcomes?, I want to rank y axis in ascending order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""  ORDER BY COUNT(date_of_enrolment) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Aug', 'Nov', 'Oct', 'Sept']], 'y_data': [[1, 1, 3, 3]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Aug, Nov, Oct, Sept","1, 1, 3, 3","What are the number of the enrollment dates of all the tests that have result ""Pass""?, list in asc by the y axis."
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","1, 1, 2, 1, 1, 1, 1, 1, 1, 1","For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, and list by the Name from low to high."
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description",Bar,Extra Hard,products_gen_characteristics,"{'chart': 'bar', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Herbs', 'Seeds', 'Spices']], 'y_data': [[2, 3, 1]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",bar,product_category_description,COUNT(product_category_description),"Herbs, Seeds, Spices","2, 3, 1","What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart"
"SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'count(*)', 'x_data': [['GV', 'SF', 'ORG']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': ''}",bar,Budget_Type_Code,count(*),"GV, SF, ORG","6, 2, 2","Show budget type codes and the number of documents in each budget type Show bar chart, and I want to list by the total number in desc please."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[6500, 10000, 13800, 12000, 4400, 12000, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","6500, 10000, 13800, 12000, 4400, 12000, 0",Plot the average of salary by grouped by hire date as a bar graph
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[165, 42, 147, 120, 102]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(stu_hrs),"ACCT, BIOL, CIS, EDU, ENGL","165, 42, 147, 120, 102",Create a bar chart showing total number of stu hrs across dept code
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Robert', 'James', 'Owen', 'John', 'Mary', 'Andy']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Robert, James, Owen, John, Mary, Andy","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and could you rank from high to low by the sum code?"
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications']], 'y_data': [[3, 2, 1, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Accounting I, Accounting II, Database Design and Implementation, Intro. to Microcomputing, Intro. to Statistics, Statistical Applications","3, 2, 1, 3, 2, 2","How many courses for each course description? Show me a bar chart, list names in ascending order."
"SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['William', 'Susan', 'Shelley', 'Pat', 'Michael', 'Kimberely', 'Hermann']], 'y_data': [[0, 0, 0, 0, 0, 0.15, 0]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,COMMISSION_PCT,"William, Susan, Shelley, Pat, Michael, Kimberely, Hermann","0, 0, 0, 0, 0, 0.15, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , and list in descending by the bar please."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['fun shops', 'presidents hall', 'history gallery', 'flying elephant', 'UK gallery']], 'y_data': [[9360, 8429, 6653, 5076, 2701]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"fun shops, presidents hall, history gallery, flying elephant, UK gallery","9360, 8429, 6653, 5076, 2701","What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, rank by the Y-axis in descending."
"SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC",Bar,Medium,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(Record_Company)', 'x_data': [['Columbia Masterworks', 'Decca Records', 'Delos Records', 'Deutsche Grammophon', 'EMI', 'Koch Records / Naxos Records', 'Kultur', 'Mercury Records', 'Philips', 'Philips Classics Records', 'RCA']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Record_Company'}",bar,Record_Company,COUNT(Record_Company),"Columbia Masterworks, Decca Records, Delos Records, Deutsche Grammophon, EMI, Koch Records / Naxos Records, Kultur, Mercury Records, Philips, Philips Classics Records, RCA","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Return the record companies of orchestras, sorted descending by the years in which they were founded, and count them by a bar chart"
"SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Price)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[240, 240, 125, 486, 150, 450]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Price),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","240, 240, 125, 486, 150, 450","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of price , and group by attribute headquarter, and order in descending by the bars."
"SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 172309, 0, 0, 233375, 155654]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY WEEKDAY'}",bar,Date_Payment_Made,AVG(Amount_Payment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 172309, 0, 0, 233375, 155654",Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart.
"SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC",Bar,Medium,tvshow,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'count(*)', 'x_data': [['English', 'Italian']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",bar,Language,count(*),"English, Italian","3, 12","For each language, list the number of TV Channels that use it Plot them as bar chart, I want to order from low to high by the y axis."
"SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'network_name', 'y_name': 'count(*)', 'x_data': [['Amersham', 'Bushey', 'Brentwood', 'Broxbourne', 'Carpenders Park', 'Chafford Hundred', 'Chalfont & Latimer', 'Chesham', 'Cheshunt']], 'y_data': [[3, 2, 2, 2, 2, 1, 2, 3, 1]], 'classify': [], 'describe': ''}",bar,network_name,count(*),"Amersham, Bushey, Brentwood, Broxbourne, Carpenders Park, Chafford Hundred, Chalfont & Latimer, Chesham, Cheshunt","3, 2, 2, 2, 2, 1, 2, 3, 1",Visualize a bar chart for the number of trains for each station by the station network name
"SELECT Hometown , Age FROM teacher ORDER BY Age DESC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Kearsley Urban District', 'Little Lever Urban District', 'Turton Urban District', 'Horwich Urban District', 'Blackrod Urban District', 'Bolton County Borough', 'Farnworth Municipal Borough']], 'y_data': [[45, 41, 39, 33, 32, 29, 26]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Kearsley Urban District, Little Lever Urban District, Turton Urban District, Horwich Urban District, Blackrod Urban District, Bolton County Borough, Farnworth Municipal Borough","45, 41, 39, 33, 32, 29, 26","A bar chart about what is the age and hometown of every teacher?, show y-axis in desc order."
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype ORDER BY AllergyType ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","8, 23, 28","Show all allergy type with number of students affected Visualize by bar chart, display bars in ascending order."
"SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['YYZ', 'WAS', 'SFO', 'ROC', 'PIT', 'PHL', 'PEK', 'NYC', 'NAR', 'LOS', 'LON', 'HOU', 'HKG', 'DET', 'DAL', 'CHI', 'BOS', 'BAL', 'ATL']], 'y_data': [[22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"YYZ, WAS, SFO, ROC, PIT, PHL, PEK, NYC, NAR, LOS, LON, HOU, HKG, DET, DAL, CHI, BOS, BAL, ATL","22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20","Bar chart of mean age from each city code, could you display bars from high to low order?"
"SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25, 35, 45]], 'classify': [], 'describe': ''}",bar,job,min(age),"student, engineer, doctor","25, 35, 45","How old is the youngest person for each job Visualize by bar chart, I want to sort by the total number in ascending please."
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 5, 4, 2, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Andy, James, John, Mary, Owen, Robert","1, 3, 5, 4, 2, 6","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, rank by the bars in asc."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Printer', 'Monitor', 'Hard drive', 'DVD burner', 'DVD drive', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[270, 240, 240, 180, 165, 150, 120, 90, 66, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Printer, Monitor, Hard drive, DVD burner, DVD drive, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","270, 240, 240, 180, 165, 150, 120, 90, 66, 5","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, display total number in descending order."
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[150, 150, 162, 62.5, 240, 240]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","150, 150, 162, 62.5, 240, 240","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of price , and group by attribute headquarter, and I want to order X-axis in asc order."
"SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[12, 3, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_departed BY WEEKDAY'}",bar,date_departed,COUNT(date_departed),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","12, 3, 0, 0, 0, 0, 0","Create a bar chart showing the number of date departed across date departed, and sort in descending by the total number."
"SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Name ASC",Bar,Medium,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Number_Deaths', 'x_data': [['9 cyclones', 'Five', 'Four', 'Six', 'Three', 'Two']], 'y_data': [[71, 3, 7, 2, 52, 7]], 'classify': [], 'describe': ''}",bar,Name,Number_Deaths,"9 cyclones, Five, Four, Six, Three, Two","71, 3, 7, 2, 52, 7","For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, and order by the x-axis from low to high please."
"SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY T2.Ranking",Bar,Hard,phone_market,"{'chart': 'bar', 'x_name': 'District', 'y_name': 'COUNT(District)', 'x_data': [['Alberta', 'British Columbia', 'Ontario', 'Quebec']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY District'}",bar,District,COUNT(District),"Alberta, British Columbia, Ontario, Quebec","2, 2, 1, 1","Give me a bar chart to visualize the number of the districts of markets they are on, in ascending order of the ranking of the market."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[124400, 108200, 97400, 94800, 94300, 86200, 86100]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","124400, 108200, 97400, 94800, 94300, 86200, 86100","For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, I want to display in desc by the total number."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""  ORDER BY COUNT(date_of_completion) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1, 6]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Feb, Mar","1, 6","A bar chart for what are the number of the completion dates of all the tests that have result ""Fail""?, and I want to sort in ascending by the y-axis."
"SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_latest_logon', 'y_name': 'COUNT(date_of_latest_logon)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 2, 0]], 'classify': [], 'describe': 'BIN date_of_latest_logon BY WEEKDAY'}",bar,date_of_latest_logon,COUNT(date_of_latest_logon),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 0, 2, 0","What are the number of the dates of the latest logon of the students with family name ""Jaskolski"" or ""Langosh""?"
"SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id",Bar,Hard,shop_membership,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Alexandre', 'Popert', 'Zytogorski', 'Cochrane', 'Taverner', 'Brooke Greville']], 'y_data': [[3, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Alexandre, Popert, Zytogorski, Cochrane, Taverner, Brooke Greville","3, 1, 1, 1, 1, 1",Show all branch names with the number of members in each branch registered after 2015. Plot them as bar chart.
"SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Price)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[240, 486, 240, 150, 450, 125]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Price),"Andy, James, John, Mary, Owen, Robert","240, 486, 240, 150, 450, 125","For those records from the products and each product's manufacturer, show me about the distribution of  founder and the sum of price , and group by attribute founder in a bar chart."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 17, 4, 1, 2, 5, 8, 9, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 17, 4, 1, 2, 5, 8, 9, 3","For those records from the products and each product's manufacturer, show me about the distribution of  name and the sum of code , and group by attribute name in a bar chart."
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code",Bar,Easy,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['American E', 'MasterCard', 'Visa']], 'y_data': [[4, 6, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"American E, MasterCard, Visa","4, 6, 5",Show all payment method codes and the number of orders for each code in a bar chart.
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['9–7', '10–6', '13–3', '14–2']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"9–7, 10–6, 13–3, 14–2","0.6, 0.706, 0.8240000000000001, 0.946","Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, rank All_Games_Percent from low to high order."
"SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = ""Male""  ORDER BY COUNT(date_of_birth) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['Mon', 'Sun', 'Thur', 'Wed', 'Fri', 'Sat', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 1]], 'classify': [], 'describe': 'BIN date_of_birth BY WEEKDAY'}",bar,date_of_birth,COUNT(date_of_birth),"Mon, Sun, Thur, Wed, Fri, Sat, Tue","0, 0, 0, 0, 1, 1, 1","What are dates of birth of all the guests whose gender is ""Male"", and count them by a bar chart, sort in ascending by the total number please."
"SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['21–14', '24–10', '28–6', '35–2']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Games,All_Games_Percent,"21–14, 24–10, 28–6, 35–2","0.6, 0.706, 0.8240000000000001, 0.946","A bar chart shows the distribution of All_Games and All_Games_Percent , list in asc by the All_Games_Percent."
"SELECT Sex , avg(weight) FROM people GROUP BY sex ORDER BY avg(weight) DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.7142857142857]], 'classify': [], 'describe': ''}",bar,Sex,avg(weight),"F, M","92, 86.7142857142857","What is the averag weights for people of each sex? Show a bar chart, I want to order from high to low by the y-axis."
"SELECT name , distance FROM Aircraft ORDER BY distance ASC",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Schwitzer 2-33', 'Piper Archer III', 'British Aerospace Jetstream 41', 'Boeing 727', 'Embraer ERJ-145', 'Airbus A319', 'SAAB 340', 'Airbus A320', 'Boeing 737-800', 'Boeing 757-300', 'Tupolev 154', 'Boeing 777-300', 'Boeing 767-400ER', 'Lockheed L1011', 'Airbus A340-300', 'Boeing 747-400']], 'y_data': [[30, 520, 1502, 1504, 1530, 1805, 2128, 2605, 3383, 4010, 4103, 6441, 6475, 6900, 7120, 8430]], 'classify': [], 'describe': ''}",bar,name,distance,"Schwitzer 2-33, Piper Archer III, British Aerospace Jetstream 41, Boeing 727, Embraer ERJ-145, Airbus A319, SAAB 340, Airbus A320, Boeing 737-800, Boeing 757-300, Tupolev 154, Boeing 777-300, Boeing 767-400ER, Lockheed L1011, Airbus A340-300, Boeing 747-400","30, 520, 1502, 1504, 1530, 1805, 2128, 2605, 3383, 4010, 4103, 6441, 6475, 6900, 7120, 8430","Show me distance by name in a histogram, and list from low to high by the Y please."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['cat', 'dog']], 'y_data': [[12, 11.35]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"cat, dog","12, 11.35","what is the average weight for each type of pet?, and display by the PetType from low to high."
"SELECT Sex , AVG(Height) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Height)', 'x_data': [['F', 'M']], 'y_data': [[197.5, 195.14285714285714]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Height),"F, M","197.5, 195.14285714285714","Visualize a bar chart about the distribution of  Sex and the average of Height , and group by attribute Sex."
"SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor DESC",Bar,Medium,entrepreneur,"{'chart': 'bar', 'x_name': 'Investor', 'y_name': 'COUNT(*)', 'x_data': [['Simon Woodroffe', 'Rachel Elnaugh', 'Peter Jones', 'Duncan Bannatyne', 'Doug Richard']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Investor,COUNT(*),"Simon Woodroffe, Rachel Elnaugh, Peter Jones, Duncan Bannatyne, Doug Richard","1, 1, 1, 2, 1","how many entrepreneurs correspond to each investor?, show from high to low by the bars please."
"SELECT STU_FNAME , COUNT(STU_FNAME) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'COUNT(STU_FNAME)', 'x_data': [['John', 'Juliette', 'William']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,COUNT(STU_FNAME),"John, Juliette, William","2, 1, 1",Find the number of students whose gpa is lower than the average gpa of all students for different first name in a bar chart.
"SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) ASC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Builder', 'y_name': 'COUNT(*)', 'x_data': [['Avonside', 'GER Hartford', 'GER Stratford', 'GNR Doncaster', 'MR Derby', 'SECR Ashford', 'Stephenson', 'Swindon Works', 'GWR Swindon']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Builder,COUNT(*),"Avonside, GER Hartford, GER Stratford, GNR Doncaster, MR Derby, SECR Ashford, Stephenson, Swindon Works, GWR Swindon","1, 1, 1, 1, 1, 1, 1, 1, 2","Create a bar chart showing the total number across builder, and I want to show Y from low to high order."
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee ORDER BY Nominee DESC",Bar,Extra Hard,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Cleavant Derricks', 'Bob Fosse']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY Nominee'}",bar,Nominee,COUNT(Nominee),"Cleavant Derricks, Bob Fosse","1, 3","A bar chart for showing the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks"", and display x-axis in desc order."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[50, 50, 50, 77.33333333333333, 80, 30, 30, 70, 20, 20, 60, 40, 100, 100, 90, 90, 10, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","50, 50, 50, 77.33333333333333, 80, 30, 30, 70, 20, 20, 60, 40, 100, 100, 90, 90, 10, 110, 110","For those employees who was hired before 2002-06-21, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, I want to order by the X-axis from high to low."
"SELECT year , count(*) FROM matches GROUP BY YEAR",Bar,Easy,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2013-01-01', '2016-01-01', '2017-01-01']], 'y_data': [[12, 158, 108]], 'classify': [], 'describe': ''}",bar,year,count(*),"2013-01-01, 2016-01-01, 2017-01-01","12, 158, 108",How many matches were played in each year. 
"SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY apt_type_code ASC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_type_code', 'y_name': 'min(room_count)', 'x_data': [['Duplex', 'Flat', 'Studio']], 'y_data': [[3, 3, 6]], 'classify': [], 'describe': ''}",bar,apt_type_code,min(room_count),"Duplex, Flat, Studio","3, 3, 6","Show the minimum room count of apartments in different type with a bar chart, display by the bars in ascending."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Wed', 'Thur', 'Mon', 'Tue', 'Sun', 'Sat', 'Fri']], 'y_data': [[2, 2, 2, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Wed, Thur, Mon, Tue, Sun, Sat, Fri","2, 2, 2, 1, 1, 0, 0","A bar chart for what are the number of the enrollment dates of all the tests that have result ""Pass""?, I want to show by the the number of date of enrolment in descending."
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) DESC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Gym', 'Cable TV']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Gym, Cable TV","2, 1","A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?, and list Y in descending order."
"SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY DEPT_CODE DESC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'max(stu_gpa)', 'x_data': [['ENGL', 'EDU', 'CIS', 'BIOL', 'ACCT']], 'y_data': [[2.11, 3.87, 3.27, 2.84, 3.15]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,max(stu_gpa),"ENGL, EDU, CIS, BIOL, ACCT","2.11, 3.87, 3.27, 2.84, 3.15","Find the max gpa of all students in each department with a bar chart, and sort in desc by the bar please."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY Name DESC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Tony Sewell', 'John Brown', 'Joe Sewell', 'Eddie Collins', 'Charlie Hollocher']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Tony Sewell, John Brown, Joe Sewell, Eddie Collins, Charlie Hollocher","1, 1, 5, 1, 1","Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and sort by the X-axis in descending."
"SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY avg(Weight) DESC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[9051, 6474, 6234, 5413, 5313, 3176, 2861]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,avg(Weight),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","9051, 6474, 6234, 5413, 5313, 3176, 2861","Plot total number of avg weight by binning by year as a bar graph, and order in desc by the y-axis."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Anne', 'Annelise', 'Arnelle', 'Carlos', 'Doreen', 'George', 'Gerald', 'Herman', 'Hermine', 'Ismael', 'James', 'Melanie', 'Peter', 'Preston', 'Ralph', 'Robert', 'Ronald', 'Ross', 'Van', 'Willa']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Anne, Annelise, Arnelle, Carlos, Doreen, George, Gerald, Herman, Hermine, Ismael, James, Melanie, Peter, Preston, Ralph, Robert, Ronald, Ross, Van, Willa","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1","Find the number of professors for each first name with a bar chart, sort by the bars in asc."
"SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Revenue)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[120, 50, 130, 200, 100, 30]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Revenue),"Andy, James, John, Mary, Owen, Robert","120, 50, 130, 200, 100, 30","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, show by the names from low to high."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[125, 240, 150, 486, 240, 450]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","125, 240, 150, 486, 240, 450","For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, sort X-axis from high to low order."
"SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Price)', 'x_data': [['John', 'Andy', 'James', 'Owen', 'Mary', 'Robert']], 'y_data': [[240, 240, 162, 150, 150, 62.5]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Price),"John, Andy, James, Owen, Mary, Robert","240, 240, 162, 150, 150, 62.5","For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of price , and group by attribute founder in a bar chart, and show Y-axis in desc order."
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[6, 3, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_departed BY WEEKDAY'}",bar,date_departed,COUNT(date_departed),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","6, 3, 0, 0, 0, 0, 0","How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday, list in desc by the y axis."
"SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY COUNT(*) ASC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero', 'Anne Walker']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero, Anne Walker","1, 1, 1, 1, 2","Show me a bar chart for what are the names of the teachers and how many courses do they teach?, rank in ascending by the Y."
"SELECT hand , count(*) FROM players GROUP BY hand",Bar,Easy,wta_1,"{'chart': 'bar', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['', 'L', 'R', 'U']], 'y_data': [[954, 487, 5028, 14193]], 'classify': [], 'describe': ''}",bar,hand,count(*),", L, R, U","954, 487, 5028, 14193",How many players are there for each hand type. Visualize by bar chart.
"SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result ORDER BY result ASC",Bar,Hard,battle_death,"{'chart': 'bar', 'x_name': 'result', 'y_name': 'COUNT(result)', 'x_data': [['Bulgarian victory', 'Two Year Truce']], 'y_data': [[5, 1]], 'classify': [], 'describe': 'GROUP BY result'}",bar,result,COUNT(result),"Bulgarian victory, Two Year Truce","5, 1","Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril', and I want to rank by the bars in asc."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Bob Fosse, Cleavant Derricks","5, 2","Bar chart x axis nominee y axis the total number, and rank in descending by the total number."
"SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name DESC",Bar,Hard,twitter_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Tyler Swift', 'Susan', 'Iron Man', 'Celine Dion', 'Black Widow\n']], 'y_data': [[1, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,name,count(*),"Tyler Swift, Susan, Iron Man, Celine Dion, Black Widow
","1, 2, 2, 2, 1","Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and rank in descending by the x-axis."
"SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id DESC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'student_id', 'x_data': [['Ursula', 'Camilla', 'Karley', 'Kolby', 'Vicente', 'Kailey', 'Asa', 'Casimir', 'Brandt', 'Luella']], 'y_data': [[14, 13, 12, 11, 10, 9, 6, 4, 3, 2]], 'classify': [], 'describe': ''}",bar,middle_name,student_id,"Ursula, Camilla, Karley, Kolby, Vicente, Kailey, Asa, Casimir, Brandt, Luella","14, 13, 12, 11, 10, 9, 6, 4, 3, 2","A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and display in desc by the Y."
"SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.71428571428571]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Weight),"F, M","92, 86.71428571428571","Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, show names in ascending order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[15, 14, 15, 14, 13, 14, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","15, 14, 15, 14, 13, 14, 15","For those employees who did not have any job in the past, return a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by weekday."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[125, 240, 150, 486, 240, 450]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","125, 240, 150, 486, 240, 450","For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, and rank in desc by the bars."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Joe Sewell', 'Tony Sewell', 'John Brown', 'Eddie Collins', 'Charlie Hollocher']], 'y_data': [[5, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Joe Sewell, Tony Sewell, John Brown, Eddie Collins, Charlie Hollocher","5, 1, 1, 1, 1","Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, and display by the the total number in desc."
"SELECT name , distance FROM Aircraft ORDER BY name ASC",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Airbus A319', 'Airbus A320', 'Airbus A340-300', 'Boeing 727', 'Boeing 737-800', 'Boeing 747-400', 'Boeing 757-300', 'Boeing 767-400ER', 'Boeing 777-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145', 'Lockheed L1011', 'Piper Archer III', 'SAAB 340', 'Schwitzer 2-33', 'Tupolev 154']], 'y_data': [[1805, 2605, 7120, 1504, 3383, 8430, 4010, 6475, 6441, 1502, 1530, 6900, 520, 2128, 30, 4103]], 'classify': [], 'describe': ''}",bar,name,distance,"Airbus A319, Airbus A320, Airbus A340-300, Boeing 727, Boeing 737-800, Boeing 747-400, Boeing 757-300, Boeing 767-400ER, Boeing 777-300, British Aerospace Jetstream 41, Embraer ERJ-145, Lockheed L1011, Piper Archer III, SAAB 340, Schwitzer 2-33, Tupolev 154","1805, 2605, 7120, 1504, 3383, 8430, 4010, 6475, 6441, 1502, 1530, 6900, 520, 2128, 30, 4103","Show name and distance for all aircrafts by a bar chart, list by the X-axis in asc."
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[150, 150, 162, 62.5, 240, 240]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","150, 150, 162, 62.5, 240, 240","For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, could you show in ascending by the Headquarter?"
"SELECT FIRST_NAME , LOCATION_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY FIRST_NAME DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'LOCATION_ID', 'x_data': [['Susan', 'Steven', 'Shelley', 'Nancy', 'Michael', 'John', 'Jennifer', 'Hermann', 'Den', 'Alexander', 'Adam']], 'y_data': [[2400, 1700, 1700, 1700, 1800, 2500, 1700, 2700, 1700, 1400, 1500]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,LOCATION_ID,"Susan, Steven, Shelley, Nancy, Michael, John, Jennifer, Hermann, Den, Alexander, Adam","2400, 1700, 1700, 1700, 1800, 2500, 1700, 2700, 1700, 1400, 1500","Just list the first name of the employee and show the location id of the corresponding department using a bar chart, could you rank by the x axis from high to low please?"
"SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'AVG(cost_of_treatment)', 'x_data': [['Vaccination', 'Physical examination', 'Take for a Walk']], 'y_data': [[508, 485.8, 478.4]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,AVG(cost_of_treatment),"Vaccination, Physical examination, Take for a Walk","508, 485.8, 478.4","Visualize a bar chart for what are the cost and treatment type description of each treatment?, and show by the y-axis from high to low."
"SELECT T1.name , T1.id FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id ORDER BY T1.name ASC",Bar,Medium,flight_company,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Cathay Pacific Cargo', 'Dragonair', 'Vogue Laundry Service Limited']], 'y_data': [[5, 4, 11]], 'classify': [], 'describe': ''}",bar,name,id,"Cathay Pacific Cargo, Dragonair, Vogue Laundry Service Limited","5, 4, 11","What are the ids and names of the companies that operated more than one flight, and order bars in ascending order."
"SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Manufacturer) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Taiwan', 'Beijing', 'Tokyo']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Manufacturer),"Paris, Los Angeles, Austin, Taiwan, Beijing, Tokyo","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, list in desc by the Y."
"SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'ACC_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",bar,All_Games,ACC_Percent,"35–2, 28–6, 24–10, 21–14","0.875, 0.813, 0.625, 0.563","Return a bar chart about the distribution of All_Games and ACC_Percent , and could you show in desc by the X-axis?"
"SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Memory', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"ZIP drive, Toner cartridge, Memory, Floppy disk, DVD drive, DVD burner, CD drive","1, 1, 1, 1, 2, 1, 1","A bar chart for what are the number of the names of products with price at most 200?, and list by the bars in descending please."
"SELECT Participant_Details , Participant_ID FROM Participants ORDER BY Participant_Details ASC",Bar,Easy,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Details', 'y_name': 'Participant_ID', 'x_data': [['Berniece Weimann', 'Dedrick Ebert', 'Dewitt Walter', 'Dr. Jaydon Renner', 'Dr. Kris Deckow', 'Justyn Lebsack', 'Karlee Batz', 'Kenyatta Kuhn', 'Lupe Deckow', 'Macy Mayer DDS', 'Miss Joyce Cremin', 'Miss Kaci Lebsack', 'Neil Blick', 'Prof. Michelle Maggio Jr.', 'Vilma Schinner']], 'y_data': [[75, 90, 60, 64, 98, 66, 9, 36, 28, 38, 96, 37, 86, 63, 26]], 'classify': [], 'describe': ''}",bar,Participant_Details,Participant_ID,"Berniece Weimann, Dedrick Ebert, Dewitt Walter, Dr. Jaydon Renner, Dr. Kris Deckow, Justyn Lebsack, Karlee Batz, Kenyatta Kuhn, Lupe Deckow, Macy Mayer DDS, Miss Joyce Cremin, Miss Kaci Lebsack, Neil Blick, Prof. Michelle Maggio Jr., Vilma Schinner","75, 90, 60, 64, 98, 66, 9, 36, 28, 38, 96, 37, 86, 63, 26","Give me a bar chart, that just lists the participant ids as Y and their details as X-axis, and display bars from low to high order."
"SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'AVG(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1022, 931.6666666666666]], 'classify': [], 'describe': 'BIN date_address_to BY MONTH'}",bar,date_address_to,AVG(monthly_rental),"Feb, Mar","1022, 931.6666666666666","Find  date_address_to and the average of monthly_rental bin date_address_to by time, and visualize them by a bar chart."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[200, 1000, 1000, 2240, 400, 150, 70, 20, 300, 40, 100, 500, 90, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","200, 1000, 1000, 2240, 400, 150, 70, 20, 300, 40, 100, 500, 90, 110, 110","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, I want to show by the bar from high to low."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[62.5, 240, 150, 162, 240, 150]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","62.5, 240, 150, 162, 240, 150","What are the average prices of products, grouped by manufacturer name, I want to rank by the names in descending."
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Orton', 'Team Batista']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Orton, Team Batista","2, 4","Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and rank from low to high by the the total number ."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender"" ORDER BY Draft_Class ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['1996 MLS Inaugural Player Draft', '1999 MLS College Draft', '2000 MLS SuperDraft', '2005 MLS SuperDraft', '2006 MLS SuperDraft', '2008 MLS SuperDraft', '2009 MLS SuperDraft']], 'y_data': [[87, 5, 4, 9, 37, 4, 3]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"1996 MLS Inaugural Player Draft, 1999 MLS College Draft, 2000 MLS SuperDraft, 2005 MLS SuperDraft, 2006 MLS SuperDraft, 2008 MLS SuperDraft, 2009 MLS SuperDraft","87, 5, 4, 9, 37, 4, 3","what are the draft pick numbers and draft classes for players who play the Defender position?, rank by the X in ascending."
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['america', 'asia', 'europe']], 'y_data': [[4, 7, 11]], 'classify': [], 'describe': ''}",bar,Continent,count(*),"america, asia, europe","4, 7, 11",What is the name of each continent and how many car makers are there in each one. Plot them as bar chart.
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",Bar,Extra Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Harbinger but bequest', 'Frugal not apropos', 'Thrift and accolade', 'Convoke and sanguine']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",bar,roomName,COUNT(roomName),"Harbinger but bequest, Frugal not apropos, Thrift and accolade, Convoke and sanguine","3, 2, 1, 1","What are the number of the name of rooms booked by customers whose first name has ""ROY"" in part?, and I want to sort by the the number of roomname in desc please."
"SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Jandy', 'Linda', 'Shiela', 'Stacy', 'Susan', 'Tracy', 'Lisa', 'Sarah']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Jandy, Linda, Shiela, Stacy, Susan, Tracy, Lisa, Sarah","1, 1, 1, 1, 1, 1, 2, 2","A bar chart showing the number of first name for all female students Their sex is F, and show total number from low to high order."
"SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC",Bar,Medium,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'UK', 'Russia', 'Netherlands', 'Germany', 'France', 'China', 'Brazil']], 'y_data': [[8, 2, 1, 1, 1, 1, 4, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,COUNT(*),"USA, UK, Russia, Netherlands, Germany, France, China, Brazil","8, 2, 1, 1, 1, 1, 4, 1","Show the different headquarters and number of companies at each headquarter with a bar chart, sort X-axis in desc order."
"SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Apap', 'Cheng', 'Jones', 'Kim', 'Lee', 'Nelson', 'Prater', 'Schmidt', 'Smith']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Apap, Cheng, Jones, Kim, Lee, Nelson, Prater, Schmidt, Smith","1, 1, 1, 1, 1, 1, 1, 1, 2",A bar chart about the number of last name for all female students whose sex is F.
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee ORDER BY COUNT(Nominee) DESC",Bar,Extra Hard,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Nominee'}",bar,Nominee,COUNT(Nominee),"Bob Fosse, Cleavant Derricks","3, 1","Show the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks"", and list the number of nominee in desc order."
"SELECT All_Road , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6",Bar chart of all_games_percent from each all road
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name",Bar,Easy,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9",Bar graph to show mean grade from different name
"SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY destination ASC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Honolul', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Boston, Chicago, Dallas, Honolul, Los Angeles, New York, Sydney, Tokyo, Washington D.C.","1, 1, 1, 2, 1, 1, 1, 1, 1","Show me how many destination by destination in a histogram, display by the bars in ascending."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[11.35, 12]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"dog, cat","11.35, 12","What is the average weight for each type of pet Show bar chart, and could you display X-axis in descending order?"
"SELECT LName , COUNT(LName) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Adams', 'Andreo', 'Brody', 'Brown', 'Cheng', 'Davis', 'Epp', 'Goldman', 'Jones', 'Nelson', 'Prater', 'Rugh', 'Schmidt', 'Simms', 'Smith', 'Tai', 'Thornton', 'Wilson', 'Pang']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Adams, Andreo, Brody, Brown, Cheng, Davis, Epp, Goldman, Jones, Nelson, Prater, Rugh, Schmidt, Simms, Smith, Tai, Thornton, Wilson, Pang","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","What is the last name of each student who is not allergic to any type of food? Count them with a bar chart, sort total number in asc order."
"SELECT Title , COUNT(Title) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title ORDER BY COUNT(Title) ASC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['The Case of the Bermuda Triangle', 'The Case of the Piggy Banker', 'The Case of the Smart Dummy', 'The Case: Off the Record', 'The Case of the Mystery Weekend']], 'y_data': [[1, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"The Case of the Bermuda Triangle, The Case of the Piggy Banker, The Case of the Smart Dummy, The Case: Off the Record, The Case of the Mystery Weekend","1, 1, 1, 1, 3","For each film, return the number of cinemas showing that fim in a bar chart, and I want to order by the the number of title in asc."
"SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code ASC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['ATL', 'BAL', 'BOS', 'CHI', 'DAL', 'DET', 'HKG', 'HOU', 'LON', 'LOS', 'NAR', 'NYC', 'PEK', 'PHL', 'PIT', 'ROC', 'SFO', 'WAS', 'YYZ']], 'y_data': [[20, 18.5, 18, 20, 18, 17, 18, 17, 27, 18, 18, 20.33333333333333, 17, 19.666666666666668, 19, 20, 21, 21.66666666666667, 22.5]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"ATL, BAL, BOS, CHI, DAL, DET, HKG, HOU, LON, LOS, NAR, NYC, PEK, PHL, PIT, ROC, SFO, WAS, YYZ","20, 18.5, 18, 20, 18, 17, 18, 17, 27, 18, 18, 20.33333333333333, 17, 19.666666666666668, 19, 20, 21, 21.66666666666667, 22.5","Bar chart of mean age from each city code, could you show bars in asc order?"
"SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY product_type_code ASC",Bar,Extra Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'COUNT(product_type_code)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[5, 8]], 'classify': [], 'describe': 'GROUP BY product_type_code'}",bar,product_type_code,COUNT(product_type_code),"Clothes, Hardware","5, 8","Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, rank x-axis in ascending order."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['PROJ-MGR', 'DBA']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"PROJ-MGR, DBA","7, 8","what are the different role codes for users, and how many users have each?, and I want to sort in descending by the role_code."
"SELECT Name , Age FROM editor",Bar,Easy,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Kamila Porczyk', 'Anna Powierza', 'Marek Siudym', 'Piotr Pręgowski', 'Szymon Wydra', 'Władysław Grzywna', 'Mariusz Zalejski', 'Grażyna Wolszczak', 'Maria Góralczyk']], 'y_data': [[34, 35, 21, 43, 20, 24, 25, 54, 38]], 'classify': [], 'describe': ''}",bar,Name,Age,"Kamila Porczyk, Anna Powierza, Marek Siudym, Piotr Pręgowski, Szymon Wydra, Władysław Grzywna, Mariusz Zalejski, Grażyna Wolszczak, Maria Góralczyk","34, 35, 21, 43, 20, 24, 25, 54, 38",What are the names and ages of editors? Show me a bar chart.
"SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Democratic"" GROUP BY Committee ORDER BY Committee DESC",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Committee', 'y_name': 'COUNT(Committee)', 'x_data': [['Environmental Matters', 'Economic Matters', 'Appropriations']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Committee'}",bar,Committee,COUNT(Committee),"Environmental Matters, Economic Matters, Appropriations","1, 1, 2","Which committees have delegates from the Democratic party, and count them by a bar chart, I want to rank x axis from high to low order."
"SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country DESC",Bar,Extra Hard,railway,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'England', 'Australia']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, England, Australia","2, 1, 1","Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, and show names in desc order please."
"SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE",Bar,Easy,tvshow,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'count(*)', 'x_data': [['English', 'Italian']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",bar,Language,count(*),"English, Italian","3, 12",List each language and the number of TV Channels using it in a bar chart.
"SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY COUNT(CITY) DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'CITY', 'y_name': 'COUNT(CITY)', 'x_data': [['Seattle', 'Toronto', 'Southlake', 'South San Francisco', 'OX9 9ZB', 'Munich', 'London']], 'y_data': [[21, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CITY'}",bar,CITY,COUNT(CITY),"Seattle, Toronto, Southlake, South San Francisco, OX9 9ZB, Munich, London","21, 1, 1, 1, 1, 1, 1","Create a bar chart showing the number of city across city, and rank from high to low by the y axis."
"SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC",Bar,Medium,program_share,"{'chart': 'bar', 'x_name': 'Owner', 'y_name': 'sum(Rating_in_percent)', 'x_data': [['Anhui Television', 'CCTV', 'HBS', 'Shandong Television']], 'y_data': [[0.2, 2.43, 0.53, 0.19]], 'classify': [], 'describe': ''}",bar,Owner,sum(Rating_in_percent),"Anhui Television, CCTV, HBS, Shandong Television","0.2, 2.43, 0.53, 0.19","Draw a bar chart of owner versus total number of rating in percent, and display in ascending by the X."
"SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'staff_name', 'y_name': 'count(*)', 'x_data': [['Berneice', 'Bernice', 'Christophe', 'Cyrus', 'Edmond', 'Kadin', 'Oren', 'Rodger']], 'y_data': [[2, 2, 1, 1, 3, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,staff_name,count(*),"Berneice, Bernice, Christophe, Cyrus, Edmond, Kadin, Oren, Rodger","2, 2, 1, 1, 3, 4, 1, 1","Return a bar chart on how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, I want to rank from low to high by the bar."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""  ORDER BY COUNT(date_of_enrolment) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Aug', 'Nov', 'Oct', 'Sept']], 'y_data': [[1, 1, 3, 3]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Aug, Nov, Oct, Sept","1, 1, 3, 3","A bar chart for finding the number of the enrollment date for all the tests that have ""Pass"" result, and sort by the Y from low to high please."
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code ASC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Cable TV', 'Gym']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Cable TV, Gym","1, 2","A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms, and I want to display in ascending by the facility_code."
"SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry ORDER BY Industry DESC",Bar,Medium,company_office,"{'chart': 'bar', 'x_name': 'Industry', 'y_name': 'COUNT(*)', 'x_data': [['Telecommunications', 'Retailing', 'Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1, 1, 7, 2, 8]], 'classify': [], 'describe': ''}",bar,Industry,COUNT(*),"Telecommunications, Retailing, Oil and gas, Conglomerate, Banking","1, 1, 7, 2, 8","Plot the total number by grouped by industry as a bar graph, and rank from high to low by the bars."
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Direct Debit', 'Credit Card']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Direct Debit, Credit Card","5, 10","Bar graph to show the total number from different payment method code, and order from low to high by the the total number please."
"SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code ORDER BY count(*) ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'CRS_CODE', 'y_name': 'count(*)', 'x_data': [['CIS-420', 'ACCT-212', 'QM-261', 'QM-362', 'ACCT-211', 'CIS-220']], 'y_data': [[1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,CRS_CODE,count(*),"CIS-420, ACCT-212, QM-261, QM-362, ACCT-211, CIS-220","1, 2, 2, 2, 3, 3","Bar chart x axis crs code y axis the total number, order in ascending by the the total number ."
"SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'DEPARTMENT_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,DEPARTMENT_ID,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  phone_number and  department_id ."
"SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements",Bar,Easy,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Made', 'y_name': 'COUNT(Date_Claim_Made)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[3, 3, 2, 0, 3, 3, 1]], 'classify': [], 'describe': 'BIN Date_Claim_Made BY WEEKDAY'}",bar,Date_Claim_Made,COUNT(Date_Claim_Made),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","3, 3, 2, 0, 3, 3, 1",Create a bar chart showing the number of date claim made across date claim made
"SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'CV', 'FM']], 'y_data': [[6, 5, 3, 1]], 'classify': [], 'describe': ''}",bar,Document_Type_Code,count(*),"BK, PP, CV, FM","6, 5, 3, 1","Give me a histogram for how many documents are there of each type?, rank from high to low by the y axis."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the  job_id , and group by attribute job_id by a bar chart."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[2, 4, 3, 6, 5, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","2, 4, 3, 6, 5, 1","For those records from the products and each product's manufacturer, find  headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart."
"SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) DESC",Bar,Medium,party_host,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Various locations', 'Hemkade 48 Zaandam', 'Heineken Music Hall Amsterdam', 'RAI Amsterdam', 'Hemkade 48 Zaandam, Heineken Music Hall Amsterdam']], 'y_data': [[2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Various locations, Hemkade 48 Zaandam, Heineken Music Hall Amsterdam, RAI Amsterdam, Hemkade 48 Zaandam, Heineken Music Hall Amsterdam","2, 2, 2, 1, 1","Create a bar chart showing how many location across location, and sort by the the number of location from high to low please."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AD_ASST', 'MK_MAN', 'MK_REP', 'PU_CLERK', 'PU_MAN', 'SH_CLERK', 'ST_CLERK', 'ST_MAN', 'IT_PROG', 'PR_REP', 'SA_REP', 'SA_MAN', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'AC_ACCOUNT', 'AC_MGR']], 'y_data': [[10, 20, 20, 30, 30, 50, 50, 50, 60, 70, 77.33333333333333, 80, 90, 90, 100, 100, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AD_ASST, MK_MAN, MK_REP, PU_CLERK, PU_MAN, SH_CLERK, ST_CLERK, ST_MAN, IT_PROG, PR_REP, SA_REP, SA_MAN, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, AC_ACCOUNT, AC_MGR","10, 20, 20, 30, 30, 50, 50, 50, 60, 70, 77.33333333333333, 80, 90, 90, 100, 100, 110, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, could you order y-axis in ascending order?"
"SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'count(*)', 'x_data': [['Schaefer', 'Leuschke', 'Keeling', 'Ruecker', 'Muller', 'Auer', 'Boyle']], 'y_data': [[1, 1, 4, 1, 1, 4, 3]], 'classify': [], 'describe': ''}",bar,customer_last_name,count(*),"Schaefer, Leuschke, Keeling, Ruecker, Muller, Auer, Boyle","1, 1, 4, 1, 1, 4, 3",Show the number of accounts for each customer in a bar chart grouping by customer's last name.
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_id DESC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['package', 'top']], 'y_data': [[3, 1]], 'classify': [], 'describe': ''}",bar,part_name,part_id,"package, top","3, 1","which parts have more than 2 faults? Show the part name and id, and list by the Y from high to low."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'July', 'Sept', 'June']], 'y_data': [[1862, 1742, 1449, 740]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, July, Sept, June","1862, 1742, 1449, 740","For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and display by the total number in descending."
"SELECT personal_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'personal_name', 'y_name': 'author_tutor_ATB', 'x_data': [['Adolf', 'Cathrine', 'Ciara', 'Darius', 'Deja', 'Dusty', 'Georgiana', 'Julio', 'Kelsie', 'Logan', 'Madonna', 'Retha', 'Shakira', 'Sheldon', 'Yessenia']], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",bar,personal_name,author_tutor_ATB,"Adolf, Cathrine, Ciara, Darius, Deja, Dusty, Georgiana, Julio, Kelsie, Logan, Madonna, Retha, Shakira, Sheldon, Yessenia","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Visualize a bar chart about the distribution of  personal_name and  author_tutor_ATB .
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AD_ASST', 'MK_MAN', 'MK_REP', 'PU_CLERK', 'PU_MAN', 'HR_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN', 'IT_PROG', 'PR_REP', 'SA_REP', 'SA_MAN', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'AC_ACCOUNT', 'AC_MGR']], 'y_data': [[10, 20, 20, 30, 30, 40, 50, 50, 50, 60, 70, 77.33333333333333, 80, 90, 90, 100, 100, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AD_ASST, MK_MAN, MK_REP, PU_CLERK, PU_MAN, HR_REP, SH_CLERK, ST_CLERK, ST_MAN, IT_PROG, PR_REP, SA_REP, SA_MAN, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, AC_ACCOUNT, AC_MGR","10, 20, 20, 30, 30, 40, 50, 50, 50, 60, 70, 77.33333333333333, 80, 90, 90, 100, 100, 110, 110","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, display in asc by the total number."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'PU_CLERK', 'ST_MAN', 'ST_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 105, 108, 111, 117, 122, 134.5, 147, 164.10344827586206, 189.5, 202, 203, 204, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AD_PRES, IT_PROG, FI_MGR, FI_ACCOUNT, PU_CLERK, ST_MAN, ST_CLERK, SA_MAN, SA_REP, SH_CLERK, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","100, 105, 108, 111, 117, 122, 134.5, 147, 164.10344827586206, 189.5, 202, 203, 204, 205, 206","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and I want to sort by the total number in asc please."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AD_PRES', 'PU_MAN', 'SA_MAN', 'ST_MAN', 'AC_MGR', 'HR_REP', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[0, 100, 100, 100, 101, 101, 102.66666666666667, 108, 114, 122, 122.22222222222223, 147]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AD_PRES, PU_MAN, SA_MAN, ST_MAN, AC_MGR, HR_REP, IT_PROG, FI_ACCOUNT, PU_CLERK, SH_CLERK, ST_CLERK, SA_REP","0, 100, 100, 100, 101, 101, 102.66666666666667, 108, 114, 122, 122.22222222222223, 147","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, show by the total number from low to high please."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['July', 'Aug', 'Nov', 'Sept', 'Dec', 'Oct']], 'y_data': [[1, 3, 3, 3, 4, 6]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"July, Aug, Nov, Sept, Dec, Oct","1, 3, 3, 3, 4, 6","Bar chart of how many date of enrolment from each date of enrolment, and could you list by the Y-axis in asc?"
"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",Bar,Easy,singer,"{'chart': 'bar', 'x_name': 'Citizenship', 'y_name': 'max(Net_Worth_Millions)', 'x_data': [['Australia', 'Chile', 'France', 'Germany', 'United States']], 'y_data': [[17, 17.4, 30, 14.3, 28.8]], 'classify': [], 'describe': ''}",bar,Citizenship,max(Net_Worth_Millions),"Australia, Chile, France, Germany, United States","17, 17.4, 30, 14.3, 28.8",Show different citizenships and the maximum net worth of singers of each citizenship. 
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[6, 1, 4, 3, 5, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","6, 1, 4, 3, 5, 2","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, display in desc by the X please."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['Thur', 'Fri', 'Mon', 'Sun', 'Wed', 'Sat', 'Tue']], 'y_data': [[1, 2, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'BIN booking_end_date BY WEEKDAY'}",bar,booking_end_date,COUNT(booking_end_date),"Thur, Fri, Mon, Sun, Wed, Sat, Tue","1, 2, 2, 2, 2, 3, 3","Bar chart x axis booking end date y axis the number of booking end date, and could you sort by the total number in asc?"
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) DESC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Credit Card, Direct Debit","10, 5","Bar graph to show the total number from different payment method code, order in descending by the y-axis."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Fujits', 'Iomega', 'Winchester', 'Sony', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[1, 3, 3, 5, 7.666666666666667, 9.333333333333334]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Fujits, Iomega, Winchester, Sony, Creative Labs, Hewlett-Packard","1, 3, 3, 5, 7.666666666666667, 9.333333333333334","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and show y axis in asc order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Fri', 'Sat', 'Sun', 'Tue', 'Thur', 'Wed']], 'y_data': [[14, 15, 15, 15, 15, 16, 16]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Fri, Sat, Sun, Tue, Thur, Wed","14, 15, 15, 15, 15, 16, 16","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday, rank by the y axis in ascending please."
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'ART', 'BIOL', 'CIS', 'ECON/FIN', 'ENG', 'HIST', 'MATH', 'MKT/MGT', 'PSYCH', 'SOC']], 'y_data': [[3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, ART, BIOL, CIS, ECON/FIN, ENG, HIST, MATH, MKT/MGT, PSYCH, SOC","3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1","A bar chart about how many professors have a PhD in each department?, list from low to high by the x-axis please."
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 7]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"8–0, 6–2, 3–5","1, 2, 7","Give me the comparison about the sum of Team_ID over the ACC_Road , and group by attribute ACC_Road, show names in desc order."
"SELECT ACC_Regular_Season , Team_ID FROM basketball_match ORDER BY Team_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'Team_ID', 'x_data': [['9–7', '10–6', '13–3', '14–2']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,Team_ID,"9–7, 10–6, 13–3, 14–2","4, 3, 2, 1","Give me the comparison about Team_ID over the ACC_Regular_Season , and show from high to low by the y axis."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['DVD burner', 'Toner cartridge', 'DVD drive', 'Printer', 'CD drive', 'Monitor', 'Floppy disk', 'ZIP drive', 'Memory', 'Hard drive']], 'y_data': [[10, 9, 8.5, 8, 7, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"DVD burner, Toner cartridge, DVD drive, Printer, CD drive, Monitor, Floppy disk, ZIP drive, Memory, Hard drive","10, 9, 8.5, 8, 7, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and order total number in descending order please."
"SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'STATE_PROVINCE', 'y_name': 'COUNT(STATE_PROVINCE)', 'x_data': [['', 'Bavaria', 'California', 'Ontario', 'Oxford', 'Texas', 'Washington']], 'y_data': [[1, 1, 1, 1, 1, 1, 21]], 'classify': [], 'describe': 'GROUP BY STATE_PROVINCE'}",bar,STATE_PROVINCE,COUNT(STATE_PROVINCE),", Bavaria, California, Ontario, Oxford, Texas, Washington","1, 1, 1, 1, 1, 1, 21","Give me a bar chart to compare the number of state provinces located in different cities, show from low to high by the bar."
"SELECT Name , Weight FROM people ORDER BY Name DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Vincent Montméat', 'Stéphane Antiga', 'Philippe Barça-Cysique', 'Loïc De Kergret', 'Laurent Capet', 'Hubert Henno', 'Guillaume Samica', 'Frantz Granvorka', 'Dominique Daquin']], 'y_data': [[88, 94, 88, 89, 92, 83, 82, 90, 85]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Vincent Montméat, Stéphane Antiga, Philippe Barça-Cysique, Loïc De Kergret, Laurent Capet, Hubert Henno, Guillaume Samica, Frantz Granvorka, Dominique Daquin","88, 94, 88, 89, 92, 83, 82, 90, 85","Show me about the distribution of Name and Weight in a bar chart, could you display from high to low by the x axis?"
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",Bar,Medium,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['A Matter of Time', 'A Puzzling Parallax', 'A Silver-Cleaning Battery', 'Aerodynamics and Gas Mileage', 'Aerodynamics and Ice Hockey', 'Build Your Own Telescope', 'Juicy: Extracting Apple Juice with Pectinase', 'Winds: Studying Bernoullis Principle']], 'y_data': [[1, 1, 2, 2, 1, 3, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"A Matter of Time, A Puzzling Parallax, A Silver-Cleaning Battery, Aerodynamics and Gas Mileage, Aerodynamics and Ice Hockey, Build Your Own Telescope, Juicy: Extracting Apple Juice with Pectinase, Winds: Studying Bernoullis Principle","1, 1, 2, 2, 1, 3, 1, 1","What are the naems of all the projects, and how many scientists were assigned to each of them. "
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Thur', 'Sun', 'Fri', 'Mon', 'Tue', 'Sat', 'Wed']], 'y_data': [[130.625, 129.46666666666667, 124.66666666666667, 124.57142857142857, 122.2, 121.2, 114.1875]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Thur, Sun, Fri, Mon, Tue, Sat, Wed","130.625, 129.46666666666667, 124.66666666666667, 124.57142857142857, 122.2, 121.2, 114.1875","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, list from high to low by the Y-axis."
"SELECT Title , COUNT(Title) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title ORDER BY COUNT(Title) DESC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['The Case of the Mystery Weekend', 'The Case: Off the Record', 'The Case of the Smart Dummy', 'The Case of the Piggy Banker', 'The Case of the Bermuda Triangle']], 'y_data': [[3, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"The Case of the Mystery Weekend, The Case: Off the Record, The Case of the Smart Dummy, The Case of the Piggy Banker, The Case of the Bermuda Triangle","3, 1, 1, 1, 1","For each film, return the number of cinemas showing that fim in a bar chart, and I want to order total number in descending order."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and sort by the bar from low to high please."
"SELECT Carrier , AVG(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY AVG(Memory_in_G) DESC",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'AVG(Memory_in_G)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[80, 69.33333333333333]], 'classify': [], 'describe': 'GROUP BY Carrier'}",bar,Carrier,AVG(Memory_in_G),"Sprint, TMobile","80, 69.33333333333333","What are the memories and carriers of phones Show bar chart, and show by the mean memory in g in descending."
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) ASC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Jeff Lloyd', 'Sherman Smith', 'Steve Niehaus', 'Steve Raible', 'Sammy Green']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Author,COUNT(DISTINCT T1.workshop_id),"Jeff Lloyd, Sherman Smith, Steve Niehaus, Steve Raible, Sammy Green","1, 1, 1, 1, 2","Show each author and the number of workshops they submitted to with a bar chart, and display in asc by the Y-axis please."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[40, 70, 110, 110, 0, 20, 20]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","40, 70, 110, 110, 0, 20, 20","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the sum of department_id bin hire_date by weekday."
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'capacity', 'x_data': [['Vimto', 'Sprite Lemo', 'Dr Pepper', 'Diet Pepsi', 'Diet Mountain Dew']], 'y_data': [[6, 8, 1, 9, 8]], 'classify': [], 'describe': ''}",bar,catalog_entry_name,capacity,"Vimto, Sprite Lemo, Dr Pepper, Diet Pepsi, Diet Mountain Dew","6, 8, 1, 9, 8","Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and could you list catalog_entry_name from high to low order please?"
"SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY size_code DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'size_code', 'y_name': 'COUNT(size_code)', 'x_data': [['SML', 'MED', 'LGE']], 'y_data': [[2, 9, 4]], 'classify': [], 'describe': 'GROUP BY size_code'}",bar,size_code,COUNT(size_code),"SML, MED, LGE","2, 9, 4","List the number of dogs for each size code in a bar chart, and I want to show in descending by the names."
"SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Alexis, Andrew, Austin, Cassandra, Gabriel, Haley, Jessica, Jordan, Kris, Kyle, Logan, Tiffany","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Show the number of names of high school students with a bar chart, and show in asc by the bars please."
"SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Toner cartridge', 'CD drive', 'Memory']], 'y_data': [[66, 90, 120]], 'classify': [], 'describe': ''}",bar,Name,Price,"Toner cartridge, CD drive, Memory","66, 90, 120","For those products with a price between 60 and 120, give me the comparison about price over the name , and list from low to high by the Y-axis."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 1, 2, 4, 1", Show the number of start dates of all the apartment bookings for each weekday with a bar chart.
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality",Bar,Easy,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[308, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"England, Northern Ireland, Wales","308, 29, 27",Return a histogram on what are the nationalities and the total ages of journalists?
"SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,wedding,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Australia']], 'y_data': [[5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Australia","5, 1","A bar chart about the number of countries for all people whose age is smaller than the average, and display by the total number in descending."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Oct', 'Sept']], 'y_data': [[110, 260]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Oct, Sept","110, 260","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and I want to sort Y in asc order please."
"SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['City Mall', 'Village Store']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"City Mall, Village Store","2, 3","Find all types of store and number of them Visualize by bar chart, could you order Type in ascending order?"
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[6, 5, 3, 28, 1, 23]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","6, 5, 3, 28, 1, 23","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, show from high to low by the bars."
"SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'Room', 'y_name': 'count(*)', 'x_data': [['AOB', 'CAS', 'FNA', 'HBB', 'IBD', 'IBS', 'MWC', 'RND', 'RTE', 'TAA']], 'y_data': [[51, 69, 66, 60, 63, 59, 56, 62, 55, 59]], 'classify': [], 'describe': ''}",bar,Room,count(*),"AOB, CAS, FNA, HBB, IBD, IBS, MWC, RND, RTE, TAA","51, 69, 66, 60, 63, 59, 56, 62, 55, 59","For each room, find its the number of times reservations were made for it. Visualize them using a bar chart."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[5685.714285714285, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","5685.714285714285, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, display by the total number from low to high."
"SELECT All_Road , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6","Find  All_Road and  All_Games_Percent , and visualize them by a bar chart."
"SELECT other_details , COUNT(other_details) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'other_details', 'y_name': 'COUNT(other_details)', 'x_data': [['apartment', 'house']], 'y_data': [[7, 13]], 'classify': [], 'describe': 'GROUP BY other_details'}",bar,other_details,COUNT(other_details),"apartment, house","7, 13","A bar chart shows the distribution of  other_details and the amount of other_details , and group by attribute other_details."
"SELECT Name , sum(revenue) FROM manufacturers GROUP BY name",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': ''}",bar,Name,sum(revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30",Bar graph to show sum revenue from different name
"SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name",Bar,Easy,student_assessment,"{'chart': 'bar', 'x_name': 'last_name', 'y_name': 'COUNT(last_name)', 'x_data': [['Bartoletti', 'Bednar', 'Feest', 'Grant', 'Hartmann', 'Senger', 'Wintheiser']], 'y_data': [[1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY last_name'}",bar,last_name,COUNT(last_name),"Bartoletti, Bednar, Feest, Grant, Hartmann, Senger, Wintheiser","1, 1, 1, 1, 2, 1, 1",Give me a bar graph for what is the total number of last names of all candidates?
"SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'COUNT(date_address_from)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 2, 4, 3, 4]], 'classify': [], 'describe': 'BIN date_address_from BY WEEKDAY'}",bar,date_address_from,COUNT(date_address_from),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 2, 4, 3, 4",Give me the comparison about the amount of date_address_from over the  date_address_from bin date_address_from by weekday.
"SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'count(*)', 'x_data': [['ORG', 'SF', 'GV']], 'y_data': [[2, 2, 6]], 'classify': [], 'describe': ''}",bar,Budget_Type_Code,count(*),"ORG, SF, GV","2, 2, 6","Show budget type codes and the number of documents in each budget type Show bar chart, and list Y-axis in ascending order please."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[2480, 1400, 1350, 990, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Aug, Sept, July, June, Oct","2480, 1400, 1350, 990, 110","For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, and sort sum department id in desc order."
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'District_name', 'y_name': 'City_Population', 'x_data': [['Kasur District', 'Jhang District', 'Gujrat District', 'Gujranwala District', 'Dera Ghazi Khan District', 'Chiniot District', 'Bahawalpur District']], 'y_data': [[314617, 365198, 328512, 1526168, 464742, 219254, 530438]], 'classify': [], 'describe': ''}",bar,District_name,City_Population,"Kasur District, Jhang District, Gujrat District, Gujranwala District, Dera Ghazi Khan District, Chiniot District, Bahawalpur District","314617, 365198, 328512, 1526168, 464742, 219254, 530438","Find the name and population of districts with population between 200000 and 200000 Show a bar chart, and sort District_name from high to low order."
"SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details ORDER BY T1.Event_ID DESC",Bar,Hard,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Event_Details', 'y_name': 'AVG(Event_ID)', 'x_data': [['Success', 'Fail']], 'y_data': [[41.5, 23.333333333333332]], 'classify': [], 'describe': 'GROUP BY Event_Details'}",bar,Event_Details,AVG(Event_ID),"Success, Fail","41.5, 23.333333333333332","Return a bar chart on what are the ids and details of events that have more than one participants?, could you display by the Y-axis from high to low?"
"SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['YYZ', 'WAS', 'SFO', 'ROC', 'PIT', 'PHL', 'PEK', 'NYC', 'NAR', 'LOS', 'LON', 'HOU', 'HKG', 'DET', 'DAL', 'CHI', 'BOS', 'BAL', 'ATL']], 'y_data': [[22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"YYZ, WAS, SFO, ROC, PIT, PHL, PEK, NYC, NAR, LOS, LON, HOU, HKG, DET, DAL, CHI, BOS, BAL, ATL","22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20","Draw a bar chart for what is the average age for each city and what are those cities?, and display in desc by the x axis."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[14, 15, 16, 16, 15, 15, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","14, 15, 16, 16, 15, 15, 15","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of  hire_date and the amount of hire_date bin hire_date by weekday."
"SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'MANAGER_ID', 'x_data': [['MK_MAN', 'AC_MGR', 'HR_REP', 'PR_REP', 'SA_REP', 'MK_REP', 'AC_ACCOUNT']], 'y_data': [[100, 101, 101, 101, 149, 201, 205]], 'classify': [], 'describe': ''}",bar,JOB_ID,MANAGER_ID,"MK_MAN, AC_MGR, HR_REP, PR_REP, SA_REP, MK_REP, AC_ACCOUNT","100, 101, 101, 101, 149, 201, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, and sort total number in asc order."
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",Bar,Easy,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_level_name', 'y_name': 'catalog_level_number', 'x_data': [['Sub-Category', 'Product']], 'y_data': [[8, 9]], 'classify': [], 'describe': ''}",bar,catalog_level_name,catalog_level_number,"Sub-Category, Product","8, 9",Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Mavris', 'Higgins', 'Hartstein', 'Grant', 'Gietz', 'Fay', 'Baer']], 'y_data': [[0, 0, 0, 0.15, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Mavris, Higgins, Hartstein, Grant, Gietz, Fay, Baer","0, 0, 0, 0.15, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , list by the X-axis in desc."
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY COUNT(T2.Party) ASC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Independence', 'Liberal', 'Working Families', 'Democratic']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Independence, Liberal, Working Families, Democratic","1, 1, 1, 2","Please compare the number of names of parties using a bar chart, show by the y-axis in ascending please."
"SELECT dept_name , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'SUM(credits)', 'x_data': [['Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'English', 'Finance', 'History', 'Marketing', 'Mech. Eng.', 'Psychology', 'Statistics']], 'y_data': [[7, 3, 7, 8, 7, 3, 4, 3, 3, 6, 6, 3]], 'classify': [], 'describe': 'GROUP BY dept_name'}",bar,dept_name,SUM(credits),"Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, English, Finance, History, Marketing, Mech. Eng., Psychology, Statistics","7, 3, 7, 8, 7, 3, 4, 3, 3, 6, 6, 3",What is the sum of credit value of courses with more than one prerequisite for each department? Return a bar chart.
"SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'sum(total_passengers)', 'x_data': [['London', 'Glasgow', 'Birmingham']], 'y_data': [[498.50700000000006, 29.658, 36.330999999999996]], 'classify': [], 'describe': ''}",bar,Location,sum(total_passengers),"London, Glasgow, Birmingham","498.50700000000006, 29.658, 36.330999999999996","Show the total number of passengers of each location in a bar chart, I want to sort by the bars in desc please."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Feb', 'Mar']], 'y_data': [[4, 16]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Feb, Mar","4, 16","Bar chart of how many date of completion from each date of completion, and show total number in ascending order."
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_name DESC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['top', 'package']], 'y_data': [[1, 3]], 'classify': [], 'describe': ''}",bar,part_name,part_id,"top, package","1, 3","Which parts have more than 2 faults? Show the part name and id in a bar chart, could you display from high to low by the X-axis?"
"SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY Aircraft DESC",Bar,Hard,aircraft,"{'chart': 'bar', 'x_name': 'Aircraft', 'y_name': 'COUNT(*)', 'x_data': [['Robinson R-22', 'Mil Mi-26', 'CH-53E Super Stallion', 'CH-47D Chinook', 'Bell 206B3 JetRanger']], 'y_data': [[2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Aircraft,COUNT(*),"Robinson R-22, Mil Mi-26, CH-53E Super Stallion, CH-47D Chinook, Bell 206B3 JetRanger","2, 2, 1, 1, 1","List the names of aircrafts and the number of times it won matches by a bar chart, and sort x-axis from high to low order."
"SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Price)', 'x_data': [['Paris', 'Beijing', 'Taiwan', 'Tokyo', 'Austin', 'Los Angeles']], 'y_data': [[125, 150, 240, 240, 450, 486]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Price),"Paris, Beijing, Taiwan, Tokyo, Austin, Los Angeles","125, 150, 240, 240, 450, 486","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of price , and group by attribute headquarter, and list by the total number of price in ascending."
"SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'max(revenue)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[120, 130, 30, 50, 200, 100]], 'classify': [], 'describe': ''}",bar,Headquarter,max(revenue),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","120, 130, 30, 50, 200, 100","Please tell the revenues of the companies with the highest revenues in each headquarter city, list by the bar from high to low."
"SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type ASC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'acc_type', 'y_name': 'avg(acc_bal)', 'x_data': [['checking', 'saving']], 'y_data': [[1000, 2000]], 'classify': [], 'describe': ''}",bar,acc_type,avg(acc_bal),"checking, saving","1000, 2000","What is the average account balance of customers with credit score below 50 for the different account types Visualize by bar chart, and order by the names in ascending please."
"SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY born_state ASC",Bar,Medium,department_management,"{'chart': 'bar', 'x_name': 'born_state', 'y_name': 'AVG(age)', 'x_data': [['Alabama', 'California', 'Connecticut', 'Delaware', 'Florida']], 'y_data': [[68, 61.25, 55, 53, 50]], 'classify': [], 'describe': 'GROUP BY born_state'}",bar,born_state,AVG(age),"Alabama, California, Connecticut, Delaware, Florida","68, 61.25, 55, 53, 50","Show the average age of heads of departments born in each state with a bar chart, and show in asc by the born_state."
"SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[9, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(School_ID),"3–5, 6–2, 8–0","9, 2, 1","Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, show from low to high by the bar please."
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%"" ORDER BY customer_name DESC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'customer_name', 'y_name': 'customer_id', 'x_data': [['Lukas', 'Kenya']], 'y_data': [[3, 13]], 'classify': [], 'describe': ''}",bar,customer_name,customer_id,"Lukas, Kenya","3, 13","what are the names and ids of customers whose address contains TN?, and I want to sort from high to low by the bars."
"SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'login_name', 'y_name': 'author_tutor_ATB', 'x_data': [['al75', 'jmckenzie', 'dschaefer', 'clementina29', 'adam.rippin', 'fiona77', 'antonetta19', 'wlehner', 'medhurst.alvah', 'marty.bergnaum', 'qking', 'heidenreich.ara', 'ekshlerin', 'nellie.mosciski', 'nyundt']], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",bar,login_name,author_tutor_ATB,"al75, jmckenzie, dschaefer, clementina29, adam.rippin, fiona77, antonetta19, wlehner, medhurst.alvah, marty.bergnaum, qking, heidenreich.ara, ekshlerin, nellie.mosciski, nyundt","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Draw a bar chart about the distribution of  login_name and  author_tutor_ATB .
"SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(credits)', 'x_data': [['World History', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'International Practicum', 'Immunology', 'Groups and Rings', 'Graph Theory', 'Game Programming', 'Fiction Writing', 'Embedded Systems', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[4, 3, 3, 3, 3.5, 3, 4, 3, 4, 3, 4, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(credits),"World History, Rock and Roll, Ponzi Schemes, Operating Systems, International Practicum, Immunology, Groups and Rings, Graph Theory, Game Programming, Fiction Writing, Embedded Systems, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","4, 3, 3, 3, 3.5, 3, 4, 3, 4, 3, 4, 3, 3, 3, 3, 3","Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and display X in descending order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Sept', 'Oct']], 'y_data': [[54500, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Sept, Oct","54500, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, display in desc by the Y."
"SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'School_ID', 'x_data': [['4–8', '6–5', '8–2', '13–0']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,All_Road,School_ID,"4–8, 6–5, 8–2, 13–0","5, 4, 2, 1","Show me school_id by all road in a histogram, show from high to low by the total number."
"SELECT date_moved_in , COUNT(date_moved_in) FROM residents",Bar,Easy,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 0, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_moved_in BY WEEKDAY'}",bar,date_moved_in,COUNT(date_moved_in),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 0, 0, 1, 1, 0",A bar chart for what are the number of the distinct move in dates of the residents?
"SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY bname DESC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'bname', 'y_name': 'sum(amount)', 'x_data': [['morningside', 'downtown', 'broadway']], 'y_data': [[2050, 3000, 5000]], 'classify': [], 'describe': ''}",bar,bname,sum(amount),"morningside, downtown, broadway","2050, 3000, 5000","What are the names of the different bank branches, and what are their total loan amounts Show bar chart, show by the x axis from high to low."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'",Bar,Extra Hard,sakila_1,"{'chart': 'bar', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['May', 'June', 'July', 'Aug']], 'y_data': [[5, 15, 47, 47]], 'classify': [], 'describe': 'BIN payment_date BY MONTH'}",bar,payment_date,COUNT(payment_date),"May, June, July, Aug","5, 15, 47, 47","What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart"
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, find name and the average of price , and group by attribute name, and visualize them by a bar chart, and display by the names from low to high please."
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Three Rivers', 'Chiltern', 'Broxbourne', 'Watford', 'Thurrock', 'Brentwood']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Three Rivers, Chiltern, Broxbourne, Watford, Thurrock, Brentwood","3, 3, 2, 1, 1, 1","Count the number of local authorities by the local authority, and list by the Y in desc."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'HR_REP', 'MK_MAN', 'MK_REP', 'PR_REP', 'SA_REP']], 'y_data': [[206, 205, 203, 201, 202, 204, 178]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"AC_ACCOUNT, AC_MGR, HR_REP, MK_MAN, MK_REP, PR_REP, SA_REP","206, 205, 203, 201, 202, 204, 178","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , display in ascending by the x axis."
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[10, 17]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"F, T","10, 17","Return a bar chart about the distribution of  Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name",Bar,Easy,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9",Show the names and their average grades of each high schooler. 
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500","For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, rank by the bar from low to high."
"SELECT Sex , AVG(Height) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Height)', 'x_data': [['F', 'M']], 'y_data': [[197.5, 195.14285714285714]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Height),"F, M","197.5, 195.14285714285714","Draw a bar chart about the distribution of  Sex and the average of Height , and group by attribute Sex."
"SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description",Bar,Easy,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'section_description', 'y_name': 'COUNT(section_description)', 'x_data': [['ad', 'doloremque', 'et', 'ex', 'facilis', 'nesciunt', 'non', 'provident', 'qui', 'quis', 'reprehenderit', 'voluptas', 'voluptatem']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY section_description'}",bar,section_description,COUNT(section_description),"ad, doloremque, et, ex, facilis, nesciunt, non, provident, qui, quis, reprehenderit, voluptas, voluptatem","1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1",Show how many section description from each section description
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69",Visualize a bar chart for what are total transaction amounts for each transaction type?
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town DESC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['West Sherwoodstad', 'South Eugenia', 'Rueckermouth', 'Purdyville', 'Port Maximeview', 'New Lonzoville', 'Nataliamouth', 'Monahanshire', 'Macejkovicchester', 'Jasthaven', 'Feliciaberg', 'Chrisside']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"West Sherwoodstad, South Eugenia, Rueckermouth, Purdyville, Port Maximeview, New Lonzoville, Nataliamouth, Monahanshire, Macejkovicchester, Jasthaven, Feliciaberg, Chrisside","1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1","Show all cities along with the number of drama workshop groups in each city Visualize by bar chart, could you order by the x axis in descending?"
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Three Rivers', 'Chiltern', 'Broxbourne', 'Watford', 'Thurrock', 'Brentwood']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Three Rivers, Chiltern, Broxbourne, Watford, Thurrock, Brentwood","3, 3, 2, 1, 1, 1","Compare the number of the local authority by the local authority, show the number of local authority in desc order please."
"SELECT County , count(*) FROM school GROUP BY county",Bar,Easy,school_finance,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'count(*)', 'x_data': [['20 Elkhart', '46 LaPorte 71 St. Joseph', '50 Marshall', '71 St. Joseph', '75 Starke']], 'y_data': [[1, 1, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,County,count(*),"20 Elkhart, 46 LaPorte 71 St. Joseph, 50 Marshall, 71 St. Joseph, 75 Starke","1, 1, 3, 2, 1",Draw a bar chart of county versus the total number 
"SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'customer_first_name', 'y_name': 'count(*)', 'x_data': [['Joesph', 'Vesta', 'Meaghan', 'Abbey', 'Jensen', 'Kieran', 'Ruby']], 'y_data': [[1, 1, 4, 1, 1, 4, 3]], 'classify': [], 'describe': ''}",bar,customer_first_name,count(*),"Joesph, Vesta, Meaghan, Abbey, Jensen, Kieran, Ruby","1, 1, 4, 1, 1, 4, 3",Show the number of accounts for each customer in a bar chart grouping by customer's first name.
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[154, 153.5, 155.06666666666666, 159.5, 151, 148.5, 153]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","154, 153.5, 155.06666666666666, 159.5, 151, 148.5, 153","For those employees who did not have any job in the past, a bar chart shows the distribution of  hire_date and the average of employee_id bin hire_date by weekday."
"SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY sum(revenue) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(revenue)', 'x_data': [['Winchester', 'Hewlett-Packard', 'Creative Labs', 'Sony', 'Fujits', 'Iomega']], 'y_data': [[30, 50, 100, 120, 130, 200]], 'classify': [], 'describe': ''}",bar,Name,sum(revenue),"Winchester, Hewlett-Packard, Creative Labs, Sony, Fujits, Iomega","30, 50, 100, 120, 130, 200","A bar chart about what is the total revenue of each manufacturer?, and show by the total number of revenue in asc."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Sun', 'Fri', 'Mon', 'Thur', 'Tue', 'Sat', 'Wed']], 'y_data': [[0, 1, 1, 1, 1, 3, 4]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Sun, Fri, Mon, Thur, Tue, Sat, Wed","0, 1, 1, 1, 1, 3, 4","Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart, and rank in asc by the total number."
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%"" ORDER BY customer_name DESC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'customer_name', 'y_name': 'customer_id', 'x_data': [['Lukas', 'Kenya']], 'y_data': [[3, 13]], 'classify': [], 'describe': ''}",bar,customer_name,customer_id,"Lukas, Kenya","3, 13","Return the names and ids of customers who have TN in their address by a bar chart, and display names in descending order."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender""",Bar,Easy,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['1996 MLS Inaugural Player Draft', '1999 MLS College Draft', '2000 MLS SuperDraft', '2005 MLS SuperDraft', '2006 MLS SuperDraft', '2008 MLS SuperDraft', '2009 MLS SuperDraft']], 'y_data': [[87, 5, 4, 9, 37, 4, 3]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"1996 MLS Inaugural Player Draft, 1999 MLS College Draft, 2000 MLS SuperDraft, 2005 MLS SuperDraft, 2006 MLS SuperDraft, 2008 MLS SuperDraft, 2009 MLS SuperDraft","87, 5, 4, 9, 37, 4, 3",Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart.
"SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE ORDER BY STATE_PROVINCE ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'STATE_PROVINCE', 'y_name': 'COUNT(STATE_PROVINCE)', 'x_data': [['', 'Bavaria', 'California', 'Ontario', 'Oxford', 'Texas', 'Washington']], 'y_data': [[1, 1, 1, 1, 1, 1, 21]], 'classify': [], 'describe': 'GROUP BY STATE_PROVINCE'}",bar,STATE_PROVINCE,COUNT(STATE_PROVINCE),", Bavaria, California, Ontario, Oxford, Texas, Washington","1, 1, 1, 1, 1, 1, 21","Group and count the state province attribute of the location table to visualize a bar chart, and could you show bar from low to high order?"
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm",Bar,Easy,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Commonwealth of the US', 'Constitutional Monarchy (Emirate)', 'Constitutional Monarchy, Federation', 'Dependent Territory of the UK', 'Emirate Federation', 'Federation', 'Monarchy (Emirate)', 'Monarchy (Sultanate)', 'Nonmetropolitan Territory of France', 'Nonmetropolitan Territory of The Netherlands', 'Overseas Department of France', 'Parliamentary Coprincipality', 'Part of Denmark', 'Socialistic Republic', 'Socialistic State', 'Special Administrative Region of China', 'US Territory']], 'y_data': [[3947000, 1972000, 82516000, 193050, 2441000, 7160400, 617000, 2870000, 464000, 320000, 1731000, 78000, 99000, 115072000, 5605000, 7255000, 329000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Commonwealth of the US, Constitutional Monarchy (Emirate), Constitutional Monarchy, Federation, Dependent Territory of the UK, Emirate Federation, Federation, Monarchy (Emirate), Monarchy (Sultanate), Nonmetropolitan Territory of France, Nonmetropolitan Territory of The Netherlands, Overseas Department of France, Parliamentary Coprincipality, Part of Denmark, Socialistic Republic, Socialistic State, Special Administrative Region of China, US Territory","3947000, 1972000, 82516000, 193050, 2441000, 7160400, 617000, 2870000, 464000, 320000, 1731000, 78000, 99000, 115072000, 5605000, 7255000, 329000",Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 108, 111, 101.5, 100, 200, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 108, 111, 101.5, 100, 200, 205, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show X-axis from high to low order."
"SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY Sex ASC",Bar,Easy,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'max(age)', 'x_data': [['F', 'M']], 'y_data': [[26, 27]], 'classify': [], 'describe': ''}",bar,Sex,max(age),"F, M","26, 27","What is the oldest age for each gender of student? Return a bar chart, and order by the x axis in asc please."
"SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY COUNT(Payment_Method_Code) DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'COUNT(Payment_Method_Code)', 'x_data': [['MasterCard', 'Visa', 'Discover Card', 'American Express']], 'y_data': [[7, 4, 3, 1]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,COUNT(Payment_Method_Code),"MasterCard, Visa, Discover Card, American Express","7, 4, 3, 1","Plot the number of payment method code by grouped by payment method code as a bar graph, and list by the total number from high to low."
"SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['4–8', '6–5', '8–2', '13–0']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"4–8, 6–5, 8–2, 13–0","0.6, 0.706, 0.8240000000000001, 0.946","Visualize a bar chart about the distribution of All_Road and All_Games_Percent , and rank by the All_Games_Percent in ascending please."
"SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY AVG(Amount_Payment) DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['MasterCard', 'Visa', 'American Express', 'Discover Card']], 'y_data': [[361695, 198678.25, 177130, 77608.33333333333]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,AVG(Amount_Payment),"MasterCard, Visa, American Express, Discover Card","361695, 198678.25, 177130, 77608.33333333333","Please use a bar chart to show the average amount of payment by each payment method code, and could you show total number in descending order?"
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Baseball', 'Kayaking', 'Soccer', 'Spelunking', 'Square Dancing', 'Volleyball', 'Canasta', 'Extreme Canasta', 'Football', 'Canoeing', 'Chess', 'Mountain Climbing', 'Crossword Puzzles']], 'y_data': [[1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 5, 6, 7]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Baseball, Kayaking, Soccer, Spelunking, Square Dancing, Volleyball, Canasta, Extreme Canasta, Football, Canoeing, Chess, Mountain Climbing, Crossword Puzzles","1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 5, 6, 7","How many faculty members participate in each activity? Return the activity names and the number of faculty members Show bar chart, and could you order in ascending by the the total number ?"
"SELECT Date_of_Birth , Height FROM people ORDER BY Date_of_Birth ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['01.09.1977', '03.02.1976', '05.05.1972', '06.10.1976', '10.03.1976', '10.11.1972', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[196, 200, 202, 188, 195, 197, 193, 194, 196]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"01.09.1977, 03.02.1976, 05.05.1972, 06.10.1976, 10.03.1976, 10.11.1972, 20.08.1970, 22.04.1977, 28.09.1981","196, 200, 202, 188, 195, 197, 193, 194, 196","A bar chart shows the distribution of Date_of_Birth and Height , and order X-axis from low to high order please."
"SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2016-01-01', '2017-01-01']], 'y_data': [[2, 20]], 'classify': [], 'describe': 'GROUP BY year'}",bar,year,COUNT(year),"2016-01-01, 2017-01-01","2, 20",Show me a bar chart about the number of races held in each year after 2014.
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'IT_PROG', 'HR_REP', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR']], 'y_data': [[200, 1100, 1098, 1911, 100, 100, 342, 308, 101, 432, 0, 101]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, IT_PROG, HR_REP, FI_ACCOUNT, AD_PRES, AC_MGR","200, 1100, 1098, 1911, 100, 100, 342, 308, 101, 432, 0, 101","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and could you rank from high to low by the x axis?"
"SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(T1.crs_credit)', 'x_data': [['CIS', 'ACCT']], 'y_data': [[27, 15]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(T1.crs_credit),"CIS, ACCT","27, 15","Give me a histogram for what are the total number of credits offered by each department?, and I want to sort by the Y-axis in desc."
"SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party ASC",Bar,Medium,election_representative,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Republican']], 'y_data': [[3, 4]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Democratic, Republican","3, 4","Plot how many party by grouped by party as a bar graph, list bar in asc order."
"SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'COUNT(Founder)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,COUNT(Founder),"Robert, Owen, Mary, John, James, Andy","2, 3, 1, 1, 3, 1","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and display in descending by the Founder."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['July', 'Sept', 'Oct', 'Aug', 'June']], 'y_data': [[3774.1935483870966, 4824.137931034483, 8300, 9074.193548387097, 9885.714285714286]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"July, Sept, Oct, Aug, June","3774.1935483870966, 4824.137931034483, 8300, 9074.193548387097, 9885.714285714286","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, display by the y-axis in ascending."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Russia', 'Bulgaria']], 'y_data': [[6, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Russia, Bulgaria","6, 1","How many people are there of each nationality Visualize by bar chart, and I want to display by the bars in descending."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50","For those employees who did not have any job in the past, give me the comparison about the average of department_id over the  job_id , and group by attribute job_id by a bar chart."
"SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Manufacturer) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Tokyo', 'Beijing', 'Taiwan', 'Austin', 'Los Angeles', 'Paris']], 'y_data': [[1, 4, 5, 6, 9, 12]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Manufacturer),"Tokyo, Beijing, Taiwan, Austin, Los Angeles, Paris","1, 4, 5, 6, 9, 12","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and could you show by the Y-axis in ascending?"
"SELECT middle_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'author_id', 'x_data': [['Keira', 'Ruthie', 'Alejandra', 'Ethyl', 'Joyce', 'Amani', 'Mathew', 'Aniyah', 'Kennith', 'Ethelyn', 'Jaclyn', 'Corene', 'Fritz', 'Jayce', 'Zena']], 'y_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'classify': [], 'describe': ''}",bar,middle_name,author_id,"Keira, Ruthie, Alejandra, Ethyl, Joyce, Amani, Mathew, Aniyah, Kennith, Ethelyn, Jaclyn, Corene, Fritz, Jayce, Zena","6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5",Draw a bar chart about the distribution of  middle_name and  author_id .
"SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'avg(Tonnage)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[4845, 3932.2]], 'classify': [], 'describe': ''}",bar,Type,avg(Tonnage),"Battle ship, Cargo ship","4845, 3932.2","Show different types of ships and the average tonnage of ships of each type Show bar chart, show in descending by the y-axis."
"SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) ASC",Bar,Medium,decoration_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Canada', 'United States']], 'y_data': [[4, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Canada, United States","4, 6","Show the different countries and the number of members from each Visualize by bar chart, order by the y axis from low to high please."
"SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'School_ID', 'x_data': [['9–7', '14–2', '13–3', '10–6']], 'y_data': [[5, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,School_ID,"9–7, 14–2, 13–3, 10–6","5, 1, 2, 4","Give me the comparison about School_ID over the ACC_Regular_Season by a bar chart, and order in desc by the names please."
"SELECT LAST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Baer', 'Fay', 'Gietz', 'Grant', 'Hartstein', 'Higgins', 'Mavris']], 'y_data': [[70, 20, 110, 0, 20, 110, 40]], 'classify': [], 'describe': ''}",bar,LAST_NAME,DEPARTMENT_ID,"Baer, Fay, Gietz, Grant, Hartstein, Higgins, Mavris","70, 20, 110, 0, 20, 110, 40","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id , and I want to show in asc by the LAST_NAME."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[930, 900, 1010, 860, 830, 890, 910]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","930, 900, 1010, 860, 830, 890, 910","For those employees who did not have any job in the past, visualize a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday."
"SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name ORDER BY avg(Product_Price) DESC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'avg(Product_Price)', 'x_data': [['film', 'photo', 'dinning']], 'y_data': [[11385515.333333336, 5102691.666666667, 238704.33333333328]], 'classify': [], 'describe': ''}",bar,Product_Name,avg(Product_Price),"film, photo, dinning","11385515.333333336, 5102691.666666667, 238704.33333333328","For each distinct product name, show its average product price, and sort in desc by the y-axis."
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Tokyo , Japan', 'Tijuana , Mexico', 'Sapporo , Japan', 'Osaka , Japan', 'Nagoya , Japan']], 'y_data': [[4, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Tokyo , Japan, Tijuana , Mexico, Sapporo , Japan, Osaka , Japan, Nagoya , Japan","4, 3, 1, 1, 1","A bar chart for what is the number of locations of the wrestlers, and I want to show y-axis in desc order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Oct', 'Sept', 'Aug', 'July', 'June']], 'y_data': [[206, 190.5, 160, 129, 106.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Oct, Sept, Aug, July, June","206, 190.5, 160, 129, 106.5","For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, could you list in desc by the y-axis?"
"SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) ASC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Made', 'y_name': 'COUNT(Date_Claim_Made)', 'x_data': [['Mon', 'Tue', 'Sun', 'Thur', 'Wed', 'Fri', 'Sat']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN Date_Claim_Made BY WEEKDAY'}",bar,Date_Claim_Made,COUNT(Date_Claim_Made),"Mon, Tue, Sun, Thur, Wed, Fri, Sat","0, 0, 1, 1, 1, 2, 2","A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, rank y axis from low to high order."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Floppy disk', 'Toner cartridge', 'CD drive', 'Memory', 'ZIP drive', 'DVD burner', 'Hard drive', 'Monitor', 'Printer', 'DVD drive']], 'y_data': [[5, 66, 90, 120, 150, 180, 240, 240, 270, 330]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Floppy disk, Toner cartridge, CD drive, Memory, ZIP drive, DVD burner, Hard drive, Monitor, Printer, DVD drive","5, 66, 90, 120, 150, 180, 240, 240, 270, 330","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, and I want to rank by the y-axis in asc."
"SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'gender_code', 'y_name': 'COUNT(*)', 'x_data': [['Female', 'Male', 'Unknown']], 'y_data': [[9, 3, 3]], 'classify': [], 'describe': ''}",bar,gender_code,COUNT(*),"Female, Male, Unknown","9, 3, 3",Show each gender code and the corresponding count of guests sorted by the count in descending order by a bar chart.
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Oct', 'June', 'July', 'Aug', 'Sept']], 'y_data': [[206, 1491, 3999, 4960, 5715]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Oct, June, July, Aug, Sept","206, 1491, 3999, 4960, 5715","For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and could you list by the y axis from low to high?"
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Wed', 'Mon', 'Sun', 'Thur', 'Tue', 'Sat', 'Fri']], 'y_data': [[2326, 2310, 2295, 2233, 2149, 2079, 1963]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Wed, Mon, Sun, Thur, Tue, Sat, Fri","2326, 2310, 2295, 2233, 2149, 2079, 1963","For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, and show from high to low by the total number of employee id."
"SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY SUM(Manufacturer) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Robert', 'James', 'Owen', 'John', 'Mary', 'Andy']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Manufacturer),"Robert, James, Owen, John, Mary, Andy","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart, and could you display from high to low by the y-axis?"
"SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY COUNT(Flag) ASC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Flag', 'y_name': 'COUNT(Flag)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'GROUP BY Flag'}",bar,Flag,COUNT(Flag),"Malta, Panama","1, 4","Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, and I want to rank total number in asc order please."
"SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Jandy', 'Linda', 'Lisa', 'Sarah', 'Shiela', 'Stacy', 'Susan', 'Tracy']], 'y_data': [[1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Jandy, Linda, Lisa, Sarah, Shiela, Stacy, Susan, Tracy","1, 1, 2, 2, 1, 1, 1, 1",A bar chart showing the number of first name for all female students. Their sex is F.
"SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name DESC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'student_id', 'x_data': [['Vicente', 'Ursula', 'Luella', 'Kolby', 'Karley', 'Kailey', 'Casimir', 'Camilla', 'Brandt', 'Asa']], 'y_data': [[10, 14, 2, 11, 12, 9, 4, 13, 3, 6]], 'classify': [], 'describe': ''}",bar,middle_name,student_id,"Vicente, Ursula, Luella, Kolby, Karley, Kailey, Casimir, Camilla, Brandt, Asa","10, 14, 2, 11, 12, 9, 4, 13, 3, 6","what are the student IDs and middle names of the students enrolled in at most two courses?, could you show names in desc order?"
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2016', '2017']], 'y_data': [[6, 3]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2016, 2017","6, 3","Show the number of start dates of all the apartment bookings made by guests with gender code ""Female"" for each year in a bar chart."
"SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Whalen', 'Russell', 'Raphaely', 'Mavris', 'King', 'Hunold', 'Higgins', 'Hartstein', 'Greenberg', 'Fripp', 'Baer']], 'y_data': [[200, 145, 114, 203, 100, 103, 205, 201, 108, 121, 204]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Whalen, Russell, Raphaely, Mavris, King, Hunold, Higgins, Hartstein, Greenberg, Fripp, Baer","200, 145, 114, 203, 100, 103, 205, 201, 108, 121, 204","Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, rank by the x-axis in descending."
"SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'Embraer ERJ-145', 'SAAB 340', 'Piper Archer III', 'Lockheed L1011', 'Boeing 757-300']], 'y_data': [[1, 1, 2, 1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,name,count(*),"Boeing 747-400, Boeing 737-800, Airbus A340-300, Embraer ERJ-145, SAAB 340, Piper Archer III, Lockheed L1011, Boeing 757-300","1, 1, 2, 1, 1, 1, 2, 1",Display a bar chart for what is the name of each aircraft and how many flights does each one complete?
"SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount DESC",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'charge_type', 'y_name': 'charge_amount', 'x_data': [['Health Check', 'Drugs', 'Daily Accommodation']], 'y_data': [[640, 322, 98]], 'classify': [], 'describe': ''}",bar,charge_type,charge_amount,"Health Check, Drugs, Daily Accommodation","640, 322, 98","How much does each charge type costs? List both charge type and amount, and sort by the Y in descending."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Bulgaria', 'Russia']], 'y_data': [[1, 6]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Bulgaria, Russia","1, 6","what are different nationalities of people and the corresponding number of people from each nation?, rank from low to high by the bar."
"SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(T1.crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[15, 27]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(T1.crs_credit),"ACCT, CIS","15, 27",What are the total number of credits offered by each department. Show bar chart.
"SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY Location DESC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['London', 'Glasgow', 'Birmingham']], 'y_data': [[10, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"London, Glasgow, Birmingham","10, 1, 1","How many locations? Draw a bar chart, could you sort X-axis in descending order?"
"SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Battle ship, Cargo ship","3, 5","Return a bar chart showing the total number of each ship type, list Y in ascending order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 150, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 150, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, and sort in asc by the x-axis."
"SELECT EMAIL , SALARY FROM employees ORDER BY EMAIL DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'SALARY', 'x_data': [['SMAVRIS', 'SKING', 'SHIGGINS', 'NGREENBE', 'MHARTSTE', 'JWHALEN', 'JRUSSEL', 'HBAER', 'DRAPHEAL', 'AHUNOLD', 'AFRIPP']], 'y_data': [[6500, 24000, 12000, 12000, 13000, 4400, 14000, 10000, 11000, 9000, 8200]], 'classify': [], 'describe': ''}",bar,EMAIL,SALARY,"SMAVRIS, SKING, SHIGGINS, NGREENBE, MHARTSTE, JWHALEN, JRUSSEL, HBAER, DRAPHEAL, AHUNOLD, AFRIPP","6500, 24000, 12000, 12000, 13000, 4400, 14000, 10000, 11000, 9000, 8200","Plot salary by grouped by email as a bar graph, and order in desc by the X please."
"SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) ASC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['Thur', 'Mon', 'Tue', 'Wed', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'BIN Open_Date BY WEEKDAY'}",bar,Open_Date,COUNT(Open_Date),"Thur, Mon, Tue, Wed, Fri, Sat, Sun","0, 1, 1, 1, 2, 2, 2","Visualize a bar chart that bin the open date into a day of the week interval and count them, and list in ascending by the total number please."
"SELECT Name , Age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY Age ASC",Bar,Medium,museum_visit,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Rafael van der Vaart', 'Arjen Robben', 'Fernando Gago']], 'y_data': [[25, 27, 36]], 'classify': [], 'describe': ''}",bar,Name,Age,"Rafael van der Vaart, Arjen Robben, Fernando Gago","25, 27, 36","histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, order y axis in ascending order."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['DBA', 'PROJ-MGR']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"DBA, PROJ-MGR","8, 7","Bar graph to show the total number from different role code, and order by the the total number from high to low."
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title",Bar,Easy,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case of the Mystery Weekend', 'The Case of the Smart Dummy', 'The Case: Off the Record', 'The Case of the Bermuda Triangle', 'The Case of the Piggy Banker']], 'y_data': [[15.99, 12.99, 8.99, 9.99, 12.99]], 'classify': [], 'describe': ''}",bar,Title,max(T1.price),"The Case of the Mystery Weekend, The Case of the Smart Dummy, The Case: Off the Record, The Case of the Bermuda Triangle, The Case of the Piggy Banker","15.99, 12.99, 8.99, 9.99, 12.99",Give me the title and highest price for each film in a bar chart.
"SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive, DVD drive","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","What is the number of names for each product in the store?, and display by the y-axis from low to high."
"SELECT Building , count(*) FROM Faculty GROUP BY building",Bar,Easy,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Barton', 'Krieger', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",bar,Building,count(*),"Barton, Krieger, NEB","20, 20, 18",Return a bar chart on how many faculty members does each building have? List the result with the name of the building.
"SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'sum(Population)', 'x_data': [['Africa', 'Asia', 'Oceania', 'South America']], 'y_data': [[784475000, 3705025700, 30401150, 345780000]], 'classify': [], 'describe': ''}",bar,Continent,sum(Population),"Africa, Asia, Oceania, South America","784475000, 3705025700, 30401150, 345780000",What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart.
"SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'Team_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,All_Neutral,Team_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 3, 4","Show me about the distribution of All_Neutral and Team_ID in a bar chart, and show by the Y in asc."
"SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events",Bar,Easy,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 4, 0, 0, 9, 0, 0]], 'classify': [], 'describe': 'BIN date_moved_in BY WEEKDAY'}",bar,date_moved_in,COUNT(date_moved_in),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 4, 0, 0, 9, 0, 0",Bar chart x axis date moved in y axis how many date moved in
"SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Railway_ID ASC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'Railway_ID', 'x_data': [['York', 'Bressingham']], 'y_data': [[1, 5]], 'classify': [], 'describe': ''}",bar,Location,Railway_ID,"York, Bressingham","1, 5","Show id and location of railways that are associated with more than one train by a bar chart, order in asc by the Y."
"SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) DESC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Village Store', 'City Mall']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Village Store, City Mall","3, 2","For each type of store, how many of them are there Plot them as bar chart, and display from high to low by the Y-axis."
"SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId ASC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'CountryName', 'y_name': 'CountryId', 'x_data': [['usa', 'germany', 'france', 'japan', 'italy', 'sweden', 'uk', 'korea']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,CountryName,CountryId,"usa, germany, france, japan, italy, sweden, uk, korea","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart on what are the names and ids of all countries with at least one car maker?, and order by the Y in asc."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'FI_MGR', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_MAN', 'AD_VP', 'FI_ACCOUNT', 'IT_PROG', 'PU_CLERK', 'SA_MAN', 'ST_MAN', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5, 5, 5, 20, 20, 30]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, FI_MGR, MK_MAN, MK_REP, PR_REP, PU_MAN, AD_VP, FI_ACCOUNT, IT_PROG, PU_CLERK, SA_MAN, ST_MAN, SH_CLERK, ST_CLERK, SA_REP","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5, 5, 5, 20, 20, 30","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, order by the y axis in ascending."
"SELECT Name , Weight FROM people",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Hubert Henno', 'Dominique Daquin', 'Stéphane Antiga', 'Laurent Capet', 'Frantz Granvorka', 'Vincent Montméat', 'Loïc De Kergret', 'Philippe Barça-Cysique', 'Guillaume Samica']], 'y_data': [[83, 85, 94, 92, 90, 88, 89, 88, 82]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Hubert Henno, Dominique Daquin, Stéphane Antiga, Laurent Capet, Frantz Granvorka, Vincent Montméat, Loïc De Kergret, Philippe Barça-Cysique, Guillaume Samica","83, 85, 94, 92, 90, 88, 89, 88, 82",Draw a bar chart about the distribution of  Name and  Weight .
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","3, 5","What is the total number of different nationalities of all ships? Give me a bar graph, and I want to list by the Y from low to high."
"SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY Course DESC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Course', 'y_name': 'COUNT(Course)', 'x_data': [['Science', 'Music', 'Math', 'History', 'Bible']], 'y_data': [[1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Course'}",bar,Course,COUNT(Course),"Science, Music, Math, History, Bible","1, 1, 2, 1, 1","Show the number of teachers of each course with a bar chart, could you show by the Course in desc?"
"SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Years_Played', 'y_name': 'COUNT(Years_Played)', 'x_data': [['8 (2003–2005, 2007–2011)', '4 (2003–2004, 2010–2011)', '3 (2009–2011)', '3 (2005, 2007–2008)', '2 (2010–2011)', '2 (2010-2011)', '2 (1988, 1990)', '1 (2011)']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Years_Played'}",bar,Years_Played,COUNT(Years_Played),"8 (2003–2005, 2007–2011), 4 (2003–2004, 2010–2011), 3 (2009–2011), 3 (2005, 2007–2008), 2 (2010–2011), 2 (2010-2011), 2 (1988, 1990), 1 (2011)","1, 1, 1, 1, 2, 1, 1, 2","Please give me a bar chart to show the number of players in each years played, show Years_Played in desc order please."
"SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'sum(Population)', 'x_data': [['Africa', 'Asia', 'Oceania', 'South America']], 'y_data': [[784475000, 3705025700, 30401150, 345780000]], 'classify': [], 'describe': ''}",bar,Continent,sum(Population),"Africa, Asia, Oceania, South America","784475000, 3705025700, 30401150, 345780000","For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Sun', 'Tue', 'Thur', 'Fri', 'Mon', 'Sat', 'Wed']], 'y_data': [[399, 596, 606, 886, 1000, 1144, 1162]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Sun, Tue, Thur, Fri, Mon, Sat, Wed","399, 596, 606, 886, 1000, 1144, 1162","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, display by the y axis in asc."
"SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country",Bar,Hard,railway,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'England', 'United States']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, England, United States","1, 1, 2","Show the countries that have managers of age above 50 or below 46, and count them by a bar chart"
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Winchester', 'Fujits', 'Iomega', 'Hewlett-Packard', 'Creative Labs', 'Sony']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Winchester, Fujits, Iomega, Hewlett-Packard, Creative Labs, Sony","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, sort in descending by the y-axis."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665",What is the average price for each type of product. Visualize by bar chart.
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'SA_MAN', 'ST_MAN', 'AC_ACCOUNT', 'MK_REP', 'PR_REP', 'HR_REP', 'FI_MGR', 'AC_MGR', 'AD_PRES']], 'y_data': [[4261, 2440, 2440, 570, 540, 514, 500, 400, 205, 201, 101, 101, 101, 101, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, SA_MAN, ST_MAN, AC_ACCOUNT, MK_REP, PR_REP, HR_REP, FI_MGR, AC_MGR, AD_PRES","4261, 2440, 2440, 570, 540, 514, 500, 400, 205, 201, 101, 101, 101, 101, 0","For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, sort Y-axis in descending order please."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC",Bar,Extra Hard,sakila_1,"{'chart': 'bar', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['July', 'Aug', 'June', 'May']], 'y_data': [[47, 47, 15, 5]], 'classify': [], 'describe': 'BIN payment_date BY MONTH'}",bar,payment_date,COUNT(payment_date),"July, Aug, June, May","47, 47, 15, 5","What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, I want to display by the Y in descending."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[4314, 3741, 3610, 1355, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, Sept, July, June, Oct","4314, 3741, 3610, 1355, 205","For those employees who was hired before 2002-06-21, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, and I want to show by the total number of manager id from high to low."
"SELECT T2.personal_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.personal_name DESC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'personal_name', 'y_name': 'student_id', 'x_data': [['Marshall', 'Eliza', 'Cary', 'Alicia']], 'y_data': [[8, 15, 14, 10]], 'classify': [], 'describe': ''}",bar,personal_name,student_id,"Marshall, Eliza, Cary, Alicia","8, 15, 14, 10","Find the student ID and personal name of the student with at least two enrollments, display by the x-axis in desc."
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Andy', 'Owen', 'James', 'Mary', 'John', 'Robert']], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Andy, Owen, James, Mary, John, Robert","1, 2, 3, 4, 5, 6","For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder by a bar chart, and could you sort Y-axis in ascending order?"
"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",Bar,Easy,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(*)', 'x_data': [['Columbia Masterworks', 'Decca Records', 'Delos Records', 'Deutsche Grammophon', 'EMI', 'Koch Records / Naxos Records', 'Kultur', 'Mercury Records', 'Philips', 'Philips Classics Records', 'RCA']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Record_Company,COUNT(*),"Columbia Masterworks, Decca Records, Delos Records, Deutsche Grammophon, EMI, Koch Records / Naxos Records, Kultur, Mercury Records, Philips, Philips Classics Records, RCA","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",How many orchestras does each record company manage. Show bar chart.
"SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) ASC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(*)', 'x_data': [['Clothes', 'Books', 'Electronics', 'Food']], 'y_data': [[2, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,Product_Type_Code,COUNT(*),"Clothes, Books, Electronics, Food","2, 4, 4, 5","Show different type codes of products and the number of products with each type code in a bar chart, and I want to order Y in asc order."
"SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY Location DESC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(*)', 'x_data': [['Verizon Center', 'TD Garden', 'Scotiabank Place', 'Madison Square Garden', 'Bell Centre']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Location,COUNT(*),"Verizon Center, TD Garden, Scotiabank Place, Madison Square Garden, Bell Centre","2, 1, 1, 1, 1","Bar chart of the total number from each location, I want to sort by the bars from high to low."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Manufacturer)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 5, 6, 5, 6, 1, 3, 3, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Manufacturer),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 5, 6, 5, 6, 1, 3, 3, 4","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, and sort by the X from low to high."
"SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'avg(Tonnage)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[4845, 3932.2]], 'classify': [], 'describe': ''}",bar,Type,avg(Tonnage),"Battle ship, Cargo ship","4845, 3932.2","For each type, what is the average tonnage, show from low to high by the Type."
"SELECT family_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'family_name', 'y_name': 'author_id', 'x_data': [['Rohan', 'Grant', 'Greenholt', 'Reichel', 'Champlin', 'Crist', 'Zboncak', 'Nader', 'Rowe', 'Treutel', 'Effertz', 'Armstrong', 'Haley', 'Kreiger', 'Barrows']], 'y_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'classify': [], 'describe': ''}",bar,family_name,author_id,"Rohan, Grant, Greenholt, Reichel, Champlin, Crist, Zboncak, Nader, Rowe, Treutel, Effertz, Armstrong, Haley, Kreiger, Barrows","6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5",Give me the comparison about  author_id over the  family_name .
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality",Bar,Easy,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[34.22222222222222, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"England, Northern Ireland, Wales","34.22222222222222, 29, 27",What are the nationalities and their average ages of journalists. Show me a bar chart.
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['PU_CLERK', 'ST_CLERK', 'SH_CLERK', 'AD_ASST', 'IT_PROG', 'MK_REP', 'HR_REP', 'ST_MAN', 'FI_ACCOUNT', 'AC_ACCOUNT', 'SA_REP', 'PR_REP', 'PU_MAN', 'AC_MGR', 'FI_MGR', 'SA_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[2780, 2785, 3215, 4400, 5760, 6000, 6500, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"PU_CLERK, ST_CLERK, SH_CLERK, AD_ASST, IT_PROG, MK_REP, HR_REP, ST_MAN, FI_ACCOUNT, AC_ACCOUNT, SA_REP, PR_REP, PU_MAN, AC_MGR, FI_MGR, SA_MAN, MK_MAN, AD_VP, AD_PRES","2780, 2785, 3215, 4400, 5760, 6000, 6500, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000","For those employees who was hired before 2002-06-21, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, rank in ascending by the Y."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Fujits', 'Iomega', 'Winchester', 'Sony', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[1, 3, 3, 5, 7.666666666666667, 9.333333333333334]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Fujits, Iomega, Winchester, Sony, Creative Labs, Hewlett-Packard","1, 3, 3, 5, 7.666666666666667, 9.333333333333334","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, I want to display Y-axis from low to high order."
"SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY SCHOOL_CODE ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_name)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_name),"A&SCI, BUS","7, 4","Find the number of departments in each school Plot them as bar chart, could you list in ascending by the X?"
"SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['L', '', 'R', 'U']], 'y_data': [[487, 954, 5028, 14193]], 'classify': [], 'describe': ''}",bar,hand,count(*),"L, , R, U","487, 954, 5028, 14193","Find the number of players for each hand type Show bar chart, and could you list by the total number in asc?"
"SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name ORDER BY Document_Name DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'COUNT(Document_Name)', 'x_data': [['Winona Book', 'Trenton Presentation', 'Review on USA files', 'Review on UK files', 'Review on French files', 'Review on Canadian files', 'Noel CV', 'King Book', 'Katheryn statement', 'Jevon Paper', 'Deontae files', 'Chapter on private files', 'Book on USA files']], 'y_data': [[1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Name'}",bar,Document_Name,COUNT(Document_Name),"Winona Book, Trenton Presentation, Review on USA files, Review on UK files, Review on French files, Review on Canadian files, Noel CV, King Book, Katheryn statement, Jevon Paper, Deontae files, Chapter on private files, Book on USA files","1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis document name y axis the number of document name, rank X-axis in descending order."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'IT_PROG', 'HR_REP', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR']], 'y_data': [[122, 135.44444444444446, 189.55555555555554, 164.76923076923077, 148, 114, 116, 105, 203, 111.25, 100, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, IT_PROG, HR_REP, FI_ACCOUNT, AD_PRES, AC_MGR","122, 135.44444444444446, 189.55555555555554, 164.76923076923077, 148, 114, 116, 105, 203, 111.25, 100, 205","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and order from high to low by the x axis please."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665","what is the average price for each type of product?, and order y axis from low to high order."
"SELECT Team_Name , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.946, 0.8240000000000001, 0.706, 0.6","Find  Team_Name and  All_Games_Percent , and visualize them by a bar chart."
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Cable TV', 'Gym']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Cable TV, Gym","1, 2",Show the number of the facility codes of apartments with more than 4 bedrooms.
"SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY ACC_Regular_Season ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'School_ID', 'x_data': [['10–6', '13–3', '14–2', '9–7']], 'y_data': [[4, 2, 1, 5]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,School_ID,"10–6, 13–3, 14–2, 9–7","4, 2, 1, 5","Return a bar chart about the distribution of ACC_Regular_Season and School_ID , and could you rank by the x-axis from low to high?"
"SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY T2.Name DESC",Bar,Hard,race_track,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Martinsville Speedway', 'Kansas Speedway', 'Homestead-Miami Speedway', 'Daytona International Speedway', 'Chicagoland Speedway', 'Auto Club Speedway']], 'y_data': [[1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Martinsville Speedway, Kansas Speedway, Homestead-Miami Speedway, Daytona International Speedway, Chicagoland Speedway, Auto Club Speedway","1, 1, 1, 1, 2, 1","Show the name of track and the number of races in each track Visualize by bar chart, order in desc by the Name."
"SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex DESC",Bar,Hard,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"M, F","4, 2","Count the number of people of each sex who have a weight higher than 85 by a bar chart, show from high to low by the bar."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Dec', 'Aug', 'Sept', 'Oct', 'Nov']], 'y_data': [[1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Dec, Aug, Sept, Oct, Nov","1, 1, 0, 0, 0","Find the number of the the date of enrollment of the ""Spanish"" course, could you list in descending by the y-axis please?"
"SELECT EMAIL , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'SALARY', 'x_data': [['PFAY', 'SMAVRIS', 'KGRANT', 'WGIETZ', 'HBAER', 'SHIGGINS', 'MHARTSTE']], 'y_data': [[6000, 6500, 7000, 8300, 10000, 12000, 13000]], 'classify': [], 'describe': ''}",bar,EMAIL,SALARY,"PFAY, SMAVRIS, KGRANT, WGIETZ, HBAER, SHIGGINS, MHARTSTE","6000, 6500, 7000, 8300, 10000, 12000, 13000","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the email , and display y-axis in ascending order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[14, 31, 31, 29, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept, Oct","14, 31, 31, 29, 1","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of  hire_date and the amount of hire_date bin hire_date by time in a bar chart."
"SELECT All_Games , Team_ID FROM basketball_match ORDER BY Team_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'Team_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,All_Games,Team_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 3, 4","Give me the comparison about Team_ID over the All_Games by a bar chart, rank in asc by the Y."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[10241.666666666666, 3429.1666666666665, 9303.57142857143, 4491.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept","10241.666666666666, 3429.1666666666665, 9303.57142857143, 4491.666666666667","For those employees whose first name does not containing the letter M, display their average salary by binning the hire date into Month interval for visualizing a bar chart."
"SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25.5]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer, student","45, 35, 25.5","What is average age for different job title Visualize by bar chart, I want to rank by the bars from low to high."
"SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY state ASC",Bar,Medium,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'COUNT(state)', 'x_data': [['CA', 'NJ\n', 'NY']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,COUNT(state),"CA, NJ
, NY","1, 1, 2","Bar chart x axis state y axis the number of state, could you list in asc by the bars?"
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Wed', 'Thur', 'Mon', 'Tue', 'Sun', 'Sat', 'Fri']], 'y_data': [[2, 2, 2, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Wed, Thur, Mon, Tue, Sun, Sat, Fri","2, 2, 2, 1, 1, 0, 0","What are the number of the enrollment dates of all the tests that have result ""Pass""?, and sort in descending by the y-axis."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY count(*) ASC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['Chrisside', 'Feliciaberg', 'Macejkovicchester', 'Monahanshire', 'Port Maximeview', 'Purdyville', 'Rueckermouth', 'South Eugenia', 'West Sherwoodstad', 'Jasthaven', 'Nataliamouth', 'New Lonzoville']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"Chrisside, Feliciaberg, Macejkovicchester, Monahanshire, Port Maximeview, Purdyville, Rueckermouth, South Eugenia, West Sherwoodstad, Jasthaven, Nataliamouth, New Lonzoville","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Show me a bar chart for how many drama workshop groups are there in each city? Return both the city and the count, and show by the Y-axis in ascending."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""  ORDER BY COUNT(booking_start_date) DESC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Tue', 'Sat', 'Mon', 'Wed', 'Thur', 'Fri', 'Sun']], 'y_data': [[2, 2, 2, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Tue, Sat, Mon, Wed, Thur, Fri, Sun","2, 2, 2, 1, 1, 1, 0","A bar chart showing the number of start date of the apartment bookings made by female guests (gender code ""Female"") for each weekday, and show by the Y in descending."
"SELECT Sex , max(age) FROM student GROUP BY Sex",Bar,Easy,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'max(age)', 'x_data': [['F', 'M']], 'y_data': [[26, 27]], 'classify': [], 'describe': ''}",bar,Sex,max(age),"F, M","26, 27",What is the oldest age for each gender of student? Return a bar chart.
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['presidents hall', 'history gallery', 'fun shops', 'flying elephant', 'UK gallery']], 'y_data': [[8429, 6653, 9360, 5076, 2701]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"presidents hall, history gallery, fun shops, flying elephant, UK gallery","8429, 6653, 9360, 5076, 2701","What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, could you order from high to low by the Name?"
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–2', '15–1', '14–3']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–2, 15–1, 14–3","2, 2, 4","Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, sort by the y-axis in ascending please."
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Tokyo , Japan', 'Tijuana , Mexico', 'Sapporo , Japan', 'Osaka , Japan', 'Nagoya , Japan']], 'y_data': [[4, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Tokyo , Japan, Tijuana , Mexico, Sapporo , Japan, Osaka , Japan, Nagoya , Japan","4, 3, 1, 1, 1","Draw a bar chart of location versus how many location, sort by the x-axis from high to low."
"SELECT Name , SUM(Price) FROM products GROUP BY Name ORDER BY SUM(Price) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Floppy disk', 'Toner cartridge', 'CD drive', 'Memory', 'ZIP drive', 'DVD burner', 'Hard drive', 'Monitor', 'Printer', 'DVD drive']], 'y_data': [[5, 66, 90, 120, 150, 180, 240, 240, 270, 330]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Floppy disk, Toner cartridge, CD drive, Memory, ZIP drive, DVD burner, Hard drive, Monitor, Printer, DVD drive","5, 66, 90, 120, 150, 180, 240, 240, 270, 330","What are the names and the accumulated prices of all products in the store Plot them as a bar chart, I want to order by the Y in asc please."
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY count(*) DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Krieger', 'Barton', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",bar,Building,count(*),"Krieger, Barton, NEB","20, 20, 18","Show me a bar chart for how many faculty members does each building have? List the result with the name of the building, list Y from high to low order please."
"SELECT Name , Height FROM people ORDER BY Name ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Dominique Daquin', 'Frantz Granvorka', 'Guillaume Samica', 'Hubert Henno', 'Laurent Capet', 'Loïc De Kergret', 'Philippe Barça-Cysique', 'Stéphane Antiga', 'Vincent Montméat']], 'y_data': [[197, 195, 196, 188, 202, 193, 194, 200, 196]], 'classify': [], 'describe': ''}",bar,Name,Height,"Dominique Daquin, Frantz Granvorka, Guillaume Samica, Hubert Henno, Laurent Capet, Loïc De Kergret, Philippe Barça-Cysique, Stéphane Antiga, Vincent Montméat","197, 195, 196, 188, 202, 193, 194, 200, 196","Draw a bar chart of name versus height, I want to sort bars in asc order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees  ORDER BY SUM(SALARY) DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Sept', 'June', 'July', 'Aug']], 'y_data': [[45900, 45000, 19200, 14000]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Sept, June, July, Aug","45900, 45000, 19200, 14000","Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart, I want to show by the y-axis in descending."
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY payment_method_code DESC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Visa', 'MasterCard', 'American E']], 'y_data': [[5, 6, 4]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Visa, MasterCard, American E","5, 6, 4","Give me a bar chart for the total number of each payment method code, and could you display by the names in descending?"
"SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME ORDER BY STU_FNAME DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'SUM(STU_GPA)', 'x_data': [['William', 'Juliette', 'John']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,SUM(STU_GPA),"William, Juliette, John","2, 2, 4","Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, I want to rank by the bar in desc."
"SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY COUNT(Sex) DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'COUNT(Sex)', 'x_data': [['M', 'F']], 'y_data': [[7, 2]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,COUNT(Sex),"M, F","7, 2","Show me about the distribution of Sex and the amount of Sex , and group by attribute Sex in a bar chart, rank y-axis from high to low order."
"SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'COUNT(*)', 'x_data': [['AI', 'Art history', 'Chinese Painting', 'French', 'Japanese', 'Spanish', 'Writing in French', 'advanced database', 'database', 'modern Arts']], 'y_data': [[2, 2, 1, 3, 2, 2, 2, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,course_name,COUNT(*),"AI, Art history, Chinese Painting, French, Japanese, Spanish, Writing in French, advanced database, database, modern Arts","2, 2, 1, 3, 2, 2, 2, 2, 2, 2",What is the name of each course and the corresponding number of student enrollment. Show bar chart.
"SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'CRS_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT-211', 'ACCT-212', 'CIS-220', 'CIS-420', 'QM-261', 'QM-362']], 'y_data': [[3, 2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,CRS_CODE,count(*),"ACCT-211, ACCT-212, CIS-220, CIS-420, QM-261, QM-362","3, 2, 3, 1, 2, 2",how many sections does each course has?
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'June', 'July', 'Sept', 'Aug']], 'y_data': [[205, 1355, 3610, 3741, 4314]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, June, July, Sept, Aug","205, 1355, 3610, 3741, 4314","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort by the y-axis in ascending please."
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['T', 'F']], 'y_data': [[19, 9]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"T, F","19, 9","Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, show in desc by the total number of employee id."
"SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY sum(Rating_in_percent) ASC",Bar,Medium,program_share,"{'chart': 'bar', 'x_name': 'Owner', 'y_name': 'sum(Rating_in_percent)', 'x_data': [['Shandong Television', 'Anhui Television', 'HBS', 'CCTV']], 'y_data': [[0.19, 0.2, 0.53, 2.43]], 'classify': [], 'describe': ''}",bar,Owner,sum(Rating_in_percent),"Shandong Television, Anhui Television, HBS, CCTV","0.19, 0.2, 0.53, 2.43","A bar chart about what is the total rating of channel for each channel owner?, display in ascending by the y axis."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200","For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and I want to show by the X-axis in ascending."
"SELECT login_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'login_name', 'y_name': 'author_tutor_ATB', 'x_data': [['al75', 'jmckenzie', 'dschaefer', 'clementina29', 'adam.rippin', 'fiona77', 'antonetta19', 'wlehner', 'medhurst.alvah', 'marty.bergnaum', 'qking', 'heidenreich.ara', 'ekshlerin', 'nellie.mosciski', 'nyundt']], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",bar,login_name,author_tutor_ATB,"al75, jmckenzie, dschaefer, clementina29, adam.rippin, fiona77, antonetta19, wlehner, medhurst.alvah, marty.bergnaum, qking, heidenreich.ara, ekshlerin, nellie.mosciski, nyundt","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Give me the comparison about  author_tutor_ATB over the  login_name  by a bar chart.
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'Sept']], 'y_data': [[205, 753]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, Sept","205, 753","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, list by the Y in asc."
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20",Bar,Medium,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 3, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_became_customer BY WEEKDAY'}",bar,date_became_customer,COUNT(date_became_customer),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 3, 0, 1, 1","Find the ""date became customers"" of the customers whose ID is between 10 and 20, and count them by a bar chart"
"SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'Headquartered_City', 'y_name': 'count(*)', 'x_data': [['Bahawalpur City', 'Bhakkar City', 'Hafizabad City', 'Khanewal City']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Headquartered_City,count(*),"Bahawalpur City, Bhakkar City, Hafizabad City, Khanewal City","1, 1, 1, 2",Find the number of stores in each city. Plot them as bar chart.
"SELECT name , distance FROM Aircraft ORDER BY name ASC",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Airbus A319', 'Airbus A320', 'Airbus A340-300', 'Boeing 727', 'Boeing 737-800', 'Boeing 747-400', 'Boeing 757-300', 'Boeing 767-400ER', 'Boeing 777-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145', 'Lockheed L1011', 'Piper Archer III', 'SAAB 340', 'Schwitzer 2-33', 'Tupolev 154']], 'y_data': [[1805, 2605, 7120, 1504, 3383, 8430, 4010, 6475, 6441, 1502, 1530, 6900, 520, 2128, 30, 4103]], 'classify': [], 'describe': ''}",bar,name,distance,"Airbus A319, Airbus A320, Airbus A340-300, Boeing 727, Boeing 737-800, Boeing 747-400, Boeing 757-300, Boeing 767-400ER, Boeing 777-300, British Aerospace Jetstream 41, Embraer ERJ-145, Lockheed L1011, Piper Archer III, SAAB 340, Schwitzer 2-33, Tupolev 154","1805, 2605, 7120, 1504, 3383, 8430, 4010, 6475, 6441, 1502, 1530, 6900, 520, 2128, 30, 4103","Show me distance by name in a histogram, and order names from low to high order please."
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[2, 7, 9]], 'classify': [], 'describe': ''}",bar,Name,Code,"Memory, CD drive, Toner cartridge","2, 7, 9","For those products with a price between 60 and 120, a bar chart shows the distribution of name and code , list Y-axis in ascending order please."
"SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown DESC",Bar,Medium,shop_membership,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(Hometown)', 'x_data': [['Simpsonville, South Carolina', 'Red Jacket, West Virginia', 'Louisville, Kentucky', 'LaGrange, Georgia', 'Jacksonville, Florida', 'Hiram, Georgia', 'Fort Campbell, Kentucky', 'Columbia, South Carolina', 'Collierville, Tennessee']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Hometown'}",bar,Hometown,COUNT(Hometown),"Simpsonville, South Carolina, Red Jacket, West Virginia, Louisville, Kentucky, LaGrange, Georgia, Jacksonville, Florida, Hiram, Georgia, Fort Campbell, Kentucky, Columbia, South Carolina, Collierville, Tennessee","1, 1, 2, 1, 1, 1, 1, 1, 1","Show the hometown of all members, and rank X-axis in desc order."
"SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'MANAGER_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[149, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,MANAGER_ID,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","149, 100, 201, 101, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  phone_number and  manager_id ."
"SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY Comptroller ASC",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Comptroller', 'y_name': 'COUNT(Comptroller)', 'x_data': [['Alan Hevesi', 'Carl McCall', 'John Faso']], 'y_data': [[1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Comptroller'}",bar,Comptroller,COUNT(Comptroller),"Alan Hevesi, Carl McCall, John Faso","1, 3, 1","Find the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties, and count them by a bar chart, and rank in asc by the x axis."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['pl', 'db', 'ml', 'dl', 'nlp', 'cal', 'la', 'fr', 'en', 'math', 'ds']], 'y_data': [[14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"pl, db, ml, dl, nlp, cal, la, fr, en, math, ds","14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1","What are the names and id of courses having at most 2 sections, and order y axis from high to low order please."
"SELECT Fname , COUNT(Fname) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Eric', 'William', 'Steven', 'Stacy', 'Shiela', 'Sarah', 'Paul', 'Mark', 'Lisa', 'Linda', 'Jandy', 'Ian', 'George', 'David', 'Bruce', 'Arthur']], 'y_data': [[5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Eric, William, Steven, Stacy, Shiela, Sarah, Paul, Mark, Lisa, Linda, Jandy, Ian, George, David, Bruce, Arthur","5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What is the first name of each student who is not allergic to any type of food? Count them in a bar chart, and I want to list from high to low by the Y."
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['F', 'T']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,COUNT(Is_full_time),"F, T","2, 5","Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, show from low to high by the total number."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 101, 0, 200, 540, 101, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 101, 0, 200, 540, 101, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list from low to high by the names."
"SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'Floppy disk', 'Memory', 'Toner cartridge', 'ZIP drive', 'DVD drive']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, Floppy disk, Memory, Toner cartridge, ZIP drive, DVD drive","1, 1, 1, 1, 1, 1, 2","A bar chart for what are the number of the names of products with price at most 200?, and show from low to high by the total number please."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[4314, 3640, 3610, 1355, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, Sept, July, June, Oct","4314, 3640, 3610, 1355, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and list Y-axis from high to low order."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY COUNT(*) ASC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'John Brown', 'Tony Sewell', 'Joe Sewell']], 'y_data': [[1, 1, 1, 1, 5]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Charlie Hollocher, Eddie Collins, John Brown, Tony Sewell, Joe Sewell","1, 1, 1, 1, 5","Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, and list from low to high by the total number please."
"SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) DESC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'outcome_code', 'y_name': 'count(*)', 'x_data': [['Order', 'No Response']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,outcome_code,count(*),"Order, No Response","10, 5","Show the outcome code of mailshots along with the number of mailshots in each outcome code in a bar chart, list Y in descending order."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Les Misérables', 'The Book of Mormon', 'The Phantom of the Opera', 'West Side Story']], 'y_data': [[2, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Les Misérables, The Book of Mormon, The Phantom of the Opera, West Side Story","2, 4, 2, 1","how many actors have appeared in each musical?, order x-axis in ascending order please."
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Beijing', 'Taiwan', 'Tokyo', 'Austin', 'Los Angeles', 'Paris']], 'y_data': [[200, 130, 120, 100, 50, 30]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Beijing, Taiwan, Tokyo, Austin, Los Angeles, Paris","200, 130, 120, 100, 50, 30","For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the average of revenue , and group by attribute headquarter in a bar chart, and order by the total number from high to low."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'FI_ACCOUNT', 'PU_CLERK', 'IT_PROG', 'ST_MAN', 'SA_MAN', 'PU_MAN', 'HR_REP', 'AD_PRES', 'AC_MGR']], 'y_data': [[13, 9, 9, 4, 3, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, FI_ACCOUNT, PU_CLERK, IT_PROG, ST_MAN, SA_MAN, PU_MAN, HR_REP, AD_PRES, AC_MGR","13, 9, 9, 4, 3, 3, 2, 1, 1, 1, 1, 1","For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and show from high to low by the y axis please."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AD_PRES', 'SA_MAN', 'FI_MGR', 'AC_MGR', 'PR_REP', 'SA_REP', 'AC_ACCOUNT', 'FI_ACCOUNT', 'ST_MAN', 'HR_REP', 'MK_REP', 'IT_PROG', 'SH_CLERK', 'ST_CLERK', 'PU_CLERK']], 'y_data': [[24000, 12200, 12000, 12000, 10000, 8341.379310344828, 8300, 7920, 7125, 6500, 6000, 5760, 3215, 2785, 2780]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AD_PRES, SA_MAN, FI_MGR, AC_MGR, PR_REP, SA_REP, AC_ACCOUNT, FI_ACCOUNT, ST_MAN, HR_REP, MK_REP, IT_PROG, SH_CLERK, ST_CLERK, PU_CLERK","24000, 12200, 12000, 12000, 10000, 8341.379310344828, 8300, 7920, 7125, 6500, 6000, 5760, 3215, 2785, 2780","For those employees who did not have any job in the past, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and sort from high to low by the Y."
"SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC",Bar,Hard,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'count(*)', 'x_data': [['statistics', 'data structure', 'French', 'English']], 'y_data': [[4, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,course_name,count(*),"statistics, data structure, French, English","4, 1, 2, 2","Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, display by the names from high to low."
"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC",Bar,Medium,singer,"{'chart': 'bar', 'x_name': 'Citizenship', 'y_name': 'COUNT(*)', 'x_data': [['Australia', 'Chile', 'France', 'Germany', 'United States']], 'y_data': [[1, 1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Citizenship,COUNT(*),"Australia, Chile, France, Germany, United States","1, 1, 1, 1, 4","For each citizenship, how many singers are from that country, and display in asc by the Y."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Confirmed', 'Provisional']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Confirmed, Provisional","7, 8",Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['cat', 'dog']], 'y_data': [[12, 11.35]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"cat, dog","12, 11.35",What is the average weight for each type of pet. Show bar chart.
"SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,decoration_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['United States', 'Canada']], 'y_data': [[6, 4]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"United States, Canada","6, 4","Show the different countries and the number of members from each Visualize by bar chart, list by the total number in descending."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['The Book of Mormon', 'The Phantom of the Opera', 'Les Misérables', 'West Side Story']], 'y_data': [[4, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"The Book of Mormon, The Phantom of the Opera, Les Misérables, West Side Story","4, 2, 2, 1","How many actors have appeared in each musical Plot them as bar chart, and could you rank from high to low by the the total number ?"
"SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'count(*)', 'x_data': [['GV', 'SF', 'ORG']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': ''}",bar,Budget_Type_Code,count(*),"GV, SF, ORG","6, 2, 2","What are the different budget type codes, and how many documents are there for each Plot them as bar chart, could you list in desc by the y axis please?"
"SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Price)', 'x_data': [['Robert', 'Mary', 'Owen', 'James', 'Andy', 'John']], 'y_data': [[62.5, 150, 150, 162, 240, 240]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Price),"Robert, Mary, Owen, James, Andy, John","62.5, 150, 150, 162, 240, 240","For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of price , and group by attribute founder in a bar chart, list y-axis in asc order."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code ORDER BY booking_status_code ASC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Confirmed', 'Provisional']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Confirmed, Provisional","7, 8","Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, show names in asc order."
"SELECT name , distance FROM Aircraft ORDER BY distance DESC",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Boeing 747-400', 'Airbus A340-300', 'Lockheed L1011', 'Boeing 767-400ER', 'Boeing 777-300', 'Tupolev 154', 'Boeing 757-300', 'Boeing 737-800', 'Airbus A320', 'SAAB 340', 'Airbus A319', 'Embraer ERJ-145', 'Boeing 727', 'British Aerospace Jetstream 41', 'Piper Archer III', 'Schwitzer 2-33']], 'y_data': [[8430, 7120, 6900, 6475, 6441, 4103, 4010, 3383, 2605, 2128, 1805, 1530, 1504, 1502, 520, 30]], 'classify': [], 'describe': ''}",bar,name,distance,"Boeing 747-400, Airbus A340-300, Lockheed L1011, Boeing 767-400ER, Boeing 777-300, Tupolev 154, Boeing 757-300, Boeing 737-800, Airbus A320, SAAB 340, Airbus A319, Embraer ERJ-145, Boeing 727, British Aerospace Jetstream 41, Piper Archer III, Schwitzer 2-33","8430, 7120, 6900, 6475, 6441, 4103, 4010, 3383, 2605, 2128, 1805, 1530, 1504, 1502, 520, 30","Show name and distance for all aircrafts by a bar chart, and display by the total number in desc please."
"SELECT City , COUNT(City) FROM branch GROUP BY City ORDER BY open_year",Bar,Medium,shop_membership,"{'chart': 'bar', 'x_name': 'City', 'y_name': 'COUNT(City)', 'x_data': [['London', 'Oxford']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY City'}",bar,City,COUNT(City),"London, Oxford","5, 3","Visualize a bar chart, grouping by city attribute, and compute the total number in each group."
"SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['International Practicum', 'Game Programming', 'World History', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'Immunology', 'Groups and Rings', 'Graph Theory', 'Embedded Systems', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"International Practicum, Game Programming, World History, Rock and Roll, Ponzi Schemes, Operating Systems, Immunology, Groups and Rings, Graph Theory, Embedded Systems, Electron Microscopy, Elastic Structures, Differential Geometry","2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many courses have two prerequisites? Show me a bar chart grouping by title, and sort y-axis in desc order."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 122, 122, 147, 100, 100, 114, 101, 201, 100, 102.8, 101, 108, 100, 0, 101, 101, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","100, 122, 122, 147, 100, 100, 114, 101, 201, 100, 102.8, 101, 108, 100, 0, 101, 101, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, list by the x axis in descending."
"SELECT Sex , AVG(Weight) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.71428571428571]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Weight),"F, M","92, 86.71428571428571","Show me about the distribution of  Sex and the average of Weight , and group by attribute Sex in a bar chart."
"SELECT LAST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'EMPLOYEE_ID', 'x_data': [['Baer', 'Fay', 'Gietz', 'Grant', 'Hartstein', 'Higgins', 'Mavris']], 'y_data': [[204, 202, 206, 178, 201, 205, 203]], 'classify': [], 'describe': ''}",bar,LAST_NAME,EMPLOYEE_ID,"Baer, Fay, Gietz, Grant, Hartstein, Higgins, Mavris","204, 202, 206, 178, 201, 205, 203","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , I want to order LAST_NAME from low to high order."
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Astronomy', 'Comp. Sci.', 'Cybernetics', 'Finance', 'Geology', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.']], 'y_data': [[79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Astronomy, Comp. Sci., Cybernetics, Finance, Geology, Marketing, Mech. Eng., Physics, Pol. Sci.","79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8","What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and sort dept_name in ascending order."
"SELECT Name , COUNT(Name) FROM Products GROUP BY Name",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","1, 1, 2, 1, 1, 1, 1, 1, 1, 1",What are the number of the names of all products?
"SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'SUM(Height)', 'x_data': [['M', 'F']], 'y_data': [[1366, 395]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,SUM(Height),"M, F","1366, 395","Show me about the distribution of Sex and the sum of Height , and group by attribute Sex in a bar chart, and list X in descending order."
"SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SUM(SALARY)', 'x_data': [['Adam', 'Payam', 'William']], 'y_data': [[8200, 7900, 15700]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",bar,FIRST_NAME,SUM(SALARY),"Adam, Payam, William","8200, 7900, 15700","For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2016', '2017']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2016, 2017","6, 1","What is the number of booking start dates of the apartments with type code ""Duplex"" in each year? Return a bar chart."
"SELECT Name , Weight FROM people ORDER BY Weight ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Guillaume Samica', 'Hubert Henno', 'Dominique Daquin', 'Philippe Barça-Cysique', 'Vincent Montméat', 'Loïc De Kergret', 'Frantz Granvorka', 'Laurent Capet', 'Stéphane Antiga']], 'y_data': [[82, 83, 85, 88, 88, 89, 90, 92, 94]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Guillaume Samica, Hubert Henno, Dominique Daquin, Philippe Barça-Cysique, Vincent Montméat, Loïc De Kergret, Frantz Granvorka, Laurent Capet, Stéphane Antiga","82, 83, 85, 88, 88, 89, 90, 92, 94","A bar chart shows the distribution of Name and Weight , rank by the y-axis in asc."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[198.83333333333334, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Sept, Oct","198.83333333333334, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, I want to rank in ascending by the y-axis."
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['Wales', 'Northern Ireland', 'England']], 'y_data': [[27, 29, 308]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"Wales, Northern Ireland, England","27, 29, 308","Bar chart of sum age from each nationality, and list by the Y in asc."
"SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY Committee ASC",Bar,Medium,election,"{'chart': 'bar', 'x_name': 'Committee', 'y_name': 'COUNT(Committee)', 'x_data': [['Appropriations', 'Economic Matters', 'Environmental Matters', 'Environmental Matters (Vice-Chair)', 'Health and Government Operations', 'Ways and Means']], 'y_data': [[3, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Committee'}",bar,Committee,COUNT(Committee),"Appropriations, Economic Matters, Environmental Matters, Environmental Matters (Vice-Chair), Health and Government Operations, Ways and Means","3, 1, 1, 1, 1, 1","Show how many committee from each committee, show X from low to high order."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['James', 'Owen', 'Robert', 'Andy', 'Mary', 'John']], 'y_data': [[28, 23, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"James, Owen, Robert, Andy, Mary, John","28, 23, 6, 5, 3, 1","For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, I want to sort by the Y-axis in desc."
"SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'friend', 'y_name': 'age', 'x_data': [['Bob', 'Zach']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,friend,age,"Bob, Zach","35, 45","Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and order by the age in ascending."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Aug', 'Sept', 'Oct', 'Nov', 'Dec']], 'y_data': [[1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Aug, Sept, Oct, Nov, Dec","1, 0, 0, 0, 1","What is the date of enrollment of the course named ""Spanish"", and count them by a bar chart"
"SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[5, 8]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, CIS","5, 8",Find the number of classes in each department. Visualize by bar chart.
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Physics', 'Finance', 'Psychology', 'Cybernetics', 'Math', 'Athletics', 'History', 'Biology', 'Astronomy', 'English', 'Languages', 'Pol. Sci.']], 'y_data': [[942162.76, 866831.75, 848175.04, 794541.46, 777605.11, 734550.7, 699140.86, 647610.55, 617253.94, 611042.66, 601283.6, 573745.09]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Physics, Finance, Psychology, Cybernetics, Math, Athletics, History, Biology, Astronomy, English, Languages, Pol. Sci.","942162.76, 866831.75, 848175.04, 794541.46, 777605.11, 734550.7, 699140.86, 647610.55, 617253.94, 611042.66, 601283.6, 573745.09","Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order by the budget from high to low."
"SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY COUNT(customer_details) ASC",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'customer_details', 'y_name': 'COUNT(customer_details)', 'x_data': [['Esteban Senger', 'Monty Sauer III', 'Mr. Raul Prosacco', 'Tyrique Durgan II', 'Vincenza Price', 'Mackenzie Hettinger V', 'Oma Smith', 'Sabryna Moore PhD']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY customer_details'}",bar,customer_details,COUNT(customer_details),"Esteban Senger, Monty Sauer III, Mr. Raul Prosacco, Tyrique Durgan II, Vincenza Price, Mackenzie Hettinger V, Oma Smith, Sabryna Moore PhD","1, 1, 1, 1, 1, 2, 2, 4","Can you draw a bar chart to show the number of items in each customer details category?, I want to order in asc by the total number."
"SELECT All_Games , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['21–14', '24–10', '28–6', '35–2']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,All_Games,School_ID,"21–14, 24–10, 28–6, 35–2","5, 4, 2, 1","Draw a bar chart about the distribution of All_Games and School_ID , and list by the y axis in descending."
"SELECT Name , Weight FROM people ORDER BY Weight ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Guillaume Samica', 'Hubert Henno', 'Dominique Daquin', 'Philippe Barça-Cysique', 'Vincent Montméat', 'Loïc De Kergret', 'Frantz Granvorka', 'Laurent Capet', 'Stéphane Antiga']], 'y_data': [[82, 83, 85, 88, 88, 89, 90, 92, 94]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Guillaume Samica, Hubert Henno, Dominique Daquin, Philippe Barça-Cysique, Vincent Montméat, Loïc De Kergret, Frantz Granvorka, Laurent Capet, Stéphane Antiga","82, 83, 85, 88, 88, 89, 90, 92, 94","Show me about the distribution of Name and Weight in a bar chart, rank by the y axis from low to high."
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Statistics', 'Psychology', 'Pol. Sci.', 'Physics', 'Mech. Eng.', 'Math', 'Marketing', 'Languages', 'History', 'Geology', 'Finance', 'English', 'Elec. Eng.', 'Cybernetics', 'Comp. Sci.', 'Civil Eng.', 'Biology', 'Athletics', 'Astronomy', 'Accounting']], 'y_data': [[21, 44, 23, 38, 40, 34, 20, 37, 29, 33, 49, 28, 28, 67, 37, 34, 23, 30, 37, 40]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Statistics, Psychology, Pol. Sci., Physics, Mech. Eng., Math, Marketing, Languages, History, Geology, Finance, English, Elec. Eng., Cybernetics, Comp. Sci., Civil Eng., Biology, Athletics, Astronomy, Accounting","21, 44, 23, 38, 40, 34, 20, 37, 29, 33, 49, 28, 28, 67, 37, 34, 23, 30, 37, 40","Bar chart of total number of credits from each dept name, and display dept_name in descending order."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 122, 122, 146.93103448275863, 100, 114, 101, 201, 102.8, 101, 101, 108, 0, 101, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","100, 122, 122, 146.93103448275863, 100, 114, 101, 201, 102.8, 101, 101, 108, 0, 101, 205","For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, could you order X from high to low order?"
"SELECT staff_name , COUNT(staff_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY staff_name ORDER BY COUNT(staff_name) DESC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'staff_name', 'y_name': 'COUNT(staff_name)', 'x_data': [['Kadin', 'Edmond', 'Bernice', 'Berneice', 'Rodger', 'Oren', 'Cyrus', 'Christophe']], 'y_data': [[4, 3, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY staff_name'}",bar,staff_name,COUNT(staff_name),"Kadin, Edmond, Bernice, Berneice, Rodger, Oren, Cyrus, Christophe","4, 3, 2, 2, 1, 1, 1, 1","How many engineers does each staff contact? Show a bar chart, and could you show in desc by the y-axis?"
"SELECT FIRST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'EMPLOYEE_ID', 'x_data': [['Kimberely', 'Michael', 'Pat', 'Susan', 'Hermann', 'Shelley', 'William']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,EMPLOYEE_ID,"Kimberely, Michael, Pat, Susan, Hermann, Shelley, William","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, find  first_name and  employee_id , and visualize them by a bar chart."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Sony', 'Creative Labs', 'Hewlett-Packard', 'Iomega', 'Fujits', 'Winchester']], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Sony, Creative Labs, Hewlett-Packard, Iomega, Fujits, Winchester","1, 2, 3, 4, 5, 6","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, and display in asc by the Y."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2016', '2017']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2016, 2017","6, 1","Return the number of booking start date for the apartments that have type code ""Duplex"" for each year in a bar chart."
"SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY Name DESC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Oriel', 'Mount Callan', 'Gortahile', 'Codling', 'Carrowleagh']], 'y_data': [[1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Oriel, Mount Callan, Gortahile, Codling, Carrowleagh","1, 1, 1, 3, 1","A bar chart showing the number of films each cinema has, display names in desc order please."
"SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY Carrier ASC",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'SUM(Memory_in_G)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[160, 208]], 'classify': [], 'describe': 'GROUP BY Carrier'}",bar,Carrier,SUM(Memory_in_G),"Sprint, TMobile","160, 208","A bar chart about what are the memories and carriers of phones?, and order by the x-axis from low to high."
"SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC",Bar,Extra Hard,shop_membership,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Alexandre', 'Zytogorski', 'Taverner', 'Popert', 'Cochrane', 'Brooke Greville']], 'y_data': [[3, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Alexandre, Zytogorski, Taverner, Popert, Cochrane, Brooke Greville","3, 1, 1, 1, 1, 1","Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and sort in descending by the Y please."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2, 4, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–2, 14–3, 15–1","2, 4, 2","Show me about the distribution of  All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart."
"SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.cell_number DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'cell_number', 'y_name': 'professional_id', 'x_data': [['962-983-8109x3509', '461-801-2600', '328.842.3792', '139-321-7313', '1-185-137-1945x409', '00230569697']], 'y_data': [[9, 10, 8, 6, 14, 4]], 'classify': [], 'describe': ''}",bar,cell_number,professional_id,"962-983-8109x3509, 461-801-2600, 328.842.3792, 139-321-7313, 1-185-137-1945x409, 00230569697","9, 10, 8, 6, 14, 4","Find the id and cell phone of the professionals who operate two or more types of treatments, and sort by the names from high to low."
"SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name ORDER BY avg(T1.age) ASC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'avg(T1.age)', 'x_data': [['Grad Student Asylum', 'University Hovels', 'Dorm-plex 2000', 'Anonymous Donor Hall', 'Fawlty Towers', 'Bud Jones Hall', 'Smith Hall']], 'y_data': [[18, 18, 19.6, 19.666666666666668, 19.777777777777782, 20, 20.166666666666668]], 'classify': [], 'describe': ''}",bar,dorm_name,avg(T1.age),"Grad Student Asylum, University Hovels, Dorm-plex 2000, Anonymous Donor Hall, Fawlty Towers, Bud Jones Hall, Smith Hall","18, 18, 19.6, 19.666666666666668, 19.777777777777782, 20, 20.166666666666668","what is the average age for each dorm and what are the names of each dorm?, list by the total number in asc."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC",Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Mon', 'Sat', 'Sun', 'Tue', 'Wed', 'Fri', 'Thur']], 'y_data': [[0, 0, 0, 0, 0, 2, 2]], 'classify': [], 'describe': 'BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Mon, Sat, Sun, Tue, Wed, Fri, Thur","0, 0, 0, 0, 0, 2, 2","Return a bar chart showing how many customers whose contact channel code is email for each weekday, and rank by the total number in ascending."
"SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Cindy', 'Emelie', 'Gay', 'Jaclyn', 'Johann', 'Kade', 'Lorenz', 'Melisa', 'Nora', 'Orlando', 'Rachelle', 'Rolando']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Cindy, Emelie, Gay, Jaclyn, Johann, Kade, Lorenz, Melisa, Nora, Orlando, Rachelle, Rolando","1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1","List the number of dogs each owner has in a bar chart that groups by owner's first name, I want to list by the first_name in asc."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Cleavant Derricks', 'Bob Fosse']], 'y_data': [[2, 5]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Cleavant Derricks, Bob Fosse","2, 5","How many musicals has each nominee been nominated for Plot them as bar chart, I want to order by the X in desc."
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69",Show sum transaction amount from each transaction type
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,party_host,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['United States', 'Hungary', 'Argentina']], 'y_data': [[8, 1, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"United States, Hungary, Argentina","8, 1, 1","Return a histogram on how many hosts does each nationality have? List the nationality and the count, and sort X-axis from high to low order."
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['Fri', 'Tue', 'Thur', 'Sun', 'Sat', 'Wed', 'Mon']], 'y_data': [[4, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_arrived BY WEEKDAY'}",bar,date_arrived,COUNT(date_arrived),"Fri, Tue, Thur, Sun, Sat, Wed, Mon","4, 2, 1, 1, 1, 0, 0","How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday, and I want to order by the how many date arrived in descending."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType DESC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Queen', 'King', 'Double']], 'y_data': [[150, 181.25, 100]], 'classify': [], 'describe': ''}",bar,bedType,avg(basePrice),"Queen, King, Double","150, 181.25, 100","What is the average base price of different bed type? List bed type and average base price Plot them as bar chart, I want to display by the bar from high to low."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY count(*) DESC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['New Lonzoville', 'Nataliamouth', 'Jasthaven', 'West Sherwoodstad', 'South Eugenia', 'Rueckermouth', 'Purdyville', 'Port Maximeview', 'Monahanshire', 'Macejkovicchester', 'Feliciaberg', 'Chrisside']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"New Lonzoville, Nataliamouth, Jasthaven, West Sherwoodstad, South Eugenia, Rueckermouth, Purdyville, Port Maximeview, Monahanshire, Macejkovicchester, Feliciaberg, Chrisside","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Show all cities along with the number of drama workshop groups in each city Visualize by bar chart, and order total number in desc order."
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Mountain Climbing', 'Canoeing', 'Kayaking', 'Spelunking', 'Extreme Canasta', 'Soccer', 'Baseball', 'Football', 'Volleyball', 'Canasta', 'Chess', 'Crossword Puzzles', 'Square Dancing']], 'y_data': [[6, 4, 1, 2, 3, 1, 1, 3, 2, 3, 5, 7, 2]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Mountain Climbing, Canoeing, Kayaking, Spelunking, Extreme Canasta, Soccer, Baseball, Football, Volleyball, Canasta, Chess, Crossword Puzzles, Square Dancing","6, 4, 1, 2, 3, 1, 1, 3, 2, 3, 5, 7, 2",How many faculty members participate in each activity? Return the activity names and the number of faculty members. Show bar chart.
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 6500, 12000, 39600, 34000, 24000, 4400, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 6500, 12000, 39600, 34000, 24000, 4400, 12000, 8300","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and could you rank by the x axis in desc?"
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Austin', 'Cassandra', 'Haley', 'Jessica', 'Kyle', 'Logan', 'Tiffany', 'Gabriel', 'Jordan', 'Alexis', 'Kris', 'Andrew']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Austin, Cassandra, Haley, Jessica, Kyle, Logan, Tiffany, Gabriel, Jordan, Alexis, Kris, Andrew","1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 2, 2, 3","What are the names of the high schoolers and how many friends does each have Show bar chart, and rank by the Y-axis in asc please."
"SELECT date , COUNT(date) FROM battle GROUP BY date ORDER BY COUNT(date) DESC",Bar,Medium,battle_death,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['June 1205', 'February 1206', '4 September 1207', '31 June 1208', '31 January 1206', '14 April 1205', '1235']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"June 1205, February 1206, 4 September 1207, 31 June 1208, 31 January 1206, 14 April 1205, 1235","2, 1, 1, 1, 1, 1, 1","Bar chart of the number of date from each date, display by the total number from high to low please."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[14, 31, 31, 30, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept, Oct","14, 31, 31, 30, 1","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by time."
"SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY Away_team DESC",Bar,Medium,game_injury,"{'chart': 'bar', 'x_name': 'Away_team', 'y_name': 'COUNT(Away_team)', 'x_data': [['Quruvchi', 'Pakhtakor', 'Bunyodkor']], 'y_data': [[3, 10, 7]], 'classify': [], 'describe': 'GROUP BY Away_team'}",bar,Away_team,COUNT(Away_team),"Quruvchi, Pakhtakor, Bunyodkor","3, 10, 7","Show the number of games for each away team in a bar chart, could you show bars in desc order?"
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['SOC', 'PSYCH', 'MKT/MGT', 'MATH', 'HIST', 'ENG', 'ECON/FIN', 'CIS', 'BIOL', 'ART', 'ACCT']], 'y_data': [[1, 1, 1, 2, 1, 2, 1, 3, 2, 1, 3]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"SOC, PSYCH, MKT/MGT, MATH, HIST, ENG, ECON/FIN, CIS, BIOL, ART, ACCT","1, 1, 1, 2, 1, 2, 1, 3, 2, 1, 3","A bar chart about how many professors have a PhD in each department?, display from high to low by the X."
"SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY avg(acc_bal) ASC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'acc_type', 'y_name': 'avg(acc_bal)', 'x_data': [['checking', 'saving']], 'y_data': [[1000, 2000]], 'classify': [], 'describe': ''}",bar,acc_type,avg(acc_bal),"checking, saving","1000, 2000","For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, show by the y-axis in ascending."
"SELECT Hometown , Age FROM teacher ORDER BY Age ASC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Farnworth Municipal Borough', 'Bolton County Borough', 'Blackrod Urban District', 'Horwich Urban District', 'Turton Urban District', 'Little Lever Urban District', 'Kearsley Urban District']], 'y_data': [[26, 29, 32, 33, 39, 41, 45]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Farnworth Municipal Borough, Bolton County Borough, Blackrod Urban District, Horwich Urban District, Turton Urban District, Little Lever Urban District, Kearsley Urban District","26, 29, 32, 33, 39, 41, 45","Return a histogram on what are the age and hometown of teachers?, and could you list in asc by the Age?"
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[123, 122.2, 114.1875, 130.625, 124.66666666666667, 121.2, 129.46666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","123, 122.2, 114.1875, 130.625, 124.66666666666667, 121.2, 129.46666666666667","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of  hire_date and the average of manager_id bin hire_date by weekday."
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",Bar,Extra Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Harbinger but bequest', 'Frugal not apropos', 'Thrift and accolade', 'Convoke and sanguine']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",bar,roomName,COUNT(roomName),"Harbinger but bequest, Frugal not apropos, Thrift and accolade, Convoke and sanguine","3, 2, 1, 1","Find the number of the name of rooms booked by some customers whose first name contains ROY, and I want to sort by the the number of roomname in desc please."
"SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY Language ASC",Bar,Medium,tvshow,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'count(*)', 'x_data': [['English', 'Italian']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",bar,Language,count(*),"English, Italian","3, 12","List each language and the number of TV Channels using it Visualize by bar chart, I want to order X in ascending order please."
"SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality",Bar,Easy,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[9, 1, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"England, Northern Ireland, Wales","9, 1, 1",Plot the total number by grouped by nationality as a bar graph
"SELECT Team_Name , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'School_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,Team_Name,School_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 4, 5",Visualize a bar chart about the distribution of  Team_Name and  School_ID .
"SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY HS DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pName', 'y_name': 'HS', 'x_data': [['Andrew', 'Eddie', 'Charles']], 'y_data': [[1200, 600, 300]], 'classify': [], 'describe': ''}",bar,pName,HS,"Andrew, Eddie, Charles","1200, 600, 300","Find the name and training hours of players whose hours are below 1500 Show bar chart, and list by the y axis from high to low."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7280, 2785, 3215, 8350, 12200, 11000, 2780, 10000, 6000, 13000, 5760, 6500, 12000, 7920, 17000, 24000, 4400, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","7280, 2785, 3215, 8350, 12200, 11000, 2780, 10000, 6000, 13000, 5760, 6500, 12000, 7920, 17000, 24000, 4400, 12000, 8300","For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, display in descending by the X-axis."
"SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'SALARY', 'x_data': [['603.123.6666', '515.123.8888', '515.123.8181', '515.123.8080', '515.123.7777', '515.123.5555', '011.44.1644.429263']], 'y_data': [[6000, 10000, 8300, 12000, 6500, 13000, 7000]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,SALARY,"603.123.6666, 515.123.8888, 515.123.8181, 515.123.8080, 515.123.7777, 515.123.5555, 011.44.1644.429263","6000, 10000, 8300, 12000, 6500, 13000, 7000","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the phone_number by a bar chart, list PHONE_NUMBER in desc order."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 1, 1, 2, 5, 1, 5, 1, 1, 1, 5, 1, 5, 30, 20, 20, 5]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 1, 1, 2, 5, 1, 5, 1, 1, 1, 5, 1, 5, 30, 20, 20, 5","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart."
"SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY AVG(Height) ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Height)', 'x_data': [['M', 'F']], 'y_data': [[195.14285714285714, 197.5]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Height),"M, F","195.14285714285714, 197.5","Draw a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, and display in ascending by the Y."
"SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) ASC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(credits)', 'x_data': [['Aquatic Chemistry', 'Cat Herding', 'Differential Geometry', 'Elastic Structures', 'Electron Microscopy', 'Fiction Writing', 'Graph Theory', 'Immunology', 'Operating Systems', 'Ponzi Schemes', 'Rock and Roll', 'International Practicum', 'Embedded Systems', 'Game Programming', 'Groups and Rings', 'World History']], 'y_data': [[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.5, 4, 4, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(credits),"Aquatic Chemistry, Cat Herding, Differential Geometry, Elastic Structures, Electron Microscopy, Fiction Writing, Graph Theory, Immunology, Operating Systems, Ponzi Schemes, Rock and Roll, International Practicum, Embedded Systems, Game Programming, Groups and Rings, World History","3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.5, 4, 4, 4, 4","Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and list in asc by the y axis."
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY customer_status_code DESC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'customer_status_code', 'y_name': 'count(*)', 'x_data': [['Good Customer', 'Bad Customer']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,customer_status_code,count(*),"Good Customer, Bad Customer","6, 9","List all customer status codes and the number of customers having each status code, could you rank bar in descending order?"
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'ST_MAN', 'SA_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'AD_VP', 'PU_MAN', 'PR_REP', 'MK_REP', 'MK_MAN', 'FI_MGR', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, ST_MAN, SA_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, AD_VP, PU_MAN, PR_REP, MK_REP, MK_MAN, FI_MGR, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the amount of job_id , and group by attribute job_id, and visualize them by a bar chart, I want to show by the total number in descending."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""  ORDER BY COUNT(date_of_completion) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Mar', 'Feb']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Mar, Feb","6, 1","Return the number of the completion date for all the tests that have ""Fail"" result, and list Y-axis from high to low order."
"SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(*)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[12, 10]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(*),"A&SCI, BUS","12, 10","How many different professors are there for the different schools Show bar chart, and show in asc by the SCHOOL_CODE."
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""",Bar,Extra Hard,entrepreneur,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Date_of_Birth BY WEEKDAY'}",bar,Date_of_Birth,COUNT(Date_of_Birth),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 0, 1, 1",Return the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.
"SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY sum(number_of_platforms) DESC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'sum(number_of_platforms)', 'x_data': [['London', 'Glasgow', 'Birmingham']], 'y_data': [[140, 17, 13]], 'classify': [], 'describe': ''}",bar,Location,sum(number_of_platforms),"London, Glasgow, Birmingham","140, 17, 13","Show all locations and the total number of platforms for all train stations in each location in a bar chart, and order by the y-axis in desc."
"SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description ORDER BY COUNT(Description) ASC",Bar,Medium,aircraft,"{'chart': 'bar', 'x_name': 'Description', 'y_name': 'COUNT(Description)', 'x_data': [['Light utility helicopter', 'Tandem rotor helicopter', 'Turboshaft utility helicopter', 'Heavy-lift helicopter']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Description'}",bar,Description,COUNT(Description),"Light utility helicopter, Tandem rotor helicopter, Turboshaft utility helicopter, Heavy-lift helicopter","1, 1, 1, 2","What are the number of the descriptions for the aircrafts?, I want to rank by the how many description in ascending."
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Joe Sewell', 'Tony Sewell', 'Eddie Collins']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Joe Sewell, Tony Sewell, Eddie Collins","5, 1, 1","A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and sort total number from high to low order please."
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts",Bar,Easy,customers_and_invoices,"{'chart': 'bar', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[5, 2, 1, 0, 3, 2, 2]], 'classify': [], 'describe': 'BIN date_account_opened BY WEEKDAY'}",bar,date_account_opened,COUNT(date_account_opened),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","5, 2, 1, 0, 3, 2, 2",How many accounts are opened in each day? Bin the account open day by weekday in a bar chart.
"SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY count(*) DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['female', 'male']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,gender,count(*),"female, male","2, 1","Find the number of people who is under 40 for each gender, sort from high to low by the the total number ."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[107.33333333333333, 129.75862068965517, 160, 190.2962962962963, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","107.33333333333333, 129.75862068965517, 160, 190.2962962962963, 206","For those employees who did not have any job in the past, find  hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart."
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Tokyo', 'Taiwan', 'Beijing']], 'y_data': [[30, 50, 100, 120, 130, 200]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Paris, Los Angeles, Austin, Tokyo, Taiwan, Beijing","30, 50, 100, 120, 130, 200","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of revenue , and group by attribute headquarter, sort by the total number in asc please."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 100, 111, 108, 203, 105, 202, 204, 117, 147, 164.10344827586206, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 100, 111, 108, 203, 105, 202, 204, 117, 147, 164.10344827586206, 189.5, 134.5, 122","For those employees who did not have any job in the past, draw a bar chart about the distribution of  job_id and the average of employee_id , and group by attribute job_id."
"SELECT Start_from , SUM(Employee_ID) FROM hiring",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 12, 2, 1, 6, 3, 4]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 12, 2, 1, 6, 3, 4",Give me the comparison about the sum of Employee_ID over the  Start_from bin start_from by weekday.
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Andy', 'Mary', 'John', 'Owen', 'James', 'Robert']], 'y_data': [[1, 4, 5, 6, 9, 12]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Andy, Mary, John, Owen, James, Robert","1, 4, 5, 6, 9, 12","For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and I want to list by the Y from low to high please."
"SELECT All_Neutral , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Neutral,School_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 4, 5",A bar chart shows the distribution of  All_Neutral and  School_ID .
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Thur', 'Sat', 'Wed', 'Fri', 'Mon', 'Tue', 'Sun']], 'y_data': [[46, 58.888888888888886, 60.90909090909091, 67.14285714285714, 67.5, 72, 86.66666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Thur, Sat, Wed, Fri, Mon, Tue, Sun","46, 58.888888888888886, 60.90909090909091, 67.14285714285714, 67.5, 72, 86.66666666666667","For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, sort by the y axis from low to high please."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'IT_PROG', 'HR_REP', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR']], 'y_data': [[122, 135.44444444444446, 189.55555555555554, 164.76923076923077, 148, 114, 116, 105, 203, 111.25, 100, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, IT_PROG, HR_REP, FI_ACCOUNT, AD_PRES, AC_MGR","122, 135.44444444444446, 189.55555555555554, 164.76923076923077, 148, 114, 116, 105, 203, 111.25, 100, 205","For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, sort x axis in desc order please."
"SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent ASC",Bar,Hard,world_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'sum(Population)', 'x_data': [['Africa', 'Asia', 'Oceania', 'South America']], 'y_data': [[784475000, 3705025700, 30401150, 345780000]], 'classify': [], 'describe': ''}",bar,Continent,sum(Population),"Africa, Asia, Oceania, South America","784475000, 3705025700, 30401150, 345780000","Create a bar chart showing sum population across continent, I want to rank Continent from low to high order please."
"SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'COUNT(ACC_Road)', 'x_data': [['6–2', '8–0', '3–5']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,COUNT(ACC_Road),"6–2, 8–0, 3–5","1, 1, 2","Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, sort Y in asc order."
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Parliamentary Coprincipality', 'Part of Denmark', 'Dependent Territory of the UK', 'Nonmetropolitan Territory of The Netherlands', 'US Territory', 'Nonmetropolitan Territory of France', 'Monarchy (Emirate)', 'Overseas Department of France', 'Constitutional Monarchy (Emirate)', 'Emirate Federation', 'Monarchy (Sultanate)', 'Commonwealth of the US', 'Socialistic State', 'Federation', 'Special Administrative Region of China', 'Constitutional Monarchy, Federation', 'Socialistic Republic']], 'y_data': [[78000, 99000, 193050, 320000, 329000, 464000, 617000, 1731000, 1972000, 2441000, 2870000, 3947000, 5605000, 7160400, 7255000, 82516000, 115072000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Parliamentary Coprincipality, Part of Denmark, Dependent Territory of the UK, Nonmetropolitan Territory of The Netherlands, US Territory, Nonmetropolitan Territory of France, Monarchy (Emirate), Overseas Department of France, Constitutional Monarchy (Emirate), Emirate Federation, Monarchy (Sultanate), Commonwealth of the US, Socialistic State, Federation, Special Administrative Region of China, Constitutional Monarchy, Federation, Socialistic Republic","78000, 99000, 193050, 320000, 329000, 464000, 617000, 1731000, 1972000, 2441000, 2870000, 3947000, 5605000, 7160400, 7255000, 82516000, 115072000","Find the government form name and total population for each government form whose average life expectancy is longer than 72, and I want to order in ascending by the Y."
"SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[45, 43, 38, 38, 51.33333333333334]], 'classify': [], 'describe': ''}",bar,Class,avg(age),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","45, 43, 38, 38, 51.33333333333334","What is the average age of captains in different classes?, and order from low to high by the x-axis."
"SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS",Bar,Easy,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Actual_Delivery_Date', 'y_name': 'COUNT(Actual_Delivery_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 1, 3, 4, 2, 3]], 'classify': [], 'describe': 'BIN Actual_Delivery_Date BY WEEKDAY'}",bar,Actual_Delivery_Date,COUNT(Actual_Delivery_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 1, 3, 4, 2, 3",Show all the actual delivery dates and bin by weekday in a bar chart.
"SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Revenue) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Revenue)', 'x_data': [['Mary', 'John', 'Andy', 'Owen', 'James', 'Robert']], 'y_data': [[200, 130, 120, 100, 50, 30]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Revenue),"Mary, John, Andy, Owen, James, Robert","200, 130, 120, 100, 50, 30","For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, rank by the total number in descending."
"SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'COUNT(JOB_TITLE)', 'x_data': [['Sales Manager', 'Sales Representative']], 'y_data': [[5, 29]], 'classify': [], 'describe': 'GROUP BY JOB_TITLE'}",bar,JOB_TITLE,COUNT(JOB_TITLE),"Sales Manager, Sales Representative","5, 29",Compare the total number of different job titles for all those jobs in department 80 using a bar chart.
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY credit_score DESC",Bar,Medium,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Owen', 'Mary']], 'y_data': [[210, 30]], 'classify': [], 'describe': ''}",bar,cust_name,credit_score,"Owen, Mary","210, 30","Show a bar chart to show different names and credit scores of customers who have taken a loan, sort from high to low by the y axis."
"SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'max(revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': ''}",bar,Name,max(revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30","Create a bar chart showing maximal revenue across name, and rank in asc by the X."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June', 'Oct']], 'y_data': [[5512, 4960, 3999, 1491, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Aug, July, June, Oct","5512, 4960, 3999, 1491, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, rank Y in descending order."
"SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(School_ID),"3–5, 6–2, 8–0","4.5, 2, 1","Show me about the distribution of  ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[125.5, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sept, Oct","125.5, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the average of manager_id bin hire_date by time."
"SELECT year , count(*) FROM matches GROUP BY YEAR",Bar,Easy,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2013-01-01', '2016-01-01', '2017-01-01']], 'y_data': [[12, 158, 108]], 'classify': [], 'describe': ''}",bar,year,count(*),"2013-01-01, 2016-01-01, 2017-01-01","12, 158, 108",Bar chart of the total number from each year
"SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",bar,Sex,avg(age),"F, M","19.7, 19.5","Show the average age for male and female students with a bar chart, and list by the bars from low to high."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Memory', 'Floppy disk', 'Hard drive', 'DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'DVD burner', 'CD drive', 'Monitor']], 'y_data': [[6, 6, 5, 5, 4, 3, 3, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Memory, Floppy disk, Hard drive, DVD drive, ZIP drive, Toner cartridge, Printer, DVD burner, CD drive, Monitor","6, 6, 5, 5, 4, 3, 3, 2, 2, 1","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name by a bar chart, and sort Y-axis from high to low order please."
"SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_price DESC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'product_price', 'x_data': [['blue jeans', 'mouse', 'black jeans']], 'y_data': [[939.57, 803.74, 695.16]], 'classify': [], 'describe': ''}",bar,product_name,product_price,"blue jeans, mouse, black jeans","939.57, 803.74, 695.16","Show the price of each product supplied by supplier id 3 in a bar chart, I want to list by the Y in desc."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['June', 'Aug', 'Sept', 'July']], 'y_data': [[83.75, 80, 56.666666666666664, 44.666666666666664]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"June, Aug, Sept, July","83.75, 80, 56.666666666666664, 44.666666666666664","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, show from high to low by the total number please."
"SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 119027]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(enrollment),"Private/Methodist, Public","2100, 119027",Find the total student enrollment for different affiliation type schools. Plot them as bar chart.
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'FI_MGR', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT', 'ST_MAN', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SA_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 108, 202, 203, 204, 205, 206, 488, 525, 555, 585, 735, 2690, 3790, 4759]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, FI_MGR, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT, ST_MAN, IT_PROG, FI_ACCOUNT, PU_CLERK, SA_MAN, ST_CLERK, SH_CLERK, SA_REP","100, 108, 202, 203, 204, 205, 206, 488, 525, 555, 585, 735, 2690, 3790, 4759","For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and display from low to high by the sum employee id."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[990, 1350, 2480, 1400, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"June, July, Aug, Sept, Oct","990, 1350, 2480, 1400, 110","For those employees who did not have any job in the past, show me about the distribution of  hire_date and the sum of department_id bin hire_date by time in a bar chart."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Sewell', 'John Brown', 'Tony Sewell']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Charlie Hollocher, Eddie Collins, Joe Sewell, John Brown, Tony Sewell","1, 1, 5, 1, 1",Display a bar chart for what are the names of the technicians  and how many machines are they assigned to repair?
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'MK_REP', 'SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'PR_REP', 'HR_REP', 'FI_MGR', 'AD_ASST', 'AC_MGR', 'ST_MAN', 'SA_MAN', 'PU_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, MK_REP, SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, PR_REP, HR_REP, FI_MGR, AD_ASST, AC_MGR, ST_MAN, SA_MAN, PU_MAN, MK_MAN, AD_VP, AD_PRES","205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and show by the Y-axis from high to low."
"SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'AVG(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1022, 931.6666666666666]], 'classify': [], 'describe': 'BIN date_address_to BY MONTH'}",bar,date_address_to,AVG(monthly_rental),"Feb, Mar","1022, 931.6666666666666",A bar chart shows the distribution of  date_address_to and the average of monthly_rental bin date_address_to by time.
"SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[6, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,Manufacturer,"Memory, CD drive, Toner cartridge","6, 2, 3","For those products with a price between 60 and 120, a bar chart shows the distribution of  name and  manufacturer ."
"SELECT Date_of_Birth , Height FROM people ORDER BY Height ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['06.10.1976', '20.08.1970', '22.04.1977', '10.03.1976', '01.09.1977', '28.09.1981', '10.11.1972', '03.02.1976', '05.05.1972']], 'y_data': [[188, 193, 194, 195, 196, 196, 197, 200, 202]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"06.10.1976, 20.08.1970, 22.04.1977, 10.03.1976, 01.09.1977, 28.09.1981, 10.11.1972, 03.02.1976, 05.05.1972","188, 193, 194, 195, 196, 196, 197, 200, 202","Draw a bar chart about the distribution of Date_of_Birth and Height , could you sort from low to high by the total number?"
"SELECT name , SUM(grade) FROM Highschooler GROUP BY name",Bar,Easy,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 20, 10, 11, 12, 21, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 20, 10, 11, 12, 21, 10, 12, 12, 9",Bar chart x axis name y axis total number of grade
"SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY COUNT(Service_Type_Description) DESC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(Service_Type_Description)', 'x_data': [['provide photo service', 'provide dinning service', 'provide filming service', 'provide adv promoting service']], 'y_data': [[5, 5, 3, 2]], 'classify': [], 'describe': 'GROUP BY Service_Type_Description'}",bar,Service_Type_Description,COUNT(Service_Type_Description),"provide photo service, provide dinning service, provide filming service, provide adv promoting service","5, 5, 3, 2","What are the descriptions of the service types with product price above 100, and count them by a bar chart, could you order y axis in desc order?"
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2.5, 6, 5, 6, 1, 3, 3, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2.5, 6, 5, 6, 1, 3, 3, 4","For those records from the products and each product's manufacturer, a bar chart shows the distribution of  name and the average of code , and group by attribute name."
"SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME",Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'COUNT(STU_FNAME)', 'x_data': [['Anne', 'William']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,COUNT(STU_FNAME),"Anne, William","1, 3",How many students taking a course who received an A or C? Group by students' first name with a bar chart.
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['June', 'July', 'Sept', 'Aug', 'Oct']], 'y_data': [[96.25, 117.58620689655173, 125.5925925925926, 139.16129032258064, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"June, July, Sept, Aug, Oct","96.25, 117.58620689655173, 125.5925925925926, 139.16129032258064, 205","For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and I want to show from low to high by the Y-axis."
"SELECT Party , COUNT(Party) FROM representative GROUP BY Party",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Republican']], 'y_data': [[3, 4]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Democratic, Republican","3, 4",A bar chart showing how many representatives in each party.
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'AVG(organisation_id)', 'x_data': [['quo', 'officiis', 'itaque', 'eius', 'a']], 'y_data': [[14, 10, 9.5, 2, 9]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,AVG(organisation_id),"quo, officiis, itaque, eius, a","14, 10, 9.5, 2, 9","Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the names from high to low."
"SELECT Sex , min(weight) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'min(weight)', 'x_data': [['F', 'M']], 'y_data': [[90, 82]], 'classify': [], 'describe': ''}",bar,Sex,min(weight),"F, M","90, 82",Show me minimal weight by sex in a histogram
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_Details DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Society Research project', 'Internet of Things project', 'Human Resource project', 'Graph Database project']], 'y_data': [[30, 35, 134, 105]], 'classify': [], 'describe': ''}",bar,Project_Details,Project_ID,"Society Research project, Internet of Things project, Human Resource project, Graph Database project","30, 35, 134, 105","What is the project id and detail for the project with at least two documents Plot them as bar chart, and list x-axis in descending order."
"SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID DESC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Editor_ID', 'x_data': [['Maria Góralczyk', 'Grażyna Wolszczak', 'Władysław Grzywna', 'Piotr Pręgowski', 'Marek Siudym', 'Kamila Porczyk']], 'y_data': [[9, 8, 6, 4, 3, 1]], 'classify': [], 'describe': ''}",bar,Name,Editor_ID,"Maria Góralczyk, Grażyna Wolszczak, Władysław Grzywna, Piotr Pręgowski, Marek Siudym, Kamila Porczyk","9, 8, 6, 4, 3, 1","Just show the id and name of each editor using a bar chart, and could you show in desc by the Editor_ID?"
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'SA_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'ST_MAN', 'PR_REP', 'MK_REP', 'HR_REP', 'FI_MGR', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[29, 20, 20, 5, 5, 5, 5, 4, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, SA_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, ST_MAN, PR_REP, MK_REP, HR_REP, FI_MGR, AD_PRES, AC_MGR, AC_ACCOUNT","29, 20, 20, 5, 5, 5, 5, 4, 1, 1, 1, 1, 1, 1, 1","For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and order by the y-axis from high to low."
"SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) ASC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['CHC', 'PHA', 'CWS', 'NYY', 'CLE']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"CHC, PHA, CWS, NYY, CLE","1, 1, 2, 2, 4","Show different teams of technicians and the number of technicians in each team, I want to display by the total number in asc."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[9, 12, 12, 10, 10.5, 12, 11, 10, 10, 9, 10, 11, 10, 11]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","9, 12, 12, 10, 10.5, 12, 11, 10, 10, 9, 10, 11, 10, 11","What are the names and the average grades for each high schooler Plot them as a bar chart, I want to show from high to low by the X please."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Tokyo', 'Austin', 'Los Angeles', 'Beijing', 'Taiwan', 'Paris']], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Tokyo, Austin, Los Angeles, Beijing, Taiwan, Paris","1, 2, 3, 4, 5, 6","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, display by the Y from low to high."
"SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",Bar,Medium,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'count(*)', 'x_data': [['statistics', 'English', 'French', 'data structure']], 'y_data': [[4, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,count(*),"statistics, English, French, data structure","4, 2, 2, 1","For each course id, how many students are registered and what are the course names. "
"SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'COUNT(Date_Payment_Made)', 'x_data': [['Sat', 'Wed', 'Sun', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[2, 1, 1, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY WEEKDAY'}",bar,Date_Payment_Made,COUNT(Date_Payment_Made),"Sat, Wed, Sun, Tue, Thur, Mon, Fri","2, 1, 1, 0, 0, 0, 0","For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart, and list total number in descending order."
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY COUNT(date_departed) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['2018-03-24', '2018-03-25']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY date_departed'}",bar,date_departed,COUNT(date_departed),"2018-03-24, 2018-03-25","3, 6","How many dogs who have gone through a treatment departed in each day? Return a bar chart, could you show by the y axis from low to high?"
"SELECT Hometown , Age FROM teacher ORDER BY Age ASC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Farnworth Municipal Borough', 'Bolton County Borough', 'Blackrod Urban District', 'Horwich Urban District', 'Turton Urban District', 'Little Lever Urban District', 'Kearsley Urban District']], 'y_data': [[26, 29, 32, 33, 39, 41, 45]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Farnworth Municipal Borough, Bolton County Borough, Blackrod Urban District, Horwich Urban District, Turton Urban District, Little Lever Urban District, Kearsley Urban District","26, 29, 32, 33, 39, 41, 45","A bar chart about what is the age and hometown of every teacher?, and I want to list in asc by the Age."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Sony', 'Creative Labs', 'Hewlett-Packard', 'Iomega', 'Fujits', 'Winchester']], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Sony, Creative Labs, Hewlett-Packard, Iomega, Fujits, Winchester","1, 2, 3, 4, 5, 6","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, rank y axis from low to high order."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Thur', 'Wed', 'Tue', 'Mon', 'Sun', 'Sat', 'Fri']], 'y_data': [[384, 205, 204, 203, 202, 201, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Thur, Wed, Tue, Mon, Sun, Sat, Fri","384, 205, 204, 203, 202, 201, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday, sort by the total number in desc."
"SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY Continent ASC",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'avg(LifeExpectancy)', 'x_data': [['Africa', 'Asia', 'Oceania', 'South America']], 'y_data': [[52.57192982456139, 67.44117647058825, 69.715, 70.94615384615386]], 'classify': [], 'describe': ''}",bar,Continent,avg(LifeExpectancy),"Africa, Asia, Oceania, South America","52.57192982456139, 67.44117647058825, 69.715, 70.94615384615386","Draw a bar chart of continent versus mean lifeexpectancy, order by the bars in ascending."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sun', 'Thur', 'Wed', 'Fri', 'Tue', 'Mon', 'Sat']], 'y_data': [[1, 1, 1, 2, 2, 4, 4]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sun, Thur, Wed, Fri, Tue, Mon, Sat","1, 1, 1, 2, 2, 4, 4","Show the number of start dates of all the apartment bookings for each weekday with a bar chart, sort in ascending by the the number of booking start date please."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Thur', 'Sun', 'Fri', 'Mon', 'Tue', 'Sat', 'Wed']], 'y_data': [[130.625, 129.46666666666667, 124.66666666666667, 123, 122.2, 121.2, 114.1875]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Thur, Sun, Fri, Mon, Tue, Sat, Wed","130.625, 129.46666666666667, 124.66666666666667, 123, 122.2, 121.2, 114.1875","For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and sort in desc by the the average of manager id."
"SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Hartstein', 'Higgins', 'Baer', 'Gietz', 'Grant', 'Mavris', 'Fay']], 'y_data': [[13000, 12000, 10000, 8300, 7000, 6500, 6000]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Hartstein, Higgins, Baer, Gietz, Grant, Mavris, Fay","13000, 12000, 10000, 8300, 7000, 6500, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart, display by the Y in descending please."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T2.Revenue ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Floppy disk', 'Memory', 'Printer', 'Toner cartridge', 'DVD drive', 'CD drive', 'DVD burner', 'Monitor', 'Hard drive', 'ZIP drive']], 'y_data': [[30, 30, 50, 50, 75, 100, 100, 120, 130, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Floppy disk, Memory, Printer, Toner cartridge, DVD drive, CD drive, DVD burner, Monitor, Hard drive, ZIP drive","30, 30, 50, 50, 75, 100, 100, 120, 130, 200","For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, and order y axis in asc order please."
"SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COUNT(FIRST_NAME)', 'x_data': [['Adam', 'Payam', 'William']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",bar,FIRST_NAME,COUNT(FIRST_NAME),"Adam, Payam, William","1, 1, 2","For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, sort X-axis from low to high order."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID",Bar,Easy,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['UK gallery', 'flying elephant', 'history gallery', 'presidents hall', 'fun shops']], 'y_data': [[2701, 5076, 6653, 8429, 9360]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"UK gallery, flying elephant, history gallery, presidents hall, fun shops","2701, 5076, 6653, 8429, 9360",What are the names and ids of the tourist attractions that are visited at most once. Visualize by bar chart.
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Price ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Winchester', 'Iomega', 'Fujits', 'Sony', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[125, 150, 240, 240, 450, 486]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Winchester, Iomega, Fujits, Sony, Creative Labs, Hewlett-Packard","125, 150, 240, 240, 450, 486","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, and could you rank total number of price in asc order?"
"SELECT Sex , avg(age) FROM Student GROUP BY sex",Bar,Easy,allergy_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",bar,Sex,avg(age),"F, M","19.7, 19.5",Show me mean age by sex in a histogram
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['engineer', 'doctor']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"engineer, doctor","35, 45","what is the average age for a male in each job?, rank X in desc order."
"SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(*)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[12, 10]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(*),"A&SCI, BUS","12, 10",A bar chart about how many different professors are there for the different schools?
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","3, 5","Bar graph to show how many nationality from different nationality, order in descending by the x axis please."
"SELECT FIRST_NAME , SALARY FROM employees ORDER BY SALARY ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Jennifer', 'Susan', 'Adam', 'Alexander', 'Hermann', 'Den', 'Nancy', 'Shelley', 'Michael', 'John', 'Steven']], 'y_data': [[4400, 6500, 8200, 9000, 10000, 11000, 12000, 12000, 13000, 14000, 24000]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Jennifer, Susan, Adam, Alexander, Hermann, Den, Nancy, Shelley, Michael, John, Steven","4400, 6500, 8200, 9000, 10000, 11000, 12000, 12000, 13000, 14000, 24000","You can return a bar chart with employees' first names and their salaries, display by the Y in ascending."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Aug', 'Sept', 'June', 'July']], 'y_data': [[1040, 680, 670, 670]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Aug, Sept, June, July","1040, 680, 670, 670","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and order in desc by the y axis."
"SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25.5, 35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"student, engineer, doctor","25.5, 35, 45","Return a histogram on how old is the average person for each job?, and display y axis in asc order."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[5, 28, 1, 3, 23, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Andy, James, John, Mary, Owen, Robert","5, 28, 1, 3, 23, 6","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the  founder , and group by attribute founder by a bar chart."
"SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY country ASC",Bar,Extra Hard,flight_4,"{'chart': 'bar', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['Azerbaijan', 'Turkey', 'United States']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY country'}",bar,country,COUNT(country),"Azerbaijan, Turkey, United States","1, 1, 4","What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, and display X in ascending order."
"SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY max(weight) DESC",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[13.4, 12]], 'classify': [], 'describe': ''}",bar,PetType,max(weight),"dog, cat","13.4, 12","Bar graph to show maximal weight from different pettype, and sort by the Y in descending."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 2, 0, 1, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 2, 0, 1, 1","For those employees who do not work in departments with managers that have ids between 100 and 200, find  hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart."
"SELECT Statement_Details , COUNT(Statement_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY COUNT(Statement_Details) DESC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Statement_Details', 'y_name': 'COUNT(Statement_Details)', 'x_data': [['Open Project', 'Private Project']], 'y_data': [[9, 6]], 'classify': [], 'describe': 'GROUP BY Statement_Details'}",bar,Statement_Details,COUNT(Statement_Details),"Open Project, Private Project","9, 6","How many accounts for different statement details? Draw a bar chart, sort Y-axis from high to low order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[124400, 108200, 97400, 94800, 94300, 86200, 86100]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","124400, 108200, 97400, 94800, 94300, 86200, 86100","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, I want to display in desc by the total number."
"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",Bar,Easy,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(*)', 'x_data': [['Columbia Masterworks', 'Decca Records', 'Delos Records', 'Deutsche Grammophon', 'EMI', 'Koch Records / Naxos Records', 'Kultur', 'Mercury Records', 'Philips', 'Philips Classics Records', 'RCA']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Record_Company,COUNT(*),"Columbia Masterworks, Decca Records, Delos Records, Deutsche Grammophon, EMI, Koch Records / Naxos Records, Kultur, Mercury Records, Philips, Philips Classics Records, RCA","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",Visualize a bar chart for how many orchestras does each record company manage?
"SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'date_of_latest_revision', 'y_name': 'COUNT(date_of_latest_revision)', 'x_data': [['Thur', 'Tue', 'Mon', 'Wed', 'Sun', 'Sat', 'Fri']], 'y_data': [[2, 1, 1, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_latest_revision BY WEEKDAY'}",bar,date_of_latest_revision,COUNT(date_of_latest_revision),"Thur, Tue, Mon, Wed, Sun, Sat, Fri","2, 1, 1, 0, 0, 0, 0","Bar chart x axis date of latest revision y axis the number of date of latest revision, could you rank in desc by the Y-axis?"
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[1170, 1430, 2480, 1470, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"June, July, Aug, Sept, Oct","1170, 1430, 2480, 1470, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of  hire_date and the sum of department_id bin hire_date by time in a bar chart."
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 5, 4, 2, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Andy, James, John, Mary, Owen, Robert","1, 3, 5, 4, 2, 6","For those records from the products and each product's manufacturer, find founder and the average of manufacturer , and group by attribute founder, and visualize them by a bar chart, and order by the X-axis from low to high."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY COUNT(EMP_FNAME) DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Peter', 'Gerald', 'Ismael', 'Carlos', 'Arnelle', 'Robert']], 'y_data': [[3, 3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Peter, Gerald, Ismael, Carlos, Arnelle, Robert","3, 3, 2, 2, 2, 1","Show the number of courses each instructor taught in a bar chart, and rank y-axis from high to low order."
"SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment ASC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'Amount_Payment', 'x_data': [['2018-02-24', '2017-05-28', '2017-05-03', '2017-12-16']], 'y_data': [[7343, 155654, 172309, 459407]], 'classify': [], 'describe': ''}",bar,Date_Payment_Made,Amount_Payment,"2018-02-24, 2017-05-28, 2017-05-03, 2017-12-16","7343, 155654, 172309, 459407","Give me a histogram to show the date and the amount for all the payments processed with Visa, and show in asc by the Y-axis please."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""  ORDER BY COUNT(booking_start_date) ASC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sun', 'Fri', 'Sat', 'Thur', 'Tue', 'Wed', 'Mon']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sun, Fri, Sat, Thur, Tue, Wed, Mon","0, 1, 1, 1, 1, 1, 2","What is the booking end dates of the apartments with type code ""Duplex""? Bin the year into weekday interval with a bar chart, and sort by the Y in asc."
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Tokyo', 'Taiwan', 'Los Angeles', 'Beijing', 'Austin', 'Paris']], 'y_data': [[240, 240, 162, 150, 150, 62.5]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Tokyo, Taiwan, Los Angeles, Beijing, Austin, Paris","240, 240, 162, 150, 150, 62.5","For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and could you display total number in desc order?"
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Tue', 'Fri', 'Sun', 'Sat', 'Wed', 'Thur', 'Mon']], 'y_data': [[12, 6, 4, 3, 2, 1, 0]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Tue, Fri, Sun, Sat, Wed, Thur, Mon","12, 6, 4, 3, 2, 1, 0","Give me the comparison about the sum of Employee_ID over the Start_from bin start_from by weekday by a bar chart, and I want to sort from high to low by the Y."
"SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY Openning_year DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Openning_year', 'y_name': 'AVG(Capacity)', 'x_data': [['2015-01-01', '2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01']], 'y_data': [[364, 330, 368, 445.3333333333333, 544.3333333333334, 305]], 'classify': [], 'describe': 'GROUP BY Openning_year'}",bar,Openning_year,AVG(Capacity),"2015-01-01, 2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01","364, 330, 368, 445.3333333333333, 544.3333333333334, 305","Show me the average of capacity by openning year in a histogram, and order Openning_year from high to low order."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['James', 'Owen', 'Robert', 'Andy', 'Mary', 'John']], 'y_data': [[28, 23, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"James, Owen, Robert, Andy, Mary, John","28, 23, 6, 5, 3, 1","For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and show Y in descending order."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[178, 204, 202, 201, 203, 205, 206]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","178, 204, 202, 201, 203, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and employee_id , and visualize them by a bar chart, and rank X-axis in descending order please."
"SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) DESC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'max(capacity)', 'x_data': [['Whitman', 'Taylor', 'Stabler', 'Saucon', 'Painter', 'Nassa', 'Gates', 'Rathbone', 'Garfield', 'Lambea', 'Alumni', 'Grace', 'Main', 'Polya', 'Fairchild', 'Drown', 'Power', 'Bronfman', 'Chandler', 'Lamberton']], 'y_data': [[120, 115, 113, 109, 97, 92, 65, 60, 59, 51, 47, 34, 30, 28, 27, 18, 12, 12, 11, 10]], 'classify': [], 'describe': ''}",bar,building,max(capacity),"Whitman, Taylor, Stabler, Saucon, Painter, Nassa, Gates, Rathbone, Garfield, Lambea, Alumni, Grace, Main, Polya, Fairchild, Drown, Power, Bronfman, Chandler, Lamberton","120, 115, 113, 109, 97, 92, 65, 60, 59, 51, 47, 34, 30, 28, 27, 18, 12, 12, 11, 10","Bar chart x axis building y axis maximal capacity, and sort in desc by the total number."
"SELECT All_Games , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Games,School_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 4, 5",Return a bar chart about the distribution of  All_Games and  School_ID .
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[3, 9, 8, 5, 2, 1, 4, 8.5, 10, 7]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","3, 9, 8, 5, 2, 1, 4, 8.5, 10, 7","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and display by the names from high to low."
"SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY Trade_Name DESC",Bar,Medium,medicine_enzyme_interaction,"{'chart': 'bar', 'x_name': 'Trade_Name', 'y_name': 'id', 'x_data': [['Saphris', 'Abilify']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Trade_Name,id,"Saphris, Abilify","3, 2","Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and I want to show by the x axis from high to low."
"SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",Bar,Extra Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_of_treatment', 'y_name': 'COUNT(date_of_treatment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 1, 3, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_treatment BY WEEKDAY'}",bar,date_of_treatment,COUNT(date_of_treatment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 1, 3, 0, 0, 0",How many dogs of the rarest breed in each treatment day? Draw a bar chart that bins by date of treatment by weekday.
"SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Michael', 'Hermann', 'Shelley', 'Susan', 'Kimberely', 'Pat', 'William']], 'y_data': [[100, 101, 101, 101, 149, 201, 205]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,MANAGER_ID,"Michael, Hermann, Shelley, Susan, Kimberely, Pat, William","100, 101, 101, 101, 149, 201, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , I want to rank in asc by the y-axis."
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['food', 'animal', 'environmental']], 'y_data': [[7, 4, 3]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"food, animal, environmental","7, 4, 3","Show all allergy types and the number of allergies in each type Plot them as bar chart, order in desc by the y axis."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Sony', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Creative Labs']], 'y_data': [[240, 240, 162, 150, 150]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Sony, Fujits, Hewlett-Packard, Iomega, Creative Labs","240, 240, 162, 150, 150","Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, and sort total number in descending order."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Confirmed', 'Provisional']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Confirmed, Provisional","7, 8",Plot the total number by grouped by booking status code as a bar graph
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY activity_name ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Baseball', 'Canasta', 'Canoeing', 'Chess', 'Crossword Puzzles', 'Extreme Canasta', 'Football', 'Kayaking', 'Mountain Climbing', 'Soccer', 'Spelunking', 'Square Dancing', 'Volleyball']], 'y_data': [[1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Baseball, Canasta, Canoeing, Chess, Crossword Puzzles, Extreme Canasta, Football, Kayaking, Mountain Climbing, Soccer, Spelunking, Square Dancing, Volleyball","1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2","How many faculty members participate in each activity? Return the activity names and the number of faculty members by a bar chart, rank by the activity_name in ascending."
"SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'count(*)', 'x_data': [['Convoke and sanguine', 'Frugal not apropos', 'Immutable before decorum', 'Recluse and defiance', 'Harbinger but bequest', 'Thrift and accolade', 'Interim but salutary', 'Mendicant with cryptic', 'Riddle to exculpate', 'Abscond or bolster']], 'y_data': [[69, 66, 63, 62, 60, 59, 59, 56, 55, 51]], 'classify': [], 'describe': ''}",bar,roomName,count(*),"Convoke and sanguine, Frugal not apropos, Immutable before decorum, Recluse and defiance, Harbinger but bequest, Thrift and accolade, Interim but salutary, Mendicant with cryptic, Riddle to exculpate, Abscond or bolster","69, 66, 63, 62, 60, 59, 59, 56, 55, 51","For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, could you display by the the total number in desc please?"
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'History', 'Languages', 'Marketing', 'Math', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Accounting, Astronomy, Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, History, Languages, Marketing, Math, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21","How many total credits are offered by each department Show bar chart, and rank bars in asc order."
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) DESC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Turkish Grand Prix', 'Spanish Grand Prix', 'Singapore Grand Prix', 'Monaco Grand Prix', 'Malaysian Grand Prix', 'Japanese Grand Prix', 'Italian Grand Prix', 'Hungarian Grand Prix', 'German Grand Prix', 'European Grand Prix', 'Chinese Grand Prix', 'British Grand Prix', 'Brazilian Grand Prix', 'Belgian Grand Prix', 'Australian Grand Prix', 'Abu Dhabi Grand Prix', 'Korean Grand Prix', 'Canadian Grand Prix', 'Bahrain Grand Prix', 'Indian Grand Prix']], 'y_data': [[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Turkish Grand Prix, Spanish Grand Prix, Singapore Grand Prix, Monaco Grand Prix, Malaysian Grand Prix, Japanese Grand Prix, Italian Grand Prix, Hungarian Grand Prix, German Grand Prix, European Grand Prix, Chinese Grand Prix, British Grand Prix, Brazilian Grand Prix, Belgian Grand Prix, Australian Grand Prix, Abu Dhabi Grand Prix, Korean Grand Prix, Canadian Grand Prix, Bahrain Grand Prix, Indian Grand Prix","3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1","What are the names of races held between 2009 and 2011, and count them by a bar chart, show from high to low by the Y."
"SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Village Store', 'City Mall']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Village Store, City Mall","3, 2","Find all types of store and number of them Visualize by bar chart, could you sort x axis in desc order please?"
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'Aug', 'Oct', 'Sept', 'July']], 'y_data': [[9885.714285714286, 9074.193548387097, 8300, 4824.137931034483, 3774.1935483870966]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, Aug, Oct, Sept, July","9885.714285714286, 9074.193548387097, 8300, 4824.137931034483, 3774.1935483870966","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, order in desc by the y axis."
"SELECT Name , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID ORDER BY COUNT(*) ASC",Bar,Hard,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['UK gallery', 'flying elephant', 'fun shops', 'history gallery', 'presidents hall', 'fun games', 'parking', 'jungle cruise', 'US museum', 'exploration trial']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"UK gallery, flying elephant, fun shops, history gallery, presidents hall, fun games, parking, jungle cruise, US museum, exploration trial","1, 1, 1, 1, 1, 2, 2, 3, 4, 4","A bar chart showing the number of tourist attractions for each attraction name, sort Y from low to high order please."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[4314, 3741, 3610, 1355, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, Sept, July, June, Oct","4314, 3741, 3610, 1355, 205","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, and rank total number of manager id in descending order."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[3.4, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"T, F","3.4, 5","Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, order by the y-axis from low to high."
"SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) ASC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'date_of_latest_revision', 'y_name': 'COUNT(date_of_latest_revision)', 'x_data': [['Fri', 'Sat', 'Sun', 'Wed', 'Mon', 'Tue', 'Thur']], 'y_data': [[0, 0, 0, 0, 1, 1, 2]], 'classify': [], 'describe': 'BIN date_of_latest_revision BY WEEKDAY'}",bar,date_of_latest_revision,COUNT(date_of_latest_revision),"Fri, Sat, Sun, Wed, Mon, Tue, Thur","0, 0, 0, 0, 1, 1, 2","Bar chart x axis date of latest revision y axis the number of date of latest revision, and display y axis in ascending order please."
"SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC",Bar,Medium,election_representative,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Republican', 'Democratic']], 'y_data': [[4, 3]], 'classify': [], 'describe': ''}",bar,Party,COUNT(*),"Republican, Democratic","4, 3","What are the different parties of representative? Show the party name and the number of representatives in each party, and could you show total number in descending order?"
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June']], 'y_data': [[143.23076923076923, 120.75, 116.13333333333334, 92.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Aug, Sept, July, June","143.23076923076923, 120.75, 116.13333333333334, 92.5","For all employees who have the letters D or S in their first name, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, and could you list by the y axis in descending please?"
"SELECT LAST_NAME , LOCATION_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY LOCATION_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'LOCATION_ID', 'x_data': [['Hunold', 'Fripp', 'Greenberg', 'Higgins', 'King', 'Raphaely', 'Whalen', 'Hartstein', 'Mavris', 'Russell', 'Baer']], 'y_data': [[1400, 1500, 1700, 1700, 1700, 1700, 1700, 1800, 2400, 2500, 2700]], 'classify': [], 'describe': ''}",bar,LAST_NAME,LOCATION_ID,"Hunold, Fripp, Greenberg, Higgins, King, Raphaely, Whalen, Hartstein, Mavris, Russell, Baer","1400, 1500, 1700, 1700, 1700, 1700, 1700, 1800, 2400, 2500, 2700","Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id, and show by the Y-axis in asc please."
"SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY apt_type_code DESC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_type_code', 'y_name': 'min(room_count)', 'x_data': [['Studio', 'Flat', 'Duplex']], 'y_data': [[6, 3, 3]], 'classify': [], 'describe': ''}",bar,apt_type_code,min(room_count),"Studio, Flat, Duplex","6, 3, 3","Show the minimum room count of apartments in different type with a bar chart, I want to order by the X-axis in desc please."
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 7]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"8–0, 6–2, 3–5","1, 2, 7","Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and rank total number in ascending order."
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about  department_id over the  job_id  by a bar chart."
"SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments  ORDER BY Date_Payment_Made ASC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['2017', '2018']], 'y_data': [[260895.55555555556, 231412.16666666666]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY YEAR'}",bar,Date_Payment_Made,AVG(Amount_Payment),"2017, 2018","260895.55555555556, 231412.16666666666","Give me a bar chart that bins the payment date into the Year interval and then shows the average amount of each payment, and then sort the bars in ascending order of date."
"SELECT Founder , sum(revenue) FROM manufacturers GROUP BY founder ORDER BY Founder DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'sum(revenue)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[30, 100, 200, 130, 50, 120]], 'classify': [], 'describe': ''}",bar,Founder,sum(revenue),"Robert, Owen, Mary, John, James, Andy","30, 100, 200, 130, 50, 120","Draw a bar chart of founder versus sum revenue, and display X in desc order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Aug', 'Sept', 'June', 'July', 'Oct']], 'y_data': [[281300, 120400, 104400, 98100, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Aug, Sept, June, July, Oct","281300, 120400, 104400, 98100, 8300","For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, list in desc by the Y please."
"SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Brodhead', 'Bronfman', 'Candlestick', 'Linderman', 'Mercer', 'Palmer', 'Taylor', 'Thompson', 'Whitman', 'Wrigley']], 'y_data': [[1, 1, 2, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Brodhead, Bronfman, Candlestick, Linderman, Mercer, Palmer, Taylor, Thompson, Whitman, Wrigley","1, 1, 2, 1, 1, 1, 2, 1, 1, 1",How many departments whose budget is more than the average budget in each building? Show me a bar chart.
"SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY SUM(Capacity) DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Openning_year', 'y_name': 'SUM(Capacity)', 'x_data': [['2010-01-01', '2011-01-01', '2012-01-01', '2015-01-01', '2013-01-01', '2009-01-01']], 'y_data': [[1633, 1336, 368, 364, 330, 305]], 'classify': [], 'describe': 'GROUP BY Openning_year'}",bar,Openning_year,SUM(Capacity),"2010-01-01, 2011-01-01, 2012-01-01, 2015-01-01, 2013-01-01, 2009-01-01","1633, 1336, 368, 364, 330, 305","A bar chart showing the sum of capacity of cinemas open for each year, and could you show y axis from high to low order?"
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thur']], 'y_data': [[2265, 2280, 2295, 2310, 2325, 2440, 2456]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Fri, Sat, Sun, Mon, Tue, Wed, Thur","2265, 2280, 2295, 2310, 2325, 2440, 2456","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, and I want to sort sum employee id in asc order."
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero', 'Anne Walker']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero, Anne Walker","1, 1, 1, 1, 2","What is the number of courses each teacher teaches? Visualize with a bar chart, and list y-axis from low to high order."
"SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['William', 'Pat', 'Kimberely', 'Susan', 'Shelley', 'Hermann', 'Michael']], 'y_data': [[205, 201, 149, 101, 101, 101, 100]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,MANAGER_ID,"William, Pat, Kimberely, Susan, Shelley, Hermann, Michael","205, 201, 149, 101, 101, 101, 100","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , and could you sort by the y-axis from high to low?"
"SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_ID DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Customer_Details', 'y_name': 'Customer_ID', 'x_data': [['Lauriane Ferry PhD', 'Dr. Diana Rath', 'Mrs. Hanna Willms', 'Ellsworth Paucek']], 'y_data': [[6, 4, 3, 2]], 'classify': [], 'describe': ''}",bar,Customer_Details,Customer_ID,"Lauriane Ferry PhD, Dr. Diana Rath, Mrs. Hanna Willms, Ellsworth Paucek","6, 4, 3, 2","Find the the customer details and id for the customers who had more than one policy, list total number in desc order."
"SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(grade)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(grade),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11","What are the names and their total grades for each high schooler? Show me the result using a bar chart, and display by the bar in desc."
"SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name",Bar,Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'COUNT(product_name)', 'x_data': [['Apple', 'Sony', 'gucci', 'jcrew']], 'y_data': [[5, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,COUNT(product_name),"Apple, Sony, gucci, jcrew","5, 3, 2, 3",Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart.
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500","For those employees who did not have any job in the past, give me the comparison about the sum of salary over the  job_id , and group by attribute job_id."
"SELECT Sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"F, M","3, 12",Show the number of male and female assistant professors. Plot them as bar chart.
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Physical examination', 'Take for a Walk', 'Vaccination']], 'y_data': [[2429, 2392, 2540]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,SUM(cost_of_treatment),"Physical examination, Take for a Walk, Vaccination","2429, 2392, 2540","Draw a bar chart for what are the cost and treatment type description of each treatment?, and display X-axis in ascending order please."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[2480, 1470, 1430, 1170, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Aug, Sept, July, June, Oct","2480, 1470, 1430, 1170, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the hire_date bin hire_date by time, sort in descending by the y-axis."
"SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Settled) DESC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Settled', 'y_name': 'COUNT(Date_Claim_Settled)', 'x_data': [['Wed', 'Sun', 'Sat', 'Mon', 'Tue', 'Thur', 'Fri']], 'y_data': [[2, 2, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_Claim_Settled BY WEEKDAY'}",bar,Date_Claim_Settled,COUNT(Date_Claim_Settled),"Wed, Sun, Sat, Mon, Tue, Thur, Fri","2, 2, 1, 1, 0, 0, 0","For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart, display y-axis in descending order."
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees ORDER BY FIRST_NAME ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Adam', 'Alexander', 'Den', 'Hermann', 'Jennifer', 'John', 'Michael', 'Nancy', 'Shelley', 'Steven', 'Susan']], 'y_data': [[50, 60, 30, 70, 10, 80, 20, 100, 110, 90, 40]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"Adam, Alexander, Den, Hermann, Jennifer, John, Michael, Nancy, Shelley, Steven, Susan","50, 60, 30, 70, 10, 80, 20, 100, 110, 90, 40","You can return a bar chart to show the employees' first name and the corresponding department's id, display x axis from low to high order."
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY payment_method_code ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Credit Card, Direct Debit","10, 5","Bar graph to show the total number from different payment method code, I want to show by the payment_method_code in ascending."
"SELECT charge_type , charge_amount FROM Charges ORDER BY charge_amount DESC",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'charge_type', 'y_name': 'charge_amount', 'x_data': [['Health Check', 'Drugs', 'Daily Accommodation']], 'y_data': [[640, 322, 98]], 'classify': [], 'describe': ''}",bar,charge_type,charge_amount,"Health Check, Drugs, Daily Accommodation","640, 322, 98","List each charge type and its amount Show bar chart, and sort by the y axis in desc."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Wed', 'Tue', 'Sat', 'Mon', 'Fri', 'Sun', 'Thur']], 'y_data': [[115.13333333333334, 120.28571428571429, 122.71428571428571, 123, 128.3846153846154, 129.46666666666667, 135]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Wed, Tue, Sat, Mon, Fri, Sun, Thur","115.13333333333334, 120.28571428571429, 122.71428571428571, 123, 128.3846153846154, 129.46666666666667, 135","For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday, could you list the average of manager id in asc order?"
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality",Bar,Easy,party_host,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Argentina', 'Hungary', 'United States']], 'y_data': [[1, 1, 8]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Argentina, Hungary, United States","1, 1, 8",Show different nationalities along with the number of hosts of each nationality. Visualize by bar chart.
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"3–5, 6–2, 8–0","3.5, 2, 1","Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and I want to sort in desc by the Y-axis."
"SELECT Team_Name , Team_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Team_Name,Team_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 3, 4",A bar chart shows the distribution of  Team_Name and  Team_ID .
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Published Research Paper', 'Research Patent']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Published Research Paper, Research Patent","10, 5","A bar chart for listing the number of the description of the outcomes for all projects, and could you list by the X in asc?"
"SELECT Date_of_Birth , Weight FROM people",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['06.10.1976', '10.11.1972', '03.02.1976', '05.05.1972', '10.03.1976', '01.09.1977', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[83, 85, 94, 92, 90, 88, 89, 88, 82]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"06.10.1976, 10.11.1972, 03.02.1976, 05.05.1972, 10.03.1976, 01.09.1977, 20.08.1970, 22.04.1977, 28.09.1981","83, 85, 94, 92, 90, 88, 89, 88, 82",Show me about the distribution of  Date_of_Birth and  Weight  in a bar chart.
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Sun', 'Thur', 'Mon', 'Wed', 'Sat', 'Tue', 'Fri']], 'y_data': [[1942, 1890, 1845, 1727, 1718, 1684, 1669]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Sun, Thur, Mon, Wed, Sat, Tue, Fri","1942, 1890, 1845, 1727, 1718, 1684, 1669","For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart, and order in desc by the total number of manager id please."
"SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY SUM(grade) ASC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(grade)', 'x_data': [['Cassandra', 'Tiffany', 'Andrew', 'Brittany', 'Haley', 'Kris', 'Alexis', 'Austin', 'Jessica', 'John', 'Kyle', 'Logan', 'Gabriel', 'Jordan']], 'y_data': [[9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 20, 21]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(grade),"Cassandra, Tiffany, Andrew, Brittany, Haley, Kris, Alexis, Austin, Jessica, John, Kyle, Logan, Gabriel, Jordan","9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 20, 21","What are the names and total grades for each high schooler Plot them as a bar chart, and order by the Y in ascending."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY count(*) ASC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['Chrisside', 'Feliciaberg', 'Macejkovicchester', 'Monahanshire', 'Port Maximeview', 'Purdyville', 'Rueckermouth', 'South Eugenia', 'West Sherwoodstad', 'Jasthaven', 'Nataliamouth', 'New Lonzoville']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"Chrisside, Feliciaberg, Macejkovicchester, Monahanshire, Port Maximeview, Purdyville, Rueckermouth, South Eugenia, West Sherwoodstad, Jasthaven, Nataliamouth, New Lonzoville","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Give me a histogram for how many drama workshop groups are there in each city? Return both the city and the count, and order by the Y-axis in ascending please."
"SELECT LName , COUNT(LName) FROM student WHERE age < (SELECT avg(age) FROM student) GROUP BY LName ORDER BY LName ASC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Andreo', 'Apap', 'Brody', 'Epp', 'Goldman', 'Han', 'Kim', 'Lee', 'Norris', 'Pang', 'Prater', 'Schultz', 'Schwartz', 'Simms', 'Smith', 'Tai', 'Woods']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Andreo, Apap, Brody, Epp, Goldman, Han, Kim, Lee, Norris, Pang, Prater, Schultz, Schwartz, Simms, Smith, Tai, Woods","1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1","Find the number of students whose age is younger than the average age and group by students' last name in a bar chart, and could you order X-axis in ascending order?"
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY SUM(Employee_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Tue', 'Fri', 'Sun', 'Sat', 'Wed', 'Thur', 'Mon']], 'y_data': [[12, 6, 4, 3, 2, 1, 0]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Tue, Fri, Sun, Sat, Wed, Thur, Mon","12, 6, 4, 3, 2, 1, 0","Show sum employee id from each start from, and I want to sort from high to low by the Y."
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"F, T","9, 19","Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and could you rank in asc by the names?"
"SELECT CRS_CODE , COUNT(CRS_CODE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ORDER BY CRS_CODE DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_CODE', 'y_name': 'COUNT(CRS_CODE)', 'x_data': [['QM-362', 'QM-261', 'CIS-420', 'CIS-220', 'ACCT-212', 'ACCT-211']], 'y_data': [[2, 2, 1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY CRS_CODE'}",bar,CRS_CODE,COUNT(CRS_CODE),"QM-362, QM-261, CIS-420, CIS-220, ACCT-212, ACCT-211","2, 2, 1, 3, 2, 3","Show the number of courses each instructor taught with a bar chart grouping by course code, could you display by the bars from high to low please?"
"SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'ACC_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",bar,All_Neutral,ACC_Percent,"9–1, 5–3, 4–3, 3–3","0.875, 0.813, 0.625, 0.563","A bar chart shows the distribution of All_Neutral and ACC_Percent , display from high to low by the ACC_Percent."
"SELECT Openning_year , COUNT(Openning_year) FROM cinema GROUP BY Openning_year ORDER BY Openning_year ASC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Openning_year', 'y_name': 'COUNT(Openning_year)', 'x_data': [['2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01', '2015-01-01']], 'y_data': [[1, 3, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Openning_year'}",bar,Openning_year,COUNT(Openning_year),"2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01, 2015-01-01","1, 3, 3, 1, 1, 1","Bar chart of how many openning year from each openning year, I want to show names in ascending order please."
"SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetID', 'y_name': 'weight', 'x_data': [['2001-01-01', '2002-01-01']], 'y_data': [[12, 13.4]], 'classify': [], 'describe': ''}",bar,PetID,weight,"2001-01-01, 2002-01-01","12, 13.4","A bar chart about what is the id and weight of every pet who is older than 1?, and could you show in ascending by the y-axis please?"
"SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Class,count(*),"DP/GT, GT","5, 2","Show the race class and number of races in each class with a bar chart, and list x axis in asc order please."
"SELECT product_type_code , COUNT(product_type_code) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY product_type_code DESC",Bar,Extra Hard,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'COUNT(product_type_code)', 'x_data': [['Hardware', 'Clothes']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY product_type_code'}",bar,product_type_code,COUNT(product_type_code),"Hardware, Clothes","1, 2","Give me a bar chart showing the number of products supplied by supplier id 3 for different product type code, and order bar from high to low order."
"SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY Team DESC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['PHA', 'NYY', 'CWS', 'CLE', 'CHC']], 'y_data': [[1, 2, 2, 4, 1]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"PHA, NYY, CWS, CLE, CHC","1, 2, 2, 4, 1","For each team, how many technicians are there, and list names in desc order."
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Algeria', 'Denmark', 'Afghanistan', 'Albania']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Algeria, Denmark, Afghanistan, Albania","1, 1, 2, 2","How many storms occured in each region Visualize by bar chart, and could you display the total number from low to high order?"
"SELECT date_incident_start , COUNT(date_incident_start) FROM Behavior_Incident WHERE incident_type_code = ""NOISE""",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_incident_start', 'y_name': 'COUNT(date_incident_start)', 'x_data': [['2017', '2018']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'BIN date_incident_start BY YEAR'}",bar,date_incident_start,COUNT(date_incident_start),"2017, 2018","4, 2","What is the number of start dates for incidents with incident type code ""NOISE""? Bin by year and return a bar chart."
"SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SurfaceArea', 'x_data': [['Russian Federation', 'Antarctica', 'Canada', 'China', 'United States']], 'y_data': [[17075400, 13120000, 9970610, 9572900, 9363520]], 'classify': [], 'describe': ''}",bar,Name,SurfaceArea,"Russian Federation, Antarctica, Canada, China, United States","17075400, 13120000, 9970610, 9572900, 9363520",Return a histogram on what are the names and areas of countries with the top 5 largest area?
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY Denomination ASC",Bar,Medium,school_player,"{'chart': 'bar', 'x_name': 'Denomination', 'y_name': 'COUNT(*)', 'x_data': [['Anglican', 'Catholic', 'Uniting Church']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,Denomination,COUNT(*),"Anglican, Catholic, Uniting Church","3, 2, 1","Create a bar chart showing the total number across denomination, and rank by the Denomination in asc."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Dec', 'Aug', 'Sept', 'Oct', 'Nov']], 'y_data': [[1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Dec, Aug, Sept, Oct, Nov","1, 1, 0, 0, 0","A bar chart for finding the number of the the date of enrollment of the ""Spanish"" course, sort Y in descending order."
"SELECT City , count(*) FROM employee GROUP BY city ORDER BY count(*) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'City', 'y_name': 'count(*)', 'x_data': [['Leicester', 'Sale', 'Wasps', 'Bath', 'Bristol']], 'y_data': [[1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,City,count(*),"Leicester, Sale, Wasps, Bath, Bristol","1, 1, 2, 3, 3","what is the number of employees from each city?, and show y axis in asc order."
"SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY COUNT(Headquarter) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'COUNT(Headquarter)', 'x_data': [['Los Angeles', 'Austin', 'Paris', 'Tokyo', 'Taiwan', 'Beijing']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,COUNT(Headquarter),"Los Angeles, Austin, Paris, Tokyo, Taiwan, Beijing","3, 3, 2, 1, 1, 1","For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart, I want to order total number in desc order."
"SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY SUM(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Sat', 'Tue']], 'y_data': [[0, 1, 1, 2, 4, 8, 11]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Sat, Tue","0, 1, 1, 2, 4, 8, 11","Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart, and could you show from low to high by the Y-axis?"
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1","Return a bar chart about the distribution of  ACC_Road and the sum of Team_ID , and group by attribute ACC_Road."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'IT_PROG', 'HR_REP', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR']], 'y_data': [[100, 450, 450, 1040, 80, 30, 90, 180, 40, 400, 90, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, IT_PROG, HR_REP, FI_ACCOUNT, AD_PRES, AC_MGR","100, 450, 450, 1040, 80, 30, 90, 180, 40, 400, 90, 110","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and show in descending by the X-axis."
"SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Chandler', 'Fairchild', 'Lambea', 'Lamberton', 'Main', 'Nassa', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[1, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Chandler, Fairchild, Lambea, Lamberton, Main, Nassa, Saucon, Stabler, Taylor, Whitman","1, 2, 2, 1, 1, 1, 1, 1, 1, 1",How many courses are in the Psychology department in each building? Draw a bar chart.
"SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Verizon Center', 'TD Garden', 'Scotiabank Place', 'Madison Square Garden', 'Bell Centre']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Verizon Center, TD Garden, Scotiabank Place, Madison Square Garden, Bell Centre","2, 1, 1, 1, 1","Bar chart x axis location y axis how many location, I want to display names from high to low order please."
"SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Cindy', 'Emelie', 'Gay', 'Johann', 'Kade', 'Lorenz', 'Melisa', 'Nora', 'Orlando', 'Rolando', 'Jaclyn', 'Rachelle']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Cindy, Emelie, Gay, Johann, Kade, Lorenz, Melisa, Nora, Orlando, Rolando, Jaclyn, Rachelle","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3","List the number of dogs each owner has in a bar chart that groups by owner's first name, and I want to show from low to high by the Y-axis."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 90, 400, 40, 180, 90, 30, 80, 1040, 450, 450, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 90, 400, 40, 180, 90, 30, 80, 1040, 450, 450, 100","For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, could you rank bars in asc order?"
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['10–6', '13–3', '14–2', '9–7']], 'y_data': [[0.706, 0.8240000000000001, 0.946, 0.6]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"10–6, 13–3, 14–2, 9–7","0.706, 0.8240000000000001, 0.946, 0.6","Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, show X from low to high order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Oct', 'July', 'June', 'Sept', 'Aug']], 'y_data': [[8300, 117000, 138400, 139900, 281300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Oct, July, June, Sept, Aug","8300, 117000, 138400, 139900, 281300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and I want to display by the total number of salary in ascending."
"SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id ORDER BY avg(trust) DESC",Bar,Hard,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(trust)', 'x_data': [['Roxi', 'Nancy', 'Terry', 'Mark', 'Rosie']], 'y_data': [[10, 8, 5, 4.666666666666667, 4.5]], 'classify': [], 'describe': ''}",bar,name,avg(trust),"Roxi, Nancy, Terry, Mark, Rosie","10, 8, 5, 4.666666666666667, 4.5","Find each target user's name and average trust score Visualize by bar chart, list in descending by the y-axis."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4","For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and list from low to high by the JOB_ID please."
"SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'COMMISSION_PCT', 'x_data': [['HBAER', 'MHARTSTE', 'PFAY', 'SHIGGINS', 'SMAVRIS', 'WGIETZ', 'KGRANT']], 'y_data': [[0, 0, 0, 0, 0, 0, 0.15]], 'classify': [], 'describe': ''}",bar,EMAIL,COMMISSION_PCT,"HBAER, MHARTSTE, PFAY, SHIGGINS, SMAVRIS, WGIETZ, KGRANT","0, 0, 0, 0, 0, 0, 0.15","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct , show y-axis in ascending order."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'FI_MGR', 'PU_MAN', 'AD_ASST', 'MK_MAN', 'MK_REP', 'AD_VP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'ST_MAN', 'SA_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 108, 114, 200, 201, 202, 203, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, FI_MGR, PU_MAN, AD_ASST, MK_MAN, MK_REP, AD_VP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT, IT_PROG, FI_ACCOUNT, PU_CLERK, ST_MAN, SA_MAN, ST_CLERK, SH_CLERK, SA_REP","100, 108, 114, 200, 201, 202, 203, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and display from low to high by the y axis please."
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 4, 0, 0, 9, 0, 0]], 'classify': [], 'describe': 'BIN date_moved_in BY WEEKDAY'}",bar,date_moved_in,COUNT(date_moved_in),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 4, 0, 0, 9, 0, 0",What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval.
"SELECT Name , COUNT(Name) FROM technician GROUP BY Name ORDER BY Age ASC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Cochrane', 'Joe Sewell', 'John Brown', 'Lou Boudrea', 'Mark Sewell', 'Mickey Cochrane', 'Tony Sewell']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Cochrane, Joe Sewell, John Brown, Lou Boudrea, Mark Sewell, Mickey Cochrane, Tony Sewell","1, 2, 1, 1, 1, 1, 1, 1, 1","What are the names of the technicians by ascending order of age, and count them by a bar chart"
"SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY Sex DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Height)', 'x_data': [['M', 'F']], 'y_data': [[195.14285714285714, 197.5]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Height),"M, F","195.14285714285714, 197.5","Draw a bar chart of sex versus mean height, and could you list in descending by the X?"
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Sun', 'Wed', 'Tue', 'Mon', 'Fri', 'Sat', 'Thur']], 'y_data': [[7733.333333333333, 7590.909090909091, 6620, 6525, 6357.142857142857, 4933.333333333333, 3280]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Sun, Wed, Tue, Mon, Fri, Sat, Thur","7733.333333333333, 7590.909090909091, 6620, 6525, 6357.142857142857, 4933.333333333333, 3280","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and order by the y-axis from high to low."
"SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY avg(age) DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['LON', 'YYZ', 'WAS', 'SFO', 'NYC', 'ROC', 'CHI', 'ATL', 'PHL', 'PIT', 'BAL', 'NAR', 'LOS', 'HKG', 'DAL', 'BOS', 'PEK', 'HOU', 'DET']], 'y_data': [[27, 22.5, 21.66666666666667, 21, 20.33333333333333, 20, 20, 20, 19.666666666666668, 19, 18.5, 18, 18, 18, 18, 18, 17, 17, 17]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"LON, YYZ, WAS, SFO, NYC, ROC, CHI, ATL, PHL, PIT, BAL, NAR, LOS, HKG, DAL, BOS, PEK, HOU, DET","27, 22.5, 21.66666666666667, 21, 20.33333333333333, 20, 20, 20, 19.666666666666668, 19, 18.5, 18, 18, 18, 18, 18, 17, 17, 17","Find the average age of students living in each city with a bar chart, and could you display Y-axis in descending order?"
"SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY COUNT(Committee) ASC",Bar,Medium,election,"{'chart': 'bar', 'x_name': 'Committee', 'y_name': 'COUNT(Committee)', 'x_data': [['Economic Matters', 'Environmental Matters', 'Environmental Matters (Vice-Chair)', 'Health and Government Operations', 'Ways and Means', 'Appropriations']], 'y_data': [[1, 1, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Committee'}",bar,Committee,COUNT(Committee),"Economic Matters, Environmental Matters, Environmental Matters (Vice-Chair), Health and Government Operations, Ways and Means, Appropriations","1, 1, 1, 1, 1, 3","Show how many committee from each committee, sort from low to high by the y axis please."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and the average of price , and group by attribute name."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[138400, 117000, 281300, 146400, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"June, July, Aug, Sept, Oct","138400, 117000, 281300, 146400, 8300","For those employees who was hired before 2002-06-21, show me about the distribution of  hire_date and the sum of salary bin hire_date by time in a bar chart."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AD_PRES', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'SA_REP', 'FI_ACCOUNT', 'ST_MAN', 'HR_REP', 'IT_PROG', 'SH_CLERK', 'PU_CLERK', 'ST_CLERK']], 'y_data': [[24000, 12000, 11000, 11000, 8100, 7850, 7350, 6500, 6000, 3244.4444444444443, 2933.3333333333335, 2822.222222222222]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AD_PRES, AC_MGR, SA_MAN, PU_MAN, SA_REP, FI_ACCOUNT, ST_MAN, HR_REP, IT_PROG, SH_CLERK, PU_CLERK, ST_CLERK","24000, 12000, 11000, 11000, 8100, 7850, 7350, 6500, 6000, 3244.4444444444443, 2933.3333333333335, 2822.222222222222","For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and could you order y-axis in desc order?"
"SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY SUM(Account_Details) ASC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Statement_Details', 'y_name': 'SUM(Account_Details)', 'x_data': [['Open Project', 'Private Project']], 'y_data': [[20316, 21335]], 'classify': [], 'describe': 'GROUP BY Statement_Details'}",bar,Statement_Details,SUM(Account_Details),"Open Project, Private Project","20316, 21335","Show the sum of account details for different statement details in a bar chart, and sort in ascending by the y-axis."
"SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY AVG(count(*)) DESC",Bar,Extra Hard,baseball_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'AVG(count(*))', 'x_data': [['Thur', 'Mon', 'Tue', 'Wed', 'Sat', 'Fri', 'Sun']], 'y_data': [[10, 10, 8.333333333333334, 5, 5, 5, 0]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,AVG(count(*)),"Thur, Mon, Tue, Wed, Sat, Fri, Sun","10, 10, 8.333333333333334, 5, 5, 5, 0","Give me a bar chart that bins the year into day of the week interval, and return the average number of times the team Boston Red Stockings won in the postseasons, order from high to low by the y-axis."
"SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",Bar,Easy,device,"{'chart': 'bar', 'x_name': 'Software_Platform', 'y_name': 'COUNT(*)', 'x_data': [['Android', 'iOS']], 'y_data': [[5, 1]], 'classify': [], 'describe': ''}",bar,Software_Platform,COUNT(*),"Android, iOS","5, 1","What are the different software platforms for devices, and how many devices have each. "
"SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name ASC",Bar,Hard,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'count(*)', 'x_data': [['English', 'French', 'data structure', 'statistics']], 'y_data': [[2, 2, 1, 4]], 'classify': [], 'describe': ''}",bar,course_name,count(*),"English, French, data structure, statistics","2, 2, 1, 4","Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, sort X in asc order."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id",Bar,Easy,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['ds', 'math', 'en', 'fr', 'la', 'cal', 'nlp', 'dl', 'ml', 'db', 'pl']], 'y_data': [[1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"ds, math, en, fr, la, cal, nlp, dl, ml, db, pl","1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14",Display a bar chart for what are the names and ids of every course with less than 2 sections?
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['SA_REP', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'AD_PRES', 'IT_PROG', 'ST_MAN', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'HR_REP']], 'y_data': [[105300, 31400, 29200, 25400, 24000, 18000, 14700, 12000, 11000, 11000, 8800, 6500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"SA_REP, FI_ACCOUNT, SH_CLERK, ST_CLERK, AD_PRES, IT_PROG, ST_MAN, AC_MGR, SA_MAN, PU_MAN, PU_CLERK, HR_REP","105300, 31400, 29200, 25400, 24000, 18000, 14700, 12000, 11000, 11000, 8800, 6500","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank total number in desc order."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 203, 108, 111, 101.5, 100, 200, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 203, 108, 111, 101.5, 100, 200, 205, 206","For those employees who was hired before 2002-06-21, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, and rank by the X from high to low please."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Weight ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['28.09.1981', '06.10.1976', '10.11.1972', '01.09.1977', '22.04.1977', '20.08.1970', '10.03.1976', '05.05.1972', '03.02.1976']], 'y_data': [[82, 83, 85, 88, 88, 89, 90, 92, 94]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"28.09.1981, 06.10.1976, 10.11.1972, 01.09.1977, 22.04.1977, 20.08.1970, 10.03.1976, 05.05.1972, 03.02.1976","82, 83, 85, 88, 88, 89, 90, 92, 94","A bar chart shows the distribution of Date_of_Birth and Weight , show Weight from low to high order."
"SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""  ORDER BY COUNT(date_of_latest_logon) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_latest_logon', 'y_name': 'COUNT(date_of_latest_logon)', 'x_data': [['Fri', 'Mon', 'Sun', 'Thur', 'Tue', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN date_of_latest_logon BY WEEKDAY'}",bar,date_of_latest_logon,COUNT(date_of_latest_logon),"Fri, Mon, Sun, Thur, Tue, Wed, Sat","0, 0, 0, 0, 0, 0, 2","A bar chart for finding the number of the latest logon date of the students whose family name is ""Jaskolski"" or ""Langosh"", show in ascending by the Y."
"SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName ASC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['ASU', 'FSU', 'LSU', 'OU']], 'y_data': [[12000, 19000, 18000, 22000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"ASU, FSU, LSU, OU","12000, 19000, 18000, 22000","Compare the smallest enrollment of schools in each state using a bar chart, and I want to display by the X-axis in asc."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""  ORDER BY COUNT(date_of_enrolment) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Wed', 'Thur']], 'y_data': [[0, 0, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Fri, Mon, Sat, Sun, Tue, Wed, Thur","0, 0, 0, 0, 0, 0, 2","What is the date of enrollment of the course named ""Spanish"", and count them by a bar chart, and I want to show by the Y-axis from low to high."
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name ASC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Abu Dhabi Grand Prix', 'Australian Grand Prix', 'Bahrain Grand Prix', 'Belgian Grand Prix', 'Brazilian Grand Prix', 'British Grand Prix', 'Canadian Grand Prix', 'Chinese Grand Prix', 'European Grand Prix', 'German Grand Prix', 'Hungarian Grand Prix', 'Indian Grand Prix', 'Italian Grand Prix', 'Japanese Grand Prix', 'Korean Grand Prix', 'Malaysian Grand Prix', 'Monaco Grand Prix', 'Singapore Grand Prix', 'Spanish Grand Prix', 'Turkish Grand Prix']], 'y_data': [[3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Abu Dhabi Grand Prix, Australian Grand Prix, Bahrain Grand Prix, Belgian Grand Prix, Brazilian Grand Prix, British Grand Prix, Canadian Grand Prix, Chinese Grand Prix, European Grand Prix, German Grand Prix, Hungarian Grand Prix, Indian Grand Prix, Italian Grand Prix, Japanese Grand Prix, Korean Grand Prix, Malaysian Grand Prix, Monaco Grand Prix, Singapore Grand Prix, Spanish Grand Prix, Turkish Grand Prix","3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3","What are the names of races held between 2009 and 2011, and count them by a bar chart, and rank from low to high by the X-axis."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AD_PRES', 'AD_VP', 'MK_MAN', 'PU_MAN', 'SA_MAN', 'ST_MAN', 'AC_MGR', 'AD_ASST', 'FI_MGR', 'PR_REP', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SH_CLERK', 'ST_CLERK', 'SA_REP', 'MK_REP', 'AC_ACCOUNT']], 'y_data': [[0, 100, 100, 100, 100, 100, 101, 101, 101, 101, 102.8, 108, 114, 122, 122, 147, 201, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AD_PRES, AD_VP, MK_MAN, PU_MAN, SA_MAN, ST_MAN, AC_MGR, AD_ASST, FI_MGR, PR_REP, IT_PROG, FI_ACCOUNT, PU_CLERK, SH_CLERK, ST_CLERK, SA_REP, MK_REP, AC_ACCOUNT","0, 100, 100, 100, 100, 100, 101, 101, 101, 101, 102.8, 108, 114, 122, 122, 147, 201, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and display y axis in ascending order please."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Weight ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['28.09.1981', '06.10.1976', '10.11.1972', '01.09.1977', '22.04.1977', '20.08.1970', '10.03.1976', '05.05.1972', '03.02.1976']], 'y_data': [[82, 83, 85, 88, 88, 89, 90, 92, 94]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"28.09.1981, 06.10.1976, 10.11.1972, 01.09.1977, 22.04.1977, 20.08.1970, 10.03.1976, 05.05.1972, 03.02.1976","82, 83, 85, 88, 88, 89, 90, 92, 94","Visualize a bar chart about the distribution of Date_of_Birth and Weight , and I want to list y axis in asc order."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June', 'Oct']], 'y_data': [[5138, 4960, 3763, 1288, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Aug, July, June, Oct","5138, 4960, 3763, 1288, 206","For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and list by the y axis in descending."
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[308, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"England, Northern Ireland, Wales","308, 29, 27","Return a histogram on what are the nationalities and the total ages of journalists?, and I want to show by the total number of age in desc."
"SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Revenue)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[120, 130, 60, 150, 200, 300]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Revenue),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","120, 130, 60, 150, 200, 300","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, list by the X from high to low."
"SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'CITY', 'y_name': 'COUNT(CITY)', 'x_data': [['London', 'Munich', 'OX9 9ZB', 'Seattle', 'South San Francisco', 'Southlake', 'Toronto']], 'y_data': [[1, 1, 1, 21, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CITY'}",bar,CITY,COUNT(CITY),"London, Munich, OX9 9ZB, Seattle, South San Francisco, Southlake, Toronto","1, 1, 1, 21, 1, 1, 1",Create a bar chart showing the number of city across city
"SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY COUNT(year) DESC",Bar,Extra Hard,baseball_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['Wed', 'Tue', 'Thur', 'Mon', 'Fri', 'Sat', 'Sun']], 'y_data': [[3, 3, 2, 2, 2, 1, 0]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,COUNT(year),"Wed, Tue, Thur, Mon, Fri, Sat, Sun","3, 3, 2, 2, 2, 1, 0","Show me the frequency of the weekdays (binning year into weekdays interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to order by the Y in descending."
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'count(*)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': ''}",bar,bedType,count(*),"Double, King, Queen","2, 4, 4","Create a bar chart showing the total number across bedtype, and I want to show y axis from low to high order please."
"SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,phone_market,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['IPhone 6s', 'IPhone 7', 'IPhone 5s', 'IPhone X']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"IPhone 6s, IPhone 7, IPhone 5s, IPhone X","1, 1, 2, 2","I want to compare the number of the names of phones by a bar chart, and display from low to high by the total number."
"SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Hermann', 'Michael', 'Pat', 'Shelley', 'Susan', 'William', 'Kimberely']], 'y_data': [[0, 0, 0, 0, 0, 0, 0.15]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,COMMISSION_PCT,"Hermann, Michael, Pat, Shelley, Susan, William, Kimberely","0, 0, 0, 0, 0, 0, 0.15","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , display by the y axis in asc."
"SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY COUNTRY_NAME DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'COUNTRY_NAME', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['United States of America', 'United Kingdom', 'Germany', 'Canada']], 'y_data': [[9891, 203, 204, 403]], 'classify': [], 'describe': 'GROUP BY COUNTRY_NAME'}",bar,COUNTRY_NAME,SUM(EMPLOYEE_ID),"United States of America, United Kingdom, Germany, Canada","9891, 203, 204, 403","Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, and list bar in descending order."
"SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Fujits', 'Iomega', 'Sony', 'Winchester', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Fujits, Iomega, Sony, Winchester, Creative Labs, Hewlett-Packard","1, 1, 1, 2, 3, 3","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and could you order in asc by the y-axis?"
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1","Visualize a bar chart about the distribution of ACC_Road and the sum of Team_ID , and group by attribute ACC_Road, and list in desc by the Y please."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['cal', 'db', 'dl', 'ds', 'en', 'fr', 'la', 'math', 'ml', 'nlp', 'pl']], 'y_data': [[7, 12, 9, 1, 4, 5, 6, 2, 10, 8, 14]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"cal, db, dl, ds, en, fr, la, math, ml, nlp, pl","7, 12, 9, 1, 4, 5, 6, 2, 10, 8, 14","Display a bar chart for what are the names and ids of every course with less than 2 sections?, sort names in asc order."
"SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'School_ID', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,School_ID,"14–2, 13–3, 10–6, 9–7","1, 2, 4, 5","Return a bar chart about the distribution of ACC_Regular_Season and School_ID , display School_ID in ascending order."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'AD_VP', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'PU_MAN', 'PU_CLERK', 'ST_MAN', 'ST_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'AD_ASST', 'MK_MAN', 'MK_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 204, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AD_PRES, AD_VP, IT_PROG, FI_MGR, FI_ACCOUNT, PU_MAN, PU_CLERK, ST_MAN, ST_CLERK, SA_MAN, SA_REP, SH_CLERK, AD_ASST, MK_MAN, MK_REP, PR_REP, AC_MGR, AC_ACCOUNT","100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 204, 205, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and sort mean employee id in ascending order."
"SELECT middle_name , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'author_tutor_ATB', 'x_data': [['Keira', 'Ruthie', 'Alejandra', 'Ethyl', 'Joyce', 'Amani', 'Mathew', 'Aniyah', 'Kennith', 'Ethelyn', 'Jaclyn', 'Corene', 'Fritz', 'Jayce', 'Zena']], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",bar,middle_name,author_tutor_ATB,"Keira, Ruthie, Alejandra, Ethyl, Joyce, Amani, Mathew, Aniyah, Kennith, Ethelyn, Jaclyn, Corene, Fritz, Jayce, Zena","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Return a bar chart about the distribution of  middle_name and  author_tutor_ATB .
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'MK_REP', 'SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'PR_REP', 'FI_MGR', 'AD_ASST', 'AC_MGR', 'ST_MAN', 'SA_MAN', 'PU_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, MK_REP, SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, PR_REP, FI_MGR, AD_ASST, AC_MGR, ST_MAN, SA_MAN, PU_MAN, MK_MAN, AD_VP, AD_PRES","205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, I want to order in desc by the mean manager id please."
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Anne Walker', 'Vicente Carretero', 'Lucy Wong', 'Kearsley Brown', 'Gustaaf Deloor']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Anne Walker, Vicente Carretero, Lucy Wong, Kearsley Brown, Gustaaf Deloor","2, 1, 1, 1, 1","Show the number of courses each teacher teaches in a bar chart, display y-axis in descending order."
"SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Hard,restaurant_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Adams', 'Apap', 'Davis', 'Gompers', 'Jones', 'Kim', 'Kumar', 'Leighton', 'Nelson', 'Norris', 'Pang', 'Schultz', 'Schwartz', 'Smith', 'Tai', 'Wilson', 'Lee']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Adams, Apap, Davis, Gompers, Jones, Kim, Kumar, Leighton, Nelson, Norris, Pang, Schultz, Schwartz, Smith, Tai, Wilson, Lee","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","List how many students in each last name who majored in 600 using a bar chart, I want to show from low to high by the y-axis."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 1, 2, 4, 1",Find the number of booking start date for the apartments that have more than two bedrooms for each weekday in a bar chart.
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[125, 119.2, 105.63636363636364, 121.2, 126.57142857142857, 127.11111111111111, 133]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","125, 119.2, 105.63636363636364, 121.2, 126.57142857142857, 127.11111111111111, 133","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by weekday."
"SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[5, 3]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Cargo ship, Battle ship","5, 3","For each type, how many ships are there Plot them as bar chart, list from high to low by the total number please."
"SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[45, 43, 38, 38, 51.33333333333334]], 'classify': [], 'describe': ''}",bar,Class,avg(age),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","45, 43, 38, 38, 51.33333333333334","Return the average age of captains in each class, and rank from low to high by the X."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 101, 0, 100, 108, 101, 101, 102.8, 100, 201, 101, 114, 100, 100, 147, 122, 122, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 101, 0, 100, 108, 101, 101, 102.8, 100, 201, 101, 114, 100, 100, 147, 122, 122, 100","For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and could you rank by the JOB_ID in ascending please?"
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Country_name', 'y_name': 'COUNT(*)', 'x_data': [['Indonesia', 'Ireland', 'Isle of Man', 'United States']], 'y_data': [[1, 4, 2, 9]], 'classify': [], 'describe': ''}",bar,Country_name,COUNT(*),"Indonesia, Ireland, Isle of Man, United States","1, 4, 2, 9",Show the country names and the corresponding number of players in a bar chart.
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force ORDER BY COUNT(*) DESC",Bar,Medium,county_public_safety,"{'chart': 'bar', 'x_name': 'Police_force', 'y_name': 'COUNT(*)', 'x_data': [['RCMP', 'Central Saanich Police', 'Abbotsford Police Department']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Police_force,COUNT(*),"RCMP, Central Saanich Police, Abbotsford Police Department","4, 1, 1","Return a bar chart on how many counties correspond to each police force?, and could you list by the y axis in descending?"
"SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY last_name DESC",Bar,Medium,student_assessment,"{'chart': 'bar', 'x_name': 'last_name', 'y_name': 'COUNT(last_name)', 'x_data': [['Wintheiser', 'Senger', 'Hartmann', 'Grant', 'Feest', 'Bednar', 'Bartoletti']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY last_name'}",bar,last_name,COUNT(last_name),"Wintheiser, Senger, Hartmann, Grant, Feest, Bednar, Bartoletti","1, 1, 2, 1, 1, 1, 1","Bar graph to show the number of last name from different last name, list X-axis in desc order."
"SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T"" GROUP BY Language ORDER BY Language ASC",Bar,Extra Hard,world_1,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'COUNT(Language)', 'x_data': [['Dutch', 'Papiamento']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Language'}",bar,Language,COUNT(Language),"Dutch, Papiamento","3, 1","What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and sort x-axis in asc order."
"SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'Age', 'x_data': [['Apap', 'Lee']], 'y_data': [[18, 17]], 'classify': [], 'describe': ''}",bar,LName,Age,"Apap, Lee","18, 17",Find the last name and age of the student who has allergy to both milk and cat. Show a bar chart.
"SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'avg(capacity)', 'x_data': [['Stabler', 'Painter', 'Taylor', 'Nassa', 'Whitman', 'Rathbone', 'Garfield', 'Lambea', 'Saucon', 'Gates', 'Alumni', 'Grace', 'Polya', 'Fairchild', 'Main', 'Drown', 'Bronfman', 'Power', 'Chandler', 'Lamberton']], 'y_data': [[113, 97, 93, 92, 76, 60, 59, 51, 49.33333333333334, 37.5, 36.5, 34, 28, 27, 26, 18, 12, 11, 10.5, 10]], 'classify': [], 'describe': ''}",bar,building,avg(capacity),"Stabler, Painter, Taylor, Nassa, Whitman, Rathbone, Garfield, Lambea, Saucon, Gates, Alumni, Grace, Polya, Fairchild, Main, Drown, Bronfman, Power, Chandler, Lamberton","113, 97, 93, 92, 76, 60, 59, 51, 49.33333333333334, 37.5, 36.5, 34, 28, 27, 26, 18, 12, 11, 10.5, 10","Find the average capacity among rooms in each building with a bar chart, and display by the y axis from high to low."
"SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY decor DESC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'avg(basePrice)', 'x_data': [['traditional', 'rustic', 'modern']], 'y_data': [[187.5, 162.5, 112.5]], 'classify': [], 'describe': ''}",bar,decor,avg(basePrice),"traditional, rustic, modern","187.5, 162.5, 112.5","Please use a bar chart to show the average price of the rooms in a different decor, list bars in descending order please."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, rank by the x-axis in ascending."
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY Result ASC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Accepted', 'Rejected']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Accepted, Rejected","2, 4","Bar graph to show how many result from different result, sort in asc by the X."
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['environmental', 'animal', 'food']], 'y_data': [[3, 4, 7]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"environmental, animal, food","3, 4, 7","Bar graph to show the total number from different allergytype, and display by the Y in asc."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'ST_MAN', 'SA_MAN', 'AC_ACCOUNT', 'MK_REP', 'AD_VP', 'PR_REP', 'FI_MGR', 'AD_ASST', 'AC_MGR', 'PU_MAN', 'MK_MAN', 'AD_PRES']], 'y_data': [[4410, 2440, 2440, 570, 540, 514, 500, 500, 205, 201, 200, 101, 101, 101, 101, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, ST_MAN, SA_MAN, AC_ACCOUNT, MK_REP, AD_VP, PR_REP, FI_MGR, AD_ASST, AC_MGR, PU_MAN, MK_MAN, AD_PRES","4410, 2440, 2440, 570, 540, 514, 500, 500, 205, 201, 200, 101, 101, 101, 101, 100, 100, 0","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, and display by the y axis in desc please."
"SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY SUM(count(*)) ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(count(*))', 'x_data': [['Austin', 'Cassandra', 'Haley', 'Jessica', 'Kyle', 'Logan', 'Tiffany', 'Alexis', 'Kris', 'Andrew', 'Gabriel', 'Jordan']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(count(*)),"Austin, Cassandra, Haley, Jessica, Kyle, Logan, Tiffany, Alexis, Kris, Andrew, Gabriel, Jordan","1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3","Show the names of high school students and their corresponding number of friends with a bar chart, display by the y axis from low to high."
"SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'staff_name', 'y_name': 'count(*)', 'x_data': [['Berneice', 'Bernice', 'Christophe', 'Cyrus', 'Edmond', 'Kadin', 'Oren', 'Rodger']], 'y_data': [[2, 2, 1, 1, 3, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,staff_name,count(*),"Berneice, Bernice, Christophe, Cyrus, Edmond, Kadin, Oren, Rodger","2, 2, 1, 1, 3, 4, 1, 1","How many engineers did each staff contact? List both the contact staff name and number of engineers contacted Plot them as bar chart, and I want to rank from low to high by the bar."
"SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Flag', 'y_name': 'count(*)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 8]], 'classify': [], 'describe': ''}",bar,Flag,count(*),"Malta, Panama","1, 8","Show the total number from each flag, and sort by the y axis in ascending."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID ASC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['UK gallery', 'flying elephant', 'history gallery', 'presidents hall', 'fun shops']], 'y_data': [[2701, 5076, 6653, 8429, 9360]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"UK gallery, flying elephant, history gallery, presidents hall, fun shops","2701, 5076, 6653, 8429, 9360","What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, show by the Tourist_Attraction_ID in asc."
"SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Auto Club Speedway', 'Chicagoland Speedway', 'Daytona International Speedway', 'Homestead-Miami Speedway', 'Kansas Speedway', 'Martinsville Speedway']], 'y_data': [[1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Auto Club Speedway, Chicagoland Speedway, Daytona International Speedway, Homestead-Miami Speedway, Kansas Speedway, Martinsville Speedway","1, 2, 1, 1, 1, 1","Return a histogram on what are the names of different tracks, and how many races has each had?"
"SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'CLASS_ROOM', 'y_name': 'count(*)', 'x_data': [['BUS252', 'BUS311', 'KLR200', 'KLR209']], 'y_data': [[2, 2, 4, 3]], 'classify': [], 'describe': ''}",bar,CLASS_ROOM,count(*),"BUS252, BUS311, KLR200, KLR209","2, 2, 4, 3","For each classroom with at least 2 classes, how many classes are offered. "
"SELECT Fname , COUNT(Fname) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY Fname ORDER BY Fname ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Arthur', 'Bruce', 'David', 'Eric', 'George', 'Ian', 'Jandy', 'Linda', 'Lisa', 'Mark', 'Paul', 'Sarah', 'Shiela', 'Stacy', 'Steven', 'William']], 'y_data': [[1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Arthur, Bruce, David, Eric, George, Ian, Jandy, Linda, Lisa, Mark, Paul, Sarah, Shiela, Stacy, Steven, William","1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What is the first name of each student who is not allergic to any type of food? Count them in a bar chart, and list x-axis in ascending order please."
"SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'COUNT(*)', 'x_data': [['French', 'modern Arts', 'database', 'advanced database', 'Writing in French', 'Spanish', 'Japanese', 'Art history', 'AI', 'Chinese Painting']], 'y_data': [[3, 2, 2, 2, 2, 2, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,COUNT(*),"French, modern Arts, database, advanced database, Writing in French, Spanish, Japanese, Art history, AI, Chinese Painting","3, 2, 2, 2, 2, 2, 2, 2, 2, 1","List the name and the number of enrolled student for each course in a bar chart, and order total number in desc order."
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Algeria', 'Denmark', 'Afghanistan', 'Albania']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Algeria, Denmark, Afghanistan, Albania","1, 1, 2, 2","Show the name for regions and the number of storms for each region, and I want to list by the y axis in asc."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 101, 0, 200, 540, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 101, 0, 200, 540, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  job_id and the sum of manager_id , and group by attribute job_id."
"SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY COUNT(Venue) ASC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Istanbul Turkey', 'New Jersey USA', 'London UK', 'New York USA']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"Istanbul Turkey, New Jersey USA, London UK, New York USA","1, 1, 2, 2","A bar chart shows the venue for each workshop, and could you display Y from low to high order please?"
"SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['Tue', 'Sat', 'Fri', 'Wed', 'Thur', 'Sun', 'Mon']], 'y_data': [[1, 1, 1, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_moved_in BY WEEKDAY'}",bar,date_moved_in,COUNT(date_moved_in),"Tue, Sat, Fri, Wed, Thur, Sun, Mon","1, 1, 1, 0, 0, 0, 0","What are the number of the distinct move in dates of the residents?, and sort by the total number in descending."
"SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive, DVD drive","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","Select the names of all the products in the store, and count them by a bar chart, and order Y-axis from low to high order."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'HR_REP', 'MK_MAN', 'MK_REP', 'PR_REP', 'SA_REP']], 'y_data': [[206, 205, 203, 201, 202, 204, 178]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"AC_ACCOUNT, AC_MGR, HR_REP, MK_MAN, MK_REP, PR_REP, SA_REP","206, 205, 203, 201, 202, 204, 178","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and employee_id , and sort in asc by the X-axis."
"SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY outcome_code DESC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'outcome_code', 'y_name': 'count(*)', 'x_data': [['Order', 'No Response']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,outcome_code,count(*),"Order, No Response","10, 5","Show the outcome code of mailshots along with the number of mailshots in each outcome code in a bar chart, could you show in descending by the names?"
"SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name ASC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Ananthapuri Express', 'Guruvayur Express', 'Island Express', 'Jayanthi Janatha Express', 'Madurai Fast Passenger', 'Parasuram Express', 'Quilon Fast Passenger']], 'y_data': [[2, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Ananthapuri Express, Guruvayur Express, Island Express, Jayanthi Janatha Express, Madurai Fast Passenger, Parasuram Express, Quilon Fast Passenger","2, 2, 2, 2, 1, 1, 1","Visualize a bar chart, group by name and compute each group's total number, and display X-axis in ascending order."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC",Bar,Extra Hard,sakila_1,"{'chart': 'bar', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['July', 'Aug', 'June', 'May']], 'y_data': [[47, 47, 15, 5]], 'classify': [], 'describe': 'BIN payment_date BY MONTH'}",bar,payment_date,COUNT(payment_date),"July, Aug, June, May","47, 47, 15, 5","A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and I want to display by the Y in descending."
"SELECT Sex , avg(weight) FROM people GROUP BY sex ORDER BY avg(weight) DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.7142857142857]], 'classify': [], 'describe': ''}",bar,Sex,avg(weight),"F, M","92, 86.7142857142857","A bar chart showing the average weight for each gender, I want to sort total number from high to low order."
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype ORDER BY count(*) ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","8, 23, 28","Show all allergy type with number of students affected Visualize by bar chart, rank in asc by the y-axis."
"SELECT hand , count(*) FROM players GROUP BY hand ORDER BY hand DESC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['U', 'R', 'L', '']], 'y_data': [[14193, 5028, 487, 954]], 'classify': [], 'describe': ''}",bar,hand,count(*),"U, R, L, ","14193, 5028, 487, 954","Return a histogram on how many players are there for each hand type?, rank in desc by the names."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[5, 3.4]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"F, T","5, 3.4",Plot the average of shop id by grouped by is full time as a bar graph
"SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) ASC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Bietzk', 'Jaekel', 'Mahmoud', 'Ullman ', 'DAgostino', 'Dale', 'Mingoz']], 'y_data': [[1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Bietzk, Jaekel, Mahmoud, Ullman , DAgostino, Dale, Mingoz","1, 1, 1, 1, 2, 2, 2","List the number of courses in year 2008 for each instructor in a bar chart, display y axis in ascending order."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[5685.714285714285, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","5685.714285714285, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of  hire_date and the average of salary bin hire_date by weekday."
"SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY count(*) ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AssocProf', 'Professor', 'AsstProf']], 'y_data': [[2, 14, 18]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"AssocProf, Professor, AsstProf","2, 14, 18","How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart, and rank by the Y in ascending."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'Toner cartridge', 'DVD burner', 'DVD drive']], 'y_data': [[1, 2, 3, 4, 5, 7, 8, 9, 10, 17]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, Toner cartridge, DVD burner, DVD drive","1, 2, 3, 4, 5, 7, 8, 9, 10, 17","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, could you show by the Y-axis from low to high?"
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail"" GROUP BY date_of_completion ORDER BY date_of_completion DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-03-22', '2018-03-07', '2018-03-06', '2018-03-04', '2018-03-02', '2018-02-26']], 'y_data': [[2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",bar,date_of_completion,COUNT(date_of_completion),"2018-03-22, 2018-03-07, 2018-03-06, 2018-03-04, 2018-03-02, 2018-02-26","2, 1, 1, 1, 1, 1","Return the completion date for all the tests that have ""Fail"" result, and count them by a bar chart, sort bars in desc order."
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Jessica', 'John', 'Kyle']], 'y_data': [[1, 1, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Jessica, John, Kyle","1, 1, 1, 1, 1, 2, 1, 1, 1","Show the number of names of high schoolers who have likes with a bar chart, and display names in asc order."
"SELECT Statement_Details , COUNT(Statement_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY Statement_Details DESC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Statement_Details', 'y_name': 'COUNT(Statement_Details)', 'x_data': [['Private Project', 'Open Project']], 'y_data': [[6, 9]], 'classify': [], 'describe': 'GROUP BY Statement_Details'}",bar,Statement_Details,COUNT(Statement_Details),"Private Project, Open Project","6, 9","Show the number of accounts for different statement details in a bar chart, list by the x-axis in desc."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[14, 31, 31, 30, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept, Oct","14, 31, 31, 30, 1","For those employees who was hired before 2002-06-21, show me about the distribution of  hire_date and the amount of hire_date bin hire_date by time in a bar chart."
"SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25.5, 35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"student, engineer, doctor","25.5, 35, 45","Visualize a bar chart for what is average age for different job title?, I want to show from low to high by the the average of age."
"SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'COUNT(Class)', 'x_data': [['Third-rate ship of the line', 'Sloop-of-war', 'Frigate', 'Cutter', 'Armed schooner']], 'y_data': [[3, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Class'}",bar,Class,COUNT(Class),"Third-rate ship of the line, Sloop-of-war, Frigate, Cutter, Armed schooner","3, 1, 1, 1, 1","Compare the total number of captains with different classes using a bar graph, and order from high to low by the the number of class."
"SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier ASC",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'COUNT(*)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Carrier,COUNT(*),"Sprint, TMobile","2, 3","Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, order in asc by the x-axis please."
"SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year",Bar,Easy,cinema,"{'chart': 'bar', 'x_name': 'Openning_year', 'y_name': 'AVG(Capacity)', 'x_data': [['2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01', '2015-01-01']], 'y_data': [[305, 544.3333333333334, 445.3333333333333, 368, 330, 364]], 'classify': [], 'describe': 'GROUP BY Openning_year'}",bar,Openning_year,AVG(Capacity),"2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01, 2015-01-01","305, 544.3333333333334, 445.3333333333333, 368, 330, 364",A bar chart showing the average of capacity of cinemas open for each year.
"SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'Team_ID', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,All_Neutral,Team_ID,"3–3, 4–3, 5–3, 9–1","4, 3, 2, 1","Give me a bar chart for team_id of each all neutral, and sort in descending by the Team_ID."
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank DESC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Midshipman', 'Lieutenant', 'Commander, junior captain']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Midshipman, Lieutenant, Commander, junior captain","3, 1, 1","How many captains with younger than 50 are in each rank, and sort in desc by the bar."
"SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Australia', 'Canada', 'Northern Ireland', 'Sweden', 'United States']], 'y_data': [[1, 1, 1, 1, 8]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Australia, Canada, Northern Ireland, Sweden, United States","1, 1, 1, 1, 8","Show all countries and the number of people from each country with a bar chart, rank bar in asc order."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) DESC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['Tue', 'Sat', 'Wed', 'Sun', 'Mon', 'Fri', 'Thur']], 'y_data': [[3, 3, 2, 2, 2, 2, 1]], 'classify': [], 'describe': 'BIN booking_end_date BY WEEKDAY'}",bar,booking_end_date,COUNT(booking_end_date),"Tue, Sat, Wed, Sun, Mon, Fri, Thur","3, 3, 2, 2, 2, 2, 1","How many apartment bookings in each weekday? Show me a bar chart binning booking end date by weekday, list Y-axis in desc order."
"SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) DESC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'avg(basePrice)', 'x_data': [['traditional', 'rustic', 'modern']], 'y_data': [[187.5, 162.5, 112.5]], 'classify': [], 'describe': ''}",bar,decor,avg(basePrice),"traditional, rustic, modern","187.5, 162.5, 112.5","Give me a bar chart for the average of baseprice of each decor, could you display Y-axis from high to low order?"
"SELECT Fname , COUNT(Fname) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY Fname ORDER BY Fname ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Arthur', 'Bruce', 'David', 'Eric', 'George', 'Ian', 'Jandy', 'Linda', 'Lisa', 'Mark', 'Paul', 'Sarah', 'Shiela', 'Stacy', 'Steven', 'William']], 'y_data': [[1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Arthur, Bruce, David, Eric, George, Ian, Jandy, Linda, Lisa, Mark, Paul, Sarah, Shiela, Stacy, Steven, William","1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the first name of the students who do not have any food type allergy and count them in a bar chart, and order in ascending by the x-axis."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0","What is the date of enrollment of the course named ""Spanish"", and count them by a bar chart"
"SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY COUNT(building) ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Brodhead', 'Bronfman', 'Chandler', 'Lambea', 'Lamberton', 'Linderman', 'Main', 'Mercer', 'Rauch', 'Saucon', 'Thompson', 'Whitman', 'Wrigley', 'Candlestick', 'Palmer', 'Taylor']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Brodhead, Bronfman, Chandler, Lambea, Lamberton, Linderman, Main, Mercer, Rauch, Saucon, Thompson, Whitman, Wrigley, Candlestick, Palmer, Taylor","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3","How many departments for each building? Draw a bar chart, and rank in asc by the how many building."
"SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY count(DISTINCT dept_name) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_name)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_name),"A&SCI, BUS","7, 4","How many departments are in each school Show bar chart, could you sort by the total number in descending?"
"SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'DEPARTMENT_ID', 'x_data': [['515.123.8181', '515.123.8080', '515.123.8888', '515.123.7777', '603.123.6666', '515.123.5555', '011.44.1644.429263']], 'y_data': [[110, 110, 70, 40, 20, 20, 0]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,DEPARTMENT_ID,"515.123.8181, 515.123.8080, 515.123.8888, 515.123.7777, 603.123.6666, 515.123.5555, 011.44.1644.429263","110, 110, 70, 40, 20, 20, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and department_id , I want to show y-axis in descending order please."
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id",Bar,Easy,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Society Research project', 'Internet of Things project', 'Graph Database project', 'Human Resource project']], 'y_data': [[30, 35, 105, 134]], 'classify': [], 'describe': ''}",bar,Project_Details,Project_ID,"Society Research project, Internet of Things project, Graph Database project, Human Resource project","30, 35, 105, 134",Return the ids and details corresponding to projects for which there are more than two documents in a bar chart.
"SELECT charge_type , charge_amount FROM Charges",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'charge_type', 'y_name': 'charge_amount', 'x_data': [['Daily Accommodation', 'Drugs', 'Health Check']], 'y_data': [[98, 322, 640]], 'classify': [], 'describe': ''}",bar,charge_type,charge_amount,"Daily Accommodation, Drugs, Health Check","98, 322, 640",How much does each charge type costs? List both charge type and amount. 
"SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) DESC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Honolul', 'Washington D.C.', 'Tokyo', 'Sydney', 'New York', 'Los Angeles', 'Dallas', 'Chicago', 'Boston']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Honolul, Washington D.C., Tokyo, Sydney, New York, Los Angeles, Dallas, Chicago, Boston","2, 1, 1, 1, 1, 1, 1, 1, 1","Can you give a histogram to compare the number of flights to each destination city?, order by the the number of destination in descending."
"SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) DESC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2017-01-01', '2016-01-01']], 'y_data': [[20, 2]], 'classify': [], 'describe': 'GROUP BY year'}",bar,year,COUNT(year),"2017-01-01, 2016-01-01","20, 2","How many races are held in each year after 2014? Show me a bar chart, rank total number in desc order please."
"SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 9, 5, 4, 6, 12]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Manufacturer),"Andy, James, John, Mary, Owen, Robert","1, 9, 5, 4, 6, 12","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and I want to sort X-axis in asc order."
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) ASC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Brentwood', 'Thurrock', 'Watford', 'Broxbourne', 'Chiltern', 'Three Rivers']], 'y_data': [[1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Brentwood, Thurrock, Watford, Broxbourne, Chiltern, Three Rivers","1, 1, 1, 2, 3, 3","Bar chart of how many local authority from each local authority, and order in ascending by the y-axis."
"SELECT Sex , count(*) FROM Faculty GROUP BY Sex",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[7, 51]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,count(*),"F, M","7, 51",A bar chart showing the number of male and female faculty.
"SELECT Hometown , Age FROM teacher ORDER BY Hometown ASC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Blackrod Urban District', 'Bolton County Borough', 'Farnworth Municipal Borough', 'Horwich Urban District', 'Kearsley Urban District', 'Little Lever Urban District', 'Turton Urban District']], 'y_data': [[32, 29, 26, 33, 45, 41, 39]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Blackrod Urban District, Bolton County Borough, Farnworth Municipal Borough, Horwich Urban District, Kearsley Urban District, Little Lever Urban District, Turton Urban District","32, 29, 26, 33, 45, 41, 39","Display a bar chart for what are the age and hometown of teachers?, and order x-axis in ascending order please."
"SELECT Name , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID ORDER BY Name DESC",Bar,Hard,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['presidents hall', 'parking', 'jungle cruise', 'history gallery', 'fun shops', 'fun games', 'flying elephant', 'exploration trial', 'US museum', 'UK gallery']], 'y_data': [[1, 2, 3, 1, 1, 2, 1, 4, 4, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"presidents hall, parking, jungle cruise, history gallery, fun shops, fun games, flying elephant, exploration trial, US museum, UK gallery","1, 2, 3, 1, 1, 2, 1, 4, 4, 1","A bar chart showing the number of tourist attractions for each attraction name, display X in desc order."
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",Bar,Easy,perpetrator,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['China', 'India', 'Japan', 'South Korea']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"China, India, Japan, South Korea","2, 1, 1, 1",Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.
"SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name DESC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Three', 'One', 'Four', 'Five']], 'y_data': [[1, 2, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Three, One, Four, Five","1, 2, 1, 2","List the name for storms and the number of affected regions for each storm, order bars from high to low order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Thur', 'Wed', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Thur, Wed, Tue, Sun, Sat, Mon, Fri","2, 1, 1, 1, 1, 1, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, I want to display Y-axis in descending order please."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[5685.714285714285, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","5685.714285714285, 6286.666666666667, 7775, 6762.5, 6320, 6493.333333333333, 5746.666666666667","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of  hire_date and the average of salary bin hire_date by weekday."
"SELECT guest_first_name , COUNT(guest_first_name) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id GROUP BY guest_first_name ORDER BY COUNT(guest_first_name) DESC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'guest_first_name', 'y_name': 'COUNT(guest_first_name)', 'x_data': [['Rebeca', 'Lo', 'Keon', 'Tamia', 'Mozell', 'Louvenia', 'Keith', 'Juvenal', 'Gabe', 'Else']], 'y_data': [[4, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY guest_first_name'}",bar,guest_first_name,COUNT(guest_first_name),"Rebeca, Lo, Keon, Tamia, Mozell, Louvenia, Keith, Juvenal, Gabe, Else","4, 2, 2, 1, 1, 1, 1, 1, 1, 1","How many bookings for different guests? Show me a bar chart grouping by guest first name, could you rank in descending by the y axis?"
"SELECT size_code , COUNT(size_code) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY size_code ORDER BY COUNT(size_code) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'size_code', 'y_name': 'COUNT(size_code)', 'x_data': [['SML', 'LGE', 'MED']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': 'GROUP BY size_code'}",bar,size_code,COUNT(size_code),"SML, LGE, MED","2, 4, 9","How many dogs for each size code? Return a bar chart, I want to display by the Y from low to high."
"SELECT name , distance FROM Aircraft ORDER BY name DESC",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Tupolev 154', 'Schwitzer 2-33', 'SAAB 340', 'Piper Archer III', 'Lockheed L1011', 'Embraer ERJ-145', 'British Aerospace Jetstream 41', 'Boeing 777-300', 'Boeing 767-400ER', 'Boeing 757-300', 'Boeing 747-400', 'Boeing 737-800', 'Boeing 727', 'Airbus A340-300', 'Airbus A320', 'Airbus A319']], 'y_data': [[4103, 30, 2128, 520, 6900, 1530, 1502, 6441, 6475, 4010, 8430, 3383, 1504, 7120, 2605, 1805]], 'classify': [], 'describe': ''}",bar,name,distance,"Tupolev 154, Schwitzer 2-33, SAAB 340, Piper Archer III, Lockheed L1011, Embraer ERJ-145, British Aerospace Jetstream 41, Boeing 777-300, Boeing 767-400ER, Boeing 757-300, Boeing 747-400, Boeing 737-800, Boeing 727, Airbus A340-300, Airbus A320, Airbus A319","4103, 30, 2128, 520, 6900, 1530, 1502, 6441, 6475, 4010, 8430, 3383, 1504, 7120, 2605, 1805","Show name and distance for all aircrafts by a bar chart, could you order by the x-axis in desc?"
"SELECT Name , Weight FROM people ORDER BY Weight DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Stéphane Antiga', 'Laurent Capet', 'Frantz Granvorka', 'Loïc De Kergret', 'Vincent Montméat', 'Philippe Barça-Cysique', 'Dominique Daquin', 'Hubert Henno', 'Guillaume Samica']], 'y_data': [[94, 92, 90, 89, 88, 88, 85, 83, 82]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Stéphane Antiga, Laurent Capet, Frantz Granvorka, Loïc De Kergret, Vincent Montméat, Philippe Barça-Cysique, Dominique Daquin, Hubert Henno, Guillaume Samica","94, 92, 90, 89, 88, 88, 85, 83, 82","Draw a bar chart about the distribution of Name and Weight , and display y-axis in descending order."
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id",Bar,Easy,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Society Research project', 'Internet of Things project', 'Graph Database project', 'Human Resource project']], 'y_data': [[30, 35, 105, 134]], 'classify': [], 'describe': ''}",bar,Project_Details,Project_ID,"Society Research project, Internet of Things project, Graph Database project, Human Resource project","30, 35, 105, 134",Show me a bar chart for what is the project id and detail for the project with at least two documents?
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass""  ORDER BY COUNT(date_test_taken) DESC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['Sun', 'Mon', 'Wed', 'Sat', 'Fri', 'Tue', 'Thur']], 'y_data': [[3, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_test_taken BY WEEKDAY'}",bar,date_test_taken,COUNT(date_test_taken),"Sun, Mon, Wed, Sat, Fri, Tue, Thur","3, 2, 1, 1, 1, 0, 0","A bar chart for finding the number of the dates of the tests taken with result ""Pass"", list in descending by the y-axis."
"SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'attribute_name', 'y_name': 'COUNT(attribute_name)', 'x_data': [['Black', 'Sweet', 'Yellow']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': 'GROUP BY attribute_name'}",bar,attribute_name,COUNT(attribute_name),"Black, Sweet, Yellow","3, 3, 2","Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, sort in ascending by the x axis."
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  job_id and  department_id  in a bar chart."
"SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'Memory', 'Toner cartridge']], 'y_data': [[90, 120, 66]], 'classify': [], 'describe': ''}",bar,Name,Price,"CD drive, Memory, Toner cartridge","90, 120, 66","For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart, order by the x axis in ascending."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Willa', 'Van', 'Ross', 'Ronald', 'Robert', 'Ralph', 'Preston', 'Peter', 'Melanie', 'James', 'Ismael', 'Hermine', 'Herman', 'Gerald', 'George', 'Doreen', 'Carlos', 'Arnelle', 'Annelise', 'Anne']], 'y_data': [[1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Willa, Van, Ross, Ronald, Robert, Ralph, Preston, Peter, Melanie, James, Ismael, Hermine, Herman, Gerald, George, Doreen, Carlos, Arnelle, Annelise, Anne","1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many professors for each first name? Show me a bar chart, could you sort by the names in desc please?"
"SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Bell Centre', 'Madison Square Garden', 'Scotiabank Place', 'TD Garden', 'Verizon Center']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Bell Centre, Madison Square Garden, Scotiabank Place, TD Garden, Verizon Center","1, 1, 1, 1, 2","Bar chart x axis location y axis how many location, and order by the Y-axis from low to high."
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[6, 2, 4, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Robert, Owen, Mary, John, James, Andy","6, 2, 4, 5, 3, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, and could you sort by the X in desc?"
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 2, 0, 1, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 2, 0, 1, 1","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the amount of hire_date bin hire_date by weekday in a bar chart."
"SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'COUNT(Directed_by)', 'x_data': [['Jesus Salvador Treviño', 'Bill Schreiner']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'GROUP BY Directed_by'}",bar,Directed_by,COUNT(Directed_by),"Jesus Salvador Treviño, Bill Schreiner","1, 4","Bar graph to show the number of directed by from different directed by, and I want to sort by the x axis from high to low."
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY DEPT_CODE DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ENGL', 'EDU', 'CIS', 'BIOL', 'ACCT']], 'y_data': [[102, 120, 147, 42, 165]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(stu_hrs),"ENGL, EDU, CIS, BIOL, ACCT","102, 120, 147, 42, 165","Return a bar chart on how many hours do the students spend studying in each department?, and could you list from high to low by the bars?"
"SELECT password , author_tutor_ATB FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'password', 'y_name': 'author_tutor_ATB', 'x_data': [['e96c0bcbbbb14747747a56ff4c17354f343a5b4f', 'c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b', '4f149f75ecd84afcdf27343509cdd03d81edb119', 'cdaf6c3483f19e2253659a40a3aab786a3390f78', 'b517a107b5f08fafe9628e88e7263a6f3a4a55c0', '120ac8a5744f5b710ecaebbd8dd1633e3e33886e', '4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3', 'd34378200c9b5f72d3039fa640e7920aaec0fdf2', '02d64f11de97436343a0beba41bfcf69af61be1e', '3e2f7bf1e6acf0d616a8703ee0050fba13bc007f', '6b9979a83b4a9e03ead034c8de47f1b013a3d3af', '24b0ee84063c3b017ab1839e01b7280f47f7c7c2', '6d587cec8006e3a40565e1dad2c5b5b12b475b8f', 'a48e25a58b3088e9cfdaca61130555ed2c772452', '2c196efe8aee23a1b9a7e752fe63029c5879af6f']], 'y_data': [[817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388]], 'classify': [], 'describe': ''}",bar,password,author_tutor_ATB,"e96c0bcbbbb14747747a56ff4c17354f343a5b4f, c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b, 4f149f75ecd84afcdf27343509cdd03d81edb119, cdaf6c3483f19e2253659a40a3aab786a3390f78, b517a107b5f08fafe9628e88e7263a6f3a4a55c0, 120ac8a5744f5b710ecaebbd8dd1633e3e33886e, 4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3, d34378200c9b5f72d3039fa640e7920aaec0fdf2, 02d64f11de97436343a0beba41bfcf69af61be1e, 3e2f7bf1e6acf0d616a8703ee0050fba13bc007f, 6b9979a83b4a9e03ead034c8de47f1b013a3d3af, 24b0ee84063c3b017ab1839e01b7280f47f7c7c2, 6d587cec8006e3a40565e1dad2c5b5b12b475b8f, a48e25a58b3088e9cfdaca61130555ed2c772452, 2c196efe8aee23a1b9a7e752fe63029c5879af6f","817, 331, 229, 349, 159, 833, 505, 782, 557, 869, 613, 975, 974, 847, 388",Draw a bar chart about the distribution of  password and  author_tutor_ATB .
"SELECT guest_first_name , COUNT(guest_first_name) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id GROUP BY guest_first_name ORDER BY guest_first_name DESC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'guest_first_name', 'y_name': 'COUNT(guest_first_name)', 'x_data': [['Tamia', 'Rebeca', 'Mozell', 'Louvenia', 'Lo', 'Keon', 'Keith', 'Juvenal', 'Gabe', 'Else']], 'y_data': [[1, 4, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY guest_first_name'}",bar,guest_first_name,COUNT(guest_first_name),"Tamia, Rebeca, Mozell, Louvenia, Lo, Keon, Keith, Juvenal, Gabe, Else","1, 4, 1, 1, 2, 2, 1, 1, 1, 1","How many bookings for different guests? Show me a bar chart grouping by guest first name, sort in descending by the X please."
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T1.organisation_id ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'AVG(organisation_id)', 'x_data': [['eius', 'a', 'itaque', 'officiis', 'quo']], 'y_data': [[2, 9, 9.5, 10, 14]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,AVG(organisation_id),"eius, a, itaque, officiis, quo","2, 9, 9.5, 10, 14","What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and I want to list mean organisation id in asc order please."
"SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY AVG(Employee_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sat', 'Sun', 'Fri', 'Tue']], 'y_data': [[0, 1, 2, 3, 4, 6, 6]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Employee_ID),"Mon, Thur, Wed, Sat, Sun, Fri, Tue","0, 1, 2, 3, 4, 6, 6","Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday, show in asc by the Y-axis."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[60, 120, 200, 150, 130, 300]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","60, 120, 200, 150, 130, 300","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, could you show in desc by the X-axis?"
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender"" ORDER BY Draft_Class DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['2009 MLS SuperDraft', '2008 MLS SuperDraft', '2006 MLS SuperDraft', '2005 MLS SuperDraft', '2000 MLS SuperDraft', '1999 MLS College Draft', '1996 MLS Inaugural Player Draft']], 'y_data': [[3, 4, 37, 9, 4, 5, 87]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"2009 MLS SuperDraft, 2008 MLS SuperDraft, 2006 MLS SuperDraft, 2005 MLS SuperDraft, 2000 MLS SuperDraft, 1999 MLS College Draft, 1996 MLS Inaugural Player Draft","3, 4, 37, 9, 4, 5, 87","what are the draft pick numbers and draft classes for players who play the Defender position?, and list by the Draft_Class from high to low."
"SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY COUNT(building) ASC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Chandler', 'Lamberton', 'Main', 'Nassa', 'Saucon', 'Stabler', 'Taylor', 'Whitman', 'Fairchild', 'Lambea']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Chandler, Lamberton, Main, Nassa, Saucon, Stabler, Taylor, Whitman, Fairchild, Lambea","1, 1, 1, 1, 1, 1, 1, 1, 2, 2","How many courses are in the Psychology department in each building? Draw a bar chart, I want to display by the the number of building in asc."
"SELECT Name , SUM(Price) FROM products GROUP BY Name ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 330, 5, 240, 120, 240, 270, 66, 150]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 330, 5, 240, 120, 240, 270, 66, 150","What are the names and the accumulated prices of all products in the store Plot them as a bar chart, I want to show by the x-axis in ascending please."
"SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY Name ASC",Bar,Hard,phone_market,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T1.Num_of_stock)', 'x_data': [['IPhone 5s', 'IPhone 6s', 'IPhone 7', 'IPhone X']], 'y_data': [[2914, 4324, 874, 2540]], 'classify': [], 'describe': ''}",bar,Name,sum(T1.Num_of_stock),"IPhone 5s, IPhone 6s, IPhone 7, IPhone X","2914, 4324, 874, 2540","For each phone, show its names and total number of stocks Visualize by bar chart, and could you sort in ascending by the names?"
"SELECT Name , Age FROM editor",Bar,Easy,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Kamila Porczyk', 'Anna Powierza', 'Marek Siudym', 'Piotr Pręgowski', 'Szymon Wydra', 'Władysław Grzywna', 'Mariusz Zalejski', 'Grażyna Wolszczak', 'Maria Góralczyk']], 'y_data': [[34, 35, 21, 43, 20, 24, 25, 54, 38]], 'classify': [], 'describe': ''}",bar,Name,Age,"Kamila Porczyk, Anna Powierza, Marek Siudym, Piotr Pręgowski, Szymon Wydra, Władysław Grzywna, Mariusz Zalejski, Grażyna Wolszczak, Maria Góralczyk","34, 35, 21, 43, 20, 24, 25, 54, 38",Visualize a bar chart to show editors' names and their ages.
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Vaccination', 'Physical examination', 'Take for a Walk']], 'y_data': [[2540, 2429, 2392]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,SUM(cost_of_treatment),"Vaccination, Physical examination, Take for a Walk","2540, 2429, 2392","List the cost of each treatment and the corresponding treatment type description in a bar chart, and sort from high to low by the y axis."
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Jeff Lloyd', 'Sammy Green', 'Sherman Smith', 'Steve Niehaus', 'Steve Raible']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Author,COUNT(DISTINCT T1.workshop_id),"Jeff Lloyd, Sammy Green, Sherman Smith, Steve Niehaus, Steve Raible","1, 2, 1, 1, 1",Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops.
"SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Price)', 'x_data': [['Robert', 'Mary', 'Owen', 'James', 'Andy', 'John']], 'y_data': [[62.5, 150, 150, 162, 240, 240]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Price),"Robert, Mary, Owen, James, Andy, John","62.5, 150, 150, 162, 240, 240","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the average of price , and group by attribute founder, list in ascending by the total number."
"SELECT year , count(*) FROM matches GROUP BY YEAR",Bar,Easy,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2013-01-01', '2016-01-01', '2017-01-01']], 'y_data': [[12, 158, 108]], 'classify': [], 'describe': ''}",bar,year,count(*),"2013-01-01, 2016-01-01, 2017-01-01","12, 158, 108",Find the number of matches happened in each year. Plot them as bar chart.
"SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Team_Name,Team_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 3, 4","Visualize a bar chart about the distribution of Team_Name and Team_ID , I want to order in asc by the y-axis."
"SELECT date , COUNT(date) FROM battle GROUP BY date ORDER BY COUNT(date) ASC",Bar,Medium,battle_death,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['1235', '14 April 1205', '31 January 1206', '31 June 1208', '4 September 1207', 'February 1206', 'June 1205']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"1235, 14 April 1205, 31 January 1206, 31 June 1208, 4 September 1207, February 1206, June 1205","1, 1, 1, 1, 1, 1, 2","A bar chart listing the number of battle date, and sort total number from low to high order."
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) DESC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['EDU', 'CIS', 'BIOL', 'ACCT', 'ENGL']], 'y_data': [[3.87, 3.09, 2.84, 2.26, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,min(stu_gpa),"EDU, CIS, BIOL, ACCT, ENGL","3.87, 3.09, 2.84, 2.26, 2.11","Find the minimum gpa of all students in each department with a bar chart, and display in desc by the Y."
"SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Cindy', 'Emelie', 'Gay', 'Jaclyn', 'Johann', 'Kade', 'Lorenz', 'Melisa', 'Nora', 'Orlando', 'Rachelle', 'Rolando']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Cindy, Emelie, Gay, Jaclyn, Johann, Kade, Lorenz, Melisa, Nora, Orlando, Rachelle, Rolando","1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1",How many dogs each owner has? Return a bar chart that groups by owner's first name.
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 90, 100, 100, 40, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 90, 100, 100, 40, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50","For those employees who was hired before 2002-06-21, find  job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart."
"SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY COUNT(Duration) DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Duration', 'y_name': 'COUNT(Duration)', 'x_data': [['1994—', '1995, 1996—', '1993—', '1988—', '1988–2008, 2013', '1988, 1992—', '1987–1991, 1996–2009, 2011', '1985–1992, 1993, 2004—']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Duration'}",bar,Duration,COUNT(Duration),"1994—, 1995, 1996—, 1993—, 1988—, 1988–2008, 2013, 1988, 1992—, 1987–1991, 1996–2009, 2011, 1985–1992, 1993, 2004—","2, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis duration y axis how many duration, and rank by the y-axis in descending."
"SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'EMPLOYEE_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,EMPLOYEE_ID,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  phone_number and  employee_id  in a bar chart."
"SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC",Bar,Medium,pilot_record,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['United States', 'United Kindom', 'Nigeria']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"United States, United Kindom, Nigeria","3, 1, 1","What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality Show bar chart, and sort total number in desc order."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['2017', '2018']], 'y_data': [[11, 4]], 'classify': [], 'describe': 'BIN booking_end_date BY YEAR'}",bar,booking_end_date,COUNT(booking_end_date),"2017, 2018","11, 4",How many apartment bookings in each year? Show me a bar chart binning booking end date by year.
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Winchester', 'Fujits', 'Iomega', 'Hewlett-Packard', 'Creative Labs', 'Sony']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Winchester, Fujits, Iomega, Hewlett-Packard, Creative Labs, Sony","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and list Y in descending order."
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee ORDER BY COUNT(Nominee) ASC",Bar,Extra Hard,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Cleavant Derricks', 'Bob Fosse']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY Nominee'}",bar,Nominee,COUNT(Nominee),"Cleavant Derricks, Bob Fosse","1, 3","A bar chart for showing the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks"", show by the y axis from low to high."
"SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'COUNT(Sex)', 'x_data': [['F', 'M']], 'y_data': [[2, 7]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,COUNT(Sex),"F, M","2, 7","Give me the comparison about the amount of Sex over the Sex , and group by attribute Sex by a bar chart, and show in asc by the x axis."
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY Rank ASC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 1, 3]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 1, 3","How many captains with younger than 50 are in each rank, list by the bars from low to high."
"SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"3–3, 4–3, 5–3, 9–1","0.6, 0.706, 0.8240000000000001, 0.946","Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, I want to display by the total number in ascending."
"SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(Team_ID)', 'x_data': [['15–1', '14–2', '14–3']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(Team_ID),"15–1, 14–2, 14–3","2, 4, 4","Show sum team id from each all home, and list Y in ascending order."
"SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'attribute_name', 'y_name': 'COUNT(attribute_name)', 'x_data': [['Black', 'Sweet', 'Yellow']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': 'GROUP BY attribute_name'}",bar,attribute_name,COUNT(attribute_name),"Black, Sweet, Yellow","3, 3, 2","Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, rank from low to high by the names please."
"SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY treatment_type_description ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'AVG(cost_of_treatment)', 'x_data': [['Physical examination', 'Take for a Walk', 'Vaccination']], 'y_data': [[485.8, 478.4, 508]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,AVG(cost_of_treatment),"Physical examination, Take for a Walk, Vaccination","485.8, 478.4, 508","Display a bar chart for what are the cost and treatment type description of each treatment?, and show in ascending by the bar."
"SELECT T2.Party , AVG(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY AVG(COUNT(*)) DESC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'AVG(COUNT(*))', 'x_data': [['Liberal', 'Democratic', 'Working Families', 'Independence']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,AVG(COUNT(*)),"Liberal, Democratic, Working Families, Independence","2, 2, 1, 1","For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, show by the total number from high to low."
"SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY COUNT(AllergyType) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'COUNT(AllergyType)', 'x_data': [['environmental', 'animal', 'food']], 'y_data': [[3, 4, 7]], 'classify': [], 'describe': 'GROUP BY AllergyType'}",bar,AllergyType,COUNT(AllergyType),"environmental, animal, food","3, 4, 7","Show the number of each allergie type in a bar chart, sort in asc by the total number."
"SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY COUNT(first_name) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Sigurd', 'Ruben', 'Monte', 'Domenica', 'Vernice', 'Velva', 'Karley', 'Danny']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Sigurd, Ruben, Monte, Domenica, Vernice, Velva, Karley, Danny","2, 2, 2, 2, 1, 1, 1, 1","List the number of professionals in a bar chart that groups by professional's first name, and sort by the Y in desc."
"SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Baer', 'Fay', 'Gietz', 'Grant', 'Hartstein', 'Higgins', 'Mavris']], 'y_data': [[10000, 6000, 8300, 7000, 13000, 12000, 6500]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Baer, Fay, Gietz, Grant, Hartstein, Higgins, Mavris","10000, 6000, 8300, 7000, 13000, 12000, 6500","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of last_name and salary in a bar chart, and list bar in ascending order please."
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[240, 240, 62.5, 162, 150, 150]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","240, 240, 62.5, 162, 150, 150","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, and sort bars from high to low order."
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Indian Grand Prix', 'Bahrain Grand Prix', 'Canadian Grand Prix', 'Korean Grand Prix', 'Abu Dhabi Grand Prix', 'Australian Grand Prix', 'Belgian Grand Prix', 'Brazilian Grand Prix', 'British Grand Prix', 'Chinese Grand Prix', 'European Grand Prix', 'German Grand Prix', 'Hungarian Grand Prix', 'Italian Grand Prix', 'Japanese Grand Prix', 'Malaysian Grand Prix', 'Monaco Grand Prix', 'Singapore Grand Prix', 'Spanish Grand Prix', 'Turkish Grand Prix']], 'y_data': [[1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Indian Grand Prix, Bahrain Grand Prix, Canadian Grand Prix, Korean Grand Prix, Abu Dhabi Grand Prix, Australian Grand Prix, Belgian Grand Prix, Brazilian Grand Prix, British Grand Prix, Chinese Grand Prix, European Grand Prix, German Grand Prix, Hungarian Grand Prix, Italian Grand Prix, Japanese Grand Prix, Malaysian Grand Prix, Monaco Grand Prix, Singapore Grand Prix, Spanish Grand Prix, Turkish Grand Prix","1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3","What are the names of races held between 2009 and 2011, and count them by a bar chart, order by the how many name in ascending."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[83.57142857142857, 46.12903225806452, 80, 50.689655172413794, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"June, July, Aug, Sept, Oct","83.57142857142857, 46.12903225806452, 80, 50.689655172413794, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Tokyo', 'Beijing', 'Taiwan', 'Austin', 'Los Angeles', 'Paris']], 'y_data': [[1, 4, 5, 6, 9, 12]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Tokyo, Beijing, Taiwan, Austin, Los Angeles, Paris","1, 4, 5, 6, 9, 12","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and sort total number in ascending order."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[96.78571428571429, 116.45161290322581, 139.16129032258064, 125.51724137931035, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"June, July, Aug, Sept, Oct","96.78571428571429, 116.45161290322581, 139.16129032258064, 125.51724137931035, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of  hire_date and the average of manager_id bin hire_date by time."
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY catalog_entry_name ASC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Carbonated Water', 'Cola', 'Ginger Beer', 'Root beer']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Carbonated Water, Cola, Ginger Beer, Root beer","1, 2, 1, 1","Find the names of catalog entries with level number 8, and count them by a bar chart, could you display in ascending by the names?"
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[2, 5, 3, 4, 1, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","2, 5, 3, 4, 1, 6","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the  name , and group by attribute name."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'FI_ACCOUNT', 'PU_CLERK', 'IT_PROG', 'ST_MAN', 'HR_REP', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'AD_PRES']], 'y_data': [[1911, 1100, 1098, 432, 342, 308, 200, 101, 101, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, FI_ACCOUNT, PU_CLERK, IT_PROG, ST_MAN, HR_REP, AC_MGR, SA_MAN, PU_MAN, AD_PRES","1911, 1100, 1098, 432, 342, 308, 200, 101, 101, 100, 100, 0","For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, list by the y axis in descending."
"SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Price)', 'x_data': [['Robert', 'Mary', 'Owen', 'James', 'Andy', 'John']], 'y_data': [[62.5, 150, 150, 162, 240, 240]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Price),"Robert, Mary, Owen, James, Andy, John","62.5, 150, 150, 162, 240, 240","For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of price , and group by attribute founder, order by the the average of price in asc please."
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) ASC",Bar,Medium,school_player,"{'chart': 'bar', 'x_name': 'Denomination', 'y_name': 'COUNT(*)', 'x_data': [['Uniting Church', 'Catholic', 'Anglican']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,Denomination,COUNT(*),"Uniting Church, Catholic, Anglican","1, 2, 3","Create a bar chart showing the total number across denomination, and could you show y-axis in ascending order?"
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[6, 5, 9, 4, 1, 12]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","6, 5, 9, 4, 1, 12","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the sum of code , and group by attribute name."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Oct', 'June', 'Aug', 'Sept', 'July']], 'y_data': [[110, 82.5, 80, 51.851851851851855, 46.55172413793103]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Oct, June, Aug, Sept, July","110, 82.5, 80, 51.851851851851855, 46.55172413793103","For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and display in descending by the the average of department id."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[12000, 24000, 31400, 6500, 18000, 8800, 11000, 11000, 105300, 29200, 25400, 14700]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","12000, 24000, 31400, 6500, 18000, 8800, 11000, 11000, 105300, 29200, 25400, 14700","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, rank X from low to high order."
"SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(credits)', 'x_data': [['World History', 'Groups and Rings', 'Game Programming', 'Embedded Systems', 'International Practicum', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'Immunology', 'Graph Theory', 'Fiction Writing', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[4, 4, 4, 4, 3.5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(credits),"World History, Groups and Rings, Game Programming, Embedded Systems, International Practicum, Rock and Roll, Ponzi Schemes, Operating Systems, Immunology, Graph Theory, Fiction Writing, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","4, 4, 4, 4, 3.5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3","What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, rank by the total number in descending."
"SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY COUNT(Event_Details) DESC",Bar,Medium,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Event_Details', 'y_name': 'COUNT(Event_Details)', 'x_data': [['Fail', 'Success']], 'y_data': [[9, 6]], 'classify': [], 'describe': 'GROUP BY Event_Details'}",bar,Event_Details,COUNT(Event_Details),"Fail, Success","9, 6","Group and count details for the events using a bar chart, show by the Y-axis in desc."
"SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Michael', 'Shelley', 'Hermann', 'William', 'Kimberely', 'Susan', 'Pat']], 'y_data': [[13000, 12000, 10000, 8300, 7000, 6500, 6000]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Michael, Shelley, Hermann, William, Kimberely, Susan, Pat","13000, 12000, 10000, 8300, 7000, 6500, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary , and list in desc by the Y."
"SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue DESC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['New York USA', 'New Jersey USA', 'London UK', 'Istanbul Turkey']], 'y_data': [[2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"New York USA, New Jersey USA, London UK, Istanbul Turkey","2, 1, 2, 1","A bar chart shows the venue for each workshop, and show by the x-axis from high to low."
"SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY count(*) DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'count(*)', 'x_data': [['Bill Schreiner', 'Jesus Salvador Treviño']], 'y_data': [[4, 1]], 'classify': [], 'describe': ''}",bar,Directed_by,count(*),"Bill Schreiner, Jesus Salvador Treviño","4, 1","List all directors along with the number of films directed by each director in a bar chart, sort Y-axis in descending order."
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD burner', 'CD drive']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"DVD drive, ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD burner, CD drive","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, I want to order from high to low by the Y."
"SELECT PHONE_NUMBER , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'EMPLOYEE_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '515.123.7777', '515.123.8080', '515.123.8181', '515.123.8888', '603.123.6666']], 'y_data': [[178, 201, 203, 205, 206, 204, 202]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,EMPLOYEE_ID,"011.44.1644.429263, 515.123.5555, 515.123.7777, 515.123.8080, 515.123.8181, 515.123.8888, 603.123.6666","178, 201, 203, 205, 206, 204, 202","For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart, and show x-axis in ascending order."
"SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_address)', 'x_data': [['BUS', 'A&SCI']], 'y_data': [[4, 7]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_address),"BUS, A&SCI","4, 7","Count different addresses of each school Show bar chart, sort by the X from high to low please."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY Name DESC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Tony Sewell', 'John Brown', 'Joe Sewell', 'Eddie Collins', 'Charlie Hollocher']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Tony Sewell, John Brown, Joe Sewell, Eddie Collins, Charlie Hollocher","1, 1, 5, 1, 1","Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?, rank names in desc order."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 1, 1, 2, 5, 1, 5, 1, 1, 1, 5, 1, 5, 30, 20, 20, 5]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 1, 1, 2, 5, 1, 5, 1, 1, 1, 5, 1, 5, 30, 20, 20, 5","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort JOB_ID in ascending order."
"SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY Official_Name ASC",Bar,Hard,farm,"{'chart': 'bar', 'x_name': 'Official_Name', 'y_name': 'COUNT(Official_Name)', 'x_data': [['Aroostook', 'Drummond', 'Grand Falls/Grand-Sault', 'Perth-Andover', 'Plaster Rock']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Official_Name'}",bar,Official_Name,COUNT(Official_Name),"Aroostook, Drummond, Grand Falls/Grand-Sault, Perth-Andover, Plaster Rock","2, 1, 1, 1, 1","How many competitions are held in each city? Draw a bar chart, list by the x axis in asc."
"SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY Headquartered_City DESC",Bar,Hard,store_product,"{'chart': 'bar', 'x_name': 'Headquartered_City', 'y_name': 'count(*)', 'x_data': [['Khanewal City', 'Hafizabad City', 'Bhakkar City', 'Bahawalpur City']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquartered_City,count(*),"Khanewal City, Hafizabad City, Bhakkar City, Bahawalpur City","2, 1, 1, 1","Return a bar chart on how many stores are headquarted in each city?, and order in desc by the bars."
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result ASC",Bar,Medium,music_4,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Awarded', 'Nominated']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Awarded, Nominated","3, 6","Return the results of all music festivals using a bar chart, and I want to rank x-axis from low to high order."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[930, 980, 1040, 1000, 930, 910, 910]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","930, 980, 1040, 1000, 930, 910, 910","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[5740, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","5740, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and list in ascending by the mean salary."
"SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Total_Passengers', 'x_data': [['Birmingham New Street', 'Glasgow Central']], 'y_data': [[36.330999999999996, 29.658]], 'classify': [], 'describe': ''}",bar,Name,Total_Passengers,"Birmingham New Street, Glasgow Central","36.330999999999996, 29.658","Show the names and total passengers for all train stations not in London Visualize by bar chart, and I want to sort in ascending by the bars please."
"SELECT All_Games , Team_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'Team_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,All_Games,Team_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 3, 4",A bar chart shows the distribution of  All_Games and  Team_ID .
"SELECT Theme , Age FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'Age', 'x_data': [['Cincinnati Bengals', 'Pittsburgh Steelers', 'at Baltimore Ravens', 'at Cleveland Browns', 'at Detroit Lions', 'at Jacksonville Jaguars', 'at Minnesota Vikings']], 'y_data': [[54, 24, 54, 38, 21, 43, 34]], 'classify': [], 'describe': ''}",bar,Theme,Age,"Cincinnati Bengals, Pittsburgh Steelers, at Baltimore Ravens, at Cleveland Browns, at Detroit Lions, at Jacksonville Jaguars, at Minnesota Vikings","54, 24, 54, 38, 21, 43, 34","Show the ages of editors and the theme of journals for which they serve on committees by a bar chart, and list the bars in ascending alphabetical order of theme."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'July', 'Sept', 'June']], 'y_data': [[1862, 1742, 1449, 740]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, July, Sept, June","1862, 1742, 1449, 740","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort Y-axis from high to low order."
"SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = ""Awarded"" GROUP BY Category ORDER BY Category ASC",Bar,Hard,music_4,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'COUNT(Category)', 'x_data': [['Best Song', 'Best Sound Song']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Category'}",bar,Category,COUNT(Category),"Best Song, Best Sound Song","2, 1","What are the number of the category of music festivals with result ""Awarded""?, could you order in ascending by the X-axis?"
"SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Work_Type', 'y_name': 'avg(t1.age)', 'x_data': [['Host', 'Music', 'Screening']], 'y_data': [[43, 35.5, 30.33333333333333]], 'classify': [], 'describe': ''}",bar,Work_Type,avg(t1.age),"Host, Music, Screening","43, 35.5, 30.33333333333333","Find the average age of journalists working on different role type, show the result with a bar chart."
"SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) ASC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.', 'Honolul']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Boston, Chicago, Dallas, Los Angeles, New York, Sydney, Tokyo, Washington D.C., Honolul","1, 1, 1, 1, 1, 1, 1, 1, 2","Show me how many destination by destination in a histogram, sort y-axis in ascending order."
"SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY COUNT(organization_details) DESC",Bar,Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'organization_details', 'y_name': 'COUNT(organization_details)', 'x_data': [['Denesik and Sons Party', 'Robel-Schulist Group', 'Reinger, Hudson and Nolan Group']], 'y_data': [[10, 3, 2]], 'classify': [], 'describe': 'GROUP BY organization_details'}",bar,organization_details,COUNT(organization_details),"Denesik and Sons Party, Robel-Schulist Group, Reinger, Hudson and Nolan Group","10, 3, 2","List the number of items by the details of the organization that owns it using a bar chart, order total number in descending order."
"SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Herbert Swindells', 'Jackie Waring', 'John Meaney', 'Ray Ferris', 'Tom Briggs', 'Tony Waddington']], 'y_data': [[1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Herbert Swindells, Jackie Waring, John Meaney, Ray Ferris, Tom Briggs, Tony Waddington","1, 2, 1, 1, 1, 1",Show the names of journalists and the number of events they reported. Visualize by bar chart.
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""  ORDER BY COUNT(date_of_completion) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Mar', 'Feb']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Mar, Feb","6, 1","A bar chart for returning the number of the completion date for all the tests that have ""Fail"" result, and display by the y axis in desc."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['Winchester', 'Sony', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Creative Labs']], 'y_data': [[60, 120, 130, 150, 200, 300]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"Winchester, Sony, Fujits, Hewlett-Packard, Iomega, Creative Labs","60, 120, 130, 150, 200, 300","For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name by a bar chart, sort y axis in ascending order."
"SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['WGIETZ', 'SMAVRIS', 'SHIGGINS', 'PFAY', 'MHARTSTE', 'KGRANT', 'HBAER']], 'y_data': [[206, 203, 205, 202, 201, 178, 204]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"WGIETZ, SMAVRIS, SHIGGINS, PFAY, MHARTSTE, KGRANT, HBAER","206, 203, 205, 202, 201, 178, 204","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and employee_id in a bar chart, and order X in desc order."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Robert', 'Peter', 'Ismael', 'Gerald', 'Carlos', 'Arnelle']], 'y_data': [[1, 3, 2, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Robert, Peter, Ismael, Gerald, Carlos, Arnelle","1, 3, 2, 3, 2, 2","How many courses each teacher taught? Show me a bar chart, sort X in desc order."
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Jeff Lloyd', 'Sammy Green', 'Sherman Smith', 'Steve Niehaus', 'Steve Raible']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Author,COUNT(DISTINCT T1.workshop_id),"Jeff Lloyd, Sammy Green, Sherman Smith, Steve Niehaus, Steve Raible","1, 2, 1, 1, 1",How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart.
"SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = ""ACCT-211""",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_DOB', 'y_name': 'COUNT(EMP_DOB)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0]], 'classify': [], 'describe': 'BIN EMP_DOB BY WEEKDAY'}",bar,EMP_DOB,COUNT(EMP_DOB),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0",What is the weekday of birthdates of the professors in charge of ACCT-211? Visualize with a bar chart.
"SELECT Days , SUM(Instructor) FROM COURSE GROUP BY Days ORDER BY Credits",Bar,Medium,college_3,"{'chart': 'bar', 'x_name': 'Days', 'y_name': 'SUM(Instructor)', 'x_data': [['M', 'MT', 'MTW', 'MW', 'T', 'TTh', 'TW', 'Th', 'ThF', 'T', 'W']], 'y_data': [[41889, 14011, 225562, 38000, 23244, 9514, 6330, 41342, 48758, 9379, 33883]], 'classify': [], 'describe': 'GROUP BY Days'}",bar,Days,SUM(Instructor),"M, MT, MTW, MW, T, TTh, TW, Th, ThF, T, W","41889, 14011, 225562, 38000, 23244, 9514, 6330, 41342, 48758, 9379, 33883","Give me the comparison about the sum of Instructor over the  Days , and group by attribute Days by a bar chart."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1, 6]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Feb, Mar","1, 6","A bar chart for returning the number of the completion date for all the tests that have ""Fail"" result."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Sept', 'Oct']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Sept, Oct","6, 1","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, show in desc by the Y please."
"SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive, DVD drive","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","What are the names of all products, and count them by a bar chart, and could you list by the Y-axis from low to high?"
"SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"") ORDER BY Age DESC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'Age', 'x_data': [['Apap', 'Lee']], 'y_data': [[18, 17]], 'classify': [], 'describe': ''}",bar,LName,Age,"Apap, Lee","18, 17","What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart, and could you rank Y in desc order please?"
"SELECT Team_Name , Team_ID FROM basketball_match ORDER BY Team_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'Team_ID', 'x_data': [['Virginia Tech', 'Clemson', 'Duke', 'North Carolina']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Team_Name,Team_ID,"Virginia Tech, Clemson, Duke, North Carolina","4, 3, 2, 1","Show me about the distribution of Team_Name and Team_ID in a bar chart, could you show by the y-axis from high to low?"
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Astronomy', 'Comp. Sci.', 'Cybernetics', 'Finance', 'Geology', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.']], 'y_data': [[79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Astronomy, Comp. Sci., Cybernetics, Finance, Geology, Marketing, Mech. Eng., Physics, Pol. Sci.","79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8",Find the minimum salary for the departments whose average salary is above the average payment of all instructors. Plot them as bar chart.
"SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex ORDER BY Sex DESC",Bar,Hard,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"M, F","4, 2","Count the number of people of each sex who have a weight higher than 85, and display x-axis from high to low order."
"SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY COUNT(Package_Option) DESC",Bar,Hard,tvshow,"{'chart': 'bar', 'x_name': 'Package_Option', 'y_name': 'COUNT(Package_Option)', 'x_data': [['Sky Famiglia', 'no ( FTV )', 'Sky Famiglia + Sky HD']], 'y_data': [[8, 2, 1]], 'classify': [], 'describe': 'GROUP BY Package_Option'}",bar,Package_Option,COUNT(Package_Option),"Sky Famiglia, no ( FTV ), Sky Famiglia + Sky HD","8, 2, 1","A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and list in desc by the total number."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[12, 29, 31, 27, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept, Oct","12, 29, 31, 27, 1","For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the  hire_date bin hire_date by time by a bar chart."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665","What is the average price for each type of product Visualize by bar chart, and could you sort by the X-axis in asc please?"
"SELECT destination , COUNT(destination) FROM Flight GROUP BY destination",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Honolul', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Boston, Chicago, Dallas, Honolul, Los Angeles, New York, Sydney, Tokyo, Washington D.C.","1, 1, 1, 2, 1, 1, 1, 1, 1",How many flights in each destination city? Return a bar chart.
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC",Bar,Medium,school_player,"{'chart': 'bar', 'x_name': 'Denomination', 'y_name': 'COUNT(*)', 'x_data': [['Anglican', 'Catholic', 'Uniting Church']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,Denomination,COUNT(*),"Anglican, Catholic, Uniting Church","3, 2, 1",
"SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Price)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[240, 240, 125, 486, 150, 450]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Price),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","240, 240, 125, 486, 150, 450","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of price , and group by attribute headquarter, and I want to list in desc by the x axis."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June', 'Oct']], 'y_data': [[5512, 4960, 3999, 1491, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Aug, July, June, Oct","5512, 4960, 3999, 1491, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, display by the y axis in descending please."
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"14–2, 13–3, 10–6, 9–7","0.946, 0.8240000000000001, 0.706, 0.6","Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, and I want to order All_Games_Percent in descending order."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Bob Fosse, Cleavant Derricks","5, 2","Give me a histogram for how many musicals has each nominee been nominated for?, sort by the Y-axis in desc please."
"SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[6, 14]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(crs_credit),"ACCT, CIS","6, 14",how many credits does the department offer?
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC",Bar,Medium,music_4,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Awarded', 'Nominated']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Awarded, Nominated","3, 6","What is the distibution of results for each music festival? Could you show me the result with a bar chart, show by the y axis in ascending please."
"SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) ASC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'SUM(Amount_Payment)', 'x_data': [['2018', '2017']], 'y_data': [[7343, 787370]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY YEAR'}",bar,Date_Payment_Made,SUM(Amount_Payment),"2018, 2017","7343, 787370","Sum the amount for all the payments processed with Visa by each year using a bar chart, and rank by the y-axis in asc."
"SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY AVG(Price) DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Printer', 'Monitor', 'Hard drive', 'DVD burner', 'DVD drive', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[270, 240, 240, 180, 165, 150, 120, 90, 66, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Printer, Monitor, Hard drive, DVD burner, DVD drive, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","270, 240, 240, 180, 165, 150, 120, 90, 66, 5","Bar chart of mean price from each name, and order mean price in descending order."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50","For those employees who did not have any job in the past, give me the comparison about the average of department_id over the  job_id , and group by attribute job_id."
"SELECT Flag , count(*) FROM ship GROUP BY flag",Bar,Easy,ship_1,"{'chart': 'bar', 'x_name': 'Flag', 'y_name': 'count(*)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 8]], 'classify': [], 'describe': ''}",bar,Flag,count(*),"Malta, Panama","1, 8","What are the different ship flags, and how many ships have each. Plot them as bar chart."
"SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier",Bar,Easy,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'COUNT(Carrier)', 'x_data': [['Sprint', 'TMobile']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Carrier'}",bar,Carrier,COUNT(Carrier),"Sprint, TMobile","2, 3",What is the number of carriers of phones? Give me a bar chart.
"SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1","Can you show me a bar chart to answer how many people with different names for each high schooler?, and show from high to low by the x axis."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sun', 'Thur', 'Wed', 'Tue', 'Mon', 'Sat', 'Fri']], 'y_data': [[201, 177, 101, 101, 101, 100, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sun, Thur, Wed, Tue, Mon, Sat, Fri","201, 177, 101, 101, 101, 100, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, order mean manager id from high to low order."
"SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType DESC",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[13.4, 12]], 'classify': [], 'describe': ''}",bar,PetType,max(weight),"dog, cat","13.4, 12","List the maximum weight and type for each type of pet with a bar chart, and I want to list in desc by the x-axis."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[300, 130, 150, 200, 120, 60]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","300, 130, 150, 200, 120, 60","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the sum of revenue , and group by attribute name."
"SELECT Date , COUNT(Date) FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY Date",Bar,Medium,game_injury,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['10 July 2008', '14 March 2010', '14 October 2009', '16 August 2008', '18 May 2007', '22 September 2007', '31 October 2008', '31 October 2010', '7 July 2011', '8 August 2009', '9 December 2007']], 'y_data': [[1, 2, 1, 2, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",bar,Date,COUNT(Date),"10 July 2008, 14 March 2010, 14 October 2009, 16 August 2008, 18 May 2007, 22 September 2007, 31 October 2008, 31 October 2010, 7 July 2011, 8 August 2009, 9 December 2007","1, 2, 1, 2, 1, 1, 3, 1, 1, 1, 1",How many players are injured in each day? Show a bar chart.
"SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,pilot_record,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['United States', 'United Kindom', 'Nigeria']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"United States, United Kindom, Nigeria","3, 1, 1","Draw a bar chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality, and display by the names in desc."
"SELECT apt_number , room_count FROM Apartments ORDER BY apt_number DESC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'room_count', 'x_data': [['Suite 749', 'Suite 693', 'Suite 645', 'Suite 634', 'Suite 307', 'Suite 088', 'Apt. 940', 'Apt. 908', 'Apt. 859', 'Apt. 837', 'Apt. 794', 'Apt. 585', 'Apt. 477', 'Apt. 411', 'Apt. 187']], 'y_data': [[8, 9, 7, 8, 9, 6, 8, 7, 6, 8, 3, 5, 3, 9, 9]], 'classify': [], 'describe': ''}",bar,apt_number,room_count,"Suite 749, Suite 693, Suite 645, Suite 634, Suite 307, Suite 088, Apt. 940, Apt. 908, Apt. 859, Apt. 837, Apt. 794, Apt. 585, Apt. 477, Apt. 411, Apt. 187","8, 9, 7, 8, 9, 6, 8, 7, 6, 8, 3, 5, 3, 9, 9","What are the apartment number and the room count of each apartment Visualize by bar chart, and list x-axis from high to low order."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Oct', 'June', 'July', 'Aug', 'Sept']], 'y_data': [[206, 1491, 3999, 4960, 5715]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Oct, June, July, Aug, Sept","206, 1491, 3999, 4960, 5715","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, could you list by the y axis from low to high?"
"SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[3, 1, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","3, 1, 3, 1, 1, 2","How many products are there for each manufacturer Visualize by bar chart, list by the x-axis from low to high."
"SELECT Sex , avg(age) FROM Student GROUP BY sex",Bar,Easy,allergy_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",bar,Sex,avg(age),"F, M","19.7, 19.5",Visualize a bar chart for what are the average ages for male and female students?
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Taiwan', 'Beijing', 'Tokyo']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Paris, Los Angeles, Austin, Taiwan, Beijing, Tokyo","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and could you show total number in descending order?"
"SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(count(*))', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[2, 3, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(count(*)),"Alexis, Andrew, Austin, Cassandra, Gabriel, Haley, Jessica, Jordan, Kris, Kyle, Logan, Tiffany","2, 3, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1","Show the names of high school students and their corresponding number of friends, I want to sort by the name in ascending please."
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[308, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"England, Northern Ireland, Wales","308, 29, 27","Bar chart of sum age from each nationality, could you rank X in asc order?"
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Sarah', 'Tracy', 'Stacy', 'Shiela', 'Michael']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Sarah, Tracy, Stacy, Shiela, Michael","2, 1, 1, 1, 1","Find the number of the first name of students who are living in the Smith Hall, and could you show in desc by the Y?"
"SELECT Position , COUNT(Position) FROM pilot GROUP BY Position",Bar,Easy,pilot_record,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Center Team', 'Forward Team', 'Forward-Center Team']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Center Team, Forward Team, Forward-Center Team","3, 1, 1",Can you draw a bar chart to show the number of positions of the pilots?
"SELECT yearid , COUNT(yearid) FROM hall_of_fame",Bar,Easy,baseball_1,"{'chart': 'bar', 'x_name': 'yearid', 'y_name': 'COUNT(yearid)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[10, 11, 11, 12, 11, 12, 11]], 'classify': [], 'describe': 'BIN yearid BY WEEKDAY'}",bar,yearid,COUNT(yearid),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","10, 11, 11, 12, 11, 12, 11",bin the yearid into the day of the week interval and count them for visualizing a bar chart.
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code ASC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Credit Card, Direct Debit","5, 10","For each payment method, how many payments were made Show bar chart, and rank in asc by the x-axis please."
"SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SALARY', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7000, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",bar,JOB_ID,SALARY,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","7000, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, find  job_id and  salary , and visualize them by a bar chart."
"SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'count(*)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'History', 'Languages', 'Marketing', 'Math', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[99, 106, 92, 100, 120, 108, 86, 98, 95, 97, 92, 117, 119, 85, 91, 105, 96, 109, 100, 85]], 'classify': [], 'describe': ''}",bar,dept_name,count(*),"Accounting, Astronomy, Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, History, Languages, Marketing, Math, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","99, 106, 92, 100, 120, 108, 86, 98, 95, 97, 92, 117, 119, 85, 91, 105, 96, 109, 100, 85","Visualize a bar chart for how many students are in each department?, and sort from low to high by the bar."
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name ASC",Bar,Extra Hard,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['A Silver-Cleaning Battery', 'Aerodynamics and Ice Hockey', 'Build Your Own Telescope', 'Juicy: Extracting Apple Juice with Pectinase']], 'y_data': [[2, 1, 3, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"A Silver-Cleaning Battery, Aerodynamics and Ice Hockey, Build Your Own Telescope, Juicy: Extracting Apple Juice with Pectinase","2, 1, 3, 1","Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and display in asc by the x axis."
"SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY COUNT(T1.role_code) DESC",Bar,Extra Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'COUNT(role_code)', 'x_data': [['Employee', 'Veterenarian']], 'y_data': [[5, 2]], 'classify': [], 'describe': 'GROUP BY role_code'}",bar,role_code,COUNT(role_code),"Employee, Veterenarian","5, 2","Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, and I want to rank in descending by the total number."
"SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY product_name ASC",Bar,Extra Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'COUNT(product_name)', 'x_data': [['Apple', 'Sony', 'gucci', 'jcrew']], 'y_data': [[5, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,COUNT(product_name),"Apple, Sony, gucci, jcrew","5, 3, 2, 3","Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, order x axis from low to high order please."
"SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY name DESC",Bar,Medium,medicine_enzyme_interaction,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Ziprasidone', 'Iloperidone', 'Asenapine', 'Aripiprazole']], 'y_data': [[20, 8, 3, 2]], 'classify': [], 'describe': ''}",bar,name,id,"Ziprasidone, Iloperidone, Asenapine, Aripiprazole","20, 8, 3, 2","A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, and order by the X-axis from high to low."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Sept', 'Oct']], 'y_data': [[54500, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Sept, Oct","54500, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the sum of salary bin hire_date by time in a bar chart."
"SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent ASC",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['1953', 'July 1942', 'October 1942', '1946', '1949']], 'y_data': [[16, 16.2, 18.5, 19.5, 19.5]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"1953, July 1942, October 1942, 1946, 1949","16, 16.2, 18.5, 19.5, 19.5","List the dates and vote percents of elections in a bar chart, list by the Vote_Percent in asc please."
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Pol. Sci.', 'Languages', 'English', 'Astronomy', 'Biology', 'History', 'Athletics', 'Math', 'Cybernetics', 'Psychology', 'Finance', 'Physics']], 'y_data': [[573745.09, 601283.6, 611042.66, 617253.94, 647610.55, 699140.86, 734550.7, 777605.11, 794541.46, 848175.04, 866831.75, 942162.76]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Pol. Sci., Languages, English, Astronomy, Biology, History, Athletics, Math, Cybernetics, Psychology, Finance, Physics","573745.09, 601283.6, 611042.66, 617253.94, 647610.55, 699140.86, 734550.7, 777605.11, 794541.46, 848175.04, 866831.75, 942162.76","What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, could you display by the budget from low to high?"
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY Country_name ASC",Bar,Hard,match_season,"{'chart': 'bar', 'x_name': 'Country_name', 'y_name': 'COUNT(*)', 'x_data': [['Indonesia', 'Ireland', 'Isle of Man', 'United States']], 'y_data': [[1, 4, 2, 9]], 'classify': [], 'describe': ''}",bar,Country_name,COUNT(*),"Indonesia, Ireland, Isle of Man, United States","1, 4, 2, 9","How many players are from each country Visualize by bar chart, list bar in asc order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[198.83333333333334, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Sept, Oct","198.83333333333334, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the average of employee_id bin hire_date by time."
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['T', 'F']], 'y_data': [[5, 2]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,COUNT(Is_full_time),"T, F","5, 2","Draw a bar chart of is full time versus how many is full time, and rank in descending by the x axis."
"SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY building ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'avg(capacity)', 'x_data': [['Alumni', 'Bronfman', 'Chandler', 'Drown', 'Fairchild', 'Garfield', 'Gates', 'Grace', 'Lambea', 'Lamberton', 'Main', 'Nassa', 'Painter', 'Polya', 'Power', 'Rathbone', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[36.5, 12, 10.5, 18, 27, 59, 37.5, 34, 51, 10, 26, 92, 97, 28, 11, 60, 49.33333333333334, 113, 93, 76]], 'classify': [], 'describe': ''}",bar,building,avg(capacity),"Alumni, Bronfman, Chandler, Drown, Fairchild, Garfield, Gates, Grace, Lambea, Lamberton, Main, Nassa, Painter, Polya, Power, Rathbone, Saucon, Stabler, Taylor, Whitman","36.5, 12, 10.5, 18, 27, 59, 37.5, 34, 51, 10, 26, 92, 97, 28, 11, 60, 49.33333333333334, 113, 93, 76","Find the average capacity among rooms in each building with a bar chart, and rank by the bars in ascending."
"SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'AVG(monthly_rental)', 'x_data': [['2017', '2018']], 'y_data': [[950.6428571428571, 917.5]], 'classify': [], 'describe': 'BIN date_address_from BY YEAR'}",bar,date_address_from,AVG(monthly_rental),"2017, 2018","950.6428571428571, 917.5","Find  date_address_from and the average of monthly_rental bin date_address_from by time, and visualize them by a bar chart."
"SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code ORDER BY count(*) ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['BIOL', 'EDU', 'ENGL', 'CIS', 'ACCT']], 'y_data': [[1, 1, 1, 2, 3]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"BIOL, EDU, ENGL, CIS, ACCT","1, 1, 1, 2, 3","How many students are in each department Visualize by bar chart, could you show by the total number in ascending please?"
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = ""Clara"")",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Aug', 'Sept']], 'y_data': [[31, 3]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Aug, Sept","31, 3","For all employees in the same department and with the first name Clara, please give me a bar chart that bins hire date into the Month interval, and count how many employees in each month."
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name DESC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_level_name', 'y_name': 'catalog_level_number', 'x_data': [['Sub-Category', 'Product']], 'y_data': [[8, 9]], 'classify': [], 'describe': ''}",bar,catalog_level_name,catalog_level_number,"Sub-Category, Product","8, 9","Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, list by the x axis in desc."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[540, 360, 670, 230, 470, 530, 260]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","540, 360, 670, 230, 470, 530, 260","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by weekday."
"SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation ORDER BY sum(Enrollment) DESC",Bar,Hard,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(Enrollment)', 'x_data': [['Public', 'Private/Methodist']], 'y_data': [[43092, 2100]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(Enrollment),"Public, Private/Methodist","43092, 2100","Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, and show by the y axis in descending."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 90, 100, 40, 60, 30, 30, 80, 80, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 90, 100, 40, 60, 30, 30, 80, 80, 50, 50, 50","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to order x-axis in ascending order please."
"SELECT COUNTRY_NAME , COUNT(COUNTRY_NAME) FROM countries GROUP BY COUNTRY_NAME ORDER BY COUNT(COUNTRY_NAME) ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'COUNTRY_NAME', 'y_name': 'COUNT(COUNTRY_NAME)', 'x_data': [['Germany', 'United Kingdom', 'Canada', 'United States of America']], 'y_data': [[1, 1, 2, 68]], 'classify': [], 'describe': 'GROUP BY COUNTRY_NAME'}",bar,COUNTRY_NAME,COUNT(COUNTRY_NAME),"Germany, United Kingdom, Canada, United States of America","1, 1, 2, 68","Bar graph to show how many country name from different country name, and show by the y-axis from low to high."
"SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Michael', 'Hermann', 'Shelley', 'Susan', 'Kimberely', 'Pat', 'William']], 'y_data': [[100, 101, 101, 101, 149, 201, 205]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,MANAGER_ID,"Michael, Hermann, Shelley, Susan, Kimberely, Pat, William","100, 101, 101, 101, 149, 201, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart, and I want to sort from low to high by the y-axis please."
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Tony Sewell', 'Joe Sewell', 'Eddie Collins']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Tony Sewell, Joe Sewell, Eddie Collins","1, 5, 1","What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a bar chart, and I want to order by the bar from high to low."
"SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Comptroller', 'y_name': 'COUNT(Comptroller)', 'x_data': [['Alan Hevesi', 'Carl McCall', 'John Faso']], 'y_data': [[1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Comptroller'}",bar,Comptroller,COUNT(Comptroller),"Alan Hevesi, Carl McCall, John Faso","1, 3, 1","Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties, and count them by a bar chart"
"SELECT Name , Budget_in_Billions FROM department ORDER BY Budget_in_Billions DESC",Bar,Easy,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Budget_in_Billions', 'x_data': [['Health and Human Services', 'Defense', 'Agriculture', 'Veterans Affairs', 'Education', 'Labor', 'Transportation', 'Housing and Urban Development', 'Homeland Security', 'Justice', 'Energy', 'Treasury', 'Interior', 'State', 'Commerce']], 'y_data': [[543.2, 439.3, 77.6, 73.2, 62.8, 59.7, 58, 46.2, 44.6, 23.4, 21.5, 11.1, 10.7, 9.96, 6.2]], 'classify': [], 'describe': ''}",bar,Name,Budget_in_Billions,"Health and Human Services, Defense, Agriculture, Veterans Affairs, Education, Labor, Transportation, Housing and Urban Development, Homeland Security, Justice, Energy, Treasury, Interior, State, Commerce","543.2, 439.3, 77.6, 73.2, 62.8, 59.7, 58, 46.2, 44.6, 23.4, 21.5, 11.1, 10.7, 9.96, 6.2","Give me a bar chart for budget_in_billions of each name, and sort by the Y-axis from high to low please."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Thur', 'Wed']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Fri, Sat, Sun, Mon, Tue, Thur, Wed","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and show y axis in ascending order."
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC",Bar,Extra Hard,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Build Your Own Telescope', 'A Silver-Cleaning Battery', 'Juicy: Extracting Apple Juice with Pectinase', 'Aerodynamics and Ice Hockey']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Build Your Own Telescope, A Silver-Cleaning Battery, Juicy: Extracting Apple Juice with Pectinase, Aerodynamics and Ice Hockey","3, 2, 1, 1","Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list from high to low by the the total number ."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'FI_MGR', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT', 'ST_MAN', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SA_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 108, 202, 203, 204, 205, 206, 488, 525, 555, 585, 735, 2690, 3790, 4759]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, FI_MGR, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT, ST_MAN, IT_PROG, FI_ACCOUNT, PU_CLERK, SA_MAN, ST_CLERK, SH_CLERK, SA_REP","100, 108, 202, 203, 204, 205, 206, 488, 525, 555, 585, 735, 2690, 3790, 4759","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, order by the total number in asc."
"SELECT County_name , Population FROM county ORDER BY County_name DESC",Bar,Easy,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'Population', 'x_data': [['Mansfield', 'Manning', 'Howard', 'Colony', 'Baltimore County']], 'y_data': [[87200, 13300, 21000, 79000, 90000]], 'classify': [], 'describe': ''}",bar,County_name,Population,"Mansfield, Manning, Howard, Colony, Baltimore County","87200, 13300, 21000, 79000, 90000","Show the county name and population of all counties Show bar chart, show in desc by the X please."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID",Bar,Easy,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['US museum', 'fun games', 'exploration trial', 'jungle cruise', 'parking']], 'y_data': [[6476, 6523, 6852, 8698, 9919]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"US museum, fun games, exploration trial, jungle cruise, parking","6476, 6523, 6852, 8698, 9919",Show the names and ids of tourist attractions that are visited at least two times with a bar chart.
"SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country ORDER BY Country ASC",Bar,Extra Hard,railway,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'England', 'United States']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, England, United States","1, 1, 2","Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, and sort in ascending by the bar."
"SELECT Pixel_aspect_ratio_PAR , COUNT(Pixel_aspect_ratio_PAR) FROM tv_channel WHERE LANGUAGE != 'English' GROUP BY Pixel_aspect_ratio_PAR ORDER BY Pixel_aspect_ratio_PAR DESC",Bar,Hard,tvshow,"{'chart': 'bar', 'x_name': 'Pixel_aspect_ratio_PAR', 'y_name': 'COUNT(Pixel_aspect_ratio_PAR)', 'x_data': [['4:3 / 16:9', '4:3', '16:9']], 'y_data': [[3, 6, 3]], 'classify': [], 'describe': 'GROUP BY Pixel_aspect_ratio_PAR'}",bar,Pixel_aspect_ratio_PAR,COUNT(Pixel_aspect_ratio_PAR),"4:3 / 16:9, 4:3, 16:9","3, 6, 3","What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, I want to display in desc by the Pixel_aspect_ratio_PAR."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sun', 'Tue', 'Thur', 'Fri', 'Mon', 'Sat', 'Wed']], 'y_data': [[424, 740, 834, 980, 1197, 1361, 1653]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sun, Tue, Thur, Fri, Mon, Sat, Wed","424, 740, 834, 980, 1197, 1361, 1653","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, order by the y-axis from low to high."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[9175, 3993.3333333333335, 8469.23076923077, 4491.666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept","9175, 3993.3333333333335, 8469.23076923077, 4491.666666666667","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[7.666666666666667, 1, 9.333333333333334, 3, 5, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","7.666666666666667, 1, 9.333333333333334, 3, 5, 3","For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, could you rank in asc by the x-axis?"
"SELECT EMAIL , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'COMMISSION_PCT', 'x_data': [['KGRANT', 'WGIETZ', 'SMAVRIS', 'SHIGGINS', 'PFAY', 'MHARTSTE', 'HBAER']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,EMAIL,COMMISSION_PCT,"KGRANT, WGIETZ, SMAVRIS, SHIGGINS, PFAY, MHARTSTE, HBAER","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct , and list y axis in desc order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 150, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 150, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, show me about the distribution of  name and the sum of revenue , and group by attribute name in a bar chart."
"SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party ASC",Bar,Medium,debate,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Anti-Lecompton Democrat', 'Democratic', 'Independent Democrat', 'Republican']], 'y_data': [[2, 3, 1, 4]], 'classify': [], 'describe': ''}",bar,Party,COUNT(*),"Anti-Lecompton Democrat, Democratic, Independent Democrat, Republican","2, 3, 1, 4","Show different parties of people along with the number of people in each party with a bar chart, and I want to order by the X in ascending please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Memory', 'Floppy disk', 'Hard drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'DVD drive', 'DVD burner', 'CD drive', 'Monitor']], 'y_data': [[6, 6, 5, 4, 3, 3, 2.5, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Memory, Floppy disk, Hard drive, ZIP drive, Toner cartridge, Printer, DVD drive, DVD burner, CD drive, Monitor","6, 6, 5, 4, 3, 3, 2.5, 2, 2, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, list by the total number in descending."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender"" ORDER BY Draft_Pick_Number ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['2009 MLS SuperDraft', '2000 MLS SuperDraft', '2008 MLS SuperDraft', '1999 MLS College Draft', '2005 MLS SuperDraft', '2006 MLS SuperDraft', '1996 MLS Inaugural Player Draft']], 'y_data': [[3, 4, 4, 5, 9, 37, 87]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"2009 MLS SuperDraft, 2000 MLS SuperDraft, 2008 MLS SuperDraft, 1999 MLS College Draft, 2005 MLS SuperDraft, 2006 MLS SuperDraft, 1996 MLS Inaugural Player Draft","3, 4, 4, 5, 9, 37, 87","Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, could you order by the Y-axis in ascending?"
"SELECT Sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex ORDER BY Sex ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[3, 12]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"F, M","3, 12","Display a bar chart for how many male and female assistant professors do we have?, list by the Sex from low to high."
"SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = ""Kyle"" GROUP BY apt_type_code ORDER BY COUNT(apt_type_code) DESC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_type_code', 'y_name': 'COUNT(apt_type_code)', 'x_data': [['Duplex', 'Studio', 'Flat']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY apt_type_code'}",bar,apt_type_code,COUNT(apt_type_code),"Duplex, Studio, Flat","2, 1, 1","Give me a bar chart showing the number of buildings managed by ""Kyle"" and group by apartment type codes, rank y-axis in desc order please."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[1, 5, 12, 9, 4, 6]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","1, 5, 12, 9, 4, 6","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter, order by the Headquarter in descending."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[5, 9.333333333333334, 1, 3, 7.666666666666667, 3]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Code),"Andy, James, John, Mary, Owen, Robert","5, 9.333333333333334, 1, 3, 7.666666666666667, 3","For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder, rank x axis in ascending order."
"SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC",Bar,Hard,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'COUNT(Product_Name)', 'x_data': [['Business Policy', 'Business Policy B', 'Men suits', 'Dinning']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Product_Name'}",bar,Product_Name,COUNT(Product_Name),"Business Policy, Business Policy B, Men suits, Dinning","1, 1, 1, 2","A bar chart for listing the number of the names of products that are not in any event, sort the number of product name in ascending order."
"SELECT skill_description , COUNT(skill_description) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ORDER BY COUNT(skill_description) ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['TV, Video', 'Mechanical', 'Electrical']], 'y_data': [[5, 6, 9]], 'classify': [], 'describe': 'GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"TV, Video, Mechanical, Electrical","5, 6, 9","Give me a pie chart showing the number of engineers for different skill description, display by the total number in asc please."
"SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY Product_Type_Code DESC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(Product_Type_Code)', 'x_data': [['Food', 'Electronics', 'Clothes', 'Books']], 'y_data': [[5, 4, 2, 4]], 'classify': [], 'describe': 'GROUP BY Product_Type_Code'}",bar,Product_Type_Code,COUNT(Product_Type_Code),"Food, Electronics, Clothes, Books","5, 4, 2, 4","Visualize a bar chart for showing the total number of different product type codes, and could you order in descending by the names?"
"SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy ORDER BY Allergy DESC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'Allergy', 'y_name': 'count(*)', 'x_data': [['Tree Pollen', 'Soy', 'Shellfish', 'Rodent', 'Ragweed', 'Nuts', 'Milk', 'Grass Pollen', 'Eggs', 'Dog', 'Cat', 'Anchovies']], 'y_data': [[13, 4, 4, 1, 6, 11, 3, 4, 3, 3, 4, 3]], 'classify': [], 'describe': ''}",bar,Allergy,count(*),"Tree Pollen, Soy, Shellfish, Rodent, Ragweed, Nuts, Milk, Grass Pollen, Eggs, Dog, Cat, Anchovies","13, 4, 4, 1, 6, 11, 3, 4, 3, 3, 4, 3","How many students have each different allergy Show bar chart, and I want to order X in desc order please."
"SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(amount) DESC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'bname', 'y_name': 'sum(amount)', 'x_data': [['broadway', 'downtown', 'morningside']], 'y_data': [[5000, 3000, 2050]], 'classify': [], 'describe': ''}",bar,bname,sum(amount),"broadway, downtown, morningside","5000, 3000, 2050","Find the total amount of loans offered by each bank branch, and sort in desc by the total number."
"SELECT Status , avg(Population) FROM city GROUP BY Status ORDER BY Status ASC",Bar,Medium,farm,"{'chart': 'bar', 'x_name': 'Status', 'y_name': 'avg(Population)', 'x_data': [['Town', 'Village']], 'y_data': [[5706, 1009.75]], 'classify': [], 'describe': ''}",bar,Status,avg(Population),"Town, Village","5706, 1009.75","A bar chart about what are the statuses and average populations of each city?, display by the x axis from low to high."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665",Return the average price for each product type by a bar chart.
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Nominee'}",bar,Nominee,COUNT(Nominee),"Bob Fosse, Cleavant Derricks","3, 1","A bar chart for showing the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks""."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) DESC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Clothes']], 'y_data': [[796.0416666666665, 715.5366666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Hardware, Clothes","796.0416666666665, 715.5366666666665","Return the average price for each product type by a bar chart, and could you list the average of product price from high to low order?"
"SELECT Name , sum(revenue) FROM manufacturers GROUP BY name ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': ''}",bar,Name,sum(revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30","What is the total revenue of each manufacturer, sort in ascending by the names."
"SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'COUNT(Founder)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,COUNT(Founder),"Andy, James, John, Mary, Owen, Robert","1, 3, 1, 1, 3, 2","For those records from the products and each product's manufacturer, give me the comparison about the amount of founder over the  founder , and group by attribute founder by a bar chart."
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['Wales', 'Northern Ireland', 'England']], 'y_data': [[27, 29, 34.22222222222222]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"Wales, Northern Ireland, England","27, 29, 34.22222222222222","Visualize a bar chart for what are the nationalities and their average ages of journalists?, show in asc by the total number please."
"SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(pet_age)', 'x_data': [['dog', 'cat']], 'y_data': [[1.5, 3]], 'classify': [], 'describe': ''}",bar,PetType,avg(pet_age),"dog, cat","1.5, 3","Bar chart of the average of pet age from each pettype, and could you list names in descending order please?"
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Vaccination', 'Physical examination', 'Take for a Walk']], 'y_data': [[2540, 2429, 2392]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,SUM(cost_of_treatment),"Vaccination, Physical examination, Take for a Walk","2540, 2429, 2392","Draw a bar chart for what are the cost and treatment type description of each treatment?, display Y from high to low order please."
"SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Name DESC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Editor_ID', 'x_data': [['Władysław Grzywna', 'Piotr Pręgowski', 'Maria Góralczyk', 'Marek Siudym', 'Kamila Porczyk', 'Grażyna Wolszczak']], 'y_data': [[6, 4, 9, 3, 1, 8]], 'classify': [], 'describe': ''}",bar,Name,Editor_ID,"Władysław Grzywna, Piotr Pręgowski, Maria Góralczyk, Marek Siudym, Kamila Porczyk, Grażyna Wolszczak","6, 4, 9, 3, 1, 8","Just show the id and name of each editor using a bar chart, rank Name from high to low order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Oct', 'Sept']], 'y_data': [[206, 198.83333333333334]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Oct, Sept","206, 198.83333333333334","For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and display by the mean employee id from high to low."
"SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'DEPARTMENT_ID', 'x_data': [['515.123.8181', '515.123.8080', '515.123.8888', '515.123.7777', '603.123.6666', '515.123.5555', '011.44.1644.429263']], 'y_data': [[110, 110, 70, 40, 20, 20, 0]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,DEPARTMENT_ID,"515.123.8181, 515.123.8080, 515.123.8888, 515.123.7777, 603.123.6666, 515.123.5555, 011.44.1644.429263","110, 110, 70, 40, 20, 20, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id , and list by the DEPARTMENT_ID in desc."
"SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY avg(age) DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['F', 'M']], 'y_data': [[19.7, 19.5]], 'classify': [], 'describe': ''}",bar,Sex,avg(age),"F, M","19.7, 19.5","What is the average age for each gender of student? Return a bar chart, and order by the total number in descending."
"SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type DESC",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'charge_type', 'y_name': 'charge_amount', 'x_data': [['Health Check', 'Drugs', 'Daily Accommodation']], 'y_data': [[640, 322, 98]], 'classify': [], 'describe': ''}",bar,charge_type,charge_amount,"Health Check, Drugs, Daily Accommodation","640, 322, 98","Visualize a bar chart for how much does each charge type costs? List both charge type and amount, and could you order names from high to low order?"
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) DESC",Bar,Hard,match_season,"{'chart': 'bar', 'x_name': 'Country_name', 'y_name': 'COUNT(*)', 'x_data': [['United States', 'Ireland', 'Isle of Man', 'Indonesia']], 'y_data': [[9, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,Country_name,COUNT(*),"United States, Ireland, Isle of Man, Indonesia","9, 4, 2, 1","Show me a bar chart for how many players are from each country?, and order y-axis from high to low order."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–3', '15–1', '14–2']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–3, 15–1, 14–2","4, 2, 2","Give me a bar chart for mean team id of each all home, and list by the the average of team id from high to low."
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Cable TV', 'Gym']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Cable TV, Gym","1, 2","Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart"
"SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY count(*) ASC",Bar,Hard,customer_deliveries,"{'chart': 'bar', 'x_name': 'state_province_county', 'y_name': 'count(*)', 'x_data': [['Idaho', 'Illinois', 'Maine', 'Nebraska', 'Wyoming', 'California', 'Colorado', 'Michigan', 'Tennessee']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,state_province_county,count(*),"Idaho, Illinois, Maine, Nebraska, Wyoming, California, Colorado, Michigan, Tennessee","1, 1, 1, 1, 1, 2, 2, 2, 4","List the state names and the number of customers living in each state, order from low to high by the the total number ."
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['2015', '2016']], 'y_data': [[9, 4]], 'classify': [], 'describe': 'BIN date_moved_in BY YEAR'}",bar,date_moved_in,COUNT(date_moved_in),"2015, 2016","9, 4","Please use a bar chart to compare the number of customers of each customer's move in date, note that you should bin move in date into Year interval."
"SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'COUNT(date_address_from)', 'x_data': [['2017', '2018']], 'y_data': [[14, 6]], 'classify': [], 'describe': 'BIN date_address_from BY YEAR'}",bar,date_address_from,COUNT(date_address_from),"2017, 2018","14, 6",Show me about the distribution of  date_address_from and the amount of date_address_from bin date_address_from by time in a bar chart.
"SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY age ASC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'friend', 'y_name': 'age', 'x_data': [['Bob', 'Zach']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,friend,age,"Bob, Zach","35, 45","Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, could you rank in ascending by the age?"
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) ASC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Cleavant Derricks', 'Bob Fosse']], 'y_data': [[2, 5]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Cleavant Derricks, Bob Fosse","2, 5","Return a bar chart on how many musicals has each nominee been nominated for?, order Y-axis in ascending order."
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Sat', 'Tue', 'Sun', 'Fri', 'Wed', 'Thur', 'Mon']], 'y_data': [[8, 5.5, 4, 2, 1, 1, 0]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Sat, Tue, Sun, Fri, Wed, Thur, Mon","8, 5.5, 4, 2, 1, 1, 0","Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, could you display in desc by the Y?"
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Root beer', 'Ginger Beer', 'Cola', 'Carbonated Water']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Root beer, Ginger Beer, Cola, Carbonated Water","1, 1, 2, 1","A bar chart for finding the number of the names of catalog entries with level number 8, and I want to show x-axis in desc order."
"SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Price) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Price)', 'x_data': [['Los Angeles', 'Austin', 'Tokyo', 'Taiwan', 'Beijing', 'Paris']], 'y_data': [[486, 450, 240, 240, 150, 125]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Price),"Los Angeles, Austin, Tokyo, Taiwan, Beijing, Paris","486, 450, 240, 240, 150, 125","For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the headquarter , and group by attribute headquarter by a bar chart, display by the total number in desc."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[2044, 16770]], 'classify': [], 'describe': 'BIN date_address_to BY MONTH'}",bar,date_address_to,SUM(monthly_rental),"Feb, Mar","2044, 16770",Draw a bar chart about the distribution of  date_address_to and the sum of monthly_rental bin date_address_to by time.
"SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week DESC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'day_of_week', 'y_name': 'avg(high_temperature)', 'x_data': [['Wednesday', 'Tuesday', 'Thursday', 'Sunday', 'Saturday', 'Monday', 'Friday']], 'y_data': [[58, 58, 57, 54, 55, 56, 55]], 'classify': [], 'describe': ''}",bar,day_of_week,avg(high_temperature),"Wednesday, Tuesday, Thursday, Sunday, Saturday, Monday, Friday","58, 58, 57, 54, 55, 56, 55","Bar graph to show the average of high temperature from different day of week, and could you order by the bars in desc?"
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['engineer', 'doctor']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"engineer, doctor","35, 45","What is average age of male for different job title Visualize by bar chart, and rank by the x axis from high to low."
"SELECT Working_year_starts , COUNT(Working_year_starts) FROM manager  ORDER BY LEVEL DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Working_year_starts', 'y_name': 'COUNT(Working_year_starts)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 1, 2, 0, 1]], 'classify': [], 'describe': 'BIN Working_year_starts BY WEEKDAY'}",bar,Working_year_starts,COUNT(Working_year_starts),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 1, 2, 0, 1",Show the number of the working years of managers in descending order of their level.
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY payment_method_code ASC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['American E', 'MasterCard', 'Visa']], 'y_data': [[4, 6, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"American E, MasterCard, Visa","4, 6, 5","List the distinct payment method codes with the number of orders mad Show bar chart, and display X in asc order."
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","What is the highest price of product, grouped by product type? Show a bar chart, could you display by the y axis in asc please?"
"SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id ORDER BY COUNT(*) ASC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'COUNT(*)', 'x_data': [['Mansfield', 'Baltimore County', 'Colony', 'Howard']], 'y_data': [[1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,County_name,COUNT(*),"Mansfield, Baltimore County, Colony, Howard","1, 2, 2, 3","Show the name of each county along with the corresponding number of delegates from that county Plot them as bar chart, and rank in asc by the y-axis please."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[6500, 10000, 12000, 7650, 0, 13000, 6000]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","6500, 10000, 12000, 7650, 0, 13000, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  hire_date and the average of salary bin hire_date by weekday."
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Accepted', 'Rejected']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Accepted, Rejected","2, 4","Bar graph to show how many result from different result, and rank in ascending by the Y-axis."
"SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY avg(pet_age) DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 1.5]], 'classify': [], 'describe': ''}",bar,PetType,avg(pet_age),"cat, dog","3, 1.5","What is the average age for each pet type? Show me a histogram, and could you sort by the Y-axis in desc?"
"SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'genre_is', 'y_name': 'min(T2.rating)', 'x_data': [['blues', 'folk', 'modern', 'nazrul', 'pop', 'tagore']], 'y_data': [[6, 7, 10, 5, 8, 8]], 'classify': [], 'describe': ''}",bar,genre_is,min(T2.rating),"blues, folk, modern, nazrul, pop, tagore","6, 7, 10, 5, 8, 8","Can you draw a bar chart that the X is genere and the Y is their lowest rating of songs grouped by genre, and ordered by genre"
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY COUNT(EMP_FNAME) ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Anne', 'Annelise', 'Arnelle', 'Carlos', 'Doreen', 'George', 'Gerald', 'Herman', 'Hermine', 'Ismael', 'James', 'Melanie', 'Peter', 'Preston', 'Ralph', 'Ross', 'Van', 'Willa', 'Robert', 'Ronald']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Anne, Annelise, Arnelle, Carlos, Doreen, George, Gerald, Herman, Hermine, Ismael, James, Melanie, Peter, Preston, Ralph, Ross, Van, Willa, Robert, Ronald","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2","How many professors for each first name? Show me a bar chart, could you display Y-axis from low to high order?"
"SELECT Sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex ORDER BY count(*) DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[12, 3]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"M, F","12, 3","How many male and female assistant professors do we have, order by the total number in descending."
"SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY COUNT(STU_FNAME) ASC",Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'COUNT(STU_FNAME)', 'x_data': [['Anne', 'William']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,COUNT(STU_FNAME),"Anne, William","1, 3","Find the number of students who took some course and got A or C and group by first name in a bar chart, and I want to show by the how many stu fname in ascending."
"SELECT product_name , count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Arts', 'Beer Menus', 'Chocolate', 'Fans', 'Hard Drive', 'Harry Potter 2', 'Harry Potter 3', 'Harry Potter 4', 'Learning English', 'TV']], 'y_data': [[2, 1, 1, 1, 2, 1, 4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Arts, Beer Menus, Chocolate, Fans, Hard Drive, Harry Potter 2, Harry Potter 3, Harry Potter 4, Learning English, TV","2, 1, 1, 1, 2, 1, 4, 1, 1, 1","Give me a histogram for what are teh names of the different products, as well as the number of customers who have ordered each product."
"SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(*)', 'x_data': [['Food', 'Electronics', 'Books', 'Clothes']], 'y_data': [[5, 4, 4, 2]], 'classify': [], 'describe': ''}",bar,Product_Type_Code,COUNT(*),"Food, Electronics, Books, Clothes","5, 4, 4, 2","Show different type codes of products and the number of products with each type code Visualize by bar chart, I want to list by the total number in descending."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sun', 'Sat', 'Fri', 'Mon', 'Thur', 'Tue', 'Wed']], 'y_data': [[133, 127.11111111111111, 126.57142857142857, 125, 121.2, 119.2, 105.63636363636364]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sun, Sat, Fri, Mon, Thur, Tue, Wed","133, 127.11111111111111, 126.57142857142857, 125, 121.2, 119.2, 105.63636363636364","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, show by the the average of manager id in descending."
"SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Road DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['8–2', '6–5', '4–8', '13–0']], 'y_data': [[0.8240000000000001, 0.706, 0.6, 0.946]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"8–2, 6–5, 4–8, 13–0","0.8240000000000001, 0.706, 0.6, 0.946","Bar chart of all_games_percent from each all road, and rank by the X from high to low."
"SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) DESC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Midshipman', 'Lieutenant', 'Commander, junior captain']], 'y_data': [[4, 2, 1]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Midshipman, Lieutenant, Commander, junior captain","4, 2, 1","Count the number of captains that have each rank Visualize by bar chart, rank by the the total number in descending."
"SELECT name , distance FROM Aircraft",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145', 'SAAB 340', 'Piper Archer III', 'Tupolev 154', 'Schwitzer 2-33', 'Lockheed L1011', 'Boeing 757-300', 'Boeing 777-300', 'Boeing 767-400ER', 'Airbus A320', 'Airbus A319', 'Boeing 727']], 'y_data': [[8430, 3383, 7120, 1502, 1530, 2128, 520, 4103, 30, 6900, 4010, 6441, 6475, 2605, 1805, 1504]], 'classify': [], 'describe': ''}",bar,name,distance,"Boeing 747-400, Boeing 737-800, Airbus A340-300, British Aerospace Jetstream 41, Embraer ERJ-145, SAAB 340, Piper Archer III, Tupolev 154, Schwitzer 2-33, Lockheed L1011, Boeing 757-300, Boeing 777-300, Boeing 767-400ER, Airbus A320, Airbus A319, Boeing 727","8430, 3383, 7120, 1502, 1530, 2128, 520, 4103, 30, 6900, 4010, 6441, 6475, 2605, 1805, 1504",Return a histogram on what are the names and distances for all airplanes?
"SELECT Location , COUNT(Location) FROM party GROUP BY Location",Bar,Easy,party_host,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Heineken Music Hall Amsterdam', 'Hemkade 48 Zaandam', 'Hemkade 48 Zaandam, Heineken Music Hall Amsterdam', 'RAI Amsterdam', 'Various locations']], 'y_data': [[2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Heineken Music Hall Amsterdam, Hemkade 48 Zaandam, Hemkade 48 Zaandam, Heineken Music Hall Amsterdam, RAI Amsterdam, Various locations","2, 2, 1, 1, 2","Give me a bar chart, that group by location and count them."
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos",Bar,Easy,soccer_2,"{'chart': 'bar', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['goalie', 'mid', 'striker']], 'y_data': [[1200, 300, 1600]], 'classify': [], 'describe': ''}",bar,pPos,min(T2.HS),"goalie, mid, striker","1200, 300, 1600",Show me a bar chart for what is minimum hours of the students playing in different position?
"SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Price)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[240, 486, 240, 150, 450, 125]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Price),"Andy, James, John, Mary, Owen, Robert","240, 486, 240, 150, 450, 125","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of price , and group by attribute founder, and order by the x-axis in asc."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Wed', 'Thur', 'Tue', 'Mon', 'Fri', 'Sun', 'Sat']], 'y_data': [[1040, 1000, 980, 930, 930, 910, 910]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Wed, Thur, Tue, Mon, Fri, Sun, Sat","1040, 1000, 980, 930, 930, 910, 910","For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart, and display in desc by the y-axis."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2310, 2149, 2326, 2233, 1963, 2079, 2295]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2310, 2149, 2326, 2233, 1963, 2079, 2295","For those employees who did not have any job in the past, visualize a bar chart about the distribution of  hire_date and the sum of employee_id bin hire_date by weekday."
"SELECT LAST_NAME , LOCATION_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY LAST_NAME DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'LOCATION_ID', 'x_data': [['Whalen', 'Russell', 'Raphaely', 'Mavris', 'King', 'Hunold', 'Higgins', 'Hartstein', 'Greenberg', 'Fripp', 'Baer']], 'y_data': [[1700, 2500, 1700, 2400, 1700, 1400, 1700, 1800, 1700, 1500, 2700]], 'classify': [], 'describe': ''}",bar,LAST_NAME,LOCATION_ID,"Whalen, Russell, Raphaely, Mavris, King, Hunold, Higgins, Hartstein, Greenberg, Fripp, Baer","1700, 2500, 1700, 2400, 1700, 1400, 1700, 1800, 1700, 1500, 2700","Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id, and display by the x axis in descending please."
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Mountain Climbing', 'Canoeing', 'Kayaking', 'Spelunking', 'Extreme Canasta', 'Soccer', 'Baseball', 'Football', 'Volleyball', 'Canasta', 'Chess', 'Crossword Puzzles', 'Square Dancing']], 'y_data': [[6, 4, 1, 2, 3, 1, 1, 3, 2, 3, 5, 7, 2]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Mountain Climbing, Canoeing, Kayaking, Spelunking, Extreme Canasta, Soccer, Baseball, Football, Volleyball, Canasta, Chess, Crossword Puzzles, Square Dancing","6, 4, 1, 2, 3, 1, 1, 3, 2, 3, 5, 7, 2",Display a bar chart for how many faculty members participate in each activity? Return the activity names and the number of faculty members.
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'June', 'Sept', 'July', 'Aug']], 'y_data': [[205, 1155, 3391, 3410, 4314]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, June, Sept, July, Aug","205, 1155, 3391, 3410, 4314","For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, show from low to high by the total number of manager id."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'IT_PROG', 'HR_REP', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR']], 'y_data': [[2, 9, 9, 13, 1, 1, 3, 3, 1, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, IT_PROG, HR_REP, FI_ACCOUNT, AD_PRES, AC_MGR","2, 9, 9, 13, 1, 1, 3, 3, 1, 4, 1, 1","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, could you list in descending by the names?"
"SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code ORDER BY COUNT(T1.Budget_Type_Code) ASC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'COUNT(Budget_Type_Code)', 'x_data': [['ORG', 'SF', 'GV']], 'y_data': [[2, 2, 6]], 'classify': [], 'describe': 'GROUP BY Budget_Type_Code'}",bar,Budget_Type_Code,COUNT(Budget_Type_Code),"ORG, SF, GV","2, 2, 6","Show the number of documents for different budget type code in a bar chart, show in ascending by the total number."
"SELECT Team_Name , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'School_ID', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,Team_Name,School_ID,"North Carolina, Duke, Clemson, Virginia Tech","1, 2, 4, 5",Give me the comparison about  School_ID over the  Team_Name .
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination",Bar,Easy,school_player,"{'chart': 'bar', 'x_name': 'Denomination', 'y_name': 'COUNT(*)', 'x_data': [['Anglican', 'Catholic', 'Uniting Church']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,Denomination,COUNT(*),"Anglican, Catholic, Uniting Church","3, 2, 1",Create a bar chart showing the total number across denomination
"SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,All_Neutral,School_ID,"3–3, 4–3, 5–3, 9–1","5, 4, 2, 1","Create a bar chart showing school_id across all neutral, and rank by the School_ID from high to low."
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,party_host,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Argentina', 'Hungary', 'United States']], 'y_data': [[1, 1, 8]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Argentina, Hungary, United States","1, 1, 8","A bar chart about how many hosts does each nationality have? List the nationality and the count, and order in ascending by the names."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'FI_ACCOUNT', 'AD_PRES', 'SA_REP', 'SA_MAN', 'IT_PROG', 'ST_MAN', 'ST_CLERK', 'SH_CLERK', 'HR_REP', 'PU_MAN', 'PU_CLERK']], 'y_data': [[110, 100, 90, 80, 80, 60, 50, 50, 50, 40, 30, 30]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, FI_ACCOUNT, AD_PRES, SA_REP, SA_MAN, IT_PROG, ST_MAN, ST_CLERK, SH_CLERK, HR_REP, PU_MAN, PU_CLERK","110, 100, 90, 80, 80, 60, 50, 50, 50, 40, 30, 30","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and list by the y-axis from high to low."
"SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY Name DESC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Władysław Grzywna', 'Piotr Pręgowski', 'Maria Góralczyk', 'Marek Siudym', 'Kamila Porczyk', 'Grażyna Wolszczak']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Władysław Grzywna, Piotr Pręgowski, Maria Góralczyk, Marek Siudym, Kamila Porczyk, Grażyna Wolszczak","1, 1, 1, 1, 1, 2","Bar chart x axis name y axis how many name, sort by the X-axis in descending."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[149.625, 148, 150.27272727272728, 166.8, 140, 151.22222222222223, 141.33333333333334]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","149.625, 148, 150.27272727272728, 166.8, 140, 151.22222222222223, 141.33333333333334","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of  hire_date and the average of employee_id bin hire_date by weekday."
"SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'AVG(salary)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'Languages', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[48716.25, 79070, 77097.6, 61287, 98133, 96345.75, 74162.25, 72088.5, 105311, 99382, 57421.333333333336, 84097, 79812.5, 114576, 100052.66666666667, 61142.5, 67795]], 'classify': [], 'describe': 'GROUP BY dept_name'}",bar,dept_name,AVG(salary),"Accounting, Astronomy, Athletics, Biology, Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, Languages, Marketing, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","48716.25, 79070, 77097.6, 61287, 98133, 96345.75, 74162.25, 72088.5, 105311, 99382, 57421.333333333336, 84097, 79812.5, 114576, 100052.66666666667, 61142.5, 67795","Draw a bar chart about the distribution of  dept_name and the average of salary , and group by attribute dept_name."
"SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day ORDER BY Time_of_day ASC",Bar,Medium,program_share,"{'chart': 'bar', 'x_name': 'Time_of_day', 'y_name': 'count(*)', 'x_data': [['Morning', 'Night', 'Noon']], 'y_data': [[4, 5, 2]], 'classify': [], 'describe': ''}",bar,Time_of_day,count(*),"Morning, Night, Noon","4, 5, 2","Count the number of programs broadcast for each time section of a day Show bar chart, could you show by the x-axis in asc please?"
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'June', 'July', 'Sept', 'Aug']], 'y_data': [[205, 1355, 3610, 3741, 4314]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, June, July, Sept, Aug","205, 1355, 3610, 3741, 4314","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, list Y-axis in asc order."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['PU_CLERK', 'ST_CLERK', 'SH_CLERK', 'AD_ASST', 'IT_PROG', 'MK_REP', 'HR_REP', 'ST_MAN', 'FI_ACCOUNT', 'AC_ACCOUNT', 'SA_REP', 'PR_REP', 'PU_MAN', 'AC_MGR', 'FI_MGR', 'SA_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[2780, 2785, 3215, 4400, 5760, 6000, 6500, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"PU_CLERK, ST_CLERK, SH_CLERK, AD_ASST, IT_PROG, MK_REP, HR_REP, ST_MAN, FI_ACCOUNT, AC_ACCOUNT, SA_REP, PR_REP, PU_MAN, AC_MGR, FI_MGR, SA_MAN, MK_MAN, AD_VP, AD_PRES","2780, 2785, 3215, 4400, 5760, 6000, 6500, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, rank in ascending by the Y."
"SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count(*) DESC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'count(*)', 'x_data': [['package', 'middle', 'top']], 'y_data': [[6, 5, 4]], 'classify': [], 'describe': ''}",bar,part_name,count(*),"package, middle, top","6, 5, 4","How many assets can each parts be used in? List the part name and the number, I want to order Y-axis in descending order."
"SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) ASC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Visit_Date', 'y_name': 'COUNT(Visit_Date)', 'x_data': [['Fri', 'Sat', 'Wed', 'Sun', 'Thur', 'Tue', 'Mon']], 'y_data': [[0, 1, 2, 3, 3, 5, 6]], 'classify': [], 'describe': 'BIN Visit_Date BY WEEKDAY'}",bar,Visit_Date,COUNT(Visit_Date),"Fri, Sat, Wed, Sun, Thur, Tue, Mon","0, 1, 2, 3, 3, 5, 6","Find all the distinct visit dates, and count them by a bar chart, and rank total number from low to high order."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Logan', 'Kyle', 'John', 'Jessica', 'Austin', 'Alexis', 'Jordan', 'Kris', 'Haley', 'Gabriel', 'Brittany', 'Andrew', 'Tiffany', 'Cassandra']], 'y_data': [[12, 12, 12, 11, 11, 11, 10.5, 10, 10, 10, 10, 10, 9, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Logan, Kyle, John, Jessica, Austin, Alexis, Jordan, Kris, Haley, Gabriel, Brittany, Andrew, Tiffany, Cassandra","12, 12, 12, 11, 11, 11, 10.5, 10, 10, 10, 10, 10, 9, 9","Show the names and their average grades of each high schooler with a bar chart, could you rank in descending by the Y-axis?"
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–2', '15–1', '14–3']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,COUNT(All_Home),"14–2, 15–1, 14–3","2, 1, 1","Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, list in descending by the y-axis."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 101, 0, 200, 540, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 101, 0, 200, 540, 101, 514, 100, 201, 101, 570, 100, 500, 4410, 2440, 2440, 500","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the  job_id , and group by attribute job_id by a bar chart."
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[2, 7, 9]], 'classify': [], 'describe': ''}",bar,Name,Code,"Memory, CD drive, Toner cartridge","2, 7, 9","For those products with a price between 60 and 120, find  name and  code , and visualize them by a bar chart."
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"8–0, 6–2, 3–5","1, 2, 3.5","Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the bar in descending."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC",Bar,Medium,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'France', 'Germany', 'Netherlands', 'Russia', 'UK', 'China', 'USA']], 'y_data': [[1, 1, 1, 1, 1, 2, 4, 8]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, France, Germany, Netherlands, Russia, UK, China, USA","1, 1, 1, 1, 1, 2, 4, 8","What is the number of companies for each headquarter? Visualize by bar chart, and could you order by the total number in ascending?"
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['SA_REP', 'SH_CLERK', 'SA_MAN', 'ST_CLERK', 'FI_ACCOUNT', 'ST_MAN', 'AD_VP', 'IT_PROG', 'AD_PRES', 'PU_CLERK', 'MK_MAN', 'FI_MGR', 'AC_MGR', 'PU_MAN', 'PR_REP', 'AC_ACCOUNT', 'HR_REP', 'MK_REP', 'AD_ASST']], 'y_data': [[250500, 64300, 61000, 55700, 39600, 36400, 34000, 28800, 24000, 13900, 13000, 12000, 12000, 11000, 10000, 8300, 6500, 6000, 4400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"SA_REP, SH_CLERK, SA_MAN, ST_CLERK, FI_ACCOUNT, ST_MAN, AD_VP, IT_PROG, AD_PRES, PU_CLERK, MK_MAN, FI_MGR, AC_MGR, PU_MAN, PR_REP, AC_ACCOUNT, HR_REP, MK_REP, AD_ASST","250500, 64300, 61000, 55700, 39600, 36400, 34000, 28800, 24000, 13900, 13000, 12000, 12000, 11000, 10000, 8300, 6500, 6000, 4400","For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, rank in desc by the y-axis."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[96.78571428571429, 116.45161290322581, 139.16129032258064, 125.51724137931035, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"June, July, Aug, Sept, Oct","96.78571428571429, 116.45161290322581, 139.16129032258064, 125.51724137931035, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the  hire_date bin hire_date by time."
"SELECT city_code , avg(age) FROM student GROUP BY city_code ORDER BY city_code DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['YYZ', 'WAS', 'SFO', 'ROC', 'PIT', 'PHL', 'PEK', 'NYC', 'NAR', 'LOS', 'LON', 'HOU', 'HKG', 'DET', 'DAL', 'CHI', 'BOS', 'BAL', 'ATL']], 'y_data': [[22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"YYZ, WAS, SFO, ROC, PIT, PHL, PEK, NYC, NAR, LOS, LON, HOU, HKG, DET, DAL, CHI, BOS, BAL, ATL","22.5, 21.66666666666667, 21, 20, 19, 19.666666666666668, 17, 20.33333333333333, 18, 18, 27, 17, 18, 17, 18, 20, 18, 18.5, 20","What is the average age for each city and what are those cities Show bar chart, and list names in descending order."
"SELECT Sex , SUM(Weight) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'SUM(Weight)', 'x_data': [['F', 'M']], 'y_data': [[184, 607]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,SUM(Weight),"F, M","184, 607",Give me a bar chart for sum weight of each sex
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[106.5, 129, 160, 190.5, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","106.5, 129, 160, 190.5, 206","For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, show in ascending by the Y."
"SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code",Bar,Easy,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'COUNT(Payment_Method_Code)', 'x_data': [['American Express', 'Discover Card', 'MasterCard', 'Visa']], 'y_data': [[1, 3, 7, 4]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,COUNT(Payment_Method_Code),"American Express, Discover Card, MasterCard, Visa","1, 3, 7, 4",Compare the frequency of each payment method code using a bar chart.
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'FI_ACCOUNT', 'PU_CLERK', 'IT_PROG', 'ST_MAN', 'HR_REP', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'AD_PRES']], 'y_data': [[1911, 1100, 1098, 432, 342, 308, 200, 101, 101, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, FI_ACCOUNT, PU_CLERK, IT_PROG, ST_MAN, HR_REP, AC_MGR, SA_MAN, PU_MAN, AD_PRES","1911, 1100, 1098, 432, 342, 308, 200, 101, 101, 100, 100, 0","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list by the y axis in descending."
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Midshipman', 'Lieutenant', 'Commander, junior captain']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Midshipman, Lieutenant, Commander, junior captain","3, 1, 1","How many captains with younger than 50 are in each rank, display by the the total number from high to low."
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) ASC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['American E', 'Visa', 'MasterCard']], 'y_data': [[4, 5, 6]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"American E, Visa, MasterCard","4, 5, 6","Give me a bar chart for the total number of each payment method code, and list by the y axis in ascending."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['Chrisside', 'Feliciaberg', 'Jasthaven', 'Macejkovicchester', 'Monahanshire', 'Nataliamouth', 'New Lonzoville', 'Port Maximeview', 'Purdyville', 'Rueckermouth', 'South Eugenia', 'West Sherwoodstad']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"Chrisside, Feliciaberg, Jasthaven, Macejkovicchester, Monahanshire, Nataliamouth, New Lonzoville, Port Maximeview, Purdyville, Rueckermouth, South Eugenia, West Sherwoodstad","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1",How many drama workshop groups are there in each city? Return both the city and the count with a bar chart.
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'DVD drive', 'Toner cartridge', 'DVD burner']], 'y_data': [[1, 2, 3, 4, 5, 7, 8, 8.5, 9, 10]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, DVD drive, Toner cartridge, DVD burner","1, 2, 3, 4, 5, 7, 8, 8.5, 9, 10","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and could you display by the y axis in ascending?"
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,COUNT(All_Home),"14–2, 14–3, 15–1","2, 1, 1","Show me about the distribution of  All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart."
"SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor ORDER BY avg(basePrice) ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'avg(basePrice)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[112.5, 162.5, 187.5]], 'classify': [], 'describe': ''}",bar,decor,avg(basePrice),"modern, rustic, traditional","112.5, 162.5, 187.5","Please use a bar chart to show the average price of the rooms in a different decor, and display in ascending by the the average of baseprice."
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality",Bar,Easy,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[308, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"England, Northern Ireland, Wales","308, 29, 27",What are the nationalities and the taotal ages of journalists. Visualize by a bar chart.
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sun', 'Thur', 'Wed', 'Fri', 'Tue', 'Mon', 'Sat']], 'y_data': [[1, 1, 1, 2, 2, 4, 4]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sun, Thur, Wed, Fri, Tue, Mon, Sat","1, 1, 1, 2, 2, 4, 4","Plot how many booking start date by grouped by booking start date as a bar graph, order Y in ascending order."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Joe Sewell', 'Tony Sewell', 'John Brown', 'Eddie Collins', 'Charlie Hollocher']], 'y_data': [[5, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Joe Sewell, Tony Sewell, John Brown, Eddie Collins, Charlie Hollocher","5, 1, 1, 1, 1","Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and I want to display in desc by the Y."
"SELECT Sex , AVG(Weight) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.71428571428571]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Weight),"F, M","92, 86.71428571428571","A bar chart shows the distribution of  Sex and the average of Weight , and group by attribute Sex."
"SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) DESC",Bar,Hard,sakila_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Sports', 'Foreign', 'Family', 'Documentary', 'Animation', 'Action', 'New', 'Drama', 'Sci-Fi', 'Games', 'Children', 'Comedy', 'Travel', 'Classics', 'Horror', 'Music']], 'y_data': [[74, 73, 69, 68, 66, 64, 63, 62, 61, 61, 60, 58, 57, 57, 56, 51]], 'classify': [], 'describe': ''}",bar,name,count(*),"Sports, Foreign, Family, Documentary, Animation, Action, New, Drama, Sci-Fi, Games, Children, Comedy, Travel, Classics, Horror, Music","74, 73, 69, 68, 66, 64, 63, 62, 61, 61, 60, 58, 57, 57, 56, 51","What are the names of the different categories, and how many films are in each? Show me the bar graph, show in descending by the the total number ."
"SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Games,School_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 4, 5","Bar chart of school_id from each all games, I want to list x-axis in descending order."
"SELECT family_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'family_name', 'y_name': 'gender_mf', 'x_data': [['Rohan', 'Grant', 'Greenholt', 'Reichel', 'Champlin', 'Crist', 'Zboncak', 'Nader', 'Rowe', 'Treutel', 'Effertz', 'Armstrong', 'Haley', 'Kreiger', 'Barrows']], 'y_data': [[1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]], 'classify': [], 'describe': ''}",bar,family_name,gender_mf,"Rohan, Grant, Greenholt, Reichel, Champlin, Crist, Zboncak, Nader, Rowe, Treutel, Effertz, Armstrong, Haley, Kreiger, Barrows","1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1",A bar chart shows the distribution of  family_name and  gender_mf .
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'Aug', 'Oct', 'Sept', 'July']], 'y_data': [[9885.714285714286, 9074.193548387097, 8300, 4880, 3774.1935483870966]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, Aug, Oct, Sept, July","9885.714285714286, 9074.193548387097, 8300, 4880, 3774.1935483870966","For those employees who was hired before 2002-06-21, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, display Y in desc order."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) ASC",Bar,Medium,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Bulgaria', 'Russia']], 'y_data': [[1, 6]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Bulgaria, Russia","1, 6","What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, rank from low to high by the y-axis."
"SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",Bar,Medium,farm,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 2, 1, 1, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 2, 1, 1, 0, 1, 1",Give the years and official names of the cities of each competition.
"SELECT organisation_details , COUNT(organisation_details) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY organisation_details ORDER BY organisation_details DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'COUNT(organisation_details)', 'x_data': [['quo', 'officiis', 'itaque', 'eius', 'a']], 'y_data': [[1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,COUNT(organisation_details),"quo, officiis, itaque, eius, a","1, 1, 2, 1, 1","For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, and I want to list by the bar in desc."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, could you display in asc by the bars?"
"SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY count(*) ASC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['ATL', 'BOS', 'CHI', 'DAL', 'DET', 'HOU', 'LON', 'LOS', 'NAR', 'PEK', 'ROC', 'SFO', 'YYZ', 'HKG', 'NYC', 'PHL', 'WAS', 'BAL', 'PIT']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"ATL, BOS, CHI, DAL, DET, HOU, LON, LOS, NAR, PEK, ROC, SFO, YYZ, HKG, NYC, PHL, WAS, BAL, PIT","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4","How many students live in each city? Show a bar chart, order by the Y from low to high please."
"SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY count(*) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['ATL', 'BOS', 'CHI', 'DAL', 'DET', 'HOU', 'LON', 'LOS', 'NAR', 'PEK', 'ROC', 'SFO', 'YYZ', 'HKG', 'NYC', 'PHL', 'WAS', 'BAL', 'PIT']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"ATL, BOS, CHI, DAL, DET, HOU, LON, LOS, NAR, PEK, ROC, SFO, YYZ, HKG, NYC, PHL, WAS, BAL, PIT","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4","A bar chart about how many students live in each city?, could you sort in ascending by the the total number ?"
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1","Give me a bar chart for total number of team id of each acc road, order by the X-axis in ascending."
"SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC",Bar,Hard,store_product,"{'chart': 'bar', 'x_name': 'Headquartered_City', 'y_name': 'count(*)', 'x_data': [['Bahawalpur City', 'Bhakkar City', 'Hafizabad City', 'Khanewal City']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Headquartered_City,count(*),"Bahawalpur City, Bhakkar City, Hafizabad City, Khanewal City","1, 1, 1, 2","Find the number of stores in each city Plot them as bar chart, and I want to order in asc by the Y."
"SELECT T3.city , COUNT(T3.city) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T3.city ORDER BY COUNT(T3.city) ASC",Bar,Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(city)', 'x_data': [['East Rickey', 'Edgardoberg', 'Gibsonfurt', 'Hertafurt', 'Lake Floyd', 'Lake Katheryn', 'Port Montytown', 'Agustinstad', 'Gleasonland', 'Estaland', 'Gilbertmouth', 'North Lisandroport']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY city'}",bar,city,COUNT(city),"East Rickey, Edgardoberg, Gibsonfurt, Hertafurt, Lake Floyd, Lake Katheryn, Port Montytown, Agustinstad, Gleasonland, Estaland, Gilbertmouth, North Lisandroport","1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3","Show the number of customer address history for each city in a bar chart, and could you order from low to high by the Y?"
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) ASC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['ENGL', 'ACCT', 'BIOL', 'CIS', 'EDU']], 'y_data': [[2.11, 2.26, 2.84, 3.09, 3.87]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,min(stu_gpa),"ENGL, ACCT, BIOL, CIS, EDU","2.11, 2.26, 2.84, 3.09, 3.87","Bar chart x axis dept code y axis minimal stu gpa, I want to rank in ascending by the y axis."
"SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY COUNT(date_of_notes) ASC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_of_notes', 'y_name': 'COUNT(date_of_notes)', 'x_data': [['Sun', 'Fri', 'Sat', 'Wed', 'Tue', 'Mon', 'Thur']], 'y_data': [[0, 1, 1, 1, 2, 4, 6]], 'classify': [], 'describe': 'BIN date_of_notes BY WEEKDAY'}",bar,date_of_notes,COUNT(date_of_notes),"Sun, Fri, Sat, Wed, Tue, Mon, Thur","0, 1, 1, 1, 2, 4, 6","What are the dates of the assessment notes, and count them by a bar chart, display y axis from low to high order."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 24000, 39600, 12000, 6500, 28800, 6000, 10000, 13900, 61000, 241900, 64300, 55700, 28500","For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, could you display in asc by the x axis?"
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2016', '2017']], 'y_data': [[9, 6]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2016, 2017","9, 6","Show the number of start dates of all the apartment bookings for each year with a bar chart, and order by the total number in desc please."
"SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(Team_ID)', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(Team_ID),"15–1, 14–3, 14–2","2, 4, 4","Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, I want to show from high to low by the All_Home."
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","1, 1, 2, 1, 1, 1, 1, 1, 1, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and the amount of name , and group by attribute name."
"SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'Amount_Payment', 'x_data': [['2017-12-16', '2017-05-03', '2017-05-28', '2018-02-24']], 'y_data': [[459407, 172309, 155654, 7343]], 'classify': [], 'describe': ''}",bar,Date_Payment_Made,Amount_Payment,"2017-12-16, 2017-05-03, 2017-05-28, 2018-02-24","459407, 172309, 155654, 7343","Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, show Amount_Payment from high to low order."
"SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Sarah', 'Lisa', 'Tracy', 'Susan', 'Stacy', 'Shiela', 'Linda', 'Jandy']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Sarah, Lisa, Tracy, Susan, Stacy, Shiela, Linda, Jandy","2, 2, 1, 1, 1, 1, 1, 1","A bar chart showing the number of first name for all female students Their sex is F, list by the y-axis from high to low please."
"SELECT T2.Party , AVG(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party",Bar,Medium,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'AVG(COUNT(*))', 'x_data': [['Democratic', 'Independence', 'Liberal', 'Working Families']], 'y_data': [[2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,AVG(COUNT(*)),"Democratic, Independence, Liberal, Working Families","2, 1, 2, 1","For each party, return the name of the party and the number of delegates from that party. Plot them as bar chart."
"SELECT last_name , COUNT(last_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY last_name ORDER BY COUNT(last_name) ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'last_name', 'y_name': 'COUNT(last_name)', 'x_data': [['Adams', 'Hirthe', 'Kunde', 'Reinger', 'Simonis', 'Morar', 'Price', 'Streich']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 6]], 'classify': [], 'describe': 'GROUP BY last_name'}",bar,last_name,COUNT(last_name),"Adams, Hirthe, Kunde, Reinger, Simonis, Morar, Price, Streich","1, 1, 1, 1, 1, 2, 2, 6","How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's last name, could you sort by the y axis from low to high?"
"SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services ASC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'services', 'y_name': 'COUNT(services)', 'x_data': [['Greater Anglia', 'London Overground', 'London Overground and London Midland', 'Metropolitan line', 'Metropolitan line and Chiltern Railways', 'c2c']], 'y_data': [[3, 1, 1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY services'}",bar,services,COUNT(services),"Greater Anglia, London Overground, London Overground and London Midland, Metropolitan line, Metropolitan line and Chiltern Railways, c2c","3, 1, 1, 2, 3, 1","Count the number of services by services, and sort by the services in asc please."
"SELECT year , COUNT(year) FROM home_game  ORDER BY COUNT(year) DESC",Bar,Medium,baseball_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['Wed', 'Tue', 'Sun', 'Mon', 'Thur', 'Sat', 'Fri']], 'y_data': [[21, 21, 21, 21, 20, 20, 20]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,COUNT(year),"Wed, Tue, Sun, Mon, Thur, Sat, Fri","21, 21, 21, 21, 20, 20, 20","Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval, order by the the number of year in desc please."
"SELECT T1.name , T1.id FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id ORDER BY T1.id DESC",Bar,Medium,architecture,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Le Corbusier', 'Frank Gehry', 'Frank Lloyd Wright']], 'y_data': [[5, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Le Corbusier, Frank Gehry, Frank Lloyd Wright","5, 2, 1","Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?, and could you display by the total number in desc?"
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Tokyo , Japan', 'Tijuana , Mexico', 'Sapporo , Japan', 'Osaka , Japan', 'Nagoya , Japan']], 'y_data': [[4, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Tokyo , Japan, Tijuana , Mexico, Sapporo , Japan, Osaka , Japan, Nagoya , Japan","4, 3, 1, 1, 1","A bar chart for what is the number of locations of the wrestlers, and sort by the x-axis in descending."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY PetType DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[11.35, 12]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"dog, cat","11.35, 12","Visualize a bar chart for what is the average weight for each type of pet?, and sort from high to low by the X."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[6500, 10000, 12000, 15300, 0, 13000, 6000]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","6500, 10000, 12000, 15300, 0, 13000, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.10344827586206, 147, 117, 204, 202, 105, 203, 108, 111, 100, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.10344827586206, 147, 117, 204, 202, 105, 203, 108, 111, 100, 205, 206","For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and list by the X in descending."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['July', 'Sept', 'Aug', 'June', 'Oct']], 'y_data': [[46.55172413793103, 51.851851851851855, 80, 82.5, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"July, Sept, Aug, June, Oct","46.55172413793103, 51.851851851851855, 80, 82.5, 110","For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, could you order by the the average of department id from low to high?"
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2310, 2325, 2440, 2456, 2265, 2280, 2295]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2310, 2325, 2440, 2456, 2265, 2280, 2295","For those employees who was hired before 2002-06-21, show me about the distribution of  hire_date and the sum of employee_id bin hire_date by weekday in a bar chart."
"SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY JOB_TITLE ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'COUNT(JOB_TITLE)', 'x_data': [['Sales Manager', 'Sales Representative']], 'y_data': [[5, 29]], 'classify': [], 'describe': 'GROUP BY JOB_TITLE'}",bar,JOB_TITLE,COUNT(JOB_TITLE),"Sales Manager, Sales Representative","5, 29","Compare the total number of different job titles for all those jobs in department 80 using a bar chart, order by the JOB_TITLE in ascending."
"SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY COUNT(Hometown) DESC",Bar,Medium,shop_membership,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(Hometown)', 'x_data': [['Louisville, Kentucky', 'Simpsonville, South Carolina', 'Red Jacket, West Virginia', 'LaGrange, Georgia', 'Jacksonville, Florida', 'Hiram, Georgia', 'Fort Campbell, Kentucky', 'Columbia, South Carolina', 'Collierville, Tennessee']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Hometown'}",bar,Hometown,COUNT(Hometown),"Louisville, Kentucky, Simpsonville, South Carolina, Red Jacket, West Virginia, LaGrange, Georgia, Jacksonville, Florida, Hiram, Georgia, Fort Campbell, Kentucky, Columbia, South Carolina, Collierville, Tennessee","2, 1, 1, 1, 1, 1, 1, 1, 1","Show the hometown of all members, and list in descending by the Y."
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Gabriel', 'Kyle', 'John', 'Jessica', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Gabriel, Kyle, John, Jessica, Cassandra, Brittany, Austin, Andrew, Alexis","2, 1, 1, 1, 1, 1, 1, 1, 1","Give me a bar chart to show the number of names of high schoolers who have likes, list y axis from high to low order."
"SELECT Planned_Delivery_Date , COUNT(Planned_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Planned_Delivery_Date) ASC",Bar,Medium,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Planned_Delivery_Date', 'y_name': 'COUNT(Planned_Delivery_Date)', 'x_data': [['Wed', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 2, 3, 3, 5]], 'classify': [], 'describe': 'BIN Planned_Delivery_Date BY WEEKDAY'}",bar,Planned_Delivery_Date,COUNT(Planned_Delivery_Date),"Wed, Fri, Sat, Sun, Mon, Tue, Thur","0, 1, 1, 2, 3, 3, 5","Bar chart of the number of planned delivery date from each planned delivery date, list by the total number in asc."
"SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Sony', 'Creative Labs', 'Hewlett-Packard', 'Iomega', 'Fujits', 'Winchester']], 'y_data': [[1, 2, 3, 4, 5, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Manufacturer),"Sony, Creative Labs, Hewlett-Packard, Iomega, Fujits, Winchester","1, 2, 3, 4, 5, 6","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, sort by the Y in ascending."
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['AC_MGR', 'AC_ACCOUNT', 'PR_REP', 'HR_REP', 'MK_REP', 'MK_MAN', 'SA_REP']], 'y_data': [[110, 110, 70, 40, 20, 20, 0]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"AC_MGR, AC_ACCOUNT, PR_REP, HR_REP, MK_REP, MK_MAN, SA_REP","110, 110, 70, 40, 20, 20, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and department_id in a bar chart, and rank by the DEPARTMENT_ID in descending."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 34000, 39600, 12000, 6500, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 34000, 39600, 12000, 6500, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and could you rank by the X from low to high?"
"SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank ORDER BY COUNT(Rank) ASC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'COUNT(Rank)', 'x_data': [['AssocProf', 'Instructor', 'AsstProf', 'Professor']], 'y_data': [[8, 8, 15, 27]], 'classify': [], 'describe': 'GROUP BY Rank'}",bar,Rank,COUNT(Rank),"AssocProf, Instructor, AsstProf, Professor","8, 8, 15, 27","Show how many rank from each rank, and rank by the total number from low to high."
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'SUM(organisation_id)', 'x_data': [['quo', 'officiis', 'itaque', 'eius', 'a']], 'y_data': [[14, 10, 19, 2, 9]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,SUM(organisation_id),"quo, officiis, itaque, eius, a","14, 10, 19, 2, 9","Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and display in descending by the x-axis."
"SELECT T1.Customer_Details , T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id ORDER BY T1.Customer_Details DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Customer_Details', 'y_name': 'Customer_ID', 'x_data': [['Mrs. Hanna Willms', 'Lauriane Ferry PhD', 'Ellsworth Paucek', 'Dr. Diana Rath']], 'y_data': [[3, 6, 2, 4]], 'classify': [], 'describe': ''}",bar,Customer_Details,Customer_ID,"Mrs. Hanna Willms, Lauriane Ferry PhD, Ellsworth Paucek, Dr. Diana Rath","3, 6, 2, 4","Find the the customer details and id for the customers who had more than one policy, and order in descending by the X."
"SELECT name , distance FROM Aircraft",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'distance', 'x_data': [['Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145', 'SAAB 340', 'Piper Archer III', 'Tupolev 154', 'Schwitzer 2-33', 'Lockheed L1011', 'Boeing 757-300', 'Boeing 777-300', 'Boeing 767-400ER', 'Airbus A320', 'Airbus A319', 'Boeing 727']], 'y_data': [[8430, 3383, 7120, 1502, 1530, 2128, 520, 4103, 30, 6900, 4010, 6441, 6475, 2605, 1805, 1504]], 'classify': [], 'describe': ''}",bar,name,distance,"Boeing 747-400, Boeing 737-800, Airbus A340-300, British Aerospace Jetstream 41, Embraer ERJ-145, SAAB 340, Piper Archer III, Tupolev 154, Schwitzer 2-33, Lockheed L1011, Boeing 757-300, Boeing 777-300, Boeing 767-400ER, Airbus A320, Airbus A319, Boeing 727","8430, 3383, 7120, 1502, 1530, 2128, 520, 4103, 30, 6900, 4010, 6441, 6475, 2605, 1805, 1504",Show me distance by name in a histogram
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['SOC', 'PSYCH', 'MKT/MGT', 'MATH', 'HIST', 'ENG', 'ECON/FIN', 'CIS', 'BIOL', 'ART', 'ACCT']], 'y_data': [[1, 1, 1, 2, 1, 2, 1, 3, 2, 1, 3]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"SOC, PSYCH, MKT/MGT, MATH, HIST, ENG, ECON/FIN, CIS, BIOL, ART, ACCT","1, 1, 1, 2, 1, 2, 1, 3, 2, 1, 3","Find the number of professors with a PhD degree in each department Show bar chart, and I want to sort x-axis in desc order."
"SELECT Headquarter , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Manufacturer) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Taiwan', 'Beijing', 'Tokyo']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Manufacturer),"Paris, Los Angeles, Austin, Taiwan, Beijing, Tokyo","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the headquarter , and group by attribute headquarter by a bar chart, and rank Y-axis from high to low order."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"female, male","25.5, 40","Give me a histogram for how old is each gender, on average?, rank in asc by the x-axis."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 17000, 7920, 12000, 5760, 13000, 6000, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 17000, 7920, 12000, 5760, 13000, 6000, 10000, 2780, 11000, 12200, 8350, 3215, 2785, 7280","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and display in ascending by the X."
"SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.946, 0.8240000000000001, 0.706, 0.6","Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , sort Y in descending order."
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Batista, Team Orton","4, 2","How many eliminations did each team have Visualize by bar chart, and I want to display in descending by the Y-axis."
"SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY PROF_OFFICE",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'PROF_OFFICE', 'y_name': 'COUNT(PROF_OFFICE)', 'x_data': [['AAK 160', 'AAK 194', 'AAK 201', 'AAK 230', 'AAK 297', 'BBG 185', 'BBG 208', 'DRE 102', 'DRE 156', 'DRE 208', 'KLR 126', 'KLR 203E', 'KLR 211', 'KLR 229D', 'KLR 244', 'KLR 284', 'KLR 300', 'KLR 333', 'KLR 409B']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY PROF_OFFICE'}",bar,PROF_OFFICE,COUNT(PROF_OFFICE),"AAK 160, AAK 194, AAK 201, AAK 230, AAK 297, BBG 185, BBG 208, DRE 102, DRE 156, DRE 208, KLR 126, KLR 203E, KLR 211, KLR 229D, KLR 244, KLR 284, KLR 300, KLR 333, KLR 409B","1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1",How many professors in each office? Show me a bar chart.
"SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[2, 1, 1, 3, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","2, 1, 1, 3, 1, 3","For those records from the products and each product's manufacturer, find name and the amount of name , and group by attribute name, and visualize them by a bar chart, and display x axis from high to low order."
"SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY count(*) ASC",Bar,Hard,sakila_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Music', 'Horror', 'Classics', 'Travel', 'Comedy', 'Children', 'Games', 'Sci-Fi', 'Drama', 'New', 'Action', 'Animation', 'Documentary', 'Family', 'Foreign', 'Sports']], 'y_data': [[51, 56, 57, 57, 58, 60, 61, 61, 62, 63, 64, 66, 68, 69, 73, 74]], 'classify': [], 'describe': ''}",bar,name,count(*),"Music, Horror, Classics, Travel, Comedy, Children, Games, Sci-Fi, Drama, New, Action, Animation, Documentary, Family, Foreign, Sports","51, 56, 57, 57, 58, 60, 61, 61, 62, 63, 64, 66, 68, 69, 73, 74","How many films are there in each category? List the genre name and the count with a bar chart, and list the total number in asc order please."
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY COUNT(Result) ASC",Bar,Medium,music_4,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Awarded', 'Nominated']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Awarded, Nominated","3, 6","Please give me a bar chart to show the distribution of results of all music festival, and display by the Y-axis from low to high."
"SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'student_id', 'x_data': [['Luella', 'Brandt', 'Casimir', 'Asa', 'Kailey', 'Vicente', 'Kolby', 'Karley', 'Camilla', 'Ursula']], 'y_data': [[2, 3, 4, 6, 9, 10, 11, 12, 13, 14]], 'classify': [], 'describe': ''}",bar,middle_name,student_id,"Luella, Brandt, Casimir, Asa, Kailey, Vicente, Kolby, Karley, Camilla, Ursula","2, 3, 4, 6, 9, 10, 11, 12, 13, 14",what are the student IDs and middle names of the students enrolled in at most two courses?
"SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['2018-03-24', '2018-03-25']], 'y_data': [[3, 12]], 'classify': [], 'describe': 'GROUP BY date_departed'}",bar,date_departed,COUNT(date_departed),"2018-03-24, 2018-03-25","3, 12",How many dogs departed in each day? Visualize with a bar chart that groups by departed date.
"SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['28.09.1981', '22.04.1977', '20.08.1970', '10.11.1972', '10.03.1976', '06.10.1976', '05.05.1972', '03.02.1976', '01.09.1977']], 'y_data': [[82, 88, 89, 85, 90, 83, 92, 94, 88]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"28.09.1981, 22.04.1977, 20.08.1970, 10.11.1972, 10.03.1976, 06.10.1976, 05.05.1972, 03.02.1976, 01.09.1977","82, 88, 89, 85, 90, 83, 92, 94, 88","Visualize a bar chart about the distribution of Date_of_Birth and Weight , and I want to sort from high to low by the X-axis."
"SELECT Name , Weight FROM people ORDER BY Name ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Dominique Daquin', 'Frantz Granvorka', 'Guillaume Samica', 'Hubert Henno', 'Laurent Capet', 'Loïc De Kergret', 'Philippe Barça-Cysique', 'Stéphane Antiga', 'Vincent Montméat']], 'y_data': [[85, 90, 82, 83, 92, 89, 88, 94, 88]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Dominique Daquin, Frantz Granvorka, Guillaume Samica, Hubert Henno, Laurent Capet, Loïc De Kergret, Philippe Barça-Cysique, Stéphane Antiga, Vincent Montméat","85, 90, 82, 83, 92, 89, 88, 94, 88","Show me about the distribution of Name and Weight in a bar chart, and list in ascending by the x axis."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[203, 204, 205, 192, 0, 201, 202]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","203, 204, 205, 192, 0, 201, 202","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of  hire_date and the average of employee_id bin hire_date by weekday."
"SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype ORDER BY PetType DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(pet_age)', 'x_data': [['dog', 'cat']], 'y_data': [[1.5, 3]], 'classify': [], 'describe': ''}",bar,PetType,avg(pet_age),"dog, cat","1.5, 3","What is the average age for each pet type? Show me a histogram, display PetType in descending order."
"SELECT Name , AVG(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name ORDER BY AVG(Num_Employees) DESC",Bar,Extra Hard,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Num_Employees)', 'x_data': [['Homeland Security', 'Treasury']], 'y_data': [[208000, 115897]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Num_Employees),"Homeland Security, Treasury","208000, 115897","Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, and rank from high to low by the mean num employees please."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name",Bar,Easy,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9",Display a bar chart for what are the names and the average grades for each high schooler?
"SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Cargo ship, Battle ship","5, 3","Show me the comparison of the total number of every ship type with a bar graph, list Type in desc order."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['PROJ-MGR', 'DBA']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"PROJ-MGR, DBA","7, 8","What are the different role codes for users, and how many users have each Show bar chart, and rank in desc by the bars."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 5, 4, 2, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Code),"Andy, James, John, Mary, Owen, Robert","1, 3, 5, 4, 2, 6","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart, display by the names in asc."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY count(*) DESC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Lesb. M/SF', 'Gay M/SF', 'Gay SF/F']], 'y_data': [[5, 5, 2]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Lesb. M/SF, Gay M/SF, Gay SF/F","5, 5, 2","Show all book categories and the number of books in each category with a bar chart, and order by the the total number from high to low."
"SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY SCHOOL_CODE ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(*)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[12, 10]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(*),"A&SCI, BUS","12, 10","Return a bar chart on what is the number of professors for different school?, and could you list by the bar from low to high?"
"SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor",Bar,Easy,entrepreneur,"{'chart': 'bar', 'x_name': 'Investor', 'y_name': 'COUNT(Investor)', 'x_data': [['Doug Richard', 'Duncan Bannatyne', 'Peter Jones', 'Rachel Elnaugh', 'Simon Woodroffe']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Investor'}",bar,Investor,COUNT(Investor),"Doug Richard, Duncan Bannatyne, Peter Jones, Rachel Elnaugh, Simon Woodroffe","1, 2, 1, 1, 1",How many companies each investor has invested? Show me a bar chart.
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[9885.714285714286, 3774.1935483870966, 9074.193548387097, 4880, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept, Oct","9885.714285714286, 3774.1935483870966, 9074.193548387097, 4880, 8300","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time."
"SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description ORDER BY Budget_Type_Description ASC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Description', 'y_name': 'COUNT(Budget_Type_Description)', 'x_data': [['Government', 'Organisation', 'Self founded']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': 'GROUP BY Budget_Type_Description'}",bar,Budget_Type_Description,COUNT(Budget_Type_Description),"Government, Organisation, Self founded","6, 2, 2","Show the number of documents for different budget type description in a bar chart, and sort in ascending by the names."
"SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY COUNT(first_name) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Rachelle', 'Jaclyn', 'Rolando', 'Orlando', 'Nora', 'Melisa', 'Lorenz', 'Kade', 'Johann', 'Gay', 'Emelie', 'Cindy']], 'y_data': [[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Rachelle, Jaclyn, Rolando, Orlando, Nora, Melisa, Lorenz, Kade, Johann, Gay, Emelie, Cindy","3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many dogs each owner has? Return a bar chart that groups by owner's first name, could you sort y-axis from high to low order?"
"SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) ASC",Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_HIREDATE', 'y_name': 'COUNT(EMP_HIREDATE)', 'x_data': [['July', 'June', 'Aug', 'May']], 'y_data': [[0, 0, 1, 1]], 'classify': [], 'describe': 'BIN EMP_HIREDATE BY MONTH'}",bar,EMP_HIREDATE,COUNT(EMP_HIREDATE),"July, June, Aug, May","0, 0, 1, 1","How many professors whose office is located in DRE 102 are hired in each month? Return a bar chart, list by the how many emp hiredate in asc."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[1155, 3410, 4314, 3391, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"June, July, Aug, Sept, Oct","1155, 3410, 4314, 3391, 205","For those employees who did not have any job in the past, draw a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by time."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 1, 1, 1, 1, 1, 0","Return the booking start date for the apartments that have type code ""Duplex"" and bin the year into weekday interval with a bar chart."
"SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'SALARY', 'x_data': [['515.123.5555', '515.123.8080', '515.123.8888', '515.123.8181', '011.44.1644.429263', '515.123.7777', '603.123.6666']], 'y_data': [[13000, 12000, 10000, 8300, 7000, 6500, 6000]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,SALARY,"515.123.5555, 515.123.8080, 515.123.8888, 515.123.8181, 011.44.1644.429263, 515.123.7777, 603.123.6666","13000, 12000, 10000, 8300, 7000, 6500, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the phone_number by a bar chart, and order from high to low by the Y."
"SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date ASC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'transcript_date', 'y_name': 'transcript_id', 'x_data': [['1975-05-06', '1998-11-22', '2010-12-13', '2013-06-30']], 'y_data': [[8, 15, 6, 5]], 'classify': [], 'describe': ''}",bar,transcript_date,transcript_id,"1975-05-06, 1998-11-22, 2010-12-13, 2013-06-30","8, 15, 6, 5","A bar chart about what is the date and id of the transcript with at least 2 courses listed?, show by the transcript_date in asc."
"SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Kacey', 'Lyric', 'Evangeline']], 'y_data': [[6, 4, 1]], 'classify': [], 'describe': ''}",bar,name,age,"Kacey, Lyric, Evangeline","6, 4, 1","How old is each dog that was abandoned? Show in a bar chart, order by the y-axis in descending."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['West Side Story', 'The Phantom of the Opera', 'The Book of Mormon', 'Les Misérables']], 'y_data': [[1, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"West Side Story, The Phantom of the Opera, The Book of Mormon, Les Misérables","1, 2, 4, 2","How many actors have appeared in each musical Plot them as bar chart, and rank from high to low by the x axis."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Winchester', 'Hewlett-Packard', 'Creative Labs', 'Sony', 'Fujits', 'Iomega']], 'y_data': [[30, 50, 100, 120, 130, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Winchester, Hewlett-Packard, Creative Labs, Sony, Fujits, Iomega","30, 50, 100, 120, 130, 200","For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name, and order total number from low to high order."
"SELECT state , AVG(vote_id) FROM votes GROUP BY state ORDER BY AVG(vote_id) ASC",Bar,Medium,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'AVG(vote_id)', 'x_data': [['NY', 'CA', 'NJ\n']], 'y_data': [[1.5, 3, 5]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,AVG(vote_id),"NY, CA, NJ
","1.5, 3, 5","Bar chart x axis state y axis the average of vote id, and order by the mean vote id in ascending please."
"SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country",Bar,Hard,railway,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'England', 'United States']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, England, United States","1, 1, 2",A bar chart for showing the number of the countries that have managers of age above 50 or below 46.
"SELECT County , sum(enrollment) FROM school GROUP BY county",Bar,Easy,school_finance,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'sum(enrollment)', 'x_data': [['20 Elkhart', '46 LaPorte 71 St. Joseph', '50 Marshall', '71 St. Joseph', '75 Starke']], 'y_data': [[601, 852, 1098, 984, 620]], 'classify': [], 'describe': ''}",bar,County,sum(enrollment),"20 Elkhart, 46 LaPorte 71 St. Joseph, 50 Marshall, 71 St. Joseph, 75 Starke","601, 852, 1098, 984, 620",Please give me a bar chart for the total enrollment in each county.
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",Bar,Easy,workshop_paper,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Accepted', 'Rejected']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Accepted, Rejected","2, 4",Group by the result and count them by a bar chart.
"SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY DEPT_CODE DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(crs_credit)', 'x_data': [['CIS', 'ACCT']], 'y_data': [[14, 6]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(crs_credit),"CIS, ACCT","14, 6","Return a histogram on what is the total credit does each department offer?, and I want to list X in desc order."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Hewlett-Packard', 'Creative Labs', 'Sony', 'Winchester', 'Iomega', 'Fujits']], 'y_data': [[9.333333333333334, 7.666666666666667, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Hewlett-Packard, Creative Labs, Sony, Winchester, Iomega, Fujits","9.333333333333334, 7.666666666666667, 5, 3, 3, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, and show y axis in desc order."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[2044, 16770]], 'classify': [], 'describe': 'BIN date_address_to BY MONTH'}",bar,date_address_to,SUM(monthly_rental),"Feb, Mar","2044, 16770",A bar chart shows the distribution of  date_address_to and the sum of monthly_rental bin date_address_to by time.
"SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'min(T1.duration)', 'y_name': 'min(T2.rating)', 'x_data': [['2:56', '5:23', '4:12', '3:45', '4:34', '4:30']], 'y_data': [[5, 6, 7, 8, 8, 10]], 'classify': [], 'describe': ''}",bar,min(T1.duration),min(T2.rating),"2:56, 5:23, 4:12, 3:45, 4:34, 4:30","5, 6, 7, 8, 8, 10","Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, I want to show by the Y in asc."
"SELECT Date_of_Birth , Height FROM people ORDER BY Height ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['06.10.1976', '20.08.1970', '22.04.1977', '10.03.1976', '01.09.1977', '28.09.1981', '10.11.1972', '03.02.1976', '05.05.1972']], 'y_data': [[188, 193, 194, 195, 196, 196, 197, 200, 202]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"06.10.1976, 20.08.1970, 22.04.1977, 10.03.1976, 01.09.1977, 28.09.1981, 10.11.1972, 03.02.1976, 05.05.1972","188, 193, 194, 195, 196, 196, 197, 200, 202","Return a bar chart about the distribution of Date_of_Birth and Height , and could you list by the Height in asc?"
"SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Baer', 'Fay', 'Gietz', 'Grant', 'Hartstein', 'Higgins', 'Mavris']], 'y_data': [[10000, 6000, 8300, 7000, 13000, 12000, 6500]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Baer, Fay, Gietz, Grant, Hartstein, Higgins, Mavris","10000, 6000, 8300, 7000, 13000, 12000, 6500","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart, list bar in ascending order please."
"SELECT year , count(*) FROM matches ORDER BY count(*) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2014', '2015', '2013', '2017', '2016']], 'y_data': [[0, 0, 12, 108, 158]], 'classify': [], 'describe': 'BIN year BY YEAR'}",bar,year,count(*),"2014, 2015, 2013, 2017, 2016","0, 0, 12, 108, 158","Sum the number of matches that happened each year Plot them as a bar chart, order from low to high by the y axis."
"SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName ASC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pName', 'y_name': 'HS', 'x_data': [['Andrew', 'Charles', 'Eddie']], 'y_data': [[1200, 300, 600]], 'classify': [], 'describe': ''}",bar,pName,HS,"Andrew, Charles, Eddie","1200, 300, 600","What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and list in ascending by the names."
"SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[1, 5, 6, 3, 4, 2]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Manufacturer),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","1, 5, 6, 3, 4, 2","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, display bar in desc order."
"SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'AVG(salary)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'Languages', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[48716.5925, 79070.08, 77098.198, 61287.25, 98133.47, 96346.5675, 74162.73999999999, 72089.04999999999, 105311.38, 99382.59, 57421.85666666668, 84097.4375, 79813.02, 114576.9, 100053.07333333332, 61143.05, 67795.44166666668]], 'classify': [], 'describe': ''}",bar,dept_name,AVG(salary),"Accounting, Astronomy, Athletics, Biology, Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, Languages, Marketing, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","48716.5925, 79070.08, 77098.198, 61287.25, 98133.47, 96346.5675, 74162.73999999999, 72089.04999999999, 105311.38, 99382.59, 57421.85666666668, 84097.4375, 79813.02, 114576.9, 100053.07333333332, 61143.05, 67795.44166666668",What are the names and average salaries for departments with average salary higher than 42000. Plot them as bar chart.
"SELECT Category , count(*) FROM book_club GROUP BY category",Bar,Easy,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5",Visualize a bar chart for how many books fall into each category?
"SELECT skill_description , COUNT(skill_description) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['Electrical', 'Mechanical', 'TV, Video']], 'y_data': [[9, 6, 5]], 'classify': [], 'describe': 'GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"Electrical, Mechanical, TV, Video","9, 6, 5",Give me a pie chart showing the number of engineers for different skill description.
"SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'COUNT(Product_Name)', 'x_data': [['Business Policy', 'Business Policy B', 'Conference Equipments', 'Dinning', 'Men suits', 'Special Dinning', 'TV Equipments', 'Trading Policy', 'Trading Policy B']], 'y_data': [[1, 1, 1, 3, 2, 2, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Product_Name'}",bar,Product_Name,COUNT(Product_Name),"Business Policy, Business Policy B, Conference Equipments, Dinning, Men suits, Special Dinning, TV Equipments, Trading Policy, Trading Policy B","1, 1, 1, 3, 2, 2, 3, 1, 1","Give me a bar graph showing the total number of different product names, I want to rank x axis in ascending order."
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer']], 'y_data': [[45, 35]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer","45, 35",what is the average age for a male in each job?
"SELECT T2.name , COUNT(T2.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T2.name",Bar,Medium,company_office,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Corporativo BBVA Bancomer', 'LIU East', 'Punto Chapultepec', 'Reforma 432', 'Reforma 90', 'Residencial Vidalta Torre Altaire 2', 'Residencial Vidalta Torre Altaire 3', 'Torre KOI', 'Torre Mitikah', 'Torre New York Life', 'Torre Reforma']], 'y_data': [[2, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Corporativo BBVA Bancomer, LIU East, Punto Chapultepec, Reforma 432, Reforma 90, Residencial Vidalta Torre Altaire 2, Residencial Vidalta Torre Altaire 3, Torre KOI, Torre Mitikah, Torre New York Life, Torre Reforma","2, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1",Return a bar chart showing the number of companies in each building.
"SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description",Bar,Easy,aircraft,"{'chart': 'bar', 'x_name': 'Description', 'y_name': 'COUNT(Description)', 'x_data': [['Heavy-lift helicopter', 'Light utility helicopter', 'Tandem rotor helicopter', 'Turboshaft utility helicopter']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Description'}",bar,Description,COUNT(Description),"Heavy-lift helicopter, Light utility helicopter, Tandem rotor helicopter, Turboshaft utility helicopter","2, 1, 1, 1","What are the descriptions for the aircrafts, and count them by a bar chart"
"SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['01.09.1977', '03.02.1976', '05.05.1972', '06.10.1976', '10.03.1976', '10.11.1972', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[88, 94, 92, 83, 90, 85, 89, 88, 82]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"01.09.1977, 03.02.1976, 05.05.1972, 06.10.1976, 10.03.1976, 10.11.1972, 20.08.1970, 22.04.1977, 28.09.1981","88, 94, 92, 83, 90, 85, 89, 88, 82","Give me the comparison about Weight over the Date_of_Birth , and list by the bar in ascending."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ORDER BY COUNT(CRS_DESCRIPTION) ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Database Design and Implementation', 'Accounting II', 'Intro. to Statistics', 'Statistical Applications', 'Accounting I', 'Intro. to Microcomputing']], 'y_data': [[1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Database Design and Implementation, Accounting II, Intro. to Statistics, Statistical Applications, Accounting I, Intro. to Microcomputing","1, 2, 2, 2, 3, 3","How many courses for each course description? Show me a bar chart, and rank by the y axis in asc."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Sept', 'July', 'June', 'Aug']], 'y_data': [[53900, 59900, 73400, 110100]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Sept, July, June, Aug","53900, 59900, 73400, 110100","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and show by the total number in asc."
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code",Bar,Easy,driving_school,"{'chart': 'bar', 'x_name': 'customer_status_code', 'y_name': 'count(*)', 'x_data': [['Bad Customer', 'Good Customer']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,customer_status_code,count(*),"Bad Customer, Good Customer","9, 6","For each customer status code, how many customers are classified that way. Visualize by bar chart."
"SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) ASC",Bar,Hard,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'count(*)', 'x_data': [['data structure', 'English', 'French', 'statistics']], 'y_data': [[1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,course_name,count(*),"data structure, English, French, statistics","1, 2, 2, 4","How many registed students do each course have? List course name and the number of their registered students, and I want to show from low to high by the y-axis."
"SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['IPhone 5s', 'IPhone 6s', 'IPhone 7', 'IPhone X']], 'y_data': [[2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"IPhone 5s, IPhone 6s, IPhone 7, IPhone X","2, 1, 1, 2",I want to compare the number of the names of phones by a bar chart.
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name ORDER BY COUNT(*) ASC",Bar,Hard,match_season,"{'chart': 'bar', 'x_name': 'Country_name', 'y_name': 'COUNT(*)', 'x_data': [['Indonesia', 'Isle of Man', 'Ireland', 'United States']], 'y_data': [[1, 2, 4, 9]], 'classify': [], 'describe': ''}",bar,Country_name,COUNT(*),"Indonesia, Isle of Man, Ireland, United States","1, 2, 4, 9","Show me a bar chart for how many players are from each country?, and display Y-axis from low to high order."
"SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(T1.crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[15, 27]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(T1.crs_credit),"ACCT, CIS","15, 27","Find the total credits of all classes offered by each department Visualize by bar chart, and display in asc by the y axis."
"SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker",Bar,Easy,car_1,"{'chart': 'bar', 'x_name': 'FullName', 'y_name': 'Id', 'x_data': [['General Motors', 'Chrysler']], 'y_data': [[4, 6]], 'classify': [], 'describe': ''}",bar,FullName,Id,"General Motors, Chrysler","4, 6",Draw a bar chart for what are the names and ids of all makers with more than 3 models?
"SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",Bar,Easy,wedding,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Graeme McDowell', 'Adam Scott']], 'y_data': [[34, 26]], 'classify': [], 'describe': ''}",bar,Name,Age,"Graeme McDowell, Adam Scott","34, 26",A bar chart about the name and age for all male people who don't have a wedding. 
"SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Winchester', 'Fujits', 'Iomega', 'Hewlett-Packard', 'Creative Labs', 'Sony']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Manufacturer),"Winchester, Fujits, Iomega, Hewlett-Packard, Creative Labs, Sony","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, find name and the average of manufacturer , and group by attribute name, and visualize them by a bar chart, and I want to order in desc by the y axis please."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 101, 0, 100, 108, 101, 101, 102.8, 100, 201, 101, 114, 100, 100, 147, 122, 122, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 101, 0, 100, 108, 101, 101, 102.8, 100, 201, 101, 114, 100, 100, 147, 122, 122, 100","For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and rank from low to high by the x-axis."
"SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['International Practicum', 'Game Programming', 'World History', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'Immunology', 'Groups and Rings', 'Graph Theory', 'Fiction Writing', 'Embedded Systems', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"International Practicum, Game Programming, World History, Rock and Roll, Ponzi Schemes, Operating Systems, Immunology, Groups and Rings, Graph Theory, Fiction Writing, Embedded Systems, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Find the number of courses that have more than one prerequisites for each title with a bar chart, could you display Y-axis in descending order?"
"SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION",Bar,Easy,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(*)', 'x_data': [['Bell Centre', 'Madison Square Garden', 'Scotiabank Place', 'TD Garden', 'Verizon Center']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Location,COUNT(*),"Bell Centre, Madison Square Garden, Scotiabank Place, TD Garden, Verizon Center","1, 1, 1, 1, 2",Show different locations and the number of performances at each location. Visualize by bar chart.
"SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Visit_Date', 'y_name': 'COUNT(Visit_Date)', 'x_data': [['Mon', 'Tue', 'Thur', 'Sun', 'Wed', 'Sat', 'Fri']], 'y_data': [[6, 5, 3, 3, 2, 1, 0]], 'classify': [], 'describe': 'BIN Visit_Date BY WEEKDAY'}",bar,Visit_Date,COUNT(Visit_Date),"Mon, Tue, Thur, Sun, Wed, Sat, Fri","6, 5, 3, 3, 2, 1, 0","What are the distinct visit dates, and count them by a bar chart, list in descending by the y-axis."
"SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY COUNT(date_to) DESC",Bar,Medium,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'date_to', 'y_name': 'COUNT(date_to)', 'x_data': [['Thur', 'Wed', 'Tue', 'Mon', 'Fri', 'Sun', 'Sat']], 'y_data': [[3, 2, 2, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_to BY WEEKDAY'}",bar,date_to,COUNT(date_to),"Thur, Wed, Tue, Mon, Fri, Sun, Sat","3, 2, 2, 1, 1, 0, 0","When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart, and I want to show y-axis in descending order please."
"SELECT transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY transcript_date DESC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'transcript_date', 'y_name': 'transcript_id', 'x_data': [['2013-06-30', '2010-12-13', '1998-11-22', '1975-05-06']], 'y_data': [[5, 6, 15, 8]], 'classify': [], 'describe': ''}",bar,transcript_date,transcript_id,"2013-06-30, 2010-12-13, 1998-11-22, 1975-05-06","5, 6, 15, 8","Show the date and id of the transcript with at least 2 course results Visualize by bar chart, and could you rank by the x-axis in descending?"
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Hermann', 'Kimberely', 'Michael', 'Pat', 'Shelley', 'Susan', 'William']], 'y_data': [[70, 0, 20, 20, 110, 40, 110]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"Hermann, Kimberely, Michael, Pat, Shelley, Susan, William","70, 0, 20, 20, 110, 40, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and department_id in a bar chart, and list X from low to high order."
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer']], 'y_data': [[45, 35]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer","45, 35","What is the average age for a male in each job Visualize by bar chart, and rank by the y-axis in desc."
"SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY friend ASC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'friend', 'y_name': 'age', 'x_data': [['Bob', 'Zach']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,friend,age,"Bob, Zach","35, 45","Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and order from low to high by the x axis."
"SELECT All_Neutral , School_ID FROM basketball_match ORDER BY School_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Neutral,School_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 4, 5","Draw a bar chart about the distribution of All_Neutral and School_ID , and sort Y in asc order."
"SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) DESC",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25]], 'classify': [], 'describe': ''}",bar,job,min(age),"doctor, engineer, student","45, 35, 25","How old is the youngest person for each job Visualize by bar chart, and I want to rank by the minimal age from high to low."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[15, 14, 15, 14, 13, 14, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","15, 14, 15, 14, 13, 14, 15","For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the  hire_date bin hire_date by weekday by a bar chart."
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–3', '15–1', '14–2']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,COUNT(All_Home),"14–3, 15–1, 14–2","1, 1, 2","Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, and could you order by the y-axis from low to high?"
"SELECT login_name , gender_mf FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'login_name', 'y_name': 'gender_mf', 'x_data': [['al75', 'jmckenzie', 'dschaefer', 'clementina29', 'adam.rippin', 'fiona77', 'antonetta19', 'wlehner', 'medhurst.alvah', 'marty.bergnaum', 'qking', 'heidenreich.ara', 'ekshlerin', 'nellie.mosciski', 'nyundt']], 'y_data': [[1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]], 'classify': [], 'describe': ''}",bar,login_name,gender_mf,"al75, jmckenzie, dschaefer, clementina29, adam.rippin, fiona77, antonetta19, wlehner, medhurst.alvah, marty.bergnaum, qking, heidenreich.ara, ekshlerin, nellie.mosciski, nyundt","1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1","Find  login_name and  gender_mf , and visualize them by a bar chart."
"SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) ASC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Sun', 'Wed', 'Fri', 'Mon', 'Sat', 'Tue', 'Thur']], 'y_data': [[1, 1, 2, 2, 2, 2, 3]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Sun, Wed, Fri, Mon, Sat, Tue, Thur","1, 1, 2, 2, 2, 2, 3","What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?, sort by the y-axis in ascending."
"SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party DESC",Bar,Medium,debate,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Republican', 'Independent Democrat', 'Democratic', 'Anti-Lecompton Democrat']], 'y_data': [[4, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Party,COUNT(*),"Republican, Independent Democrat, Democratic, Anti-Lecompton Democrat","4, 1, 3, 2","Bar graph to show the total number from different party, rank by the x-axis in descending."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['DBA', 'PROJ-MGR']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"DBA, PROJ-MGR","8, 7","What are the different role codes for users, and how many users have each Show bar chart, order by the the total number from high to low."
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY count(*) DESC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['europe', 'asia', 'america']], 'y_data': [[11, 7, 4]], 'classify': [], 'describe': ''}",bar,Continent,count(*),"europe, asia, america","11, 7, 4","A bar chart about what is the name of each continent and how many car makers are there in each one?, and show from high to low by the y-axis please."
"SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2016-01-01', '2017-01-01']], 'y_data': [[2, 20]], 'classify': [], 'describe': 'GROUP BY year'}",bar,year,COUNT(year),"2016-01-01, 2017-01-01","2, 20",Show me a bar chart about the number of races held in each year after 2014.
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Defender', 'Forward', 'Midfielder']], 'y_data': [[7, 3, 6]], 'classify': [], 'describe': ''}",bar,Position,COUNT(*),"Defender, Forward, Midfielder","7, 3, 6","How many players played each position Plot them as bar chart, rank by the names in ascending."
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['2015', '2016']], 'y_data': [[9, 4]], 'classify': [], 'describe': 'BIN date_moved_in BY YEAR'}",bar,date_moved_in,COUNT(date_moved_in),"2015, 2016","9, 4",What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval.
"SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[5, 3]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Cargo ship, Battle ship","5, 3","Bar chart x axis type y axis the total number, and show names from high to low order please."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Code)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[6, 2, 4, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Code),"Robert, Owen, Mary, John, James, Andy","6, 2, 4, 5, 3, 1","For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the average of code , and group by attribute founder, list by the names in desc."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[14, 15, 16, 16, 15, 15, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","14, 15, 16, 16, 15, 15, 15","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart."
"SELECT ACC_Road , SUM(Team_ID) FROM basketball_match GROUP BY ACC_Road",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[7, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(Team_ID),"3–5, 6–2, 8–0","7, 2, 1",Give me a bar chart for total number of team id of each acc road
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_ACCOUNT', 'AC_MGR']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_ACCOUNT, AC_MGR","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and department_id in a bar chart, list in ascending by the DEPARTMENT_ID please."
"SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY dorm_name DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'count(*)', 'x_data': [['Smith Hall', 'Fawlty Towers', 'Dorm-plex 2000', 'Anonymous Donor Hall']], 'y_data': [[2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,dorm_name,count(*),"Smith Hall, Fawlty Towers, Dorm-plex 2000, Anonymous Donor Hall","2, 2, 2, 1","Give me a histogram for how many students are older than 20 in each dorm?, display x axis from high to low order."
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality ORDER BY COUNT(*) ASC",Bar,Medium,party_host,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Argentina', 'Hungary', 'United States']], 'y_data': [[1, 1, 8]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Argentina, Hungary, United States","1, 1, 8","A bar chart about how many hosts does each nationality have? List the nationality and the count, and display by the Y in ascending."
"SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",Bar,Medium,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['One', 'Three', 'Four', 'Five']], 'y_data': [[2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"One, Three, Four, Five","2, 1, 1, 2",How many regions were affected by each storm. Visualize by bar chart.
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30","For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name by a bar chart, and could you display x axis in ascending order?"
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"F, T","9, 19","Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, could you list by the total number in asc?"
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY COUNT(facility_code) DESC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Gym', 'Cable TV']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Gym, Cable TV","2, 1","What are the number of the facility codes of the apartments with more than four bedrooms?, and list by the y axis from high to low."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[178, 204, 202, 201, 203, 205, 206]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","178, 204, 202, 201, 203, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , list bars from high to low order."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) ASC",Bar,Extra Hard,sakila_1,"{'chart': 'bar', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['May', 'June', 'Aug', 'July']], 'y_data': [[5, 15, 47, 47]], 'classify': [], 'describe': 'BIN payment_date BY MONTH'}",bar,payment_date,COUNT(payment_date),"May, June, Aug, July","5, 15, 47, 47","Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, and list total number from low to high order."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Oct', 'June', 'July', 'Sept', 'Aug']], 'y_data': [[110, 1170, 1430, 1470, 2480]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Oct, June, July, Sept, Aug","110, 1170, 1430, 1470, 2480","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, order from low to high by the Y."
"SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY enr ASC",Bar,Hard,soccer_2,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'enr', 'x_data': [['AZ', 'FL']], 'y_data': [[12000, 19000]], 'classify': [], 'describe': ''}",bar,state,enr,"AZ, FL","12000, 19000","A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, order enr in asc order."
"SELECT Date , Vote_Percent FROM election ORDER BY Date DESC",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['October 1942', 'July 1942', '1953', '1949', '1946']], 'y_data': [[18.5, 16.2, 16, 19.5, 19.5]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"October 1942, July 1942, 1953, 1949, 1946","18.5, 16.2, 16, 19.5, 19.5","List the dates and vote percents of elections in a bar chart, and I want to rank by the x-axis from high to low."
"SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY PROF_OFFICE ORDER BY COUNT(PROF_OFFICE) ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'PROF_OFFICE', 'y_name': 'COUNT(PROF_OFFICE)', 'x_data': [['AAK 160', 'AAK 194', 'AAK 201', 'AAK 230', 'AAK 297', 'BBG 185', 'BBG 208', 'DRE 208', 'KLR 126', 'KLR 203E', 'KLR 211', 'KLR 229D', 'KLR 244', 'KLR 300', 'KLR 333', 'KLR 409B', 'DRE 102', 'DRE 156', 'KLR 284']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY PROF_OFFICE'}",bar,PROF_OFFICE,COUNT(PROF_OFFICE),"AAK 160, AAK 194, AAK 201, AAK 230, AAK 297, BBG 185, BBG 208, DRE 208, KLR 126, KLR 203E, KLR 211, KLR 229D, KLR 244, KLR 300, KLR 333, KLR 409B, DRE 102, DRE 156, KLR 284","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","How many professors in each office? Show me a bar chart, I want to display by the y-axis in ascending."
"SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC",Bar,Medium,cre_Doc_Control_Systems,"{'chart': 'bar', 'x_name': 'receipt_date', 'y_name': 'COUNT(receipt_date)', 'x_data': [['Mon', 'Fri', 'Wed', 'Sun', 'Sat', 'Tue', 'Thur']], 'y_data': [[4, 3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'BIN receipt_date BY WEEKDAY'}",bar,receipt_date,COUNT(receipt_date),"Mon, Fri, Wed, Sun, Sat, Tue, Thur","4, 3, 2, 2, 2, 1, 1","Bar chart of the frequency from each receipt date, bin date by weekday, order y in desc order."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['June', 'July', 'Sept', 'Aug', 'Oct']], 'y_data': [[96.25, 117.58620689655173, 125.5925925925926, 139.16129032258064, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"June, July, Sept, Aug, Oct","96.25, 117.58620689655173, 125.5925925925926, 139.16129032258064, 205","For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and could you sort total number from low to high order?"
"SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Made', 'y_name': 'COUNT(Date_Claim_Made)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 4, 0, 0]], 'classify': [], 'describe': 'BIN Date_Claim_Made BY WEEKDAY'}",bar,Date_Claim_Made,COUNT(Date_Claim_Made),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 4, 0, 0","Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart."
"SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Years_Played', 'y_name': 'COUNT(Years_Played)', 'x_data': [['8 (2003–2005, 2007–2011)', '4 (2003–2004, 2010–2011)', '3 (2009–2011)', '3 (2005, 2007–2008)', '2 (2010–2011)', '2 (2010-2011)', '2 (1988, 1990)', '1 (2011)']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Years_Played'}",bar,Years_Played,COUNT(Years_Played),"8 (2003–2005, 2007–2011), 4 (2003–2004, 2010–2011), 3 (2009–2011), 3 (2005, 2007–2008), 2 (2010–2011), 2 (2010-2011), 2 (1988, 1990), 1 (2011)","1, 1, 1, 1, 2, 1, 1, 2","Group and count the years played to draw a bar chart, could you sort X in descending order?"
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1, 5]], 'classify': [], 'describe': 'BIN date_became_customer BY MONTH'}",bar,date_became_customer,COUNT(date_became_customer),"Feb, Mar","1, 5","Find the number of the ""date became customers"" of the customers whose ID is between 10 and 20, rank y axis in ascending order."
"SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs",Bar,Easy,product_catalog,"{'chart': 'bar', 'x_name': 'date_of_latest_revision', 'y_name': 'COUNT(date_of_latest_revision)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_latest_revision BY WEEKDAY'}",bar,date_of_latest_revision,COUNT(date_of_latest_revision),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 0, 0, 0",Bar chart x axis date of latest revision y axis the number of date of latest revision
"SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY count(*) ASC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'count(*)', 'x_data': [['Jesus Salvador Treviño', 'Bill Schreiner']], 'y_data': [[1, 4]], 'classify': [], 'describe': ''}",bar,Directed_by,count(*),"Jesus Salvador Treviño, Bill Schreiner","1, 4","Plot the total number by grouped by directed by as a bar graph, I want to show total number in ascending order."
"SELECT PetType , max(pet_age) FROM pets GROUP BY PetType",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,PetType,max(pet_age),"cat, dog","3, 2",Show maximal pet age from each pettype
"SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY SUM(Capacity) ASC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Openning_year', 'y_name': 'SUM(Capacity)', 'x_data': [['2009-01-01', '2013-01-01', '2015-01-01', '2012-01-01', '2011-01-01', '2010-01-01']], 'y_data': [[305, 330, 364, 368, 1336, 1633]], 'classify': [], 'describe': 'GROUP BY Openning_year'}",bar,Openning_year,SUM(Capacity),"2009-01-01, 2013-01-01, 2015-01-01, 2012-01-01, 2011-01-01, 2010-01-01","305, 330, 364, 368, 1336, 1633","Give me a bar chart for total number of capacity of each openning year, and show by the Y-axis in ascending."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[8700, 3382.7586206896553, 9074.193548387097, 4459.259259259259, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept, Oct","8700, 3382.7586206896553, 9074.193548387097, 4459.259259259259, 8300","For those employees who did not have any job in the past, visualize a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time."
"SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option ORDER BY Package_Option DESC",Bar,Hard,tvshow,"{'chart': 'bar', 'x_name': 'Package_Option', 'y_name': 'COUNT(Package_Option)', 'x_data': [['no ( FTV )', 'Sky Famiglia + Sky HD', 'Sky Famiglia']], 'y_data': [[2, 1, 8]], 'classify': [], 'describe': 'GROUP BY Package_Option'}",bar,Package_Option,COUNT(Package_Option),"no ( FTV ), Sky Famiglia + Sky HD, Sky Famiglia","2, 1, 8","A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order."
"SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY max(stu_gpa) ASC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'max(stu_gpa)', 'x_data': [['ENGL', 'BIOL', 'ACCT', 'CIS', 'EDU']], 'y_data': [[2.11, 2.84, 3.15, 3.27, 3.87]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,max(stu_gpa),"ENGL, BIOL, ACCT, CIS, EDU","2.11, 2.84, 3.15, 3.27, 3.87","What is the highest student GPA for every department? Return a bar chart, sort by the maximal stu gpa from low to high."
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['food', 'animal', 'environmental']], 'y_data': [[7, 4, 3]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"food, animal, environmental","7, 4, 3","What are the allergy types and how many allergies correspond to each one, and could you sort in desc by the Y?"
"SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'subject_name', 'y_name': 'COUNT(*)', 'x_data': [['Arts', 'Language', 'Computer Science']], 'y_data': [[4, 5, 6]], 'classify': [], 'describe': ''}",bar,subject_name,COUNT(*),"Arts, Language, Computer Science","4, 5, 6","Find the number of courses for each subject in a bar chart, and could you show in asc by the y axis?"
"SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code ORDER BY T1.Budget_Type_Code ASC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'COUNT(Budget_Type_Code)', 'x_data': [['GV', 'ORG', 'SF']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': 'GROUP BY Budget_Type_Code'}",bar,Budget_Type_Code,COUNT(Budget_Type_Code),"GV, ORG, SF","6, 2, 2","Show the number of documents for different budget type code in a bar chart, I want to show bars in asc order."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[7.666666666666667, 3, 9.333333333333334, 3, 1, 5]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","7.666666666666667, 3, 9.333333333333334, 3, 1, 5","For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, order by the X in asc."
"SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['Sat', 'Wed', 'Sun', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[233375, 172309, 155654, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY WEEKDAY'}",bar,Date_Payment_Made,AVG(Amount_Payment),"Sat, Wed, Sun, Tue, Thur, Mon, Fri","233375, 172309, 155654, 0, 0, 0, 0","For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis, rank y-axis in descending order."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Name DESC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['presidents hall', 'history gallery', 'fun shops', 'flying elephant', 'UK gallery']], 'y_data': [[8429, 6653, 9360, 5076, 2701]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"presidents hall, history gallery, fun shops, flying elephant, UK gallery","8429, 6653, 9360, 5076, 2701","Give me a histogram for what are the names and ids of the tourist attractions that are visited at most once?, rank by the bars in desc."
"SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'other_details', 'y_name': 'AVG(monthly_rental)', 'x_data': [['apartment', 'house']], 'y_data': [[1049.2857142857142, 882.2307692307693]], 'classify': [], 'describe': 'GROUP BY other_details'}",bar,other_details,AVG(monthly_rental),"apartment, house","1049.2857142857142, 882.2307692307693","Visualize a bar chart about the distribution of  other_details and the average of monthly_rental , and group by attribute other_details."
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","Give the maximum product price for each product type in a bar chart, sort by the y axis from low to high."
"SELECT apt_number , room_count FROM Apartments ORDER BY room_count ASC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'room_count', 'x_data': [['Apt. 477', 'Apt. 794', 'Apt. 585', 'Apt. 859', 'Suite 088', 'Apt. 908', 'Suite 645', 'Apt. 837', 'Apt. 940', 'Suite 634', 'Suite 749', 'Apt. 187', 'Apt. 411', 'Suite 307', 'Suite 693']], 'y_data': [[3, 3, 5, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9]], 'classify': [], 'describe': ''}",bar,apt_number,room_count,"Apt. 477, Apt. 794, Apt. 585, Apt. 859, Suite 088, Apt. 908, Suite 645, Apt. 837, Apt. 940, Suite 634, Suite 749, Apt. 187, Apt. 411, Suite 307, Suite 693","3, 3, 5, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9","Return the apartment number and the number of rooms for each apartment, and I want to sort in asc by the y axis please."
"SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 6, 1, 0, 4, 1]], 'classify': [], 'describe': 'BIN Order_Date BY WEEKDAY'}",bar,Order_Date,COUNT(Order_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 6, 1, 0, 4, 1","Find the order dates of the orders with price above 1000, and count them by a bar chart"
"SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6","Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and show by the y-axis in descending."
"SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'max(revenue)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Tokyo', 'Taiwan', 'Beijing']], 'y_data': [[30, 50, 100, 120, 130, 200]], 'classify': [], 'describe': ''}",bar,Headquarter,max(revenue),"Paris, Los Angeles, Austin, Tokyo, Taiwan, Beijing","30, 50, 100, 120, 130, 200","Please tell the revenues of the companies with the highest revenues in each headquarter city, and sort by the y-axis in asc."
"SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'Age', 'x_data': [['Tracy', 'Linda']], 'y_data': [[19, 18]], 'classify': [], 'describe': ''}",bar,Fname,Age,"Tracy, Linda","19, 18","Draw a bar chart for what are the different first names and ages of the students who do have pets?, and order by the Y in desc."
"SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code ORDER BY Headquarter ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'count(DISTINCT T1.name)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[3, 1, 3, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarter,count(DISTINCT T1.name),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","3, 1, 3, 2, 1, 1","Draw a bar chart for how many different products are produced in each headquarter city?, and order X-axis in asc order."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, and rank Name from low to high order."
"SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.country ORDER BY T2.rating DESC LIMIT 3",Bar,Extra Hard,music_1,"{'chart': 'bar', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['India', 'UK']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY country'}",bar,country,COUNT(country),"India, UK","2, 1",How many the artists who produced the top three highly rated songs of each country? Show the result using a bar chart.
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 12000, 39600, 34000, 24000, 4400, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 12000, 39600, 34000, 24000, 4400, 12000, 8300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, show X-axis in desc order."
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Socialistic Republic', 'Constitutional Monarchy, Federation', 'Special Administrative Region of China', 'Federation', 'Socialistic State', 'Commonwealth of the US', 'Monarchy (Sultanate)', 'Emirate Federation', 'Constitutional Monarchy (Emirate)', 'Overseas Department of France', 'Monarchy (Emirate)', 'Nonmetropolitan Territory of France', 'US Territory', 'Nonmetropolitan Territory of The Netherlands', 'Dependent Territory of the UK', 'Part of Denmark', 'Parliamentary Coprincipality']], 'y_data': [[115072000, 82516000, 7255000, 7160400, 5605000, 3947000, 2870000, 2441000, 1972000, 1731000, 617000, 464000, 329000, 320000, 193050, 99000, 78000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Socialistic Republic, Constitutional Monarchy, Federation, Special Administrative Region of China, Federation, Socialistic State, Commonwealth of the US, Monarchy (Sultanate), Emirate Federation, Constitutional Monarchy (Emirate), Overseas Department of France, Monarchy (Emirate), Nonmetropolitan Territory of France, US Territory, Nonmetropolitan Territory of The Netherlands, Dependent Territory of the UK, Part of Denmark, Parliamentary Coprincipality","115072000, 82516000, 7255000, 7160400, 5605000, 3947000, 2870000, 2441000, 1972000, 1731000, 617000, 464000, 329000, 320000, 193050, 99000, 78000","Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, rank from high to low by the sum population."
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 1, 1, 2, 4, 5.5, 8]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 1, 1, 2, 4, 5.5, 8","Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, sort by the total number in ascending."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'June', 'July', 'Sept', 'Aug']], 'y_data': [[205, 1355, 3610, 3640, 4314]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, June, July, Sept, Aug","205, 1355, 3610, 3640, 4314","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, and could you list by the total number in asc?"
"SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent DESC",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['1949', '1946', 'October 1942', 'July 1942', '1953']], 'y_data': [[19.5, 19.5, 18.5, 16.2, 16]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"1949, 1946, October 1942, July 1942, 1953","19.5, 19.5, 18.5, 16.2, 16","Show vote_percent from each date, could you show y axis from high to low order please?"
"SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryId ASC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'CountryName', 'y_name': 'CountryId', 'x_data': [['usa', 'germany', 'france', 'japan', 'italy', 'sweden', 'uk', 'korea']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,CountryName,CountryId,"usa, germany, france, japan, italy, sweden, uk, korea","1, 2, 3, 4, 5, 6, 7, 8","what are the countries having at least one car maker? List name and id, could you rank total number from low to high order?"
"SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'AVG(salary)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'Languages', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[48716.25, 79070, 77097.6, 61287, 98133, 96345.75, 74162.25, 72088.5, 105311, 99382, 57421.333333333336, 84097, 79812.5, 114576, 100052.66666666667, 61142.5, 67795]], 'classify': [], 'describe': 'GROUP BY dept_name'}",bar,dept_name,AVG(salary),"Accounting, Astronomy, Athletics, Biology, Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, Languages, Marketing, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","48716.25, 79070, 77097.6, 61287, 98133, 96345.75, 74162.25, 72088.5, 105311, 99382, 57421.333333333336, 84097, 79812.5, 114576, 100052.66666666667, 61142.5, 67795","Return a bar chart about the distribution of  dept_name and the average of salary , and group by attribute dept_name."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[7.666666666666667, 3, 9.333333333333334, 3, 1, 5]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","7.666666666666667, 3, 9.333333333333334, 3, 1, 5","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and show names in asc order."
"SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[2, 4, 3, 6, 5, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Manufacturer),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","2, 4, 3, 6, 5, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  headquarter and the average of manufacturer , and group by attribute headquarter."
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 2, 1.5, 1, 1, 1.5, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Tiffany, Logan, Kyle, Kris, Jordan, Jessica, Haley, Gabriel, Cassandra, Austin, Andrew, Alexis","1, 1, 1, 2, 1.5, 1, 1, 1.5, 1, 1, 3, 2","Display a bar chart for what are the names of the high schoolers and how many friends does each have?, display by the bars in desc."
"SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'SUM(STU_GPA)', 'x_data': [['John', 'Juliette', 'William']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,SUM(STU_GPA),"John, Juliette, William","4, 2, 2",Find the first name and gpa of the students whose gpa is lower than the average gpa of all students. Plot them as bar chart.
"SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'MANAGER_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '515.123.7777', '515.123.8080', '515.123.8181', '515.123.8888', '603.123.6666']], 'y_data': [[149, 100, 101, 101, 205, 101, 201]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,MANAGER_ID,"011.44.1644.429263, 515.123.5555, 515.123.7777, 515.123.8080, 515.123.8181, 515.123.8888, 603.123.6666","149, 100, 101, 101, 205, 101, 201","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and manager_id , and order by the bars in ascending."
"SELECT city_code , count(*) FROM student GROUP BY city_code",Bar,Easy,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['BAL', 'HKG', 'NYC', 'PHL', 'PIT', 'WAS', 'YYZ']], 'y_data': [[4, 3, 3, 3, 4, 3, 2]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"BAL, HKG, NYC, PHL, PIT, WAS, YYZ","4, 3, 3, 3, 4, 3, 2",Find the number of students for the cities where have more than one student. 
"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship ORDER BY max(Net_Worth_Millions) DESC",Bar,Easy,singer,"{'chart': 'bar', 'x_name': 'Citizenship', 'y_name': 'max(Net_Worth_Millions)', 'x_data': [['France', 'United States', 'Chile', 'Australia', 'Germany']], 'y_data': [[30, 28.8, 17.4, 17, 14.3]], 'classify': [], 'describe': ''}",bar,Citizenship,max(Net_Worth_Millions),"France, United States, Chile, Australia, Germany","30, 28.8, 17.4, 17, 14.3","Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart, and could you sort by the total number from high to low?"
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name",Bar,Medium,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Anne Walker', 'Gustaaf Deloor', 'Kearsley Brown', 'Lucy Wong', 'Vicente Carretero']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Anne Walker, Gustaaf Deloor, Kearsley Brown, Lucy Wong, Vicente Carretero","2, 1, 1, 1, 1",Show the number of courses each teacher teaches in a bar chart.
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[670, 670, 1040, 680]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"June, July, Aug, Sept","670, 670, 1040, 680","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of  hire_date and the sum of department_id bin hire_date by time."
"SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy ORDER BY count(*) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'Allergy', 'y_name': 'count(*)', 'x_data': [['Rodent', 'Anchovies', 'Dog', 'Eggs', 'Milk', 'Cat', 'Grass Pollen', 'Shellfish', 'Soy', 'Ragweed', 'Nuts', 'Tree Pollen']], 'y_data': [[1, 3, 3, 3, 3, 4, 4, 4, 4, 6, 11, 13]], 'classify': [], 'describe': ''}",bar,Allergy,count(*),"Rodent, Anchovies, Dog, Eggs, Milk, Cat, Grass Pollen, Shellfish, Soy, Ragweed, Nuts, Tree Pollen","1, 3, 3, 3, 3, 4, 4, 4, 4, 6, 11, 13","Show the total number from each allergy, show total number from low to high order."
"SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'CV', 'FM']], 'y_data': [[6, 5, 3, 1]], 'classify': [], 'describe': ''}",bar,Document_Type_Code,count(*),"BK, PP, CV, FM","6, 5, 3, 1","How many documents are there of each type Show bar chart, and show y-axis in descending order."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Thur', 'Sun', 'Wed', 'Tue', 'Mon', 'Sat', 'Fri']], 'y_data': [[354, 201, 101, 101, 101, 100, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Thur, Sun, Wed, Tue, Mon, Sat, Fri","354, 201, 101, 101, 101, 100, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday, could you sort Y from high to low order?"
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, display X from low to high order please."
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_name ASC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['package', 'top']], 'y_data': [[3, 1]], 'classify': [], 'describe': ''}",bar,part_name,part_id,"package, top","3, 1","Which parts have more than 2 faults? Show the part name and id in a bar chart, and show x axis in asc order."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[1355, 3610, 4314, 3640, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"June, July, Aug, Sept, Oct","1355, 3610, 4314, 3640, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart."
"SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier ORDER BY Carrier DESC",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'COUNT(*)', 'x_data': [['TMobile', 'Sprint']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Carrier,COUNT(*),"TMobile, Sprint","3, 2","Show different carriers of phones together with the number of phones with each carrier Plot them as bar chart, I want to list from high to low by the X-axis."
"SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Battle ship', 'Cargo ship']], 'y_data': [[3, 5]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Battle ship, Cargo ship","3, 5","Show different types of ships and the number of ships of each type Show bar chart, display in ascending by the the total number ."
"SELECT FIRST_NAME , SUM(SALARY) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY FIRST_NAME DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SUM(SALARY)', 'x_data': [['William', 'Payam', 'Adam']], 'y_data': [[15700, 7900, 8200]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",bar,FIRST_NAME,SUM(SALARY),"William, Payam, Adam","15700, 7900, 8200","For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart, and I want to display in descending by the bars please."
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY sum(stu_hrs) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'CIS', 'EDU', 'ENGL', 'BIOL']], 'y_data': [[165, 147, 120, 102, 42]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(stu_hrs),"ACCT, CIS, EDU, ENGL, BIOL","165, 147, 120, 102, 42","Find the total number of hours have done for all students in each department Visualize by bar chart, could you display Y in desc order please?"
"SELECT Date , Vote_Percent FROM election ORDER BY Date ASC",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['1946', '1949', '1953', 'July 1942', 'October 1942']], 'y_data': [[19.5, 19.5, 16, 16.2, 18.5]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"1946, 1949, 1953, July 1942, October 1942","19.5, 19.5, 16, 16.2, 18.5","Show vote_percent from each date, and I want to rank x-axis in ascending order."
"SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county",Bar,Easy,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'state_province_county', 'y_name': 'count(*)', 'x_data': [['Colorado', 'District of Columbia', 'Idaho', 'Illinois', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Nevada', 'Oklahoma', 'Oregon', 'SouthDakota', 'Vermont', 'Virginia']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,state_province_county,count(*),"Colorado, District of Columbia, Idaho, Illinois, Kentucky, Louisiana, Maine, Maryland, Nevada, Oklahoma, Oregon, SouthDakota, Vermont, Virginia","1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",Show each state and the number of addresses in each state by a bar chart.
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69","Visualize a bar chart for what are total transaction amounts for each transaction type?, and sort X in asc order please."
"SELECT Hometown , Age FROM teacher",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Blackrod Urban District', 'Bolton County Borough', 'Farnworth Municipal Borough', 'Horwich Urban District', 'Kearsley Urban District', 'Little Lever Urban District', 'Turton Urban District']], 'y_data': [[32, 29, 26, 33, 45, 41, 39]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Blackrod Urban District, Bolton County Borough, Farnworth Municipal Borough, Horwich Urban District, Kearsley Urban District, Little Lever Urban District, Turton Urban District","32, 29, 26, 33, 45, 41, 39",A bar chart about what is the age and hometown of every teacher?
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code DESC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Clothes']], 'y_data': [[796.0416666666665, 715.5366666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Hardware, Clothes","796.0416666666665, 715.5366666666665","What is the average price for each type of product Visualize by bar chart, and show bar in descending order."
"SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'max_salary - min_salary', 'x_data': [['Finance Manager', 'Accounting Manager', 'Sales Representative', 'Purchasing Manager', 'Marketing Manager']], 'y_data': [[7800, 7800, 6000, 7000, 6000]], 'classify': [], 'describe': ''}",bar,JOB_TITLE,max_salary - min_salary,"Finance Manager, Accounting Manager, Sales Representative, Purchasing Manager, Marketing Manager","7800, 7800, 6000, 7000, 6000","what are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?"
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'Toner cartridge', 'DVD burner', 'DVD drive']], 'y_data': [[1, 2, 3, 4, 5, 7, 8, 9, 10, 17]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, Toner cartridge, DVD burner, DVD drive","1, 2, 3, 4, 5, 7, 8, 9, 10, 17","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and could you list Y in ascending order please?"
"SELECT Founder , sum(revenue) FROM manufacturers GROUP BY founder ORDER BY Founder ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'sum(revenue)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[120, 50, 130, 200, 100, 30]], 'classify': [], 'describe': ''}",bar,Founder,sum(revenue),"Andy, James, John, Mary, Owen, Robert","120, 50, 130, 200, 100, 30","Draw a bar chart of founder versus sum revenue, and sort by the x axis from low to high."
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 1, 1, 2, 4, 5.5, 8]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 1, 1, 2, 4, 5.5, 8","Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday, display Y-axis from low to high order please."
"SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",Bar,Easy,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'SUM(Amount_Payment)', 'x_data': [['American Express', 'Discover Card', 'MasterCard', 'Visa']], 'y_data': [[177130, 232825, 2531865, 794713]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,SUM(Amount_Payment),"American Express, Discover Card, MasterCard, Visa","177130, 232825, 2531865, 794713",How many total amounts of payments by each method code? You can give me a bar chart.
"SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Hewlett-Packard', 'Creative Labs', 'Winchester', 'Sony', 'Iomega', 'Fujits']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Hewlett-Packard, Creative Labs, Winchester, Sony, Iomega, Fujits","3, 3, 2, 1, 1, 1","For those records from the products and each product's manufacturer, give me the comparison about the amount of name over the name , and group by attribute name, sort by the y-axis from high to low."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code ORDER BY COUNT(*) DESC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Provisional', 'Confirmed']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Provisional, Confirmed","8, 7","Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, show total number in descending order."
"SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY Comptroller ASC",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Comptroller', 'y_name': 'COUNT(Comptroller)', 'x_data': [['Alan Hevesi', 'Carl McCall', 'John Faso']], 'y_data': [[1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Comptroller'}",bar,Comptroller,COUNT(Comptroller),"Alan Hevesi, Carl McCall, John Faso","1, 3, 1","Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a bar chart, and display in ascending by the X-axis."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[930, 980, 1040, 1000, 930, 910, 910]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","930, 980, 1040, 1000, 930, 910, 910","For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the  hire_date bin hire_date by weekday by a bar chart."
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_name ASC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['package', 'top']], 'y_data': [[3, 1]], 'classify': [], 'describe': ''}",bar,part_name,part_id,"package, top","3, 1","Give me a histogram for which parts have more than 2 faults? Show the part name and id, and rank X-axis from low to high order please."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['SA_REP', 'SH_CLERK', 'ST_CLERK', 'FI_ACCOUNT', 'PU_CLERK', 'IT_PROG', 'ST_MAN', 'AC_MGR', 'HR_REP', 'SA_MAN', 'PU_MAN', 'AD_PRES']], 'y_data': [[2142, 1706, 1219, 445, 348, 315, 244, 205, 203, 148, 114, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"SA_REP, SH_CLERK, ST_CLERK, FI_ACCOUNT, PU_CLERK, IT_PROG, ST_MAN, AC_MGR, HR_REP, SA_MAN, PU_MAN, AD_PRES","2142, 1706, 1219, 445, 348, 315, 244, 205, 203, 148, 114, 100","For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id by a bar chart, and I want to list by the y-axis from high to low please."
"SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY SUM(Amount_Payment) DESC",Bar,Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'SUM(Amount_Payment)', 'x_data': [['2017', '2018']], 'y_data': [[787370, 7343]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY YEAR'}",bar,Date_Payment_Made,SUM(Amount_Payment),"2017, 2018","787370, 7343","Sum the amount for all the payments processed with Visa by each year using a bar chart, and could you sort by the total number from high to low please?"
"SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform ASC",Bar,Medium,device,"{'chart': 'bar', 'x_name': 'Software_Platform', 'y_name': 'COUNT(*)', 'x_data': [['Android', 'iOS']], 'y_data': [[5, 1]], 'classify': [], 'describe': ''}",bar,Software_Platform,COUNT(*),"Android, iOS","5, 1","What are the different software platforms for devices, and how many devices have each, I want to show bar in ascending order."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[500, 2440, 2440, 4410, 500, 100, 570, 101, 201, 100, 514, 101, 101, 540, 200, 0, 101, 101, 205]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","500, 2440, 2440, 4410, 500, 100, 570, 101, 201, 100, 514, 101, 101, 540, 200, 0, 101, 101, 205","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you sort X from high to low order please?"
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Oct', 'Sept']], 'y_data': [[8300, 54500]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Oct, Sept","8300, 54500","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, could you order y-axis in ascending order?"
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Sun', 'Fri']], 'y_data': [[13000, 12000, 10000, 7650, 6500, 6000, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Sat, Wed, Tue, Thur, Mon, Sun, Fri","13000, 12000, 10000, 7650, 6500, 6000, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, I want to rank Y-axis from high to low order."
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': ''}",bar,decor,count(*),"modern, rustic, traditional","2, 2, 4","Give me a histogram for how many rooms cost more than 120, for each different decor?, could you sort y-axis from low to high order?"
"SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY COUNT(year) ASC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2016-01-01', '2017-01-01']], 'y_data': [[2, 20]], 'classify': [], 'describe': 'GROUP BY year'}",bar,year,COUNT(year),"2016-01-01, 2017-01-01","2, 20","Show me a bar chart about the number of races held in each year after 2014, and I want to list y axis from low to high order please."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Thur', 'Sun', 'Fri', 'Mon', 'Tue', 'Sat', 'Wed']], 'y_data': [[130.625, 129.46666666666667, 124.66666666666667, 123, 122.2, 121.2, 114.1875]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Thur, Sun, Fri, Mon, Tue, Sat, Wed","130.625, 129.46666666666667, 124.66666666666667, 123, 122.2, 121.2, 114.1875","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, and I want to order by the Y from high to low."
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['10–6', '13–3', '14–2', '9–7']], 'y_data': [[0.706, 0.8240000000000001, 0.946, 0.6]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"10–6, 13–3, 14–2, 9–7","0.706, 0.8240000000000001, 0.946, 0.6","Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and display from low to high by the bars."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'MK_REP', 'SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'PR_REP', 'HR_REP', 'FI_MGR', 'AD_ASST', 'AC_MGR', 'ST_MAN', 'SA_MAN', 'PU_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, MK_REP, SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, PR_REP, HR_REP, FI_MGR, AD_ASST, AC_MGR, ST_MAN, SA_MAN, PU_MAN, MK_MAN, AD_VP, AD_PRES","205, 201, 147, 122, 122, 114, 108, 102.8, 101, 101, 101, 101, 101, 100, 100, 100, 100, 100, 0","For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, rank by the total number from high to low."
"SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director DESC",Bar,Extra Hard,culture_company,"{'chart': 'bar', 'x_name': 'Director', 'y_name': 'COUNT(Director)', 'x_data': [['Troy Duffy', 'Stephen Kay', 'Roger Christian', 'Jonathan Lynn', 'John Swanbeck', 'Damian Lee', 'Christian Duguay', 'Anthony Hickox']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Director'}",bar,Director,COUNT(Director),"Troy Duffy, Stephen Kay, Roger Christian, Jonathan Lynn, John Swanbeck, Damian Lee, Christian Duguay, Anthony Hickox","1, 1, 1, 1, 1, 1, 1, 2","Show all director names who have a movie in the year 1999 or 2000, and count them by a bar chart, and I want to display by the bars in descending."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category ASC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5","Visualize a bar chart for how many books fall into each category?, and display by the X in asc."
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Defender', 'Forward', 'Midfielder']], 'y_data': [[7, 3, 6]], 'classify': [], 'describe': ''}",bar,Position,COUNT(*),"Defender, Forward, Midfielder","7, 3, 6","Show the position of players and the corresponding number of players with a bar chart, and could you list from low to high by the x axis?"
"SELECT Director , COUNT(Director) FROM movie WHERE YEAR = 1999 OR YEAR = 2000 GROUP BY Director ORDER BY Director ASC",Bar,Extra Hard,culture_company,"{'chart': 'bar', 'x_name': 'Director', 'y_name': 'COUNT(Director)', 'x_data': [['Anthony Hickox', 'Christian Duguay', 'Damian Lee', 'John Swanbeck', 'Jonathan Lynn', 'Roger Christian', 'Stephen Kay', 'Troy Duffy']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Director'}",bar,Director,COUNT(Director),"Anthony Hickox, Christian Duguay, Damian Lee, John Swanbeck, Jonathan Lynn, Roger Christian, Stephen Kay, Troy Duffy","2, 1, 1, 1, 1, 1, 1, 1","Show all director names who have a movie in the year 1999 or 2000, and count them by a bar chart, and could you display by the Director in ascending?"
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name",Bar,Hard,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['A Silver-Cleaning Battery', 'Aerodynamics and Ice Hockey', 'Build Your Own Telescope', 'Juicy: Extracting Apple Juice with Pectinase']], 'y_data': [[2, 1, 3, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"A Silver-Cleaning Battery, Aerodynamics and Ice Hockey, Build Your Own Telescope, Juicy: Extracting Apple Juice with Pectinase","2, 1, 3, 1","What are the names of projects that require more than 300 hours, and how many scientists are assigned to each. "
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[7.666666666666667, 1, 9.333333333333334, 3, 5, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","7.666666666666667, 1, 9.333333333333334, 3, 5, 3","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, show X in asc order."
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Mar', 'Feb']], 'y_data': [[5, 1]], 'classify': [], 'describe': 'BIN date_became_customer BY MONTH'}",bar,date_became_customer,COUNT(date_became_customer),"Mar, Feb","5, 1","What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and display in desc by the Y."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1000, 596, 1162, 606, 886, 1144, 399]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1000, 596, 1162, 606, 886, 1144, 399","For all employees who have the letters D or S in their first name, find  hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Wed', 'Sat', 'Tue', 'Mon', 'Fri', 'Sun', 'Thur']], 'y_data': [[114.1875, 121.2, 122.2, 123, 124.66666666666667, 129.46666666666667, 130.625]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Wed, Sat, Tue, Mon, Fri, Sun, Thur","114.1875, 121.2, 122.2, 123, 124.66666666666667, 129.46666666666667, 130.625","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, rank y axis from low to high order please."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[4314, 3741, 3610, 1355, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, Sept, July, June, Oct","4314, 3741, 3610, 1355, 205","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, order by the Y in descending."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_completion) ASC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Feb', 'Mar']], 'y_data': [[4, 16]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Feb, Mar","4, 16","How many completion students in each month? Return a bar chart binning date of completion by month interval, show total number in ascending order."
"SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'Room', 'y_name': 'count(*)', 'x_data': [['AOB', 'RTE', 'MWC', 'IBS', 'TAA', 'HBB', 'RND', 'IBD', 'FNA', 'CAS']], 'y_data': [[51, 55, 56, 59, 59, 60, 62, 63, 66, 69]], 'classify': [], 'describe': ''}",bar,Room,count(*),"AOB, RTE, MWC, IBS, TAA, HBB, RND, IBD, FNA, CAS","51, 55, 56, 59, 59, 60, 62, 63, 66, 69","For each room, find its the number of times reservations were made for it Visualize them using a bar chart, and display by the the total number from low to high."
"SELECT decor , count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor ORDER BY decor ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'traditional']], 'y_data': [[1, 3]], 'classify': [], 'describe': ''}",bar,decor,count(*),"modern, traditional","1, 3","How many rooms have king beds? Report the number for each decor type Plot them as bar chart, show X from low to high order."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[23, 3, 28, 6, 1, 5]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","23, 3, 28, 6, 1, 5","For those records from the products and each product's manufacturer, find  headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart."
"SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY destination DESC",Bar,Hard,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Tokyo', 'Honolul']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Tokyo, Honolul","1, 2","A bar chart showing the number of flights with price higher than 300 for each destination city, could you display in descending by the x-axis?"
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Astronomy', 'Athletics', 'Biology', 'Cybernetics', 'English', 'Finance', 'History', 'Languages', 'Math', 'Physics', 'Pol. Sci.', 'Psychology']], 'y_data': [[617253.94, 734550.7, 647610.55, 794541.46, 611042.66, 866831.75, 699140.86, 601283.6, 777605.11, 942162.76, 573745.09, 848175.04]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Astronomy, Athletics, Biology, Cybernetics, English, Finance, History, Languages, Math, Physics, Pol. Sci., Psychology","617253.94, 734550.7, 647610.55, 794541.46, 611042.66, 866831.75, 699140.86, 601283.6, 777605.11, 942162.76, 573745.09, 848175.04","Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and I want to order from low to high by the x-axis please."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[79600, 94300, 124400, 108200, 94800, 97400, 86200]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","79600, 94300, 124400, 108200, 94800, 97400, 86200","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday."
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Cybernetics', 'Finance', 'Psychology', 'Mech. Eng.', 'Accounting', 'Physics', 'Languages', 'Comp. Sci.', 'Astronomy', 'Math', 'Civil Eng.', 'Geology', 'Athletics', 'History', 'English', 'Elec. Eng.', 'Pol. Sci.', 'Biology', 'Statistics', 'Marketing']], 'y_data': [[67, 49, 44, 40, 40, 38, 37, 37, 37, 34, 34, 33, 30, 29, 28, 28, 23, 23, 21, 20]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Cybernetics, Finance, Psychology, Mech. Eng., Accounting, Physics, Languages, Comp. Sci., Astronomy, Math, Civil Eng., Geology, Athletics, History, English, Elec. Eng., Pol. Sci., Biology, Statistics, Marketing","67, 49, 44, 40, 40, 38, 37, 37, 37, 34, 34, 33, 30, 29, 28, 28, 23, 23, 21, 20","Bar chart of total number of credits from each dept name, and show from high to low by the total number of credits."
"SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry ORDER BY COUNT(*) ASC",Bar,Medium,company_office,"{'chart': 'bar', 'x_name': 'Industry', 'y_name': 'COUNT(*)', 'x_data': [['Retailing', 'Telecommunications', 'Conglomerate', 'Oil and gas', 'Banking']], 'y_data': [[1, 1, 2, 7, 8]], 'classify': [], 'describe': ''}",bar,Industry,COUNT(*),"Retailing, Telecommunications, Conglomerate, Oil and gas, Banking","1, 1, 2, 7, 8",", and order by the y axis in ascending."
"SELECT Country , count(*) FROM airport GROUP BY country",Bar,Easy,flight_company,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Belgium', 'Denmark', 'Iceland', 'Netherlands', 'Norway', 'Spain', 'United States']], 'y_data': [[1, 1, 1, 1, 1, 1, 3]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Belgium, Denmark, Iceland, Netherlands, Norway, Spain, United States","1, 1, 1, 1, 1, 1, 3",
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[260, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Sept, Oct","260, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and rank from high to low by the y-axis please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[4, 3, 3, 1, 6, 5, 6, 5, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","4, 3, 3, 1, 6, 5, 6, 5, 2, 2","For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, order x axis from high to low order."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","What are the average prices of products, grouped by manufacturer name, and rank bar in ascending order."
"SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Gietz', 'Fay', 'Grant', 'Mavris', 'Higgins', 'Baer', 'Hartstein']], 'y_data': [[205, 201, 149, 101, 101, 101, 100]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Gietz, Fay, Grant, Mavris, Higgins, Baer, Hartstein","205, 201, 149, 101, 101, 101, 100","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and manager_id , and display MANAGER_ID in descending order."
"SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) DESC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Rejected', 'Accepted']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Rejected, Accepted","4, 2","For each submission, group its acceptance result and count them Visualize them in a bar chart, and could you order by the Y in desc?"
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) DESC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sat', 'Mon', 'Tue', 'Fri', 'Wed', 'Thur', 'Sun']], 'y_data': [[4, 4, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sat, Mon, Tue, Fri, Wed, Thur, Sun","4, 4, 2, 2, 1, 1, 1","Find the number of booking start date for the apartments that have more than two bedrooms for each weekday with a bar chart, display in descending by the Y-axis."
"SELECT All_Games , School_ID FROM basketball_match ORDER BY All_Games DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'School_ID', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Games,School_ID,"35–2, 28–6, 24–10, 21–14","1, 2, 4, 5","Draw a bar chart about the distribution of All_Games and School_ID , order bar in desc order."
"SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME ORDER BY SUM(STU_GPA) ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'SUM(STU_GPA)', 'x_data': [['Juliette', 'William', 'John']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,SUM(STU_GPA),"Juliette, William, John","2, 2, 4","Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?, display in asc by the Y-axis."
"SELECT location , circuitId FROM circuits WHERE country = ""France"" OR country = ""Belgium"" ORDER BY location DESC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'location', 'y_name': 'circuitId', 'x_data': [['Spa', 'Rouen', 'Reims', 'Magny Cours', 'Le Mans', 'Le Castellet', 'Heusden-Zolder', 'Dijon', 'Clermont-Ferrand', 'Brussels']], 'y_data': [[13, 53, 55, 8, 54, 34, 40, 41, 51, 50]], 'classify': [], 'describe': ''}",bar,location,circuitId,"Spa, Rouen, Reims, Magny Cours, Le Mans, Le Castellet, Heusden-Zolder, Dijon, Clermont-Ferrand, Brussels","13, 53, 55, 8, 54, 34, 40, 41, 51, 50","What are the ids and locations of all circuits in France or Belgium Show bar chart, could you sort X-axis from high to low order?"
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June']], 'y_data': [[191.08333333333334, 162.3846153846154, 128.33333333333334, 107.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Sept, Aug, July, June","191.08333333333334, 162.3846153846154, 128.33333333333334, 107.5","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, display Y in desc order."
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[34.22222222222222, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"England, Northern Ireland, Wales","34.22222222222222, 29, 27","Draw a bar chart of nationality versus the average of age, I want to order total number from high to low order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'Sept', 'Aug', 'July']], 'y_data': [[8, 12, 13, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, Sept, Aug, July","8, 12, 13, 15","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, could you list by the Y in asc please?"
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_ID ASC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Society Research project', 'Internet of Things project', 'Graph Database project', 'Human Resource project']], 'y_data': [[30, 35, 105, 134]], 'classify': [], 'describe': ''}",bar,Project_Details,Project_ID,"Society Research project, Internet of Things project, Graph Database project, Human Resource project","30, 35, 105, 134","Return the ids and details corresponding to projects for which there are more than two documents in a bar chart, could you list y axis from low to high order?"
"SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Liliane Bettencourt', 'Christy Walton', 'Susanne Klatten', 'Jacqueline Mars', 'Iris Fontbona', 'Gina Rinehart']], 'y_data': [[2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Liliane Bettencourt, Christy Walton, Susanne Klatten, Jacqueline Mars, Iris Fontbona, Gina Rinehart","2, 2, 1, 1, 1, 1","Compare the number of songs each singer has, and show y-axis in descending order."
"SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1",Bar,Easy,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Number_Deaths', 'x_data': [['Two', 'Three', 'Four', 'Five', 'Six', '9 cyclones']], 'y_data': [[7, 52, 7, 3, 2, 71]], 'classify': [], 'describe': ''}",bar,Name,Number_Deaths,"Two, Three, Four, Five, Six, 9 cyclones","7, 52, 7, 3, 2, 71","For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart."
"SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY County_name ASC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'COUNT(County_name)', 'x_data': [['Baltimore County', 'Colony', 'Howard', 'Mansfield']], 'y_data': [[2, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY County_name'}",bar,County_name,COUNT(County_name),"Baltimore County, Colony, Howard, Mansfield","2, 2, 3, 1","Use a bar chart to show the number of delegates in each county, and sort x-axis from low to high order."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Oct', 'June', 'Sept', 'July', 'Aug']], 'y_data': [[205, 1155, 3391, 3410, 4314]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Oct, June, Sept, July, Aug","205, 1155, 3391, 3410, 4314","For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, and order from low to high by the Y-axis please."
"SELECT city_code , count(*) FROM student GROUP BY city_code ORDER BY city_code DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['YYZ', 'WAS', 'PIT', 'PHL', 'NYC', 'HKG', 'BAL']], 'y_data': [[2, 3, 4, 3, 3, 3, 4]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"YYZ, WAS, PIT, PHL, NYC, HKG, BAL","2, 3, 4, 3, 3, 3, 4","Display a bar chart for how many students are from each city, and which cities have more than one cities?, and sort X-axis from high to low order."
"SELECT Team_Name , School_ID FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'School_ID', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[5, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Team_Name,School_ID,"Virginia Tech, North Carolina, Duke, Clemson","5, 1, 2, 4","Return a bar chart about the distribution of Team_Name and School_ID , could you order from high to low by the x axis?"
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",Bar,Easy,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'capacity', 'x_data': [['Vimto', 'Sprite Lemo', 'Dr Pepper', 'Diet Pepsi', 'Diet Mountain Dew']], 'y_data': [[6, 8, 1, 9, 8]], 'classify': [], 'describe': ''}",bar,catalog_entry_name,capacity,"Vimto, Sprite Lemo, Dr Pepper, Diet Pepsi, Diet Mountain Dew","6, 8, 1, 9, 8",Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY Building ASC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Barton', 'Krieger', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",bar,Building,count(*),"Barton, Krieger, NEB","20, 20, 18","Show all the buildings along with the number of faculty members the buildings have Plot them as bar chart, and rank from low to high by the x-axis."
"SELECT LAST_NAME , SALARY FROM employees WHERE first_name LIKE '%m' ORDER BY SALARY ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Smith', 'Kaufling', 'Fripp', 'Gietz']], 'y_data': [[7400, 7900, 8200, 8300]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Smith, Kaufling, Fripp, Gietz","7400, 7900, 8200, 8300","For those employees whose first name is ending with the letter m, visualize a bar chart to show each employee's salary by the last name, I want to rank by the Y in ascending."
"SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['Visa', 'MasterCard', 'Discover Card', 'American Express']], 'y_data': [[198678.25, 361695, 77608.33333333333, 177130]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,AVG(Amount_Payment),"Visa, MasterCard, Discover Card, American Express","198678.25, 361695, 77608.33333333333, 177130","What about the average amounts of payments by each method code? You can give me a bar chart, display from high to low by the X."
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY COUNT(Fname) ASC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Michael', 'Shiela', 'Stacy', 'Tracy', 'Sarah']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Michael, Shiela, Stacy, Tracy, Sarah","1, 1, 1, 1, 2","What are the number of the first names of all students in Smith Hall?, and sort by the how many fname in asc."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Fri', 'Sat', 'Mon', 'Tue', 'Wed', 'Thur', 'Sun']], 'y_data': [[0, 100, 101, 101, 101, 177, 201]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Fri, Sat, Mon, Tue, Wed, Thur, Sun","0, 100, 101, 101, 101, 177, 201","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, and show y axis in asc order."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Wed', 'Sat', 'Tue', 'Mon', 'Fri', 'Sun', 'Thur']], 'y_data': [[114.1875, 121.2, 122.2, 124.57142857142857, 124.66666666666667, 129.46666666666667, 130.625]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Wed, Sat, Tue, Mon, Fri, Sun, Thur","114.1875, 121.2, 122.2, 124.57142857142857, 124.66666666666667, 129.46666666666667, 130.625","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, display by the the average of manager id in ascending please."
"SELECT date_order_placed , COUNT(date_order_placed) FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",Bar,Hard,tracking_orders,"{'chart': 'bar', 'x_name': 'date_order_placed', 'y_name': 'COUNT(date_order_placed)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_order_placed BY WEEKDAY'}",bar,date_order_placed,COUNT(date_order_placed),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 1, 1, 0, 0, 0","What is the placement date of the order whose invoice number is 10, and count them by a bar chart"
"SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = ""Spring"" OR Party_Theme = ""Teqnology"" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC",Bar,Hard,party_host,"{'chart': 'bar', 'x_name': 'Last_year', 'y_name': 'COUNT(Last_year)', 'x_data': [['2004', '2001', '2003', '2002']], 'y_data': [[1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Last_year BY TIME'}",bar,Last_year,COUNT(Last_year),"2004, 2001, 2003, 2002","1, 1, 0, 0","Count the last year of parties with theme ""Spring"" or ""Teqnology"" with a bar grpah, I want to rank in descending by the Y."
"SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'COUNT(date_address_from)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 2, 4, 3, 4]], 'classify': [], 'describe': 'BIN date_address_from BY WEEKDAY'}",bar,date_address_from,COUNT(date_address_from),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 2, 4, 3, 4",Draw a bar chart about the distribution of  date_address_from and the amount of date_address_from bin date_address_from by weekday.
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name",Bar,Easy,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9",What are the names and the average grades for each high schooler. Plot them as a bar chart.
"SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetID', 'y_name': 'weight', 'x_data': [['2001-01-01', '2002-01-01']], 'y_data': [[12, 13.4]], 'classify': [], 'describe': ''}",bar,PetID,weight,"2001-01-01, 2002-01-01","12, 13.4","A bar chart about what is the id and weight of every pet who is older than 1?, show x axis from low to high order."
"SELECT LName , COUNT(LName) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Adams', 'Andreo', 'Brody', 'Brown', 'Cheng', 'Davis', 'Epp', 'Goldman', 'Jones', 'Nelson', 'Prater', 'Rugh', 'Schmidt', 'Simms', 'Smith', 'Tai', 'Thornton', 'Wilson', 'Pang']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Adams, Andreo, Brody, Brown, Cheng, Davis, Epp, Goldman, Jones, Nelson, Prater, Rugh, Schmidt, Simms, Smith, Tai, Thornton, Wilson, Pang","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","List the last name of the students who do not have any food type allergy and count them in a bart chart, show Y-axis from low to high order."
"SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5",Bar,Hard,college_3,"{'chart': 'bar', 'x_name': 'CName', 'y_name': 'COUNT(CName)', 'x_data': [['ALGORITHMS I', 'APPLIED STATISTICS AND DATA ANALYSIS', 'CIRCUITS', 'COMBINATORIAL ANALYSIS', 'COMPUTER SYSTEM FUNDAMENTALS', 'COMPUTER VISION', 'DATA STRUCTURES in JAVA', 'DATABASE SYSTEMS', 'DISTRIBUTED SYSTEMS', 'EXPLORING THE INTERNET', 'INTRO TO NATURAL LANGUAGE PROCESSING', 'INTRO TO PROGRAMMING IN JAVA', 'INTRODUCTION TO PROBABILITY', 'MULTIMEDIA COMPUTING', 'QUANTITATIVE MEDICAL COMPUTING', 'SUPERCOMPUTING']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CName'}",bar,CName,COUNT(CName),"ALGORITHMS I, APPLIED STATISTICS AND DATA ANALYSIS, CIRCUITS, COMBINATORIAL ANALYSIS, COMPUTER SYSTEM FUNDAMENTALS, COMPUTER VISION, DATA STRUCTURES in JAVA, DATABASE SYSTEMS, DISTRIBUTED SYSTEMS, EXPLORING THE INTERNET, INTRO TO NATURAL LANGUAGE PROCESSING, INTRO TO PROGRAMMING IN JAVA, INTRODUCTION TO PROBABILITY, MULTIMEDIA COMPUTING, QUANTITATIVE MEDICAL COMPUTING, SUPERCOMPUTING","1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1",What is the number of each course name that have at least five enrollments? Show me a bar chart.
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[120, 130, 30, 50, 200, 100]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","120, 130, 30, 50, 200, 100","For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the average of revenue , and group by attribute headquarter in a bar chart, order Headquarter in descending order."
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'District_name', 'y_name': 'City_Population', 'x_data': [['Chiniot District', 'Kasur District', 'Gujrat District', 'Jhang District', 'Dera Ghazi Khan District', 'Bahawalpur District', 'Gujranwala District']], 'y_data': [[219254, 314617, 328512, 365198, 464742, 530438, 1526168]], 'classify': [], 'describe': ''}",bar,District_name,City_Population,"Chiniot District, Kasur District, Gujrat District, Jhang District, Dera Ghazi Khan District, Bahawalpur District, Gujranwala District","219254, 314617, 328512, 365198, 464742, 530438, 1526168","Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, display by the City_Population from low to high."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 9, 5, 4, 6, 12]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Andy, James, John, Mary, Owen, Robert","1, 9, 5, 4, 6, 12","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the  founder , and group by attribute founder by a bar chart."
"SELECT Sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex ORDER BY count(*) DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[12, 3]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"M, F","12, 3","Show the number of male and female assistant professors Plot them as bar chart, and I want to display y axis in descending order."
"SELECT T2.name , COUNT(T2.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T2.name ORDER BY COUNT(T2.name) DESC",Bar,Hard,company_office,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Punto Chapultepec', 'Torre Mitikah', 'Corporativo BBVA Bancomer', 'Torre Reforma', 'Torre New York Life', 'Torre KOI', 'Residencial Vidalta Torre Altaire 3', 'Residencial Vidalta Torre Altaire 2', 'Reforma 90', 'Reforma 432', 'LIU East']], 'y_data': [[4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Punto Chapultepec, Torre Mitikah, Corporativo BBVA Bancomer, Torre Reforma, Torre New York Life, Torre KOI, Residencial Vidalta Torre Altaire 3, Residencial Vidalta Torre Altaire 2, Reforma 90, Reforma 432, LIU East","4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","List the number of companies for each building in a bar chart, and show by the the number of name in descending."
"SELECT city_code , avg(age) FROM student GROUP BY city_code",Bar,Easy,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'avg(age)', 'x_data': [['ATL', 'BAL', 'BOS', 'CHI', 'DAL', 'DET', 'HKG', 'HOU', 'LON', 'LOS', 'NAR', 'NYC', 'PEK', 'PHL', 'PIT', 'ROC', 'SFO', 'WAS', 'YYZ']], 'y_data': [[20, 18.5, 18, 20, 18, 17, 18, 17, 27, 18, 18, 20.33333333333333, 17, 19.666666666666668, 19, 20, 21, 21.66666666666667, 22.5]], 'classify': [], 'describe': ''}",bar,city_code,avg(age),"ATL, BAL, BOS, CHI, DAL, DET, HKG, HOU, LON, LOS, NAR, NYC, PEK, PHL, PIT, ROC, SFO, WAS, YYZ","20, 18.5, 18, 20, 18, 17, 18, 17, 27, 18, 18, 20.33333333333333, 17, 19.666666666666668, 19, 20, 21, 21.66666666666667, 22.5",Find the average age of students living in each city with a bar chart.
"SELECT T1.FIRST_NAME , T1.MANAGER_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY T1.FIRST_NAME ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Adam', 'Alexander', 'Den', 'Hermann', 'Jennifer', 'John', 'Michael', 'Nancy', 'Shelley', 'Steven', 'Susan']], 'y_data': [[121, 103, 114, 204, 200, 145, 201, 108, 205, 100, 203]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,MANAGER_ID,"Adam, Alexander, Den, Hermann, Jennifer, John, Michael, Nancy, Shelley, Steven, Susan","121, 103, 114, 204, 200, 145, 201, 108, 205, 100, 203","You can use a bar chart to show the employees' first name and their manager id as Y, and I want to list by the X-axis in ascending."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code ORDER BY booking_status_code DESC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Provisional', 'Confirmed']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Provisional, Confirmed","8, 7","Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, could you rank booking_status_code from high to low order?"
"SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY Directed_by ASC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Directed_by', 'y_name': 'count(*)', 'x_data': [['Bill Schreiner', 'Jesus Salvador Treviño']], 'y_data': [[4, 1]], 'classify': [], 'describe': ''}",bar,Directed_by,count(*),"Bill Schreiner, Jesus Salvador Treviño","4, 1","List all directors along with the number of films directed by each director in a bar chart, and I want to rank by the bars in ascending please."
"SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code ASC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'count(*)', 'x_data': [['GV', 'ORG', 'SF']], 'y_data': [[6, 2, 2]], 'classify': [], 'describe': ''}",bar,Budget_Type_Code,count(*),"GV, ORG, SF","6, 2, 2","Show me a bar chart for what are the different budget type codes, and how many documents are there for each?, display by the x axis in ascending."
"SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name ASC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Adam Scott', 'Graeme McDowell']], 'y_data': [[26, 34]], 'classify': [], 'describe': ''}",bar,Name,Age,"Adam Scott, Graeme McDowell","26, 34","A bar chart about the name and age for all male people who don't have a wedding, could you display by the x axis in ascending?"
"SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY Away_team ASC",Bar,Medium,game_injury,"{'chart': 'bar', 'x_name': 'Away_team', 'y_name': 'COUNT(Away_team)', 'x_data': [['Bunyodkor', 'Pakhtakor', 'Quruvchi']], 'y_data': [[7, 10, 3]], 'classify': [], 'describe': 'GROUP BY Away_team'}",bar,Away_team,COUNT(Away_team),"Bunyodkor, Pakhtakor, Quruvchi","7, 10, 3","Show the number of games for each away team in a bar chart, and I want to sort by the X in asc please."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[100, 181.25, 150]], 'classify': [], 'describe': ''}",bar,bedType,avg(basePrice),"Double, King, Queen","100, 181.25, 150","Draw a bar chart for what is the average base price of rooms, for each bed type?, display x axis in asc order."
"SELECT T1.Name , T1.Editor_ID FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID ORDER BY T1.Editor_ID ASC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Editor_ID', 'x_data': [['Kamila Porczyk', 'Marek Siudym', 'Piotr Pręgowski', 'Władysław Grzywna', 'Grażyna Wolszczak', 'Maria Góralczyk']], 'y_data': [[1, 3, 4, 6, 8, 9]], 'classify': [], 'describe': ''}",bar,Name,Editor_ID,"Kamila Porczyk, Marek Siudym, Piotr Pręgowski, Władysław Grzywna, Grażyna Wolszczak, Maria Góralczyk","1, 3, 4, 6, 8, 9","Just show the id and name of each editor using a bar chart, order by the y axis in ascending."
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 2, 1, 4, 2, 2]], 'classify': [], 'describe': 'BIN date_arrived BY WEEKDAY'}",bar,date_arrived,COUNT(date_arrived),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 2, 1, 4, 2, 2",Bar graph to show the number of date arrived from different date arrived
"SELECT date_incident_start , COUNT(date_incident_start) FROM Behavior_Incident WHERE incident_type_code = ""NOISE""  ORDER BY COUNT(date_incident_start) DESC",Bar,Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_incident_start', 'y_name': 'COUNT(date_incident_start)', 'x_data': [['Sun', 'Mon', 'Tue', 'Sat', 'Wed', 'Thur', 'Fri']], 'y_data': [[2, 2, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_incident_start BY WEEKDAY'}",bar,date_incident_start,COUNT(date_incident_start),"Sun, Mon, Tue, Sat, Wed, Thur, Fri","2, 2, 1, 1, 0, 0, 0","What is the number of end dates for incidents with incident type code ""NOISE""? Bin by weekday and return a bar chart, order by the total number from high to low please."
"SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type ORDER BY acc_type ASC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'acc_type', 'y_name': 'avg(acc_bal)', 'x_data': [['checking', 'saving']], 'y_data': [[1000, 2000]], 'classify': [], 'describe': ''}",bar,acc_type,avg(acc_bal),"checking, saving","1000, 2000","For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, and list by the X in asc."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Thur', 'Wed', 'Mon', 'Tue', 'Sun', 'Fri', 'Sat']], 'y_data': [[159.5, 155.06666666666666, 154, 153.5, 153, 151, 148.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Thur, Wed, Mon, Tue, Sun, Fri, Sat","159.5, 155.06666666666666, 154, 153.5, 153, 151, 148.5","For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, rank by the Y in desc."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  job_id and  employee_id  in a bar chart."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  job_id and the amount of job_id , and group by attribute job_id."
"SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'count(*)', 'x_data': [['Garfield', 'Gates', 'Lambea', 'Nassa', 'Painter', 'Rathbone', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,building,count(*),"Garfield, Gates, Lambea, Nassa, Painter, Rathbone, Saucon, Stabler, Taylor, Whitman","1, 1, 1, 1, 1, 1, 1, 1, 2, 1","How many rooms in each building have a capacity of over 50 Visualize by bar chart, list by the X in ascending."
"SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY COUNT(Participant_Type_Code) ASC",Bar,Medium,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'COUNT(Participant_Type_Code)', 'x_data': [['Organizer', 'Participant']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,COUNT(Participant_Type_Code),"Organizer, Participant","7, 8","Compare the number of participants in each participant type code using a bar chart, and could you rank from low to high by the Y-axis please?"
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) DESC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['EDU', 'CIS', 'BIOL', 'ACCT', 'ENGL']], 'y_data': [[3.87, 3.09, 2.84, 2.26, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,min(stu_gpa),"EDU, CIS, BIOL, ACCT, ENGL","3.87, 3.09, 2.84, 2.26, 2.11","What is the lowest student GPA for every department? Return a bar chart, display in desc by the Y."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[106.5, 129, 160, 190.5, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","106.5, 129, 160, 190.5, 206","For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the  hire_date bin hire_date by time."
"SELECT year , SUM(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",Bar,Hard,baseball_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'SUM(count(*))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[20, 25, 15, 20, 10, 5, 0]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,SUM(count(*)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","20, 25, 15, 20, 10, 5, 0","Reutrn a bar chart to bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons."
"SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY avg(T2.rating) ASC",Bar,Hard,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T2.rating)', 'x_data': [['Mark', 'Helen']], 'y_data': [[7, 7.333333333333332]], 'classify': [], 'describe': ''}",bar,name,avg(T2.rating),"Mark, Helen","7, 7.333333333333332","For each user, return the name and the average rating of reviews given by them Plot them as bar chart, could you display y-axis in ascending order?"
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 5, 4, 2, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Andy, James, John, Mary, Owen, Robert","1, 3, 5, 4, 2, 6","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  founder and the average of manufacturer , and group by attribute founder."
"SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(*)', 'x_data': [['Food', 'Electronics', 'Books', 'Clothes']], 'y_data': [[5, 4, 4, 2]], 'classify': [], 'describe': ''}",bar,Product_Type_Code,COUNT(*),"Food, Electronics, Books, Clothes","5, 4, 4, 2","Give me a bar chart for the total number of each product type code, and list in descending by the Y-axis."
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY role_code DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['PROJ-MGR', 'DBA']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"PROJ-MGR, DBA","7, 8","Find the number of users in each role Plot them as bar chart, and could you display bar from high to low order?"
"SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY count(*) DESC",Bar,Hard,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Lockheed L1011', 'Airbus A340-300', 'SAAB 340', 'Piper Archer III', 'Embraer ERJ-145', 'Boeing 757-300', 'Boeing 747-400', 'Boeing 737-800']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,name,count(*),"Lockheed L1011, Airbus A340-300, SAAB 340, Piper Archer III, Embraer ERJ-145, Boeing 757-300, Boeing 747-400, Boeing 737-800","2, 2, 1, 1, 1, 1, 1, 1","Display a bar chart for what is the name of each aircraft and how many flights does each one complete?, rank from high to low by the y-axis."
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Baer', 'Fay', 'Gietz', 'Grant', 'Hartstein', 'Higgins', 'Mavris']], 'y_data': [[0, 0, 0, 0.15, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Baer, Fay, Gietz, Grant, Hartstein, Higgins, Mavris","0, 0, 0, 0.15, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name by a bar chart, and could you order in ascending by the X?"
"SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_last_name ASC",Bar,Hard,customers_and_invoices,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'count(*)', 'x_data': [['Auer', 'Boyle', 'Keeling', 'Leuschke', 'Muller', 'Ruecker', 'Schaefer']], 'y_data': [[4, 3, 4, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,customer_last_name,count(*),"Auer, Boyle, Keeling, Leuschke, Muller, Ruecker, Schaefer","4, 3, 4, 1, 1, 1, 1","Show the number of accounts for each customer in a bar chart grouping by customer's last name, and I want to display in ascending by the bars."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[4, 20, 20, 29, 5, 5, 1, 1, 5, 1, 1, 5, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","4, 20, 20, 29, 5, 5, 1, 1, 5, 1, 1, 5, 1, 1, 1","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and could you show X-axis in desc order?"
"SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4",Bar,Easy,museum_visit,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Level_of_membership', 'x_data': [['Fernando Gago', 'Gonzalo Higuaín ', 'Guti Midfielder']], 'y_data': [[6, 8, 5]], 'classify': [], 'describe': ''}",bar,Name,Level_of_membership,"Fernando Gago, Gonzalo Higuaín , Guti Midfielder","6, 8, 5",Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4.
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 101.5, 111, 108, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 101.5, 111, 108, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find  job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Tue', 'Thur', 'Sat', 'Mon', 'Sun', 'Fri', 'Wed']], 'y_data': [[10, 11, 12, 13, 13, 14, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Tue, Thur, Sat, Mon, Sun, Fri, Wed","10, 11, 12, 13, 13, 14, 15","when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart, show in asc by the Y-axis."
"SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY count(*) DESC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Flag', 'y_name': 'count(*)', 'x_data': [['Panama', 'Malta']], 'y_data': [[8, 1]], 'classify': [], 'describe': ''}",bar,Flag,count(*),"Panama, Malta","8, 1","Return a bar chart on what are the different ship flags, and how many ships have each?, list by the Y-axis in descending."
"SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC",Bar,Medium,school_finance,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'count(*)', 'x_data': [['50 Marshall', '71 St. Joseph', '75 Starke', '46 LaPorte 71 St. Joseph', '20 Elkhart']], 'y_data': [[3, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,County,count(*),"50 Marshall, 71 St. Joseph, 75 Starke, 46 LaPorte 71 St. Joseph, 20 Elkhart","3, 2, 1, 1, 1","Show each county along with the number of schools, and display Y in desc order."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[3.4, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"T, F","3.4, 5","Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, list by the bar in desc."
"SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY sum(T2.Sales) DESC",Bar,Hard,singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T2.Sales)', 'x_data': [['Liliane Bettencourt', 'Christy Walton', 'Iris Fontbona', 'Gina Rinehart', 'Jacqueline Mars', 'Susanne Klatten']], 'y_data': [[1646407, 651421, 335000, 292000, 275000, 261000]], 'classify': [], 'describe': ''}",bar,Name,sum(T2.Sales),"Liliane Bettencourt, Christy Walton, Iris Fontbona, Gina Rinehart, Jacqueline Mars, Susanne Klatten","1646407, 651421, 335000, 292000, 275000, 261000","Show the names of singers and the total sales of their songs Visualize by bar chart, and rank by the Y-axis from high to low please."
"SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",Bar,Medium,singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T2.Sales)', 'x_data': [['Christy Walton', 'Gina Rinehart', 'Iris Fontbona', 'Jacqueline Mars', 'Liliane Bettencourt', 'Susanne Klatten']], 'y_data': [[651421, 292000, 335000, 275000, 1646407, 261000]], 'classify': [], 'describe': ''}",bar,Name,sum(T2.Sales),"Christy Walton, Gina Rinehart, Iris Fontbona, Jacqueline Mars, Liliane Bettencourt, Susanne Klatten","651421, 292000, 335000, 275000, 1646407, 261000","For each singer name, what is the total sales for their songs. Plot them as bar chart."
"SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['male', 'female']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,gender,count(*),"male, female","1, 2","How many people are under 40 for each gender Plot them as bar chart, and could you show by the X in descending?"
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['Mon', 'Wed', 'Sat', 'Sun', 'Thur', 'Tue', 'Fri']], 'y_data': [[0, 0, 1, 1, 1, 2, 4]], 'classify': [], 'describe': 'BIN date_arrived BY WEEKDAY'}",bar,date_arrived,COUNT(date_arrived),"Mon, Wed, Sat, Sun, Thur, Tue, Fri","0, 0, 1, 1, 1, 2, 4","Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday, rank in ascending by the total number please."
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Thur', 'Sun', 'Sat', 'Mon', 'Wed', 'Tue', 'Fri']], 'y_data': [[3, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_became_customer BY WEEKDAY'}",bar,date_became_customer,COUNT(date_became_customer),"Thur, Sun, Sat, Mon, Wed, Tue, Fri","3, 1, 1, 1, 0, 0, 0","A bar chart for finding the number of the ""date became customers"" of the customers whose ID is between 10 and 20, and I want to show by the y axis in descending."
"SELECT Number_of_matches , COUNT(Number_of_matches) FROM injury_accident WHERE injury != 'Knee problem' GROUP BY Number_of_matches",Bar,Medium,game_injury,"{'chart': 'bar', 'x_name': 'Number_of_matches', 'y_name': 'COUNT(Number_of_matches)', 'x_data': [['1', '1 (2)', '10', '12', '2', '3', '4', '4 (6)']], 'y_data': [[3, 1, 1, 1, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Number_of_matches'}",bar,Number_of_matches,COUNT(Number_of_matches),"1, 1 (2), 10, 12, 2, 3, 4, 4 (6)","3, 1, 1, 1, 2, 2, 1, 2",How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches.
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–3', '15–1', '14–2']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–3, 15–1, 14–2","4, 2, 2","Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, sort in desc by the total number."
"SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' ORDER BY state ASC",Bar,Hard,soccer_2,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'enr', 'x_data': [['AZ', 'FL']], 'y_data': [[12000, 19000]], 'classify': [], 'describe': ''}",bar,state,enr,"AZ, FL","12000, 19000","How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to display x axis from low to high order."
"SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY Continent DESC",Bar,Hard,world_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'sum(Population)', 'x_data': [['South America', 'Oceania', 'Asia', 'Africa']], 'y_data': [[345780000, 30401150, 3705025700, 784475000]], 'classify': [], 'describe': ''}",bar,Continent,sum(Population),"South America, Oceania, Asia, Africa","345780000, 30401150, 3705025700, 784475000","Create a bar chart showing sum population across continent, and rank in desc by the Continent."
"SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'avg(T1.age)', 'x_data': [['Anonymous Donor Hall', 'Bud Jones Hall', 'Dorm-plex 2000', 'Fawlty Towers', 'Grad Student Asylum', 'Smith Hall', 'University Hovels']], 'y_data': [[19.666666666666668, 20, 19.6, 19.777777777777782, 18, 20.166666666666668, 18]], 'classify': [], 'describe': ''}",bar,dorm_name,avg(T1.age),"Anonymous Donor Hall, Bud Jones Hall, Dorm-plex 2000, Fawlty Towers, Grad Student Asylum, Smith Hall, University Hovels","19.666666666666668, 20, 19.6, 19.777777777777782, 18, 20.166666666666668, 18",Find the average age of students living in each dorm and the name of dorm. Plot them as bar chart.
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY activity_name ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Baseball', 'Canasta', 'Canoeing', 'Chess', 'Crossword Puzzles', 'Extreme Canasta', 'Football', 'Kayaking', 'Mountain Climbing', 'Soccer', 'Spelunking', 'Square Dancing', 'Volleyball']], 'y_data': [[1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Baseball, Canasta, Canoeing, Chess, Crossword Puzzles, Extreme Canasta, Football, Kayaking, Mountain Climbing, Soccer, Spelunking, Square Dancing, Volleyball","1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2","Display a bar chart for how many faculty members participate in each activity? Return the activity names and the number of faculty members, and sort in ascending by the x-axis."
"SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) ASC",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['Mon', 'Sun', 'Thur', 'Wed', 'Fri', 'Sat', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 1]], 'classify': [], 'describe': 'BIN date_moved_in BY WEEKDAY'}",bar,date_moved_in,COUNT(date_moved_in),"Mon, Sun, Thur, Wed, Fri, Sat, Tue","0, 0, 0, 0, 1, 1, 1","Give me a bar chart for the number of date moved in of each date moved in, and could you list Y-axis from low to high order?"
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) ASC",Bar,Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['2016', '2015']], 'y_data': [[4, 9]], 'classify': [], 'describe': 'BIN date_moved_in BY YEAR'}",bar,date_moved_in,COUNT(date_moved_in),"2016, 2015","4, 9","Please use a bar chart to compare the number of customers of each customer's move in date, note that you should bin move in date into Year interval, and order the number of date moved in in asc order please."
"SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Frigate', 'Sloop-of-war', 'Cutter', 'Armed schooner', 'Third-rate ship of the line']], 'y_data': [[38, 38, 43, 45, 51.33333333333334]], 'classify': [], 'describe': ''}",bar,Class,avg(age),"Frigate, Sloop-of-war, Cutter, Armed schooner, Third-rate ship of the line","38, 38, 43, 45, 51.33333333333334","Return the average age of captains in each class, and rank Y-axis from low to high order please."
"SELECT PHONE_NUMBER , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY PHONE_NUMBER DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'MANAGER_ID', 'x_data': [['603.123.6666', '515.123.8888', '515.123.8181', '515.123.8080', '515.123.7777', '515.123.5555', '011.44.1644.429263']], 'y_data': [[201, 101, 205, 101, 101, 100, 149]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,MANAGER_ID,"603.123.6666, 515.123.8888, 515.123.8181, 515.123.8080, 515.123.7777, 515.123.5555, 011.44.1644.429263","201, 101, 205, 101, 101, 100, 149","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and manager_id , order by the x axis in descending."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 90, 100, 100, 40, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 90, 100, 100, 40, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50","For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, sort by the x-axis in ascending."
"SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY COUNT(Service_Type_Description) DESC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(Service_Type_Description)', 'x_data': [['provide photo service', 'provide dinning service', 'provide filming service', 'provide adv promoting service']], 'y_data': [[5, 5, 3, 2]], 'classify': [], 'describe': 'GROUP BY Service_Type_Description'}",bar,Service_Type_Description,COUNT(Service_Type_Description),"provide photo service, provide dinning service, provide filming service, provide adv promoting service","5, 5, 3, 2","Give me the number of the descriptions of the service types that cost more than 100, I want to sort in desc by the Y-axis."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[753, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Sept, Oct","753, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, could you order y-axis in desc order please?"
"SELECT STATE_PROVINCE , COUNT(STATE_PROVINCE) FROM locations GROUP BY STATE_PROVINCE",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'STATE_PROVINCE', 'y_name': 'COUNT(STATE_PROVINCE)', 'x_data': [['', 'Bavaria', 'California', 'Ontario', 'Oxford', 'Texas', 'Washington']], 'y_data': [[1, 1, 1, 1, 1, 1, 21]], 'classify': [], 'describe': 'GROUP BY STATE_PROVINCE'}",bar,STATE_PROVINCE,COUNT(STATE_PROVINCE),", Bavaria, California, Ontario, Oxford, Texas, Washington","1, 1, 1, 1, 1, 1, 21",Group and count the state province attribute of the location table to visualize a bar chart.
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 1, 2, 4, 1",What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Show me a bar chart.
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_ACCOUNT', 'AC_MGR']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_ACCOUNT, AC_MGR","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and department_id , and list in ascending by the DEPARTMENT_ID please."
"SELECT title , SUM(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY title DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(credits)', 'x_data': [['World History', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'International Practicum', 'Immunology', 'Groups and Rings', 'Graph Theory', 'Game Programming', 'Fiction Writing', 'Embedded Systems', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[4, 3, 3, 3, 7, 3, 4, 3, 8, 3, 4, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(credits),"World History, Rock and Roll, Ponzi Schemes, Operating Systems, International Practicum, Immunology, Groups and Rings, Graph Theory, Game Programming, Fiction Writing, Embedded Systems, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","4, 3, 3, 3, 7, 3, 4, 3, 8, 3, 4, 3, 3, 3, 3, 3","What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, could you order in descending by the names?"
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Manufacturer ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'DVD drive', 'Printer', 'Toner cartridge', 'ZIP drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[1, 2, 2, 2.5, 3, 3, 4, 5, 6, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Manufacturer),"Monitor, CD drive, DVD burner, DVD drive, Printer, Toner cartridge, ZIP drive, Hard drive, Floppy disk, Memory","1, 2, 2, 2.5, 3, 3, 4, 5, 6, 6","For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and I want to sort in asc by the y axis please."
"SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY max(age) ASC",Bar,Easy,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'max(age)', 'x_data': [['F', 'M']], 'y_data': [[26, 27]], 'classify': [], 'describe': ''}",bar,Sex,max(age),"F, M","26, 27","Find the oldest age for students with different sex in a bar chart, and I want to sort by the total number from low to high please."
"SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY count(*) ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'CLASS_ROOM', 'y_name': 'count(*)', 'x_data': [['BUS252', 'BUS311', 'KLR209', 'KLR200']], 'y_data': [[2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,CLASS_ROOM,count(*),"BUS252, BUS311, KLR209, KLR200","2, 2, 3, 4","Bar chart of the total number from each class room, and order by the y axis from low to high."
"SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY activity_name ASC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'activity_name', 'y_name': 'count(*)', 'x_data': [['Baseball', 'Canasta', 'Canoeing', 'Chess', 'Crossword Puzzles', 'Extreme Canasta', 'Football', 'Kayaking', 'Mountain Climbing', 'Soccer', 'Spelunking', 'Square Dancing', 'Volleyball']], 'y_data': [[1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,activity_name,count(*),"Baseball, Canasta, Canoeing, Chess, Crossword Puzzles, Extreme Canasta, Football, Kayaking, Mountain Climbing, Soccer, Spelunking, Square Dancing, Volleyball","1, 3, 4, 5, 7, 3, 3, 1, 6, 1, 2, 2, 2","Show all the activity names and the number of faculty involved in each activity Show bar chart, display by the bar in asc."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June', 'Oct']], 'y_data': [[5138, 4960, 3763, 1288, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Aug, July, June, Oct","5138, 4960, 3763, 1288, 206","For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and order by the Y in descending."
"SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY count(*) DESC",Bar,Extra Hard,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Build Your Own Telescope', 'A Silver-Cleaning Battery', 'Juicy: Extracting Apple Juice with Pectinase', 'Aerodynamics and Ice Hockey']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Build Your Own Telescope, A Silver-Cleaning Battery, Juicy: Extracting Apple Juice with Pectinase, Aerodynamics and Ice Hockey","3, 2, 1, 1","Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, order by the Y-axis in descending."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[107.33333333333333, 129.75862068965517, 160, 190.2962962962963, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","107.33333333333333, 129.75862068965517, 160, 190.2962962962963, 206","For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and sort total number from low to high order."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'FI_MGR', 'PU_MAN', 'AD_ASST', 'MK_MAN', 'MK_REP', 'AD_VP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'ST_MAN', 'SA_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 108, 114, 200, 201, 202, 203, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, FI_MGR, PU_MAN, AD_ASST, MK_MAN, MK_REP, AD_VP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT, IT_PROG, FI_ACCOUNT, PU_CLERK, ST_MAN, SA_MAN, ST_CLERK, SH_CLERK, SA_REP","100, 108, 114, 200, 201, 202, 203, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935","For those employees who was hired before 2002-06-21, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, rank from low to high by the Y-axis."
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","1, 1, 2, 1, 1, 1, 1, 1, 1, 1","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the amount of name , and group by attribute name."
"SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['OU', 'FSU', 'LSU', 'ASU']], 'y_data': [[22000, 19000, 18000, 12000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"OU, FSU, LSU, ASU","22000, 19000, 18000, 12000","Return a bar graph for the name of the school that has the smallest enrollment in each state, and I want to rank by the Y-axis in desc."
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,perpetrator,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['China', 'South Korea', 'Japan', 'India']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"China, South Korea, Japan, India","2, 1, 1, 1","What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and sort by the the total number in descending."
"SELECT apt_number , room_count FROM Apartments ORDER BY apt_number DESC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'room_count', 'x_data': [['Suite 749', 'Suite 693', 'Suite 645', 'Suite 634', 'Suite 307', 'Suite 088', 'Apt. 940', 'Apt. 908', 'Apt. 859', 'Apt. 837', 'Apt. 794', 'Apt. 585', 'Apt. 477', 'Apt. 411', 'Apt. 187']], 'y_data': [[8, 9, 7, 8, 9, 6, 8, 7, 6, 8, 3, 5, 3, 9, 9]], 'classify': [], 'describe': ''}",bar,apt_number,room_count,"Suite 749, Suite 693, Suite 645, Suite 634, Suite 307, Suite 088, Apt. 940, Apt. 908, Apt. 859, Apt. 837, Apt. 794, Apt. 585, Apt. 477, Apt. 411, Apt. 187","8, 9, 7, 8, 9, 6, 8, 7, 6, 8, 3, 5, 3, 9, 9","Show me a bar chart for what are the apartment number and the room count of each apartment?, list x-axis from high to low order."
"SELECT Date , Vote_Percent FROM election",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['July 1942', 'October 1942', '1946', '1949', '1953']], 'y_data': [[16.2, 18.5, 19.5, 19.5, 16]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"July 1942, October 1942, 1946, 1949, 1953","16.2, 18.5, 19.5, 19.5, 16",Show vote_percent from each date
"SELECT Sex , SUM(Height) FROM people GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'SUM(Height)', 'x_data': [['F', 'M']], 'y_data': [[395, 1366]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,SUM(Height),"F, M","395, 1366","A bar chart shows the distribution of Sex and the sum of Height , and group by attribute Sex, show in ascending by the bars."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"female, male","25.5, 40","What is the average age for each gender Visualize by bar chart, and show X-axis in ascending order."
"SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Builder', 'y_name': 'COUNT(*)', 'x_data': [['Swindon Works', 'Stephenson', 'SECR Ashford', 'MR Derby', 'GWR Swindon', 'GNR Doncaster', 'GER Stratford', 'GER Hartford', 'Avonside']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Builder,COUNT(*),"Swindon Works, Stephenson, SECR Ashford, MR Derby, GWR Swindon, GNR Doncaster, GER Stratford, GER Hartford, Avonside","1, 1, 1, 1, 2, 1, 1, 1, 1","Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, show in desc by the Builder."
"SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC",Bar,Medium,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(Record_Company)', 'x_data': [['Columbia Masterworks', 'Decca Records', 'Delos Records', 'Deutsche Grammophon', 'EMI', 'Koch Records / Naxos Records', 'Kultur', 'Mercury Records', 'Philips', 'Philips Classics Records', 'RCA']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Record_Company'}",bar,Record_Company,COUNT(Record_Company),"Columbia Masterworks, Decca Records, Delos Records, Deutsche Grammophon, EMI, Koch Records / Naxos Records, Kultur, Mercury Records, Philips, Philips Classics Records, RCA","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",A bar chart for what are the number of the record companies of orchestras in descending order of years in which they were founded?
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AD_PRES', 'AC_MGR', 'FI_MGR', 'HR_REP', 'PR_REP', 'MK_REP', 'AC_ACCOUNT', 'ST_MAN', 'SA_MAN', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[0, 101, 101, 101, 101, 201, 205, 400, 500, 514, 540, 570, 2440, 2440, 4261]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AD_PRES, AC_MGR, FI_MGR, HR_REP, PR_REP, MK_REP, AC_ACCOUNT, ST_MAN, SA_MAN, IT_PROG, FI_ACCOUNT, PU_CLERK, SH_CLERK, ST_CLERK, SA_REP","0, 101, 101, 101, 101, 201, 205, 400, 500, 514, 540, 570, 2440, 2440, 4261","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and rank by the y-axis in asc."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee",Bar,Easy,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Bob Fosse, Cleavant Derricks","5, 2",Give me a histogram for how many musicals has each nominee been nominated for?
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[101, 0, 108, 101, 102.66666666666667, 114, 100, 100, 147, 122, 122.22222222222223, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","101, 0, 108, 101, 102.66666666666667, 114, 100, 100, 147, 122, 122.22222222222223, 100","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, order in asc by the JOB_ID."
"SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[9, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(School_ID),"3–5, 6–2, 8–0","9, 2, 1","Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, and I want to display in asc by the ACC_Road please."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2017', '2016']], 'y_data': [[6, 9]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2017, 2016","6, 9","How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, sort by the Y-axis in ascending."
"SELECT Sex , avg(weight) FROM people GROUP BY sex ORDER BY Sex ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.7142857142857]], 'classify': [], 'describe': ''}",bar,Sex,avg(weight),"F, M","92, 86.7142857142857","What is the averag weights for people of each sex? Show a bar chart, I want to sort by the X from low to high."
"SELECT LName , COUNT(LName) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"") GROUP BY LName ORDER BY LName ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Adams', 'Andreo', 'Brody', 'Brown', 'Cheng', 'Davis', 'Epp', 'Goldman', 'Jones', 'Nelson', 'Pang', 'Prater', 'Rugh', 'Schmidt', 'Simms', 'Smith', 'Tai', 'Thornton', 'Wilson']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Adams, Andreo, Brody, Brown, Cheng, Davis, Epp, Goldman, Jones, Nelson, Pang, Prater, Rugh, Schmidt, Simms, Smith, Tai, Thornton, Wilson","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1","What is the last name of each student who is not allergic to any type of food? Count them with a bar chart, I want to rank in ascending by the bar."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of  job_id and the sum of employee_id , and group by attribute job_id."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = ""Clara"") AND first_name != ""Clara""",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[5, 4, 5, 4, 5, 5, 5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","5, 4, 5, 4, 5, 5, 5","For all employees in the same department as Clara excluding Clara, bin their hire date into the day of week interval, and count how many employees in each month for a bar chart."
"SELECT Country , count(*) FROM airport GROUP BY country ORDER BY count(*) DESC",Bar,Medium,flight_company,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Spain', 'Norway', 'Netherlands', 'Iceland', 'Denmark', 'Belgium']], 'y_data': [[3, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Spain, Norway, Netherlands, Iceland, Denmark, Belgium","3, 1, 1, 1, 1, 1, 1","Show me the total number by country in a histogram, sort total number from high to low order please."
"SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER",Bar,Easy,program_share,"{'chart': 'bar', 'x_name': 'Owner', 'y_name': 'sum(Rating_in_percent)', 'x_data': [['Anhui Television', 'CCTV', 'HBS', 'Shandong Television']], 'y_data': [[0.2, 2.43, 0.53, 0.19]], 'classify': [], 'describe': ''}",bar,Owner,sum(Rating_in_percent),"Anhui Television, CCTV, HBS, Shandong Television","0.2, 2.43, 0.53, 0.19",A bar chart about what is the total rating of channel for each channel owner?
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'ART', 'BIOL', 'CIS', 'ECON/FIN', 'ENG', 'HIST', 'MATH', 'MKT/MGT', 'PSYCH', 'SOC']], 'y_data': [[3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, ART, BIOL, CIS, ECON/FIN, ENG, HIST, MATH, MKT/MGT, PSYCH, SOC","3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1",A bar chart about how many professors have a Ph.D. in each department?
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title ORDER BY Title ASC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case of the Bermuda Triangle', 'The Case of the Mystery Weekend', 'The Case of the Piggy Banker', 'The Case of the Smart Dummy', 'The Case: Off the Record']], 'y_data': [[9.99, 15.99, 12.99, 12.99, 8.99]], 'classify': [], 'describe': ''}",bar,Title,max(T1.price),"The Case of the Bermuda Triangle, The Case of the Mystery Weekend, The Case of the Piggy Banker, The Case of the Smart Dummy, The Case: Off the Record","9.99, 15.99, 12.99, 12.99, 8.99","What are the title and maximum price of each film, and display from low to high by the bars."
"SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'Room', 'y_name': 'count(*)', 'x_data': [['AOB', 'CAS', 'FNA', 'HBB', 'IBD', 'IBS', 'MWC', 'RND', 'RTE', 'TAA']], 'y_data': [[51, 69, 66, 60, 63, 59, 56, 62, 55, 59]], 'classify': [], 'describe': ''}",bar,Room,count(*),"AOB, CAS, FNA, HBB, IBD, IBS, MWC, RND, RTE, TAA","51, 69, 66, 60, 63, 59, 56, 62, 55, 59","Return the room and number of reservations made for each of the rooms to draw a bar chart, order by the x axis in asc."
"SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC",Bar,Hard,store_product,"{'chart': 'bar', 'x_name': 'Headquartered_City', 'y_name': 'count(*)', 'x_data': [['Bahawalpur City', 'Bhakkar City', 'Hafizabad City', 'Khanewal City']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Headquartered_City,count(*),"Bahawalpur City, Bhakkar City, Hafizabad City, Khanewal City","1, 1, 1, 2","Draw a bar chart for how many stores are headquarted in each city?, sort in asc by the the total number ."
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_departed) DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[6, 3, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_departed BY WEEKDAY'}",bar,date_departed,COUNT(date_departed),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","6, 3, 0, 0, 0, 0, 0","Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday, show in descending by the total number."
"SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Grażyna Wolszczak', 'Władysław Grzywna', 'Maria Góralczyk', 'Kamila Porczyk']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Grażyna Wolszczak, Władysław Grzywna, Maria Góralczyk, Kamila Porczyk","2, 1, 1, 1","Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart, and I want to list by the Y in desc."
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Mavris', 'Higgins', 'Hartstein', 'Grant', 'Gietz', 'Fay', 'Baer']], 'y_data': [[0, 0, 0, 0.15, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Mavris, Higgins, Hartstein, Grant, Gietz, Fay, Baer","0, 0, 0, 0.15, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name by a bar chart, and order bars in desc order."
"SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC",Bar,Medium,shop_membership,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(Hometown)', 'x_data': [['Collierville, Tennessee', 'Columbia, South Carolina', 'Fort Campbell, Kentucky', 'Hiram, Georgia', 'Jacksonville, Florida', 'LaGrange, Georgia', 'Louisville, Kentucky', 'Red Jacket, West Virginia', 'Simpsonville, South Carolina']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Hometown'}",bar,Hometown,COUNT(Hometown),"Collierville, Tennessee, Columbia, South Carolina, Fort Campbell, Kentucky, Hiram, Georgia, Jacksonville, Florida, LaGrange, Georgia, Louisville, Kentucky, Red Jacket, West Virginia, Simpsonville, South Carolina","1, 1, 1, 1, 1, 1, 2, 1, 1","Count the hometown by hometown, I want to sort by the X-axis in asc."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['June', 'July', 'Sept', 'Aug', 'Oct']], 'y_data': [[96.78571428571429, 116.45161290322581, 124.7, 139.16129032258064, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"June, July, Sept, Aug, Oct","96.78571428571429, 116.45161290322581, 124.7, 139.16129032258064, 205","For those employees who was hired before 2002-06-21, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart, and could you list from low to high by the the average of manager id please?"
"SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY Team ASC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['CHC', 'CLE', 'CWS', 'NYY', 'PHA']], 'y_data': [[1, 4, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"CHC, CLE, CWS, NYY, PHA","1, 4, 2, 2, 1","Show different teams of technicians and the number of technicians in each team with a bar chart, and show by the names in ascending."
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype ORDER BY AllergyType ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","8, 23, 28","Show all allergy type with number of students affected with a bar chart, rank bars in ascending order please."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Oct', 'June', 'Sept', 'Aug', 'July']], 'y_data': [[1, 14, 30, 31, 31]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Oct, June, Sept, Aug, July","1, 14, 30, 31, 31","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and sort in asc by the how many hire date."
"SELECT County , count(*) FROM school GROUP BY county ORDER BY County ASC",Bar,Medium,school_finance,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'count(*)', 'x_data': [['20 Elkhart', '46 LaPorte 71 St. Joseph', '50 Marshall', '71 St. Joseph', '75 Starke']], 'y_data': [[1, 1, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,County,count(*),"20 Elkhart, 46 LaPorte 71 St. Joseph, 50 Marshall, 71 St. Joseph, 75 Starke","1, 1, 3, 2, 1","Draw a bar chart of county versus the total number, and display by the X in asc."
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AD_PRES', 'PU_MAN', 'SA_MAN', 'AC_MGR', 'HR_REP', 'ST_MAN', 'IT_PROG', 'PU_CLERK', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[0, 100, 100, 101, 101, 200, 308, 342, 432, 1098, 1100, 1911]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AD_PRES, PU_MAN, SA_MAN, AC_MGR, HR_REP, ST_MAN, IT_PROG, PU_CLERK, FI_ACCOUNT, SH_CLERK, ST_CLERK, SA_REP","0, 100, 100, 101, 101, 200, 308, 342, 432, 1098, 1100, 1911","For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, display from low to high by the y axis please."
"SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'avg(Tonnage)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[3932.2, 4845]], 'classify': [], 'describe': ''}",bar,Type,avg(Tonnage),"Cargo ship, Battle ship","3932.2, 4845","For each type, what is the average tonnage, I want to sort Y-axis in asc order."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[4, 3, 3, 1, 6, 5, 6, 2.5, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","4, 3, 3, 1, 6, 5, 6, 2.5, 2, 2","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, I want to list in desc by the names."
"SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name DESC",Bar,Hard,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Władysław Grzywna', 'Piotr Pręgowski', 'Maria Góralczyk', 'Marek Siudym', 'Kamila Porczyk', 'Grażyna Wolszczak']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Władysław Grzywna, Piotr Pręgowski, Maria Góralczyk, Marek Siudym, Kamila Porczyk, Grażyna Wolszczak","1, 1, 1, 1, 1, 2","Just compare the number of journal committees of each editor using a histogram, and list in desc by the bar."
"SELECT role_code , count(*) FROM users GROUP BY role_code",Bar,Easy,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['DBA', 'PROJ-MGR']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"DBA, PROJ-MGR","8, 7","What are the different role codes for users, and how many users have each. Show bar chart."
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY Fname DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Tracy', 'Stacy', 'Shiela', 'Sarah', 'Michael']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Tracy, Stacy, Shiela, Sarah, Michael","1, 1, 1, 2, 1","A bar chart for what are the number of the first names of all students in Smith Hall?, and could you display by the Fname from high to low?"
"SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'cell_number', 'y_name': 'professional_id', 'x_data': [['00230569697', '139-321-7313', '328.842.3792', '962-983-8109x3509', '461-801-2600', '1-185-137-1945x409']], 'y_data': [[4, 6, 8, 9, 10, 14]], 'classify': [], 'describe': ''}",bar,cell_number,professional_id,"00230569697, 139-321-7313, 328.842.3792, 962-983-8109x3509, 461-801-2600, 1-185-137-1945x409","4, 6, 8, 9, 10, 14","Find the id and cell phone of the professionals who operate two or more types of treatments, could you order in asc by the Y-axis?"
"SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(*)', 'x_data': [['Bell Centre', 'Madison Square Garden', 'Scotiabank Place', 'TD Garden', 'Verizon Center']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Location,COUNT(*),"Bell Centre, Madison Square Garden, Scotiabank Place, TD Garden, Verizon Center","1, 1, 1, 1, 2","Show different locations and the number of performances at each location Visualize by bar chart, display the total number from low to high order."
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"14–2, 13–3, 10–6, 9–7","0.946, 0.8240000000000001, 0.706, 0.6",A bar chart shows the distribution of  ACC_Regular_Season and  All_Games_Percent .
"SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY COUNT(attribute_name) DESC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'attribute_name', 'y_name': 'COUNT(attribute_name)', 'x_data': [['Sweet', 'Black', 'Yellow']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': 'GROUP BY attribute_name'}",bar,attribute_name,COUNT(attribute_name),"Sweet, Black, Yellow","3, 3, 2","Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, I want to display the number of attribute name in descending order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[106.5, 129, 160, 190.5, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"June, July, Aug, Sept, Oct","106.5, 129, 160, 190.5, 206","For those employees who was hired before 2002-06-21, find  hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart."
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY max(product_price) ASC",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","Bar chart x axis product type code y axis maximal product price, and could you sort by the maximal product price in ascending?"
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[79600, 94300, 124400, 108200, 94800, 97400, 86200]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","79600, 94300, 124400, 108200, 94800, 97400, 86200","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 90, 100, 100, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 90, 100, 100, 60, 20, 20, 70, 30, 30, 80, 77.33333333333333, 50, 50, 50","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the  job_id , and group by attribute job_id by a bar chart."
"SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code ASC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'facility_code', 'y_name': 'COUNT(facility_code)', 'x_data': [['Cable TV', 'Gym']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY facility_code'}",bar,facility_code,COUNT(facility_code),"Cable TV, Gym","1, 2","What are the number of the facility codes of the apartments with more than four bedrooms?, could you sort by the bars in asc?"
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['MK_REP', 'HR_REP', 'AC_ACCOUNT', 'PR_REP', 'AC_MGR', 'FI_MGR', 'PU_CLERK', 'AD_PRES', 'ST_MAN', 'IT_PROG', 'FI_ACCOUNT', 'ST_CLERK', 'SA_MAN', 'SH_CLERK', 'SA_REP']], 'y_data': [[6000, 6500, 8300, 10000, 12000, 12000, 13900, 24000, 28500, 28800, 39600, 55700, 61000, 64300, 241900]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"MK_REP, HR_REP, AC_ACCOUNT, PR_REP, AC_MGR, FI_MGR, PU_CLERK, AD_PRES, ST_MAN, IT_PROG, FI_ACCOUNT, ST_CLERK, SA_MAN, SH_CLERK, SA_REP","6000, 6500, 8300, 10000, 12000, 12000, 13900, 24000, 28500, 28800, 39600, 55700, 61000, 64300, 241900","For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, could you sort by the Y in ascending please?"
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","What is the highest price of product, grouped by product type? Show a bar chart."
"SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY count(*) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'CLASS_ROOM', 'y_name': 'count(*)', 'x_data': [['KLR200', 'KLR209', 'BUS311', 'BUS252']], 'y_data': [[4, 3, 2, 2]], 'classify': [], 'describe': ''}",bar,CLASS_ROOM,count(*),"KLR200, KLR209, BUS311, BUS252","4, 3, 2, 2","For each classroom with at least 2 classes, how many classes are offered, list from high to low by the y axis please."
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Astronomy', 'Comp. Sci.', 'Cybernetics', 'Finance', 'Geology', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.']], 'y_data': [[79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Astronomy, Comp. Sci., Cybernetics, Finance, Geology, Marketing, Mech. Eng., Physics, Pol. Sci.","79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8","Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and could you rank by the x axis in asc?"
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[200, 1000, 1000, 2240, 400, 150, 70, 20, 300, 40, 100, 500, 90, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","200, 1000, 1000, 2240, 400, 150, 70, 20, 300, 40, 100, 500, 90, 110, 110","For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, list in desc by the names."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY count(*) DESC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['New Lonzoville', 'Nataliamouth', 'Jasthaven', 'West Sherwoodstad', 'South Eugenia', 'Rueckermouth', 'Purdyville', 'Port Maximeview', 'Monahanshire', 'Macejkovicchester', 'Feliciaberg', 'Chrisside']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"New Lonzoville, Nataliamouth, Jasthaven, West Sherwoodstad, South Eugenia, Rueckermouth, Purdyville, Port Maximeview, Monahanshire, Macejkovicchester, Feliciaberg, Chrisside","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many drama workshop groups are there in each city? Return both the city and the count Plot them as bar chart, order by the y-axis from high to low please."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[125, 240, 150, 486, 240, 450]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","125, 240, 150, 486, 240, 450","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of price , and group by attribute name, sort in desc by the x-axis."
"SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'COUNT(Headquarter)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[3, 1, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,COUNT(Headquarter),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","3, 1, 3, 2, 1, 1","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter, display by the X from low to high please."
"SELECT Sex , avg(weight) FROM people GROUP BY sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.7142857142857]], 'classify': [], 'describe': ''}",bar,Sex,avg(weight),"F, M","92, 86.7142857142857",Show the average of weight from each sex
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Kyle', 'John', 'Jessica', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Kyle, John, Jessica, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","1, 1, 1, 2, 1, 1, 1, 1, 1","Show the number of names of high schoolers who have likes with a bar chart, and list from high to low by the names."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[67.5, 72, 60.90909090909091, 46, 67.14285714285714, 58.888888888888886, 86.66666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","67.5, 72, 60.90909090909091, 46, 67.14285714285714, 58.888888888888886, 86.66666666666667","For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the  hire_date bin hire_date by weekday by a bar chart."
"SELECT Name , Age FROM editor ORDER BY Age DESC",Bar,Easy,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Grażyna Wolszczak', 'Piotr Pręgowski', 'Maria Góralczyk', 'Anna Powierza', 'Kamila Porczyk', 'Mariusz Zalejski', 'Władysław Grzywna', 'Marek Siudym', 'Szymon Wydra']], 'y_data': [[54, 43, 38, 35, 34, 25, 24, 21, 20]], 'classify': [], 'describe': ''}",bar,Name,Age,"Grażyna Wolszczak, Piotr Pręgowski, Maria Góralczyk, Anna Powierza, Kamila Porczyk, Mariusz Zalejski, Władysław Grzywna, Marek Siudym, Szymon Wydra","54, 43, 38, 35, 34, 25, 24, 21, 20","What are the names and ages of editors? Show me a bar chart, and sort in descending by the y-axis."
"SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY count(*) ASC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['City Mall', 'Village Store']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"City Mall, Village Store","2, 3","Bar chart x axis type y axis the total number, display Y-axis in asc order."
"SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Hartstein', 'Baer', 'Higgins', 'Mavris', 'Grant', 'Fay', 'Gietz']], 'y_data': [[100, 101, 101, 101, 149, 201, 205]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Hartstein, Baer, Higgins, Mavris, Grant, Fay, Gietz","100, 101, 101, 101, 149, 201, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name by a bar chart, and show by the total number in ascending."
"SELECT LAST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Grant', 'Fay', 'Hartstein', 'Mavris', 'Baer', 'Gietz', 'Higgins']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,LAST_NAME,DEPARTMENT_ID,"Grant, Fay, Hartstein, Mavris, Baer, Gietz, Higgins","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id , could you sort in ascending by the y-axis?"
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['F', 'T']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,COUNT(Is_full_time),"F, T","2, 5","Return a bar chart about the distribution of  Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time."
"SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY Name ASC",Bar,Hard,phone_market,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['IPhone 5s', 'IPhone 6s', 'IPhone 7', 'IPhone X']], 'y_data': [[2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"IPhone 5s, IPhone 6s, IPhone 7, IPhone X","2, 1, 1, 2","Compare the number of the names of phones by a bar chart, and display by the x axis in asc."
"SELECT city_code , count(*) FROM Student GROUP BY city_code",Bar,Easy,allergy_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['ATL', 'BAL', 'BOS', 'CHI', 'DAL', 'DET', 'HKG', 'HOU', 'LON', 'LOS', 'NAR', 'NYC', 'PEK', 'PHL', 'PIT', 'ROC', 'SFO', 'WAS', 'YYZ']], 'y_data': [[1, 4, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 3, 4, 1, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"ATL, BAL, BOS, CHI, DAL, DET, HKG, HOU, LON, LOS, NAR, NYC, PEK, PHL, PIT, ROC, SFO, WAS, YYZ","1, 4, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 3, 4, 1, 1, 3, 2",A bar chart about how many students live in each city?
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[101, 0, 432, 101, 308, 342, 100, 100, 1911, 1098, 1100, 200]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","101, 0, 432, 101, 308, 342, 100, 100, 1911, 1098, 1100, 200","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and list in asc by the X."
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['9–7', '10–6', '13–3', '14–2']], 'y_data': [[0.563, 0.625, 0.813, 0.875]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,ACC_Percent,"9–7, 10–6, 13–3, 14–2","0.563, 0.625, 0.813, 0.875","Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show by the y-axis from low to high."
"SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name ORDER BY avg(T1.age) DESC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'avg(T1.age)', 'x_data': [['Smith Hall', 'Bud Jones Hall', 'Fawlty Towers', 'Anonymous Donor Hall', 'Dorm-plex 2000', 'University Hovels', 'Grad Student Asylum']], 'y_data': [[20.166666666666668, 20, 19.777777777777782, 19.666666666666668, 19.6, 18, 18]], 'classify': [], 'describe': ''}",bar,dorm_name,avg(T1.age),"Smith Hall, Bud Jones Hall, Fawlty Towers, Anonymous Donor Hall, Dorm-plex 2000, University Hovels, Grad Student Asylum","20.166666666666668, 20, 19.777777777777782, 19.666666666666668, 19.6, 18, 18","Visualize a bar chart for what is the average age for each dorm and what are the names of each dorm?, and could you show Y-axis from high to low order please?"
"SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 165, 5, 240, 120, 240, 270, 66, 150]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 165, 5, 240, 120, 240, 270, 66, 150","Return a bar chart on what are the names and prices of all products in the store?, and I want to show in asc by the x axis."
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Afghanistan', 'Albania', 'Algeria', 'Denmark']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Afghanistan, Albania, Algeria, Denmark","2, 2, 1, 1","How many storms occured in each region Visualize by bar chart, and show bars from low to high order."
"SELECT Sex , AVG(Height) FROM people GROUP BY Sex",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Height)', 'x_data': [['F', 'M']], 'y_data': [[197.5, 195.14285714285714]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Height),"F, M","197.5, 195.14285714285714","Show me about the distribution of  Sex and the average of Height , and group by attribute Sex in a bar chart."
"SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'AVG(salary)', 'x_data': [['Statistics', 'Psychology', 'Pol. Sci.', 'Physics', 'Mech. Eng.', 'Marketing', 'Languages', 'Geology', 'Finance', 'English', 'Elec. Eng.', 'Cybernetics', 'Comp. Sci.', 'Biology', 'Athletics', 'Astronomy', 'Accounting']], 'y_data': [[67795.44166666668, 61143.05, 100053.07333333332, 114576.9, 79813.02, 84097.4375, 57421.85666666668, 99382.59, 105311.38, 72089.04999999999, 74162.73999999999, 96346.5675, 98133.47, 61287.25, 77098.198, 79070.08, 48716.5925]], 'classify': [], 'describe': ''}",bar,dept_name,AVG(salary),"Statistics, Psychology, Pol. Sci., Physics, Mech. Eng., Marketing, Languages, Geology, Finance, English, Elec. Eng., Cybernetics, Comp. Sci., Biology, Athletics, Astronomy, Accounting","67795.44166666668, 61143.05, 100053.07333333332, 114576.9, 79813.02, 84097.4375, 57421.85666666668, 99382.59, 105311.38, 72089.04999999999, 74162.73999999999, 96346.5675, 98133.47, 61287.25, 77098.198, 79070.08, 48716.5925","Find the names and average salaries of all departments whose average salary is greater than 42000, show by the x axis from high to low."
"SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title ORDER BY Title DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'max(T1.price)', 'x_data': [['The Case: Off the Record', 'The Case of the Smart Dummy', 'The Case of the Piggy Banker', 'The Case of the Mystery Weekend', 'The Case of the Bermuda Triangle']], 'y_data': [[8.99, 12.99, 12.99, 15.99, 9.99]], 'classify': [], 'describe': ''}",bar,Title,max(T1.price),"The Case: Off the Record, The Case of the Smart Dummy, The Case of the Piggy Banker, The Case of the Mystery Weekend, The Case of the Bermuda Triangle","8.99, 12.99, 12.99, 15.99, 9.99","Give me the title and highest price for each film Show bar chart, display in descending by the X."
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Kimberely', 'Michael', 'Pat', 'Susan', 'Hermann', 'Shelley', 'William']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"Kimberely, Michael, Pat, Susan, Hermann, Shelley, William","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, find  first_name and  department_id , and visualize them by a bar chart."
"SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = ""Male""  ORDER BY COUNT(date_of_birth) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['Mon', 'Sun', 'Thur', 'Wed', 'Fri', 'Sat', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 1]], 'classify': [], 'describe': 'BIN date_of_birth BY WEEKDAY'}",bar,date_of_birth,COUNT(date_of_birth),"Mon, Sun, Thur, Wed, Fri, Sat, Tue","0, 0, 0, 0, 1, 1, 1","What are the number of dates of birth of all the guests whose gender is ""Male""?, and sort Y in ascending order please."
"SELECT Aircraft , COUNT(Aircraft) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY Aircraft",Bar,Medium,aircraft,"{'chart': 'bar', 'x_name': 'Aircraft', 'y_name': 'COUNT(Aircraft)', 'x_data': [['Bell 206B3 JetRanger', 'CH-47D Chinook', 'CH-53E Super Stallion', 'Mil Mi-26', 'Robinson R-22']], 'y_data': [[1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Aircraft'}",bar,Aircraft,COUNT(Aircraft),"Bell 206B3 JetRanger, CH-47D Chinook, CH-53E Super Stallion, Mil Mi-26, Robinson R-22","1, 1, 1, 2, 2",Please list the number of each winning aircraft in a bar chart.
"SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2017-01-01', '2016-01-01']], 'y_data': [[20, 2]], 'classify': [], 'describe': 'GROUP BY year'}",bar,year,COUNT(year),"2017-01-01, 2016-01-01","20, 2","Show me a bar chart about the number of races held in each year after 2014, and order X-axis from high to low order please."
"SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T"" GROUP BY Language ORDER BY COUNT(Language) DESC",Bar,Extra Hard,world_1,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'COUNT(Language)', 'x_data': [['Dutch', 'Papiamento']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Language'}",bar,Language,COUNT(Language),"Dutch, Papiamento","3, 1","What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart, and order by the total number from high to low."
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name DESC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Vicente Carretero', 'Lucy Wong', 'Kearsley Brown', 'Gustaaf Deloor', 'Anne Walker']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Vicente Carretero, Lucy Wong, Kearsley Brown, Gustaaf Deloor, Anne Walker","1, 1, 1, 1, 2","Show the number of courses each teacher teaches in a bar chart, rank in desc by the x axis please."
"SELECT languages , avg(rating) FROM song GROUP BY languages",Bar,Easy,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['bangla', 'english']], 'y_data': [[7.5, 7]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"bangla, english","7.5, 7",What is the average song rating for each language. Plot them as bar chart.
"SELECT Date_of_Birth , Height FROM people",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['06.10.1976', '10.11.1972', '03.02.1976', '05.05.1972', '10.03.1976', '01.09.1977', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[188, 197, 200, 202, 195, 196, 193, 194, 196]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"06.10.1976, 10.11.1972, 03.02.1976, 05.05.1972, 10.03.1976, 01.09.1977, 20.08.1970, 22.04.1977, 28.09.1981","188, 197, 200, 202, 195, 196, 193, 194, 196",Return a bar chart about the distribution of  Date_of_Birth and  Height .
"SELECT Name , Damage_millions_USD FROM storm ORDER BY max_speed DESC",Bar,Easy,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Damage_millions_USD', 'x_data': [['Nine', 'Six', 'One', 'Five', 'Eight', 'Seven', 'Two', 'Three', 'Four', '9 cyclones']], 'y_data': [[13, 0.039, 13, 1.49, 13, 13, 10.75, 13, 4.05, 29.3]], 'classify': [], 'describe': ''}",bar,Name,Damage_millions_USD,"Nine, Six, One, Five, Eight, Seven, Two, Three, Four, 9 cyclones","13, 0.039, 13, 1.49, 13, 13, 10.75, 13, 4.05, 29.3","Display a bar chart for what are the names and damage in millions for storms, ordered by their max speeds descending?"
"SELECT JOB_ID , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'SA_MAN', 'ST_MAN', 'AC_ACCOUNT', 'MK_REP', 'PR_REP', 'HR_REP', 'FI_MGR', 'AC_MGR', 'AD_PRES']], 'y_data': [[4261, 2440, 2440, 570, 540, 514, 500, 400, 205, 201, 101, 101, 101, 101, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, SA_MAN, ST_MAN, AC_ACCOUNT, MK_REP, PR_REP, HR_REP, FI_MGR, AC_MGR, AD_PRES","4261, 2440, 2440, 570, 540, 514, 500, 400, 205, 201, 101, 101, 101, 101, 0","For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, order Y-axis in desc order please."
"SELECT City , count(*) FROM employee GROUP BY city ORDER BY count(*) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'City', 'y_name': 'count(*)', 'x_data': [['Leicester', 'Sale', 'Wasps', 'Bath', 'Bristol']], 'y_data': [[1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,City,count(*),"Leicester, Sale, Wasps, Bath, Bristol","1, 1, 2, 3, 3","Bar chart of the total number from each city, and display total number from low to high order."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[3.4, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"T, F","3.4, 5","Return a bar chart about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, could you show X-axis in descending order?"
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'History', 'Languages', 'Marketing', 'Math', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Accounting, Astronomy, Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, History, Languages, Marketing, Math, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21","Find the total credits of courses provided by different department Plot them as bar chart, could you sort in ascending by the x-axis?"
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[62.5, 240, 150, 162, 240, 150]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","62.5, 240, 150, 162, 240, 150","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, could you sort from high to low by the X-axis?"
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' ORDER BY COUNT(payment_date) DESC",Bar,Extra Hard,sakila_1,"{'chart': 'bar', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['July', 'Aug', 'June', 'May']], 'y_data': [[47, 47, 15, 5]], 'classify': [], 'describe': 'BIN payment_date BY MONTH'}",bar,payment_date,COUNT(payment_date),"July, Aug, June, May","47, 47, 15, 5","Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, could you list from high to low by the Y-axis please?"
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY City_Population ASC",Bar,Medium,store_product,"{'chart': 'bar', 'x_name': 'District_name', 'y_name': 'City_Population', 'x_data': [['Chiniot District', 'Kasur District', 'Gujrat District', 'Jhang District', 'Dera Ghazi Khan District', 'Bahawalpur District', 'Gujranwala District']], 'y_data': [[219254, 314617, 328512, 365198, 464742, 530438, 1526168]], 'classify': [], 'describe': ''}",bar,District_name,City_Population,"Chiniot District, Kasur District, Gujrat District, Jhang District, Dera Ghazi Khan District, Bahawalpur District, Gujranwala District","219254, 314617, 328512, 365198, 464742, 530438, 1526168","Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the City_Population in ascending."
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer']], 'y_data': [[45, 35]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer","45, 35","Draw a bar chart for what is average age of male for different job title?, and show Y in desc order."
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Baer', 'Fay', 'Gietz', 'Hartstein', 'Higgins', 'Mavris', 'Grant']], 'y_data': [[0, 0, 0, 0, 0, 0, 0.15]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Baer, Fay, Gietz, Hartstein, Higgins, Mavris, Grant","0, 0, 0, 0, 0, 0, 0.15","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , and sort by the total number in asc."
"SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[1, 5, 6, 3, 4, 2]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Manufacturer),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","1, 5, 6, 3, 4, 2","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, I want to sort by the x-axis in descending."
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"3–5, 6–2, 8–0","3.5, 2, 1",Give me a bar chart for the average of team id of each acc road
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['July', 'Aug', 'Sept', 'June']], 'y_data': [[15, 13, 12, 8]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"July, Aug, Sept, June","15, 13, 12, 8","For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, display by the y-axis in descending."
"SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC",Bar,Medium,school_finance,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'count(*)', 'x_data': [['50 Marshall', '71 St. Joseph', '75 Starke', '46 LaPorte 71 St. Joseph', '20 Elkhart']], 'y_data': [[3, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,County,count(*),"50 Marshall, 71 St. Joseph, 75 Starke, 46 LaPorte 71 St. Joseph, 20 Elkhart","3, 2, 1, 1, 1","Return a bar chart showing the number of schools in each county, and rank y axis from high to low order please."
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY COUNT(Location) DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Tokyo , Japan', 'Tijuana , Mexico', 'Sapporo , Japan', 'Osaka , Japan', 'Nagoya , Japan']], 'y_data': [[4, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Tokyo , Japan, Tijuana , Mexico, Sapporo , Japan, Osaka , Japan, Nagoya , Japan","4, 3, 1, 1, 1","What is the number of locations of the wrestlers? Visualize by a bar chart, and I want to sort by the Y in desc."
"SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""  ORDER BY COUNT(date_of_latest_logon) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_latest_logon', 'y_name': 'COUNT(date_of_latest_logon)', 'x_data': [['Fri', 'Mon', 'Sun', 'Thur', 'Tue', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN date_of_latest_logon BY WEEKDAY'}",bar,date_of_latest_logon,COUNT(date_of_latest_logon),"Fri, Mon, Sun, Thur, Tue, Wed, Sat","0, 0, 0, 0, 0, 0, 2","A bar chart for what are the number of the dates of the latest logon of the students with family name ""Jaskolski"" or ""Langosh""?, and order total number in asc order."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY count(*) DESC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Lesb. M/SF', 'Gay M/SF', 'Gay SF/F']], 'y_data': [[5, 5, 2]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Lesb. M/SF, Gay M/SF, Gay SF/F","5, 5, 2","Visualize a bar chart for how many books fall into each category?, sort the total number in descending order."
"SELECT Hometown , Age FROM teacher ORDER BY Hometown DESC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Turton Urban District', 'Little Lever Urban District', 'Kearsley Urban District', 'Horwich Urban District', 'Farnworth Municipal Borough', 'Bolton County Borough', 'Blackrod Urban District']], 'y_data': [[39, 41, 45, 33, 26, 29, 32]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Turton Urban District, Little Lever Urban District, Kearsley Urban District, Horwich Urban District, Farnworth Municipal Borough, Bolton County Borough, Blackrod Urban District","39, 41, 45, 33, 26, 29, 32","Return a histogram on what are the age and hometown of teachers?, could you show by the x axis from high to low?"
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[1355, 3610, 4314, 3640, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"June, July, Aug, Sept, Oct","1355, 3610, 4314, 3640, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the  hire_date bin hire_date by time."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['John', 'Mary', 'Andy', 'Robert', 'Owen', 'James']], 'y_data': [[1, 3, 5, 6, 23, 28]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"John, Mary, Andy, Robert, Owen, James","1, 3, 5, 6, 23, 28","For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, display y-axis from low to high order please."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2016', '2017']], 'y_data': [[6, 3]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2016, 2017","6, 3","Show the number of start dates of all the apartment bookings made by guests with gender code ""Female"" for each year with a bar chart."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Cleavant Derricks', 'Bob Fosse']], 'y_data': [[2, 5]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Cleavant Derricks, Bob Fosse","2, 5","Give me a histogram for how many musicals has each nominee been nominated for?, show in desc by the X."
"SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Age DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'Age', 'x_data': [['Tracy', 'Linda']], 'y_data': [[19, 18]], 'classify': [], 'describe': ''}",bar,Fname,Age,"Tracy, Linda","19, 18","What are the different first names and ages of the students who do have pets Visualize by bar chart, and display Y from high to low order."
"SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Revenue)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[120, 50, 130, 200, 100, 30]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Revenue),"Andy, James, John, Mary, Owen, Robert","120, 50, 130, 200, 100, 30","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  founder and the average of revenue , and group by attribute founder."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[123, 120.28571428571429, 115.13333333333334, 135, 128.3846153846154, 122.71428571428571, 129.46666666666667]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","123, 120.28571428571429, 115.13333333333334, 135, 128.3846153846154, 122.71428571428571, 129.46666666666667","For those employees who did not have any job in the past, return a bar chart about the distribution of  hire_date and the average of manager_id bin hire_date by weekday."
"SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Manufacturer DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Memory', 'Toner cartridge', 'CD drive']], 'y_data': [[6, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,Manufacturer,"Memory, Toner cartridge, CD drive","6, 3, 2","For those products with a price between 60 and 120, return a bar chart about the distribution of name and manufacturer , and sort in desc by the y-axis."
"SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['William', 'Susan', 'Shelley', 'Pat', 'Michael', 'Kimberely', 'Hermann']], 'y_data': [[8300, 6500, 12000, 6000, 13000, 7000, 10000]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"William, Susan, Shelley, Pat, Michael, Kimberely, Hermann","8300, 6500, 12000, 6000, 13000, 7000, 10000","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary , show bar in descending order."
"SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'subject_name', 'y_name': 'COUNT(*)', 'x_data': [['Computer Science', 'Arts', 'Language']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",bar,subject_name,COUNT(*),"Computer Science, Arts, Language","6, 4, 5",How many courses for each subject? Plot a bar chart.
"SELECT Name , Weight FROM people ORDER BY Name DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Weight', 'x_data': [['Vincent Montméat', 'Stéphane Antiga', 'Philippe Barça-Cysique', 'Loïc De Kergret', 'Laurent Capet', 'Hubert Henno', 'Guillaume Samica', 'Frantz Granvorka', 'Dominique Daquin']], 'y_data': [[88, 94, 88, 89, 92, 83, 82, 90, 85]], 'classify': [], 'describe': ''}",bar,Name,Weight,"Vincent Montméat, Stéphane Antiga, Philippe Barça-Cysique, Loïc De Kergret, Laurent Capet, Hubert Henno, Guillaume Samica, Frantz Granvorka, Dominique Daquin","88, 94, 88, 89, 92, 83, 82, 90, 85","Return a bar chart about the distribution of Name and Weight , and could you sort in desc by the Name please?"
"SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'max(revenue)', 'x_data': [['Creative Labs', 'Iomega', 'Hewlett-Packard', 'Winchester', 'Fujits', 'Sony']], 'y_data': [[100, 200, 50, 30, 130, 120]], 'classify': [], 'describe': ''}",bar,Name,max(revenue),"Creative Labs, Iomega, Hewlett-Packard, Winchester, Fujits, Sony","100, 200, 50, 30, 130, 120",Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city.
"SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Animal Behavior', 'Embedded Systems', 'Marine Mammals', 'Networking', 'Race Car Driving', 'Surfing', 'Transaction Processing', 'World History', 'Elastic Structures']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Animal Behavior, Embedded Systems, Marine Mammals, Networking, Race Car Driving, Surfing, Transaction Processing, World History, Elastic Structures","1, 1, 1, 1, 1, 1, 1, 1, 2","List the number of instructors for each course in year 2008 with a bar chart, list in asc by the y axis."
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY catalog_entry_name DESC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Root beer', 'Ginger Beer', 'Cola', 'Carbonated Water']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Root beer, Ginger Beer, Cola, Carbonated Water","1, 1, 2, 1","What are the names of catalog entries with level number 8, and count them by a bar chart, and order by the X in descending."
"SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'COUNT(Product_Name)', 'x_data': [['Business Policy', 'Business Policy B', 'Dinning', 'Men suits']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Product_Name'}",bar,Product_Name,COUNT(Product_Name),"Business Policy, Business Policy B, Dinning, Men suits","1, 1, 2, 1",A bar chart for listing the number of the names of products that are not in any event.
"SELECT bedType , COUNT(bedType) FROM Rooms WHERE decor = ""traditional"" GROUP BY bedType ORDER BY bedType ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'COUNT(bedType)', 'x_data': [['King', 'Queen']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY bedType'}",bar,bedType,COUNT(bedType),"King, Queen","3, 1","Compare the frequency of each type of bed by a bar chart, list in ascending by the x axis."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7125, 2785, 3215, 8341.379310344828, 12200, 2780, 10000, 6000, 5760, 6500, 12000, 7920, 24000, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","7125, 2785, 3215, 8341.379310344828, 12200, 2780, 10000, 6000, 5760, 6500, 12000, 7920, 24000, 12000, 8300","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and rank JOB_ID in descending order."
"SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Arrival', 'y_name': 'COUNT(Arrival)', 'x_data': [['13:04', '23:44', '23:39', '13:28', '09:48', '09:08', '08:54', '05:09']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Arrival'}",bar,Arrival,COUNT(Arrival),"13:04, 23:44, 23:39, 13:28, 09:48, 09:08, 08:54, 05:09","2, 1, 1, 1, 1, 1, 1, 1","Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, display by the Y-axis from high to low."
"SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'AVG(salary)', 'x_data': [['President', 'Administration Vice President', 'Marketing Manager', 'Sales Manager', 'Finance Manager', 'Accounting Manager', 'Purchasing Manager', 'Public Relations Representative', 'Sales Representative', 'Public Accountant', 'Accountant', 'Stock Manager', 'Human Resources Representative', 'Marketing Representative', 'Programmer', 'Administration Assistant', 'Shipping Clerk', 'Stock Clerk', 'Purchasing Clerk']], 'y_data': [[24000, 17000, 13000, 12200, 12000, 12000, 11000, 10000, 8350, 8300, 7920, 7280, 6500, 6000, 5760, 4400, 3215, 2785, 2780]], 'classify': [], 'describe': ''}",bar,JOB_TITLE,AVG(salary),"President, Administration Vice President, Marketing Manager, Sales Manager, Finance Manager, Accounting Manager, Purchasing Manager, Public Relations Representative, Sales Representative, Public Accountant, Accountant, Stock Manager, Human Resources Representative, Marketing Representative, Programmer, Administration Assistant, Shipping Clerk, Stock Clerk, Purchasing Clerk","24000, 17000, 13000, 12200, 12000, 12000, 11000, 10000, 8350, 8300, 7920, 7280, 6500, 6000, 5760, 4400, 3215, 2785, 2780","Visualize a bar chart for what is the average salary for each job title?, and sort by the Y from high to low."
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) ASC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Carbonated Water', 'Ginger Beer', 'Root beer', 'Cola']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Carbonated Water, Ginger Beer, Root beer, Cola","1, 1, 1, 2","What are the number of the names of catalog entries with level number 8?, sort by the Y in ascending."
"SELECT All_Games , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Games,All_Games_Percent,"35–2, 28–6, 24–10, 21–14","0.946, 0.8240000000000001, 0.706, 0.6",Give me the comparison about  All_Games_Percent over the  All_Games .
"SELECT job , min(age) FROM Person GROUP BY job ORDER BY min(age) ASC",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25, 35, 45]], 'classify': [], 'describe': ''}",bar,job,min(age),"student, engineer, doctor","25, 35, 45","Show minimal age from each job, and order minimal age from low to high order."
"SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Eric', 'Sarah', 'William', 'Stacy', 'Paul', 'Michael', 'Mark', 'Lisa', 'Jun', 'Ian', 'George', 'David']], 'y_data': [[4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Eric, Sarah, William, Stacy, Paul, Michael, Mark, Lisa, Jun, Ian, George, David","4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What is the first and last name of the students who are not in the largest major?, order by the Y-axis from high to low."
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos ASC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['goalie', 'mid', 'striker']], 'y_data': [[1200, 300, 1600]], 'classify': [], 'describe': ''}",bar,pPos,min(T2.HS),"goalie, mid, striker","1200, 300, 1600","A bar chart about what is minimum hours of the students playing in different position?, list x-axis in asc order."
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Kyle', 'John', 'Jessica', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Kyle, John, Jessica, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","1, 1, 1, 2, 1, 1, 1, 1, 1","Give me a bar chart to show the number of names of high schoolers who have likes, and sort by the X in descending please."
"SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code ASC",Bar,Easy,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'max(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[939.57, 971.44]], 'classify': [], 'describe': ''}",bar,product_type_code,max(product_price),"Clothes, Hardware","939.57, 971.44","Bar chart x axis product type code y axis maximal product price, could you display from low to high by the product_type_code?"
"SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'COUNT(Date_Payment_Made)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY WEEKDAY'}",bar,Date_Payment_Made,COUNT(Date_Payment_Made),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 0, 0, 2, 1","For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart."
"SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY MANAGER_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Gietz', 'Fay', 'Grant', 'Mavris', 'Higgins', 'Baer', 'Hartstein']], 'y_data': [[205, 201, 149, 101, 101, 101, 100]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Gietz, Fay, Grant, Mavris, Higgins, Baer, Hartstein","205, 201, 149, 101, 101, 101, 100","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and manager_id , could you show in desc by the Y-axis?"
"SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY dorm_name DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'count(*)', 'x_data': [['Smith Hall', 'Fawlty Towers', 'Dorm-plex 2000', 'Anonymous Donor Hall']], 'y_data': [[2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,dorm_name,count(*),"Smith Hall, Fawlty Towers, Dorm-plex 2000, Anonymous Donor Hall","2, 2, 2, 1","Find the number of students who is older than 20 in each dorm Plot them as bar chart, display bar in desc order please."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town DESC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['West Sherwoodstad', 'South Eugenia', 'Rueckermouth', 'Purdyville', 'Port Maximeview', 'New Lonzoville', 'Nataliamouth', 'Monahanshire', 'Macejkovicchester', 'Jasthaven', 'Feliciaberg', 'Chrisside']], 'y_data': [[1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"West Sherwoodstad, South Eugenia, Rueckermouth, Purdyville, Port Maximeview, New Lonzoville, Nataliamouth, Monahanshire, Macejkovicchester, Jasthaven, Feliciaberg, Chrisside","1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1","Give me a histogram for how many drama workshop groups are there in each city? Return both the city and the count, could you order by the x axis in descending?"
"SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'count(*)', 'x_data': [['Yair', 'Stacey', 'Scott', 'Michael', 'Mark', 'David', 'Daniel', 'Steven', 'Russell', 'Luigi', 'Louis', 'Lawrence', 'Joanne', 'Cheng', 'Alan', 'Robert', 'Leslie', 'Ellie']], 'y_data': [[3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Fname,count(*),"Yair, Stacey, Scott, Michael, Mark, David, Daniel, Steven, Russell, Luigi, Louis, Lawrence, Joanne, Cheng, Alan, Robert, Leslie, Ellie","3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1","A bar chart showing the first name of all the faculty members who participated in some activity, together with the number of activities they participated in, and sort in descending by the Y-axis."
"SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY count(*) DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AsstProf', 'Professor', 'AssocProf']], 'y_data': [[18, 14, 2]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"AsstProf, Professor, AssocProf","18, 14, 2","Show all the faculty ranks and the number of students advised by each rank in a bar chart, rank by the total number from high to low."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2310, 2149, 2326, 2233, 1963, 2079, 2295]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2310, 2149, 2326, 2233, 1963, 2079, 2295","For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the  hire_date bin hire_date by weekday by a bar chart."
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Astronomy', 'Comp. Sci.', 'Cybernetics', 'Finance', 'Geology', 'Marketing', 'Mech. Eng.', 'Physics', 'Pol. Sci.']], 'y_data': [[79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Astronomy, Comp. Sci., Cybernetics, Finance, Geology, Marketing, Mech. Eng., Physics, Pol. Sci.","79070.08, 80797.83, 79866.95, 105311.38, 99382.59, 43770.36, 51647.57, 108011.81, 87549.8","Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, and show names in ascending order."
"SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Price)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[240, 486, 240, 150, 450, 125]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Price),"Andy, James, John, Mary, Owen, Robert","240, 486, 240, 150, 450, 125","For those records from the products and each product's manufacturer, find founder and the sum of price , and group by attribute founder, and visualize them by a bar chart, and list by the X in ascending please."
"SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(School_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[2.5, 5, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(School_ID),"14–2, 14–3, 15–1","2.5, 5, 2","Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, I want to display by the x axis from low to high."
"SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY Sex DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'COUNT(Sex)', 'x_data': [['M', 'F']], 'y_data': [[7, 2]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,COUNT(Sex),"M, F","7, 2","Bar chart x axis sex y axis how many sex, list in desc by the x-axis."
"SELECT city_code , count(*) FROM student WHERE sex = 'M' GROUP BY city_code",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['ATL', 'BAL', 'BOS', 'CHI', 'DAL', 'DET', 'HKG', 'HOU', 'LON', 'LOS', 'NAR', 'NYC', 'PEK', 'PHL', 'PIT', 'ROC', 'WAS', 'YYZ']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"ATL, BAL, BOS, CHI, DAL, DET, HKG, HOU, LON, LOS, NAR, NYC, PEK, PHL, PIT, ROC, WAS, YYZ","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 3, 1, 1, 2",How many male students are there in each city? Show a bar chart.
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[83.57142857142857, 46.12903225806452, 80, 50.333333333333336, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"June, July, Aug, Sept, Oct","83.57142857142857, 46.12903225806452, 80, 50.333333333333336, 110","For those employees who was hired before 2002-06-21, find  hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart."
"SELECT Name , COUNT(Name) FROM technician GROUP BY Name ORDER BY Age ASC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Cochrane', 'Joe Sewell', 'John Brown', 'Lou Boudrea', 'Mark Sewell', 'Mickey Cochrane', 'Tony Sewell']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Cochrane, Joe Sewell, John Brown, Lou Boudrea, Mark Sewell, Mickey Cochrane, Tony Sewell","1, 2, 1, 1, 1, 1, 1, 1, 1",List the number of the names of technicians in ascending order of age.
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Aug', 'Sept', 'Oct', 'Nov']], 'y_data': [[1, 3, 3, 1]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Aug, Sept, Oct, Nov","1, 3, 3, 1","Find the number of the enrollment date for all the tests that have ""Pass"" result."
"SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'DEPARTMENT_ID', 'x_data': [['515.123.8181', '515.123.8080', '515.123.8888', '515.123.7777', '603.123.6666', '515.123.5555', '011.44.1644.429263']], 'y_data': [[110, 110, 70, 40, 20, 20, 0]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,DEPARTMENT_ID,"515.123.8181, 515.123.8080, 515.123.8888, 515.123.7777, 603.123.6666, 515.123.5555, 011.44.1644.429263","110, 110, 70, 40, 20, 20, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and department_id , I want to rank from high to low by the Y please."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[11.35, 12]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"dog, cat","11.35, 12","What is the average weight for each type of pet Show bar chart, list in ascending by the y-axis."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[40, 70, 110, 55, 0, 20, 20]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","40, 70, 110, 55, 0, 20, 20","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  hire_date and the average of department_id bin hire_date by weekday."
"SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class ORDER BY COUNT(Class) ASC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'COUNT(Class)', 'x_data': [['GL', 'KR']], 'y_data': [[1, 3]], 'classify': [], 'describe': 'GROUP BY Class'}",bar,Class,COUNT(Class),"GL, KR","1, 3","Give me a bar chart showing the total number of ships' classes that do not have a captain, show from low to high by the y-axis please."
"SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[6, 14]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(crs_credit),"ACCT, CIS","6, 14",Show me a bar chart for what is the total credit does each department offer?
"SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) ASC",Bar,Hard,news_report,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Herbert Swindells', 'John Meaney', 'Ray Ferris', 'Tom Briggs', 'Tony Waddington', 'Jackie Waring']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Herbert Swindells, John Meaney, Ray Ferris, Tom Briggs, Tony Waddington, Jackie Waring","1, 1, 1, 1, 1, 2","Show the names of journalists and the number of events they reported in a bar chart, could you list by the the total number in asc?"
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Taiwan', 'Beijing', 'Tokyo']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Paris, Los Angeles, Austin, Taiwan, Beijing, Tokyo","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, display y axis from high to low order."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[43.333333333333336, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Sept, Oct","43.333333333333336, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  hire_date and the average of department_id bin hire_date by time."
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY count(*) ASC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['NEB', 'Barton', 'Krieger']], 'y_data': [[18, 20, 20]], 'classify': [], 'describe': ''}",bar,Building,count(*),"NEB, Barton, Krieger","18, 20, 20","How many faculty members does each building have? List the result with the name of the building with a bar chart, and display Y in ascending order."
"SELECT FIRST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Kimberely', 'William', 'Susan', 'Shelley', 'Pat', 'Michael', 'Hermann']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,COMMISSION_PCT,"Kimberely, William, Susan, Shelley, Pat, Michael, Hermann","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , I want to show by the Y-axis from high to low."
"SELECT Name , Budget_in_Billions FROM department ORDER BY Name ASC",Bar,Easy,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Budget_in_Billions', 'x_data': [['Agriculture', 'Commerce', 'Defense', 'Education', 'Energy', 'Health and Human Services', 'Homeland Security', 'Housing and Urban Development', 'Interior', 'Justice', 'Labor', 'State', 'Transportation', 'Treasury', 'Veterans Affairs']], 'y_data': [[77.6, 6.2, 439.3, 62.8, 21.5, 543.2, 44.6, 46.2, 10.7, 23.4, 59.7, 9.96, 58, 11.1, 73.2]], 'classify': [], 'describe': ''}",bar,Name,Budget_in_Billions,"Agriculture, Commerce, Defense, Education, Energy, Health and Human Services, Homeland Security, Housing and Urban Development, Interior, Justice, Labor, State, Transportation, Treasury, Veterans Affairs","77.6, 6.2, 439.3, 62.8, 21.5, 543.2, 44.6, 46.2, 10.7, 23.4, 59.7, 9.96, 58, 11.1, 73.2","Give me a bar chart for budget_in_billions of each name, show in ascending by the Name."
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['24th', '25th']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'BIN date_departed BY DAY'}",bar,date_departed,COUNT(date_departed),"24th, 25th","3, 6",How many dogs who have gone through a treatment departed in each year? Return a bar chart that bins arrived date by day interval.
"SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY count(*) ASC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'product_category', 'y_name': 'count(*)', 'x_data': [['clothes', 'food']], 'y_data': [[9, 11]], 'classify': [], 'describe': ''}",bar,product_category,count(*),"clothes, food","9, 11","Show me the total number by product category in a histogram, and list from low to high by the the total number ."
"SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name ORDER BY Name ASC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Sewell', 'John Brown', 'Tony Sewell']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Charlie Hollocher, Eddie Collins, Joe Sewell, John Brown, Tony Sewell","1, 1, 5, 1, 1","What are the names of the technicians and how many machines are they assigned to repair, and could you order bar in ascending order?"
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.10344827586206, 147, 117, 204, 202, 105, 203, 108, 111, 100, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.10344827586206, 147, 117, 204, 202, 105, 203, 108, 111, 100, 205, 206","For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and display in descending by the x-axis."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sun', 'Thur', 'Wed', 'Tue', 'Mon', 'Sat', 'Fri']], 'y_data': [[201, 177, 101, 101, 101, 100, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sun, Thur, Wed, Tue, Mon, Sat, Fri","201, 177, 101, 101, 101, 100, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, I want to show by the y axis in desc."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[330, 270, 240, 240, 180, 150, 120, 90, 66, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","330, 270, 240, 240, 180, 150, 120, 90, 66, 5","For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name, and list by the total number in descending."
"SELECT All_Road , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6",Return a bar chart about the distribution of  All_Road and  All_Games_Percent .
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 108, 111, 101.5, 100, 200, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 108, 111, 101.5, 100, 200, 205, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and rank X-axis in descending order."
"SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name DESC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Vicente Carretero', 'Lucy Wong', 'Kearsley Brown', 'Gustaaf Deloor', 'Anne Walker']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Vicente Carretero, Lucy Wong, Kearsley Brown, Gustaaf Deloor, Anne Walker","1, 1, 1, 1, 2","What is the number of courses each teacher teaches? Visualize with a bar chart, could you show by the bar in descending?"
"SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name ASC",Bar,Medium,sakila_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'category_id', 'x_data': [['Action', 'Animation', 'Children', 'Classics', 'Comedy', 'Documentary', 'Drama', 'Family', 'Foreign', 'Games', 'Horror', 'Music', 'New', 'Sci-Fi', 'Sports', 'Travel']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]], 'classify': [], 'describe': ''}",bar,name,category_id,"Action, Animation, Children, Classics, Comedy, Documentary, Drama, Family, Foreign, Games, Horror, Music, New, Sci-Fi, Sports, Travel","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16","What are the names and ids of the different categories? Show me the bar chart, sort from low to high by the X-axis."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Paris', 'Taiwan', 'Beijing', 'Los Angeles', 'Austin', 'Tokyo']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Paris, Taiwan, Beijing, Los Angeles, Austin, Tokyo","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, and show by the Y-axis in desc."
"SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY COUNT(County_name) ASC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'COUNT(County_name)', 'x_data': [['Mansfield', 'Baltimore County', 'Colony', 'Howard']], 'y_data': [[1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY County_name'}",bar,County_name,COUNT(County_name),"Mansfield, Baltimore County, Colony, Howard","1, 2, 2, 3","Show how many delegates in each county with a bar chart, and could you sort y-axis in ascending order?"
"SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['ASU', 'LSU', 'FSU', 'OU']], 'y_data': [[12000, 18000, 19000, 22000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"ASU, LSU, FSU, OU","12000, 18000, 19000, 22000","Compare the smallest enrollment of schools in each state using a bar chart, list total number in asc order."
"SELECT asset_make , COUNT(asset_make) FROM Assets GROUP BY asset_make ORDER BY asset_make DESC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'asset_make', 'y_name': 'COUNT(asset_make)', 'x_data': [['RU', 'PT', 'IT', 'IN', 'IE', 'GB', 'FR', 'DE', 'CN']], 'y_data': [[3, 1, 1, 2, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY asset_make'}",bar,asset_make,COUNT(asset_make),"RU, PT, IT, IN, IE, GB, FR, DE, CN","3, 1, 1, 2, 1, 1, 2, 2, 2","Show the number of assets and group by asset make in a bar chart, and sort asset_make in desc order."
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Orton', 'Team Batista']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Orton, Team Batista","2, 4","Bar graph to show the total number from different team, show in desc by the Team."
"SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6","Find All_Road and All_Games_Percent , and visualize them by a bar chart, sort in descending by the y axis."
"SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY COUNT(Open_Date) DESC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['Sun', 'Sat', 'Fri', 'Wed', 'Tue', 'Mon', 'Thur']], 'y_data': [[2, 2, 2, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Open_Date BY WEEKDAY'}",bar,Open_Date,COUNT(Open_Date),"Sun, Sat, Fri, Wed, Tue, Mon, Thur","2, 2, 2, 1, 1, 1, 0","Please compare the number of the church by open date (bin into the weekday) using a bar chart, and order total number from high to low order."
"SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country ASC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Australia', 'Canada', 'Northern Ireland', 'Sweden', 'United States']], 'y_data': [[1, 1, 1, 1, 8]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Australia, Canada, Northern Ireland, Sweden, United States","1, 1, 1, 1, 8","Show all countries and the number of people from each country, rank bar in asc order."
"SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Extra Hard,scientist_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Aerodynamics and Gas Mileage', 'Build Your Own Telescope']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Aerodynamics and Gas Mileage, Build Your Own Telescope","1, 2","What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, could you order names from low to high order please?"
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'HR_REP', 'AC_MGR', 'ST_MAN', 'SA_MAN', 'PU_MAN', 'AD_PRES']], 'y_data': [[147, 122.22222222222223, 122, 114, 108, 102.66666666666667, 101, 101, 100, 100, 100, 0]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"SA_REP, ST_CLERK, SH_CLERK, PU_CLERK, FI_ACCOUNT, IT_PROG, HR_REP, AC_MGR, ST_MAN, SA_MAN, PU_MAN, AD_PRES","147, 122.22222222222223, 122, 114, 108, 102.66666666666667, 101, 101, 100, 100, 100, 0","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and sort by the y axis in desc please."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sun', 'Tue', 'Thur', 'Fri', 'Mon', 'Sat', 'Wed']], 'y_data': [[424, 740, 834, 980, 1197, 1361, 1653]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sun, Tue, Thur, Fri, Mon, Sat, Wed","424, 740, 834, 980, 1197, 1361, 1653","For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, display by the Y in asc."
"SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) ASC",Bar,Extra Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'COUNT(product_name)', 'x_data': [['gucci', 'Sony', 'jcrew', 'Apple']], 'y_data': [[2, 3, 3, 5]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,COUNT(product_name),"gucci, Sony, jcrew, Apple","2, 3, 3, 5","Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and I want to sort by the y-axis in ascending."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665","Return the average price for each product type Visualize by bar chart, and list by the Y-axis in asc."
"SELECT Team_Name , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['North Carolina', 'Duke', 'Clemson', 'Virginia Tech']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"North Carolina, Duke, Clemson, Virginia Tech","0.946, 0.8240000000000001, 0.706, 0.6",Give me a bar chart for all_games_percent of each team name
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['July', 'Sept', 'Aug', 'June', 'Oct']], 'y_data': [[46.12903225806452, 50.689655172413794, 80, 83.57142857142857, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"July, Sept, Aug, June, Oct","46.12903225806452, 50.689655172413794, 80, 83.57142857142857, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and rank in ascending by the Y."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Wed', 'Fri', 'Sat', 'Mon', 'Sun', 'Thur', 'Tue']], 'y_data': [[116200, 92000, 78700, 75800, 72300, 70400, 68100]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Wed, Fri, Sat, Mon, Sun, Thur, Tue","116200, 92000, 78700, 75800, 72300, 70400, 68100","Bin the hire date into the day of week interval, and then calculate the total salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, and list Y-axis in desc order."
"SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY COUNT(Arrival) ASC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Arrival', 'y_name': 'COUNT(Arrival)', 'x_data': [['05:09', '08:54', '09:08', '09:48', '13:28', '23:39', '23:44', '13:04']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Arrival'}",bar,Arrival,COUNT(Arrival),"05:09, 08:54, 09:08, 09:48, 13:28, 23:39, 23:44, 13:04","1, 1, 1, 1, 1, 1, 1, 2","Tell me the distribution of the number of trains at each arrival time with a bar chart, and show Y in ascending order."
"SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = ""Graphics"" GROUP BY Company_name ORDER BY Company_name DESC",Bar,Extra Hard,phone_1,"{'chart': 'bar', 'x_name': 'Company_name', 'y_name': 'COUNT(Company_name)', 'x_data': [['Sony Mobile Communications', 'Samsung Electronics Co Ltd', 'Nokia Corporation']], 'y_data': [[1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Company_name'}",bar,Company_name,COUNT(Company_name),"Sony Mobile Communications, Samsung Electronics Co Ltd, Nokia Corporation","1, 2, 2","Compare the number of chips from different company names for the phone whose screen mode type is ""Graphics"" with a bar chart, could you order by the X from high to low?"
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Eddie Collins', 'Tony Sewell', 'Joe Sewell']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Eddie Collins, Tony Sewell, Joe Sewell","1, 1, 5","A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and could you sort how many name from low to high order?"
"SELECT Start_from , AVG(Employee_ID) FROM hiring",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 6, 2, 1, 6, 3, 4]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Employee_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 6, 2, 1, 6, 3, 4",Draw a bar chart about the distribution of  Start_from and the average of Employee_ID bin start_from by weekday.
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge') GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Eric', 'Paul', 'Mark', 'Lisa', 'David', 'Susan', 'Steven', 'Michael', 'Linda', 'Jun', 'Jandy', 'Ian', 'George', 'Dinesh', 'Derek', 'Bruce']], 'y_data': [[3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Eric, Paul, Mark, Lisa, David, Susan, Steven, Michael, Linda, Jun, Jandy, Ian, George, Dinesh, Derek, Bruce","3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart, and show y-axis from high to low order."
"SELECT Hometown , COUNT(Hometown) FROM member GROUP BY Hometown ORDER BY Hometown ASC",Bar,Medium,shop_membership,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(Hometown)', 'x_data': [['Collierville, Tennessee', 'Columbia, South Carolina', 'Fort Campbell, Kentucky', 'Hiram, Georgia', 'Jacksonville, Florida', 'LaGrange, Georgia', 'Louisville, Kentucky', 'Red Jacket, West Virginia', 'Simpsonville, South Carolina']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Hometown'}",bar,Hometown,COUNT(Hometown),"Collierville, Tennessee, Columbia, South Carolina, Fort Campbell, Kentucky, Hiram, Georgia, Jacksonville, Florida, LaGrange, Georgia, Louisville, Kentucky, Red Jacket, West Virginia, Simpsonville, South Carolina","1, 1, 1, 1, 1, 1, 2, 1, 1","Bar chart of the number of hometown from each hometown, could you display X-axis from low to high order?"
"SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'count(*)', 'x_data': [['Statistics', 'Psychology', 'Pol. Sci.', 'Physics', 'Mech. Eng.', 'Math', 'Marketing', 'Languages', 'History', 'Geology', 'Finance', 'English', 'Elec. Eng.', 'Cybernetics', 'Comp. Sci.', 'Civil Eng.', 'Biology', 'Athletics', 'Astronomy', 'Accounting']], 'y_data': [[85, 100, 109, 96, 105, 91, 85, 119, 117, 92, 97, 95, 98, 86, 108, 120, 100, 92, 106, 99]], 'classify': [], 'describe': ''}",bar,dept_name,count(*),"Statistics, Psychology, Pol. Sci., Physics, Mech. Eng., Math, Marketing, Languages, History, Geology, Finance, English, Elec. Eng., Cybernetics, Comp. Sci., Civil Eng., Biology, Athletics, Astronomy, Accounting","85, 100, 109, 96, 105, 91, 85, 119, 117, 92, 97, 95, 98, 86, 108, 120, 100, 92, 106, 99","how many students are in each department?, order X-axis in desc order."
"SELECT Status , avg(Population) FROM city GROUP BY Status ORDER BY Status ASC",Bar,Medium,farm,"{'chart': 'bar', 'x_name': 'Status', 'y_name': 'avg(Population)', 'x_data': [['Town', 'Village']], 'y_data': [[5706, 1009.75]], 'classify': [], 'describe': ''}",bar,Status,avg(Population),"Town, Village","5706, 1009.75","Show the average of population from each status, rank from low to high by the X."
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[3, 5]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","3, 5","Show me the comparison of the total number of all ships' nationalities with a bar graph, and display from low to high by the how many nationality."
"SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) ASC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'COUNT(*)', 'x_data': [['Chinese Painting', 'AI', 'Art history', 'Japanese', 'Spanish', 'Writing in French', 'advanced database', 'database', 'modern Arts', 'French']], 'y_data': [[1, 2, 2, 2, 2, 2, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,course_name,COUNT(*),"Chinese Painting, AI, Art history, Japanese, Spanish, Writing in French, advanced database, database, modern Arts, French","1, 2, 2, 2, 2, 2, 2, 2, 2, 3","Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, could you display by the y axis in asc?"
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[198.83333333333334, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Sept, Oct","198.83333333333334, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and could you order in asc by the mean employee id please?"
"SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY Name ASC",Bar,Extra Hard,shop_membership,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Alexandre', 'Brooke Greville', 'Cochrane', 'Popert', 'Taverner', 'Zytogorski']], 'y_data': [[3, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Alexandre, Brooke Greville, Cochrane, Popert, Taverner, Zytogorski","3, 1, 1, 1, 1, 1","Show all branch names with the number of members in each branch registered after 2015 with a bar chart, show in ascending by the bars."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['Thur', 'Fri', 'Mon', 'Sun', 'Wed', 'Sat', 'Tue']], 'y_data': [[1, 2, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'BIN booking_end_date BY WEEKDAY'}",bar,booking_end_date,COUNT(booking_end_date),"Thur, Fri, Mon, Sun, Wed, Sat, Tue","1, 2, 2, 2, 2, 3, 3","How many apartment bookings in each weekday? Show me a bar chart binning booking end date by weekday, could you display Y-axis in asc order?"
"SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5 ORDER BY T1.CName ASC",Bar,Extra Hard,college_3,"{'chart': 'bar', 'x_name': 'CName', 'y_name': 'COUNT(CName)', 'x_data': [['ALGORITHMS I', 'APPLIED STATISTICS AND DATA ANALYSIS', 'CIRCUITS', 'COMBINATORIAL ANALYSIS', 'COMPUTER SYSTEM FUNDAMENTALS', 'COMPUTER VISION', 'DATA STRUCTURES in JAVA', 'DATABASE SYSTEMS', 'DISTRIBUTED SYSTEMS', 'EXPLORING THE INTERNET', 'INTRO TO NATURAL LANGUAGE PROCESSING', 'INTRO TO PROGRAMMING IN JAVA', 'INTRODUCTION TO PROBABILITY', 'MULTIMEDIA COMPUTING', 'QUANTITATIVE MEDICAL COMPUTING', 'SUPERCOMPUTING']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CName'}",bar,CName,COUNT(CName),"ALGORITHMS I, APPLIED STATISTICS AND DATA ANALYSIS, CIRCUITS, COMBINATORIAL ANALYSIS, COMPUTER SYSTEM FUNDAMENTALS, COMPUTER VISION, DATA STRUCTURES in JAVA, DATABASE SYSTEMS, DISTRIBUTED SYSTEMS, EXPLORING THE INTERNET, INTRO TO NATURAL LANGUAGE PROCESSING, INTRO TO PROGRAMMING IN JAVA, INTRODUCTION TO PROBABILITY, MULTIMEDIA COMPUTING, QUANTITATIVE MEDICAL COMPUTING, SUPERCOMPUTING","1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1","Give the number of each course name with at least five enrollments Return a bar chart, and display by the names in asc."
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Midfielder', 'Forward', 'Defender']], 'y_data': [[6, 3, 7]], 'classify': [], 'describe': ''}",bar,Position,COUNT(*),"Midfielder, Forward, Defender","6, 3, 7","Give me a bar chart for the total number of each position, and could you order by the x-axis from high to low?"
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[203, 204, 205, 192, 0, 201, 202]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","203, 204, 205, 192, 0, 201, 202","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  hire_date and the average of employee_id bin hire_date by weekday."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Fri', 'Sat', 'Wed', 'Sun', 'Thur', 'Mon', 'Tue']], 'y_data': [[151, 152, 152.5, 153, 153.5, 154, 155]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Fri, Sat, Wed, Sun, Thur, Mon, Tue","151, 152, 152.5, 153, 153.5, 154, 155","For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, and order in ascending by the the average of employee id."
"SELECT Founder , SUM(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Manufacturer)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[12, 6, 4, 5, 9, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Manufacturer),"Robert, Owen, Mary, John, James, Andy","12, 6, 4, 5, 9, 1","For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart, and sort by the bar from high to low."
"SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY count(*) ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 2, 4]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 2, 4","Count the number of captains that have each rank by a bar chart, and sort in asc by the total number."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Thur', 'Wed', 'Tue', 'Mon', 'Sun', 'Sat', 'Fri']], 'y_data': [[384, 205, 204, 203, 202, 201, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Thur, Wed, Tue, Mon, Sun, Sat, Fri","384, 205, 204, 203, 202, 201, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, could you show by the y-axis in descending?"
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1000, 596, 1162, 606, 886, 1144, 399]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1000, 596, 1162, 606, 886, 1144, 399","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by weekday."
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY roomName ASC",Bar,Extra Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Convoke and sanguine', 'Frugal not apropos', 'Harbinger but bequest', 'Thrift and accolade']], 'y_data': [[1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",bar,roomName,COUNT(roomName),"Convoke and sanguine, Frugal not apropos, Harbinger but bequest, Thrift and accolade","1, 2, 3, 1","Find the number of the name of rooms booked by some customers whose first name contains ROY, and sort in ascending by the bar."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[8, 15, 13, 12]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"June, July, Aug, Sept","8, 15, 13, 12","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by time."
"SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[6, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,Manufacturer,"Memory, CD drive, Toner cartridge","6, 2, 3","For those products with a price between 60 and 120, return a bar chart about the distribution of  name and  manufacturer ."
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name",Bar,Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Carbonated Water', 'Cola', 'Ginger Beer', 'Root beer']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Carbonated Water, Cola, Ginger Beer, Root beer","1, 2, 1, 1",A bar chart for finding the number of the names of catalog entries with level number 8.
"SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name",Bar,Medium,tracking_orders,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'SUM(count(*))', 'x_data': [['book', 'clothes', 'food', 'music', 'phone']], 'y_data': [[1, 1, 5, 5, 3]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,SUM(count(*)),"book, clothes, food, music, phone","1, 1, 5, 5, 3","For each product, show its name and the number of times it was ordered. Plot them as bar chart."
"SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person) ORDER BY T1.age ASC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Alice', 'Bob']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,name,age,"Alice, Bob","35, 45","Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and display by the y-axis from low to high please."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Fri', 'Sun', 'Mon', 'Tue', 'Wed', 'Sat', 'Thur']], 'y_data': [[0, 6000, 6500, 10000, 12000, 13000, 15300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Fri, Sun, Mon, Tue, Wed, Sat, Thur","0, 6000, 6500, 10000, 12000, 13000, 15300","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, could you show from low to high by the Y please?"
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'AD_VP', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'PU_MAN', 'PU_CLERK', 'ST_MAN', 'ST_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'AD_ASST', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AD_PRES, AD_VP, IT_PROG, FI_MGR, FI_ACCOUNT, PU_MAN, PU_CLERK, ST_MAN, ST_CLERK, SA_MAN, SA_REP, SH_CLERK, AD_ASST, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 203, 204, 205, 206","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, sort in ascending by the y axis please."
"SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY count(*) ASC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'count(*)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.', 'Honolul']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,destination,count(*),"Boston, Chicago, Dallas, Los Angeles, New York, Sydney, Tokyo, Washington D.C., Honolul","1, 1, 1, 1, 1, 1, 1, 1, 2","A bar chart about what are the destinations and number of flights to each one?, could you show Y in ascending order?"
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass"" GROUP BY date_test_taken ORDER BY date_test_taken DESC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['2018-03-25', '2018-03-24', '2018-03-23', '2018-03-21', '2018-03-19']], 'y_data': [[3, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_test_taken'}",bar,date_test_taken,COUNT(date_test_taken),"2018-03-25, 2018-03-24, 2018-03-23, 2018-03-21, 2018-03-19","3, 1, 1, 1, 2","Which tests have ""Pass"" results? Return the dates when the tests were taken, and count them by a bar chart, rank by the X in desc."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[203, 204, 205, 192, 0, 201, 202]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","203, 204, 205, 192, 0, 201, 202","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the average of employee_id bin hire_date by weekday in a bar chart."
"SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description ORDER BY Budget_Type_Description DESC",Bar,Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Description', 'y_name': 'COUNT(Budget_Type_Description)', 'x_data': [['Self founded', 'Organisation', 'Government']], 'y_data': [[2, 2, 6]], 'classify': [], 'describe': 'GROUP BY Budget_Type_Description'}",bar,Budget_Type_Description,COUNT(Budget_Type_Description),"Self founded, Organisation, Government","2, 2, 6","Return a bar chart to show how many documents for different budget type description, rank by the x-axis from high to low please."
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[100, 200, 50, 30, 130, 120]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","100, 200, 50, 30, 130, 120","For those records from the products and each product's manufacturer, a bar chart shows the distribution of  headquarter and the average of revenue , and group by attribute headquarter."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[5, 3.4]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"F, T","5, 3.4","Give me the comparison about the average of Shop_ID over the  Is_full_time , and group by attribute Is_full_time."
"SELECT Record_Company , COUNT(Record_Company) FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC",Bar,Medium,orchestra,"{'chart': 'bar', 'x_name': 'Record_Company', 'y_name': 'COUNT(Record_Company)', 'x_data': [['Columbia Masterworks', 'Decca Records', 'Delos Records', 'Deutsche Grammophon', 'EMI', 'Koch Records / Naxos Records', 'Kultur', 'Mercury Records', 'Philips', 'Philips Classics Records', 'RCA']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Record_Company'}",bar,Record_Company,COUNT(Record_Company),"Columbia Masterworks, Decca Records, Delos Records, Deutsche Grammophon, EMI, Koch Records / Naxos Records, Kultur, Mercury Records, Philips, Philips Classics Records, RCA","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",What are the number of the record companies of orchestras in descending order of years in which they were founded?
"SELECT LAST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Mavris', 'Higgins', 'Hartstein', 'Grant', 'Gietz', 'Fay', 'Baer']], 'y_data': [[101, 101, 100, 149, 205, 201, 101]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Mavris, Higgins, Hartstein, Grant, Gietz, Fay, Baer","101, 101, 100, 149, 205, 201, 101","For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and manager_id , and visualize them by a bar chart, display in desc by the LAST_NAME please."
"SELECT JOB_ID , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[205, 101, 0, 108, 101, 101, 102.8, 201, 101, 114, 100, 146.93103448275863, 122, 122, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(MANAGER_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","205, 101, 0, 108, 101, 101, 102.8, 201, 101, 114, 100, 146.93103448275863, 122, 122, 100","For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the  job_id , and group by attribute job_id."
"SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = ""Awarded"" GROUP BY Category ORDER BY COUNT(Category) DESC",Bar,Hard,music_4,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'COUNT(Category)', 'x_data': [['Best Song', 'Best Sound Song']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Category'}",bar,Category,COUNT(Category),"Best Song, Best Sound Song","2, 1","What are the number of the category of music festivals with result ""Awarded""?, I want to rank y-axis in desc order please."
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name ORDER BY name ASC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Honda', 'Toyota']], 'y_data': [[45, 95]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Honda, Toyota","45, 95","Find the number of the names of Japanese constructors that have once earned more than 5 points?, show X in asc order."
"SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Madurai Fast Passenger', 'Parasuram Express', 'Quilon Fast Passenger', 'Ananthapuri Express', 'Guruvayur Express', 'Island Express', 'Jayanthi Janatha Express']], 'y_data': [[1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Madurai Fast Passenger, Parasuram Express, Quilon Fast Passenger, Ananthapuri Express, Guruvayur Express, Island Express, Jayanthi Janatha Express","1, 1, 1, 2, 2, 2, 2","Show the name of all trains, count the name and show them with a bar chart, and could you list Y from low to high order?"
"SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY Committee DESC",Bar,Medium,election,"{'chart': 'bar', 'x_name': 'Committee', 'y_name': 'COUNT(Committee)', 'x_data': [['Ways and Means', 'Health and Government Operations', 'Environmental Matters (Vice-Chair)', 'Environmental Matters', 'Economic Matters', 'Appropriations']], 'y_data': [[1, 1, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Committee'}",bar,Committee,COUNT(Committee),"Ways and Means, Health and Government Operations, Environmental Matters (Vice-Chair), Environmental Matters, Economic Matters, Appropriations","1, 1, 1, 1, 1, 3","How many delegates in each committee? Return a bar chart, I want to order in descending by the X."
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force ORDER BY COUNT(*) DESC",Bar,Medium,county_public_safety,"{'chart': 'bar', 'x_name': 'Police_force', 'y_name': 'COUNT(*)', 'x_data': [['RCMP', 'Central Saanich Police', 'Abbotsford Police Department']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Police_force,COUNT(*),"RCMP, Central Saanich Police, Abbotsford Police Department","4, 1, 1","Create a bar chart showing the total number across police force, order by the Y in descending."
"SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims )",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Made', 'y_name': 'COUNT(Date_Claim_Made)', 'x_data': [['2016', '2017', '2018']], 'y_data': [[1, 4, 2]], 'classify': [], 'describe': 'BIN Date_Claim_Made BY YEAR'}",bar,Date_Claim_Made,COUNT(Date_Claim_Made),"2016, 2017, 2018","1, 4, 2","Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart"
"SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25.5, 35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"student, engineer, doctor","25.5, 35, 45","What is average age for different job title Visualize by bar chart, and rank y axis in ascending order."
"SELECT Days , COUNT(Days) FROM COURSE GROUP BY Days ORDER BY Credits",Bar,Medium,college_3,"{'chart': 'bar', 'x_name': 'Days', 'y_name': 'COUNT(Days)', 'x_data': [['M', 'MT', 'MTW', 'MW', 'T', 'TTh', 'TW', 'Th', 'ThF', 'T', 'W']], 'y_data': [[6, 3, 37, 5, 3, 1, 1, 6, 8, 1, 5]], 'classify': [], 'describe': 'GROUP BY Days'}",bar,Days,COUNT(Days),"M, MT, MTW, MW, T, TTh, TW, Th, ThF, T, W","6, 3, 37, 5, 3, 1, 1, 6, 8, 1, 5","Visualize a bar chart about the distribution of  Days and the amount of Days , and group by attribute Days."
"SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Date_Payment_Made DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'Amount_Payment', 'x_data': [['2018-02-24', '2017-12-16', '2017-05-28', '2017-05-03']], 'y_data': [[7343, 459407, 155654, 172309]], 'classify': [], 'describe': ''}",bar,Date_Payment_Made,Amount_Payment,"2018-02-24, 2017-12-16, 2017-05-28, 2017-05-03","7343, 459407, 155654, 172309","Give me a histogram to show the date and the amount for all the payments processed with Visa, order in desc by the X please."
"SELECT DEPT_CODE , max(stu_gpa) FROM student GROUP BY DEPT_CODE",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'max(stu_gpa)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[3.15, 2.84, 3.27, 3.87, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,max(stu_gpa),"ACCT, BIOL, CIS, EDU, ENGL","3.15, 2.84, 3.27, 3.87, 2.11",What is the highest student GPA for every department? Return a bar chart.
"SELECT other_details , COUNT(other_details) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY other_details ORDER BY COUNT(other_details) ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'other_details', 'y_name': 'COUNT(other_details)', 'x_data': [['Skilled', '']], 'y_data': [[1, 19]], 'classify': [], 'describe': 'GROUP BY other_details'}",bar,other_details,COUNT(other_details),"Skilled, ","1, 19","Show the number of engineers for different other details in a bar chart, and rank y-axis from low to high order please."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'AC_ACCOUNT', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'SA_MAN', 'SA_REP', 'PR_REP', 'IT_PROG', 'ST_MAN', 'ST_CLERK', 'SH_CLERK', 'HR_REP', 'PU_CLERK', 'MK_REP']], 'y_data': [[110, 110, 100, 100, 90, 80, 77.24137931034483, 70, 60, 50, 50, 50, 40, 30, 20]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, AC_ACCOUNT, FI_MGR, FI_ACCOUNT, AD_PRES, SA_MAN, SA_REP, PR_REP, IT_PROG, ST_MAN, ST_CLERK, SH_CLERK, HR_REP, PU_CLERK, MK_REP","110, 110, 100, 100, 90, 80, 77.24137931034483, 70, 60, 50, 50, 50, 40, 30, 20","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, order by the Y-axis from high to low."
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name ORDER BY COUNT(name) DESC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Toyota', 'Honda']], 'y_data': [[95, 45]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Toyota, Honda","95, 45","Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, could you order total number from high to low order please?"
"SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Control_Systems,"{'chart': 'bar', 'x_name': 'role_description', 'y_name': 'count(*)', 'x_data': [['Photo', 'Editor', 'Proof Manager', 'Manager']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,role_description,count(*),"Photo, Editor, Proof Manager, Manager","2, 2, 1, 1","Show a bar chart about how many employees does each role have?, I want to order by the the total number in descending."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE hire_date < '2002-06-21'",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1845, 1833, 1827, 2090, 1870, 1818, 1942]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1845, 1833, 1827, 2090, 1870, 1818, 1942","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of  hire_date and the sum of manager_id bin hire_date by weekday."
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['T', 'F']], 'y_data': [[19, 9]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"T, F","19, 9","A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, list by the total number in descending please."
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_number ASC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_level_name', 'y_name': 'catalog_level_number', 'x_data': [['Sub-Category', 'Product']], 'y_data': [[8, 9]], 'classify': [], 'describe': ''}",bar,catalog_level_name,catalog_level_number,"Sub-Category, Product","8, 9","What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and display in ascending by the y-axis."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[5, 20, 20, 30, 5, 1, 5, 1, 1, 1, 5, 1, 1, 5, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","5, 20, 20, 30, 5, 1, 5, 1, 1, 1, 5, 1, 1, 5, 2, 1, 1, 1, 1","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, order bars from high to low order please."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['PU_CLERK', 'PU_MAN', 'HR_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN', 'IT_PROG', 'SA_MAN', 'SA_REP', 'AD_PRES', 'FI_ACCOUNT', 'AC_MGR']], 'y_data': [[30, 30, 40, 50, 50, 50, 60, 80, 80, 90, 100, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"PU_CLERK, PU_MAN, HR_REP, SH_CLERK, ST_CLERK, ST_MAN, IT_PROG, SA_MAN, SA_REP, AD_PRES, FI_ACCOUNT, AC_MGR","30, 30, 40, 50, 50, 50, 60, 80, 80, 90, 100, 110","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, order the average of department id in ascending order."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'AC_ACCOUNT', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'SA_MAN', 'SA_REP', 'PR_REP', 'IT_PROG', 'ST_MAN', 'ST_CLERK', 'SH_CLERK', 'HR_REP', 'PU_MAN', 'PU_CLERK', 'MK_REP', 'MK_MAN', 'AD_ASST']], 'y_data': [[110, 110, 100, 100, 90, 90, 80, 77.33333333333333, 70, 60, 50, 50, 50, 40, 30, 30, 20, 20, 10]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, AC_ACCOUNT, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, SA_MAN, SA_REP, PR_REP, IT_PROG, ST_MAN, ST_CLERK, SH_CLERK, HR_REP, PU_MAN, PU_CLERK, MK_REP, MK_MAN, AD_ASST","110, 110, 100, 100, 90, 90, 80, 77.33333333333333, 70, 60, 50, 50, 50, 40, 30, 30, 20, 20, 10","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and display in desc by the Y."
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['9–7', '14–2', '13–3', '10–6']], 'y_data': [[0.563, 0.875, 0.813, 0.625]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,ACC_Percent,"9–7, 14–2, 13–3, 10–6","0.563, 0.875, 0.813, 0.625","Bar chart x axis acc regular season y axis acc_percent, and show X-axis in descending order."
"SELECT All_Road , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'School_ID', 'x_data': [['4–8', '6–5', '8–2', '13–0']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,All_Road,School_ID,"4–8, 6–5, 8–2, 13–0","5, 4, 2, 1","Visualize a bar chart about the distribution of All_Road and School_ID , could you sort total number from high to low order?"
"SELECT decor , count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor ORDER BY decor ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'traditional']], 'y_data': [[1, 3]], 'classify': [], 'describe': ''}",bar,decor,count(*),"modern, traditional","1, 3","Return a bar chart on how many rooms have king beds? Report the number for each decor type, order by the X-axis in ascending please."
"SELECT Headquarter , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[2, 4, 3, 6, 5, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Manufacturer),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","2, 4, 3, 6, 5, 1","For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart, and order X-axis in ascending order."
"SELECT job , min(age) FROM Person GROUP BY job",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25]], 'classify': [], 'describe': ''}",bar,job,min(age),"doctor, engineer, student","45, 35, 25",how old is the youngest person for each job?
"SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) ASC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['english', 'bangla']], 'y_data': [[7, 7.5]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"english, bangla","7, 7.5","Show me a bar chart for what is the average rating of songs for each language?, order by the mean rating in ascending please."
"SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'ACC_Percent', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[0.563, 0.625, 0.813, 0.875]], 'classify': [], 'describe': ''}",bar,All_Neutral,ACC_Percent,"3–3, 4–3, 5–3, 9–1","0.563, 0.625, 0.813, 0.875","Give me the comparison about ACC_Percent over the All_Neutral , and could you rank All_Neutral in ascending order?"
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AD_ASST', 'MK_MAN', 'MK_REP', 'PU_MAN', 'PR_REP', 'AD_PRES', 'FI_MGR', 'AC_ACCOUNT', 'AC_MGR', 'PU_CLERK', 'AD_VP', 'ST_MAN', 'IT_PROG', 'SA_MAN', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[10, 20, 20, 30, 70, 90, 100, 110, 110, 150, 180, 250, 300, 400, 500, 1000, 1000, 2320]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AD_ASST, MK_MAN, MK_REP, PU_MAN, PR_REP, AD_PRES, FI_MGR, AC_ACCOUNT, AC_MGR, PU_CLERK, AD_VP, ST_MAN, IT_PROG, SA_MAN, FI_ACCOUNT, SH_CLERK, ST_CLERK, SA_REP","10, 20, 20, 30, 70, 90, 100, 110, 110, 150, 180, 250, 300, 400, 500, 1000, 1000, 2320","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and could you rank Y-axis from low to high order?"
"SELECT product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'sum(T1.product_quantity)', 'x_data': [['Arts', 'Beer Menus', 'Chocolate', 'Fans', 'Hard Drive', 'Harry Potter 2', 'Harry Potter 3', 'Harry Potter 4', 'Learning English', 'TV']], 'y_data': [[5, 2, 1, 9, 10, 8, 15, 3, 5, 7]], 'classify': [], 'describe': ''}",bar,product_name,sum(T1.product_quantity),"Arts, Beer Menus, Chocolate, Fans, Hard Drive, Harry Potter 2, Harry Potter 3, Harry Potter 4, Learning English, TV","5, 2, 1, 9, 10, 8, 15, 3, 5, 7","What are the different product names, and what is the sum of quantity ordered for each product. Visualize by bar chart."
"SELECT Country , count(*) FROM people GROUP BY country ORDER BY Country DESC",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Sweden', 'Northern Ireland', 'Canada', 'Australia']], 'y_data': [[8, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Sweden, Northern Ireland, Canada, Australia","8, 1, 1, 1, 1","Show all countries and the number of people from each country with a bar chart, I want to sort Country from high to low order."
"SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.student_id ASC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'student_id', 'x_data': [['Luella', 'Brandt', 'Casimir', 'Asa', 'Kailey', 'Vicente', 'Kolby', 'Karley', 'Camilla', 'Ursula']], 'y_data': [[2, 3, 4, 6, 9, 10, 11, 12, 13, 14]], 'classify': [], 'describe': ''}",bar,middle_name,student_id,"Luella, Brandt, Casimir, Asa, Kailey, Vicente, Kolby, Karley, Camilla, Ursula","2, 3, 4, 6, 9, 10, 11, 12, 13, 14","Find the student ID and middle name for all the students with at most two enrollments, I want to rank by the y-axis in ascending please."
"SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY count(*) DESC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'count(*)', 'x_data': [['Honolul', 'Washington D.C.', 'Tokyo', 'Sydney', 'New York', 'Los Angeles', 'Dallas', 'Chicago', 'Boston']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,destination,count(*),"Honolul, Washington D.C., Tokyo, Sydney, New York, Los Angeles, Dallas, Chicago, Boston","2, 1, 1, 1, 1, 1, 1, 1, 1","A bar chart about what are the destinations and number of flights to each one?, order total number in desc order."
"SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY sum(crs_credit) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(crs_credit)', 'x_data': [['CIS', 'ACCT']], 'y_data': [[14, 6]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(crs_credit),"CIS, ACCT","14, 6","Display a bar chart for how many credits does the department offer?, and I want to rank by the total number from high to low."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'AD_VP', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'PU_MAN', 'PU_CLERK', 'ST_MAN', 'ST_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'AD_ASST', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AD_PRES, AD_VP, IT_PROG, FI_MGR, FI_ACCOUNT, PU_MAN, PU_CLERK, ST_MAN, ST_CLERK, SA_MAN, SA_REP, SH_CLERK, AD_ASST, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","100, 101.5, 105, 108, 111, 114, 117, 122, 134.5, 147, 164.5, 189.5, 200, 201, 202, 203, 204, 205, 206","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show in ascending by the y-axis."
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY product_category_description DESC",Bar,Extra Hard,products_gen_characteristics,"{'chart': 'bar', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Spices', 'Seeds', 'Herbs']], 'y_data': [[1, 3, 2]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",bar,product_category_description,COUNT(product_category_description),"Spices, Seeds, Herbs","1, 3, 2","A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, could you order by the names in descending?"
"SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY product_category DESC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'product_category', 'y_name': 'count(*)', 'x_data': [['food', 'clothes']], 'y_data': [[11, 9]], 'classify': [], 'describe': ''}",bar,product_category,count(*),"food, clothes","11, 9","Show me the total number by product category in a histogram, rank x-axis from high to low order please."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY SUM(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Tue', 'Thur', 'Sun', 'Mon', 'Sat', 'Fri', 'Wed']], 'y_data': [[68100, 70400, 72300, 75800, 78700, 92000, 116200]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Tue, Thur, Sun, Mon, Sat, Fri, Wed","68100, 70400, 72300, 75800, 78700, 92000, 116200","Bin the hire date into the day of week interval, and then calculate the total salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, I want to list Y from low to high order please."
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) ASC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Jessica', 'John', 'Kyle', 'Gabriel']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Alexis, Andrew, Austin, Brittany, Cassandra, Jessica, John, Kyle, Gabriel","1, 1, 1, 1, 1, 1, 1, 1, 2","Give me a bar chart to show the number of names of high schoolers who have likes, and could you sort Y from low to high order?"
"SELECT Open_Date , COUNT(Open_Date) FROM church",Bar,Easy,wedding,"{'chart': 'bar', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 0, 2, 2, 2]], 'classify': [], 'describe': 'BIN Open_Date BY WEEKDAY'}",bar,Open_Date,COUNT(Open_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 0, 2, 2, 2",Please compare the number of the church by open date (bin into the weekday) using a bar chart.
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY AllergyType ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[4, 3, 7]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","4, 3, 7","Show all allergy types and the number of allergies in each type Plot them as bar chart, and rank bars in ascending order."
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY count(*) ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'count(*)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': ''}",bar,bedType,count(*),"Double, King, Queen","2, 4, 4","Return a bar chart on what are the number of rooms for each bed type?, and order by the total number from low to high."
"SELECT ACC_Regular_Season , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'School_ID', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,School_ID,"14–2, 13–3, 10–6, 9–7","1, 2, 4, 5","Find  ACC_Regular_Season and  School_ID , and visualize them by a bar chart."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Price DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Hewlett-Packard', 'Creative Labs', 'Sony', 'Fujits', 'Iomega', 'Winchester']], 'y_data': [[486, 450, 240, 240, 150, 125]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Hewlett-Packard, Creative Labs, Sony, Fujits, Iomega, Winchester","486, 450, 240, 240, 150, 125","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, I want to order by the y axis from high to low."
"SELECT T2.middle_name , T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T2.middle_name ASC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'middle_name', 'y_name': 'student_id', 'x_data': [['Asa', 'Brandt', 'Camilla', 'Casimir', 'Kailey', 'Karley', 'Kolby', 'Luella', 'Ursula', 'Vicente']], 'y_data': [[6, 3, 13, 4, 9, 12, 11, 2, 14, 10]], 'classify': [], 'describe': ''}",bar,middle_name,student_id,"Asa, Brandt, Camilla, Casimir, Kailey, Karley, Kolby, Luella, Ursula, Vicente","6, 3, 13, 4, 9, 12, 11, 2, 14, 10","what are the student IDs and middle names of the students enrolled in at most two courses?, could you list in ascending by the X?"
"SELECT cName , enr FROM College ORDER BY enr",Bar,Easy,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'enr', 'x_data': [['ASU', 'LSU', 'FSU', 'OU']], 'y_data': [[12000, 18000, 19000, 22000]], 'classify': [], 'describe': ''}",bar,cName,enr,"ASU, LSU, FSU, OU","12000, 18000, 19000, 22000",Return a bar chart about the distribution of  cName and  enr .
"SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality ORDER BY SUM(Age) DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[308, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(Age),"England, Northern Ireland, Wales","308, 29, 27","What are the nationalities and the taotal ages of journalists Visualize by a bar chart, I want to show by the total number of age in desc."
"SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY Years_Played DESC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Years_Played', 'y_name': 'COUNT(Years_Played)', 'x_data': [['8 (2003–2005, 2007–2011)', '4 (2003–2004, 2010–2011)', '3 (2009–2011)', '3 (2005, 2007–2008)', '2 (2010–2011)', '2 (2010-2011)', '2 (1988, 1990)', '1 (2011)']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Years_Played'}",bar,Years_Played,COUNT(Years_Played),"8 (2003–2005, 2007–2011), 4 (2003–2004, 2010–2011), 3 (2009–2011), 3 (2005, 2007–2008), 2 (2010–2011), 2 (2010-2011), 2 (1988, 1990), 1 (2011)","1, 1, 1, 1, 2, 1, 1, 2","Bar chart of the number of years played from each years played, and order x-axis in desc order."
"SELECT last_name , COUNT(last_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY last_name ORDER BY COUNT(last_name) DESC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'last_name', 'y_name': 'COUNT(last_name)', 'x_data': [['Price', 'Streich', 'Hirthe', 'Hahn', 'Grady', 'Adams', 'Stamm', 'Simonis', 'Orn', 'Morar', 'Kunde', 'Hauck', 'Harvey']], 'y_data': [[3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY last_name'}",bar,last_name,COUNT(last_name),"Price, Streich, Hirthe, Hahn, Grady, Adams, Stamm, Simonis, Orn, Morar, Kunde, Hauck, Harvey","3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1","List the number of enginners and group by last name in a bar chart, and sort in desc by the y axis."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(Team_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['14–2', '15–1', '14–3']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"14–2, 15–1, 14–3","2, 2, 4","Give me a bar chart for mean team id of each all home, and I want to display total number in asc order."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Wed', 'Thur', 'Tue', 'Mon', 'Fri', 'Sun', 'Sat']], 'y_data': [[1040, 1000, 980, 930, 930, 910, 910]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Wed, Thur, Tue, Mon, Fri, Sun, Sat","1040, 1000, 980, 930, 930, 910, 910","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and order by the y-axis in descending."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'AC_ACCOUNT', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'SA_MAN', 'SA_REP', 'PR_REP', 'IT_PROG', 'ST_MAN', 'ST_CLERK', 'SH_CLERK', 'HR_REP', 'PU_CLERK', 'MK_REP']], 'y_data': [[110, 110, 100, 100, 90, 80, 77.24137931034483, 70, 60, 50, 50, 50, 40, 30, 20]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, AC_ACCOUNT, FI_MGR, FI_ACCOUNT, AD_PRES, SA_MAN, SA_REP, PR_REP, IT_PROG, ST_MAN, ST_CLERK, SH_CLERK, HR_REP, PU_CLERK, MK_REP","110, 110, 100, 100, 90, 80, 77.24137931034483, 70, 60, 50, 50, 50, 40, 30, 20","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to list from high to low by the y axis."
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",Bar,Extra Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Harbinger but bequest', 'Frugal not apropos', 'Thrift and accolade', 'Convoke and sanguine']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",bar,roomName,COUNT(roomName),"Harbinger but bequest, Frugal not apropos, Thrift and accolade, Convoke and sanguine","3, 2, 1, 1","A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, and rank from high to low by the y-axis."
"SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"F, M","5, 10","Find the number of students whose age is older than the average age for each gender, order x-axis from low to high order."
"SELECT FIRST_NAME , SALARY FROM employees ORDER BY FIRST_NAME DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Susan', 'Steven', 'Shelley', 'Nancy', 'Michael', 'John', 'Jennifer', 'Hermann', 'Den', 'Alexander', 'Adam']], 'y_data': [[6500, 24000, 12000, 12000, 13000, 14000, 4400, 10000, 11000, 9000, 8200]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Susan, Steven, Shelley, Nancy, Michael, John, Jennifer, Hermann, Den, Alexander, Adam","6500, 24000, 12000, 12000, 13000, 14000, 4400, 10000, 11000, 9000, 8200","You can return a bar chart with employees' first names and their salaries, sort by the X in descending."
"SELECT job , avg(age) FROM Person GROUP BY job ORDER BY job DESC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25.5, 35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"student, engineer, doctor","25.5, 35, 45","Return a histogram on how old is the average person for each job?, rank x axis in descending order."
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name DESC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Turkish Grand Prix', 'Spanish Grand Prix', 'Singapore Grand Prix', 'Monaco Grand Prix', 'Malaysian Grand Prix', 'Korean Grand Prix', 'Japanese Grand Prix', 'Italian Grand Prix', 'Indian Grand Prix', 'Hungarian Grand Prix', 'German Grand Prix', 'European Grand Prix', 'Chinese Grand Prix', 'Canadian Grand Prix', 'British Grand Prix', 'Brazilian Grand Prix', 'Belgian Grand Prix', 'Bahrain Grand Prix', 'Australian Grand Prix', 'Abu Dhabi Grand Prix']], 'y_data': [[3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Turkish Grand Prix, Spanish Grand Prix, Singapore Grand Prix, Monaco Grand Prix, Malaysian Grand Prix, Korean Grand Prix, Japanese Grand Prix, Italian Grand Prix, Indian Grand Prix, Hungarian Grand Prix, German Grand Prix, European Grand Prix, Chinese Grand Prix, Canadian Grand Prix, British Grand Prix, Brazilian Grand Prix, Belgian Grand Prix, Bahrain Grand Prix, Australian Grand Prix, Abu Dhabi Grand Prix","3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3","What are the names of all races held between 2009 and 2011, and count them by a bar chart, and order in descending by the X please."
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Published Research Paper', 'Research Patent']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Published Research Paper, Research Patent","10, 5","What are the descriptions of all the project outcomes, and count them by a bar chart, and could you list from high to low by the Y-axis?"
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['traditional', 'rustic', 'modern']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': ''}",bar,decor,count(*),"traditional, rustic, modern","4, 2, 2","Find the number of rooms with price higher than 120 for different decor Show bar chart, and list by the Y in descending."
"SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY Work_Type ASC",Bar,Hard,news_report,"{'chart': 'bar', 'x_name': 'Work_Type', 'y_name': 'avg(Years_working)', 'x_data': [['Host', 'Music', 'Screening']], 'y_data': [[16.5, 14, 4.666666666666667]], 'classify': [], 'describe': ''}",bar,Work_Type,avg(Years_working),"Host, Music, Screening","16.5, 14, 4.666666666666667","Visualize the average experience working length of journalists working on different role type using a bar chart, list X from low to high order."
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result",Bar,Easy,music_4,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Awarded', 'Nominated']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Awarded, Nominated","3, 6",What is the distibution of results for each music festival? Could you show me the result with a bar chart.
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Price DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Sony', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Creative Labs', 'Winchester']], 'y_data': [[240, 240, 162, 150, 150, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Sony, Fujits, Hewlett-Packard, Iomega, Creative Labs, Winchester","240, 240, 162, 150, 150, 62.5","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, order Y from high to low order."
"SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'avg(T1.age)', 'x_data': [['Anonymous Donor Hall', 'Bud Jones Hall', 'Dorm-plex 2000', 'Fawlty Towers', 'Grad Student Asylum', 'Smith Hall', 'University Hovels']], 'y_data': [[19.666666666666668, 20, 19.6, 19.777777777777782, 18, 20.166666666666668, 18]], 'classify': [], 'describe': ''}",bar,dorm_name,avg(T1.age),"Anonymous Donor Hall, Bud Jones Hall, Dorm-plex 2000, Fawlty Towers, Grad Student Asylum, Smith Hall, University Hovels","19.666666666666668, 20, 19.6, 19.777777777777782, 18, 20.166666666666668, 18",What is the average age for each dorm and what are the names of each dorm. Plot them as bar chart.
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[3.4, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"T, F","3.4, 5","Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, show in ascending by the Y."
"SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = ""Spring"" OR Party_Theme = ""Teqnology"" GROUP BY Last_year ORDER BY COUNT(Last_year) ASC",Bar,Hard,party_host,"{'chart': 'bar', 'x_name': 'Last_year', 'y_name': 'COUNT(Last_year)', 'x_data': [['2002', '2003', '2001', '2004']], 'y_data': [[0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Last_year BY TIME'}",bar,Last_year,COUNT(Last_year),"2002, 2003, 2001, 2004","0, 0, 1, 1","Count the last year of parties with theme ""Spring"" or ""Teqnology"" with a bar grpah, and I want to show in ascending by the the number of last year."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[62, 64.28571428571429, 67.33333333333333, 61.42857142857143, 63.84615384615385, 63.57142857142857, 60.666666666666664]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","62, 64.28571428571429, 67.33333333333333, 61.42857142857143, 63.84615384615385, 63.57142857142857, 60.666666666666664","For those employees who did not have any job in the past, show me about the distribution of  hire_date and the average of department_id bin hire_date by weekday in a bar chart."
"SELECT T2.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY max(T1.Price) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'max(T1.Price)', 'x_data': [['Winchester', 'Iomega', 'Creative Labs', 'Fujits', 'Sony', 'Hewlett-Packard']], 'y_data': [[120, 150, 180, 240, 240, 270]], 'classify': [], 'describe': ''}",bar,Name,max(T1.Price),"Winchester, Iomega, Creative Labs, Fujits, Sony, Hewlett-Packard","120, 150, 180, 240, 240, 270","For each manufacturer's name, what are the prices of their most expensive product?, and show from low to high by the y-axis."
"SELECT Name , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY AVG(Price) DESC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Oriel', 'Gortahile', 'Codling', 'Mount Callan', 'Carrowleagh']], 'y_data': [[15, 12, 10.666666666666666, 9, 9]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Oriel, Gortahile, Codling, Mount Callan, Carrowleagh","15, 12, 10.666666666666666, 9, 9","A bar chart showing the average price of each cinema, show in descending by the y-axis please."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY gender ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"female, male","25.5, 40","Bar graph to show the average of age from different gender, and I want to display in asc by the X-axis."
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'History', 'Languages', 'Marketing', 'Math', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Accounting, Astronomy, Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, History, Languages, Marketing, Math, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21",Find the total credits of courses provided by different department. Plot them as bar chart.
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE ASC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'ART', 'BIOL', 'CIS', 'ECON/FIN', 'ENG', 'HIST', 'MATH', 'MKT/MGT', 'PSYCH', 'SOC']], 'y_data': [[3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, ART, BIOL, CIS, ECON/FIN, ENG, HIST, MATH, MKT/MGT, PSYCH, SOC","3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1","How many professors have a PhD in each department Show bar chart, I want to rank by the X-axis in asc."
"SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY avg(T2.rating) DESC",Bar,Hard,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T2.rating)', 'x_data': [['Helen', 'Mark']], 'y_data': [[7.333333333333332, 7]], 'classify': [], 'describe': ''}",bar,name,avg(T2.rating),"Helen, Mark","7.333333333333332, 7","For each user, return the name and the average rating of reviews given by them Plot them as bar chart, and could you show by the y axis from high to low?"
"SELECT cName , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['OU', 'FSU', 'LSU', 'ASU']], 'y_data': [[22000, 19000, 18000, 12000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"OU, FSU, LSU, ASU","22000, 19000, 18000, 12000","Bar graph to show minimal enr from different cname, order by the Y-axis in descending please."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[5, 9.333333333333334, 1, 3, 7.666666666666667, 3]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Code),"Andy, James, John, Mary, Owen, Robert","5, 9.333333333333334, 1, 3, 7.666666666666667, 3","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  founder and the average of code , and group by attribute founder."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4","For those employees who did not have any job in the past, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and show by the x axis in ascending please."
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Toner cartridge', 'CD drive', 'Memory']], 'y_data': [[9, 7, 2]], 'classify': [], 'describe': ''}",bar,Name,Code,"Toner cartridge, CD drive, Memory","9, 7, 2","For those products with a price between 60 and 120, a bar chart shows the distribution of name and code , and list in desc by the Y please."
"SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['bangla', 'english']], 'y_data': [[7.5, 7]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"bangla, english","7.5, 7","Draw a bar chart for what is the average rating of songs for each language?, order by the mean rating in desc please."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, rank x-axis in asc order."
"SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY COUNT(ACC_Road) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'COUNT(ACC_Road)', 'x_data': [['3–5', '8–0', '6–2']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,COUNT(ACC_Road),"3–5, 8–0, 6–2","2, 1, 1","Bar chart x axis acc road y axis how many acc road, and could you sort how many acc road in desc order?"
"SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code ORDER BY count(DISTINCT T1.name) DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'count(DISTINCT T1.name)', 'x_data': [['Los Angeles', 'Austin', 'Paris', 'Tokyo', 'Taiwan', 'Beijing']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarter,count(DISTINCT T1.name),"Los Angeles, Austin, Paris, Tokyo, Taiwan, Beijing","3, 3, 2, 1, 1, 1","How many different products are produced in each headquarter city Visualize by bar chart, I want to list by the y axis in descending."
"SELECT CRS_CODE , COUNT(CRS_CODE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ORDER BY COUNT(CRS_CODE) DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_CODE', 'y_name': 'COUNT(CRS_CODE)', 'x_data': [['CIS-220', 'ACCT-211', 'QM-362', 'QM-261', 'ACCT-212', 'CIS-420']], 'y_data': [[3, 3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY CRS_CODE'}",bar,CRS_CODE,COUNT(CRS_CODE),"CIS-220, ACCT-211, QM-362, QM-261, ACCT-212, CIS-420","3, 3, 2, 2, 2, 1","How many courses each teacher taught? Show me a bar chart grouping by course code, list in desc by the total number."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 1, 2, 4, 1",What is the number of start dates of each apartment booking for each weekday? Return a bar chart.
"SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Class,count(*),"DP/GT, GT","5, 2","Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, order x axis in asc order."
"SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['WGIETZ', 'SMAVRIS', 'SHIGGINS', 'PFAY', 'MHARTSTE', 'KGRANT', 'HBAER']], 'y_data': [[206, 203, 205, 202, 201, 178, 204]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"WGIETZ, SMAVRIS, SHIGGINS, PFAY, MHARTSTE, KGRANT, HBAER","206, 203, 205, 202, 201, 178, 204","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of email and employee_id , could you show from high to low by the x axis?"
"SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) DESC",Bar,Extra Hard,shop_membership,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Alexandre', 'Zytogorski', 'Taverner', 'Popert', 'Cochrane', 'Brooke Greville']], 'y_data': [[3, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Alexandre, Zytogorski, Taverner, Popert, Cochrane, Brooke Greville","3, 1, 1, 1, 1, 1","For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and I want to order by the the total number in desc."
"SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",Bar,Medium,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(*)', 'x_data': [['Brazil', 'China', 'France', 'Germany', 'Netherlands', 'Russia', 'UK', 'USA']], 'y_data': [[1, 4, 1, 1, 1, 1, 2, 8]], 'classify': [], 'describe': ''}",bar,Headquarters,COUNT(*),"Brazil, China, France, Germany, Netherlands, Russia, UK, USA","1, 4, 1, 1, 1, 1, 2, 8","Show the different headquarters and number of companies at each headquarter with a bar chart, list bars from low to high order."
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",Bar,Easy,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Mary', 'Owen']], 'y_data': [[30, 210]], 'classify': [], 'describe': ''}",bar,cust_name,credit_score,"Mary, Owen","30, 210",Find the name and credit score of the customers who have some loans. 
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY cust_name DESC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'acc_bal', 'x_data': [['Mary', 'Jack']], 'y_data': [[2000, 1000]], 'classify': [], 'describe': ''}",bar,cust_name,acc_bal,"Mary, Jack","2000, 1000","Can you compare the account balances of customers with the letter 'a' in their names using a bar graph, and order by the x axis in desc please."
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'capacity', 'x_data': [['Diet Mountain Dew', 'Diet Pepsi', 'Dr Pepper', 'Sprite Lemo', 'Vimto']], 'y_data': [[8, 9, 1, 8, 6]], 'classify': [], 'describe': ''}",bar,catalog_entry_name,capacity,"Diet Mountain Dew, Diet Pepsi, Dr Pepper, Sprite Lemo, Vimto","8, 9, 1, 8, 6","Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and I want to list in asc by the x axis."
"SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(Enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 43092]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(Enrollment),"Private/Methodist, Public","2100, 43092",Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type. Show bar chart.
"SELECT network_name , count(*) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id ORDER BY network_name DESC",Bar,Hard,station_weather,"{'chart': 'bar', 'x_name': 'network_name', 'y_name': 'count(*)', 'x_data': [['Cheshunt', 'Chesham', 'Chalfont & Latimer', 'Chafford Hundred', 'Carpenders Park', 'Bushey', 'Broxbourne', 'Brentwood', 'Amersham']], 'y_data': [[1, 3, 2, 1, 2, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,network_name,count(*),"Cheshunt, Chesham, Chalfont & Latimer, Chafford Hundred, Carpenders Park, Bushey, Broxbourne, Brentwood, Amersham","1, 3, 2, 1, 2, 2, 2, 2, 3","Visualize a bar chart for the number of trains for each station by the station network name, display names in desc order please."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications']], 'y_data': [[3, 2, 1, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Accounting I, Accounting II, Database Design and Implementation, Intro. to Microcomputing, Intro. to Statistics, Statistical Applications","3, 2, 1, 3, 2, 2",How many courses for each course description? Show me a bar chart.
"SELECT Open_Date , COUNT(Open_Date) FROM Church",Bar,Easy,wedding,"{'chart': 'bar', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 0, 2, 2, 2]], 'classify': [], 'describe': 'BIN Open_Date BY WEEKDAY'}",bar,Open_Date,COUNT(Open_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 0, 2, 2, 2",How many churches open each year? Convert the year into the weekday interval and visualize with a bar chart.
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Defender', 'Forward', 'Midfielder']], 'y_data': [[7, 3, 6]], 'classify': [], 'describe': ''}",bar,Position,COUNT(*),"Defender, Forward, Midfielder","7, 3, 6","Return a bar chart on how many players played each position?, show in asc by the x-axis."
"SELECT PHONE_NUMBER , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'COMMISSION_PCT', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,COMMISSION_PCT,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, find  phone_number and  commission_pct , and visualize them by a bar chart."
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY How_to_Get_There ASC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'How_to_Get_There', 'y_name': 'COUNT(*)', 'x_data': [['bus', 'shuttle', 'walk']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",bar,How_to_Get_There,COUNT(*),"bus, shuttle, walk","6, 4, 5","List all the possible ways to get to attractions, together with the number of attractions accessible by these methods Visualize by bar chart, and order X in ascending order."
"SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county ORDER BY state_province_county DESC",Bar,Hard,customer_deliveries,"{'chart': 'bar', 'x_name': 'state_province_county', 'y_name': 'count(*)', 'x_data': [['Wyoming', 'Tennessee', 'Nebraska', 'Michigan', 'Maine', 'Illinois', 'Idaho', 'Colorado', 'California']], 'y_data': [[1, 4, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,state_province_county,count(*),"Wyoming, Tennessee, Nebraska, Michigan, Maine, Illinois, Idaho, Colorado, California","1, 4, 1, 2, 1, 1, 1, 2, 2","List the state names and the number of customers living in each state with a bar chart, display bar from high to low order please."
"SELECT Name , COUNT(Name) FROM technician WHERE Team != ""NYY"" GROUP BY Name ORDER BY Name ASC",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Cochrane', 'Lou Boudrea', 'Mark Sewell', 'Mickey Cochrane', 'Tony Sewell']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Cochrane, Lou Boudrea, Mark Sewell, Mickey Cochrane, Tony Sewell","1, 2, 1, 1, 1, 1, 1","List the name of technicians whose team is not ""NYY"", and count them by a bar chart, rank x axis in ascending order."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['2017', '2018']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'BIN active_from_date BY YEAR'}",bar,active_from_date,COUNT(active_from_date),"2017, 2018","3, 1",Find the number of customers that use email as the contact channel for each year. Visualize with a bar chart.
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY avg(basePrice) ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Double', 'Queen', 'King']], 'y_data': [[100, 150, 181.25]], 'classify': [], 'describe': ''}",bar,bedType,avg(basePrice),"Double, Queen, King","100, 150, 181.25","Return a bar chart on what is the average base price of rooms, for each bed type?, and display Y from low to high order."
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) DESC",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['EDU', 'CIS', 'BIOL', 'ACCT', 'ENGL']], 'y_data': [[3.87, 3.09, 2.84, 2.26, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,min(stu_gpa),"EDU, CIS, BIOL, ACCT, ENGL","3.87, 3.09, 2.84, 2.26, 2.11","Bar chart x axis dept code y axis minimal stu gpa, and display Y-axis in descending order."
"SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC",Bar,Medium,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'staff_details', 'y_name': 'COUNT(staff_details)', 'x_data': [['ab', 'accusamus', 'animi', 'aspernatur', 'consequatur', 'dicta', 'dolor', 'doloribus', 'est', 'iure', 'nulla', 'quo', 'sint', 'voluptatibus']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY staff_details'}",bar,staff_details,COUNT(staff_details),"ab, accusamus, animi, aspernatur, consequatur, dicta, dolor, doloribus, est, iure, nulla, quo, sint, voluptatibus","1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","What details are there on the research staff? List the result in ascending alphabetical order, and count them by a bar chart"
"SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COUNT(FIRST_NAME)', 'x_data': [['William', 'Payam', 'Adam']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",bar,FIRST_NAME,COUNT(FIRST_NAME),"William, Payam, Adam","2, 1, 1","For employees with first names that end with the letter m, groups and count the first name to visualize a bar graph, show from high to low by the total number."
"SELECT All_Neutral , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"9–1, 5–3, 4–3, 3–3","0.946, 0.8240000000000001, 0.706, 0.6","Find  All_Neutral and  All_Games_Percent , and visualize them by a bar chart."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC",Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['2017', '2018']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'BIN active_from_date BY YEAR'}",bar,active_from_date,COUNT(active_from_date),"2017, 2018","3, 1","Return a bar chart showing how many customers whose contact channel code is email for each year, show by the Y-axis in desc."
"SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name",Bar,Easy,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'COUNT(product_name)', 'x_data': [['Apple', 'gucci', 'jcrew']], 'y_data': [[3, 3, 4]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,COUNT(product_name),"Apple, gucci, jcrew","3, 3, 4",Compare the frequency of product names using a bar chart.
"SELECT pName , HS FROM Player WHERE HS < 1500",Bar,Easy,soccer_2,"{'chart': 'bar', 'x_name': 'pName', 'y_name': 'HS', 'x_data': [['Andrew', 'Charles', 'Eddie']], 'y_data': [[1200, 300, 600]], 'classify': [], 'describe': ''}",bar,pName,HS,"Andrew, Charles, Eddie","1200, 300, 600",What are the names and number of hours spent training for each player who trains for less than 1500 hours. Visualize by bar chart.
"SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY COUNT(Fname) DESC",Bar,Extra Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Sarah', 'Tracy', 'Stacy', 'Shiela', 'Michael']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Sarah, Tracy, Stacy, Shiela, Michael","2, 1, 1, 1, 1","A bar chart for finding the number of the first name of students who are living in the Smith Hall, order Y-axis from high to low order please."
"SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'count(*)', 'x_data': [['Yair', 'Stacey', 'Scott', 'Michael', 'Mark', 'David', 'Daniel', 'Steven', 'Russell', 'Luigi', 'Louis', 'Lawrence', 'Joanne', 'Cheng', 'Alan', 'Robert', 'Leslie', 'Ellie']], 'y_data': [[3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Fname,count(*),"Yair, Stacey, Scott, Michael, Mark, David, Daniel, Steven, Russell, Luigi, Louis, Lawrence, Joanne, Cheng, Alan, Robert, Leslie, Ellie","3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1","What is the first name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in with a bar chart, and sort in descending by the Y-axis."
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['F', 'T']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,COUNT(Is_full_time),"F, T","2, 5","Draw a bar chart about the distribution of  Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time."
"SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",Bar,Medium,aircraft,"{'chart': 'bar', 'x_name': 'Aircraft', 'y_name': 'COUNT(*)', 'x_data': [['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']], 'y_data': [[2, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Aircraft,COUNT(*),"Robinson R-22, Bell 206B3 JetRanger, CH-47D Chinook, Mil Mi-26, CH-53E Super Stallion","2, 1, 1, 2, 1","For each aircraft that has won an award, what is its name and how many time has it won. Plot them as bar chart."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name ASC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Alexis', 'Andrew', 'Austin', 'Brittany', 'Cassandra', 'Gabriel', 'Haley', 'Jessica', 'John', 'Jordan', 'Kris', 'Kyle', 'Logan', 'Tiffany']], 'y_data': [[11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Alexis, Andrew, Austin, Brittany, Cassandra, Gabriel, Haley, Jessica, John, Jordan, Kris, Kyle, Logan, Tiffany","11, 10, 11, 10, 9, 10, 10, 11, 12, 10.5, 10, 12, 12, 9","Draw a bar chart for what are the names and the average grades for each high schooler?, and display in ascending by the bar please."
"SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'sum(number_of_platforms)', 'x_data': [['Birmingham', 'Glasgow', 'London']], 'y_data': [[13, 17, 140]], 'classify': [], 'describe': ''}",bar,Location,sum(number_of_platforms),"Birmingham, Glasgow, London","13, 17, 140","Bar chart of total number of number of platforms from each location, and display by the X-axis in asc please."
"SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY COUNT(date_from) DESC",Bar,Medium,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'date_from', 'y_name': 'COUNT(date_from)', 'x_data': [['Mon', 'Wed', 'Fri', 'Thur', 'Tue', 'Sun', 'Sat']], 'y_data': [[4, 2, 2, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_from BY WEEKDAY'}",bar,date_from,COUNT(date_from),"Mon, Wed, Fri, Thur, Tue, Sun, Sat","4, 2, 2, 1, 0, 0, 0","Plot how many date from by grouped by date from as a bar graph, and I want to list in descending by the total number."
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Country_name', 'y_name': 'COUNT(*)', 'x_data': [['Indonesia', 'Ireland', 'Isle of Man', 'United States']], 'y_data': [[1, 4, 2, 9]], 'classify': [], 'describe': ''}",bar,Country_name,COUNT(*),"Indonesia, Ireland, Isle of Man, United States","1, 4, 2, 9",Show me a bar chart for how many players are from each country?
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[610, 2690, 3790, 4935, 735, 114, 585, 204, 202, 201, 525, 203, 108, 555, 203, 100, 200, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","610, 2690, 3790, 4935, 735, 114, 585, 204, 202, 201, 525, 203, 108, 555, 203, 100, 200, 205, 206","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, show by the X in desc."
"SELECT Founder , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Revenue)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[60, 300, 200, 130, 150, 120]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Revenue),"Robert, Owen, Mary, John, James, Andy","60, 300, 200, 130, 150, 120","For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of revenue , and group by attribute founder, sort from high to low by the x axis."
"SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'avg(capacity)', 'x_data': [['Lamberton', 'Chandler', 'Power', 'Bronfman', 'Drown', 'Main', 'Fairchild', 'Polya', 'Grace', 'Alumni', 'Gates', 'Saucon', 'Lambea', 'Garfield', 'Rathbone', 'Whitman', 'Nassa', 'Taylor', 'Painter', 'Stabler']], 'y_data': [[10, 10.5, 11, 12, 18, 26, 27, 28, 34, 36.5, 37.5, 49.33333333333334, 51, 59, 60, 76, 92, 93, 97, 113]], 'classify': [], 'describe': ''}",bar,building,avg(capacity),"Lamberton, Chandler, Power, Bronfman, Drown, Main, Fairchild, Polya, Grace, Alumni, Gates, Saucon, Lambea, Garfield, Rathbone, Whitman, Nassa, Taylor, Painter, Stabler","10, 10.5, 11, 12, 18, 26, 27, 28, 34, 36.5, 37.5, 49.33333333333334, 51, 59, 60, 76, 92, 93, 97, 113","What is the average capacity for rooms in each building? Draw a bar chart, and sort in asc by the Y."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""  ORDER BY COUNT(booking_start_date) ASC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2017', '2016']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2017, 2016","3, 6","Show the number of start dates of all the apartment bookings made by guests with gender code ""Female"" for each year with a bar chart, and list by the y axis in asc."
"SELECT first_name , COUNT(first_name) FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code GROUP BY first_name ORDER BY first_name ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Danny', 'Domenica', 'Karley', 'Monte', 'Ruben', 'Sigurd', 'Velva', 'Vernice']], 'y_data': [[1, 2, 1, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Danny, Domenica, Karley, Monte, Ruben, Sigurd, Velva, Vernice","1, 2, 1, 2, 2, 2, 1, 1","List the number of professionals in a bar chart that groups by professional's first name, order names from low to high order."
"SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T"" GROUP BY Language ORDER BY COUNT(Language) DESC",Bar,Extra Hard,world_1,"{'chart': 'bar', 'x_name': 'Language', 'y_name': 'COUNT(Language)', 'x_data': [['Dutch', 'Papiamento']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Language'}",bar,Language,COUNT(Language),"Dutch, Papiamento","3, 1","What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart, and rank by the total number from high to low."
"SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_HIREDATE', 'y_name': 'COUNT(EMP_HIREDATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN EMP_HIREDATE BY WEEKDAY'}",bar,EMP_HIREDATE,COUNT(EMP_HIREDATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 1, 0",How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart.
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10 ORDER BY catalog_level_name ASC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_level_name', 'y_name': 'catalog_level_number', 'x_data': [['Product', 'Sub-Category']], 'y_data': [[9, 8]], 'classify': [], 'describe': ''}",bar,catalog_level_name,catalog_level_number,"Product, Sub-Category","9, 8","Find the name and level of catalog structure with level between 5 and 10, rank by the bars in asc."
"SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_name DESC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'product_price', 'x_data': [['mouse', 'blue jeans', 'black jeans']], 'y_data': [[803.74, 939.57, 695.16]], 'classify': [], 'describe': ''}",bar,product_name,product_price,"mouse, blue jeans, black jeans","803.74, 939.57, 695.16","What is the price of each product supplied by supplier id 3? Return a bar chart, sort by the X-axis in descending please."
"SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(Team_ID)', 'x_data': [['15–1', '14–2', '14–3']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(Team_ID),"15–1, 14–2, 14–3","2, 4, 4","Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and rank total number from low to high order."
"SELECT All_Home , AVG(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY AVG(School_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(School_ID)', 'x_data': [['14–3', '14–2', '15–1']], 'y_data': [[5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(School_ID),"14–3, 14–2, 15–1","5, 2.5, 2","Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, sort y-axis in desc order."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 12000, 39600, 34000, 24000, 4400, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","36400, 55700, 64300, 250500, 61000, 11000, 13900, 10000, 6000, 13000, 28800, 12000, 39600, 34000, 24000, 4400, 12000, 8300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, I want to display by the X in desc please."
"SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) DESC",Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_HIREDATE', 'y_name': 'COUNT(EMP_HIREDATE)', 'x_data': [['Sat', 'Fri', 'Wed', 'Tue', 'Thur', 'Sun', 'Mon']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN EMP_HIREDATE BY WEEKDAY'}",bar,EMP_HIREDATE,COUNT(EMP_HIREDATE),"Sat, Fri, Wed, Tue, Thur, Sun, Mon","1, 1, 0, 0, 0, 0, 0","How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart, sort in desc by the Y."
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY cust_name ASC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'acc_bal', 'x_data': [['Jack', 'Mary']], 'y_data': [[1000, 2000]], 'classify': [], 'describe': ''}",bar,cust_name,acc_bal,"Jack, Mary","1000, 2000","Visualize a bar chart for what are the names and account balances of customers with the letter 'a' in their names?, rank names from low to high order."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Tue', 'Wed', 'Thur', 'Mon', 'Fri', 'Sun', 'Sat']], 'y_data': [[65.33333333333333, 65, 62.5, 62, 62, 60.666666666666664, 60.666666666666664]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Tue, Wed, Thur, Mon, Fri, Sun, Sat","65.33333333333333, 65, 62.5, 62, 62, 60.666666666666664, 60.666666666666664","For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, and list y-axis in desc order."
"SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"F, M","5, 10","A bar chart about how many students are older than average for each gender?, and display X from low to high order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Wed', 'Sun', 'Mon', 'Tue', 'Sat', 'Thur', 'Fri']], 'y_data': [[113400, 86200, 86100, 85700, 84400, 83300, 73400]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Wed, Sun, Mon, Tue, Sat, Thur, Fri","113400, 86200, 86100, 85700, 84400, 83300, 73400","For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and I want to sort y axis in descending order."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Weight DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['03.02.1976', '05.05.1972', '10.03.1976', '20.08.1970', '22.04.1977', '01.09.1977', '10.11.1972', '06.10.1976', '28.09.1981']], 'y_data': [[94, 92, 90, 89, 88, 88, 85, 83, 82]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"03.02.1976, 05.05.1972, 10.03.1976, 20.08.1970, 22.04.1977, 01.09.1977, 10.11.1972, 06.10.1976, 28.09.1981","94, 92, 90, 89, 88, 88, 85, 83, 82","Give me the comparison about Weight over the Date_of_Birth by a bar chart, order in descending by the y-axis."
"SELECT County_name , Population FROM county",Bar,Easy,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'Population', 'x_data': [['Howard', 'Baltimore County', 'Colony', 'Mansfield', 'Manning']], 'y_data': [[21000, 90000, 79000, 87200, 13300]], 'classify': [], 'describe': ''}",bar,County_name,Population,"Howard, Baltimore County, Colony, Mansfield, Manning","21000, 90000, 79000, 87200, 13300",Draw a bar chart for what are the name and population of each county?
"SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC",Bar,Easy,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'min(basePrice)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[75, 150, 150]], 'classify': [], 'describe': ''}",bar,decor,min(basePrice),"modern, rustic, traditional","75, 150, 150","Draw a bar chart of decor versus minimal baseprice, could you show in ascending by the names?"
"SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD  ORDER BY COUNT(Registration_Date) ASC",Bar,Medium,voter_2,"{'chart': 'bar', 'x_name': 'Registration_Date', 'y_name': 'COUNT(Registration_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Fri', 'Sat', 'Sun', 'Thur']], 'y_data': [[0, 0, 0, 2, 2, 2, 2]], 'classify': [], 'describe': 'BIN Registration_Date BY WEEKDAY'}",bar,Registration_Date,COUNT(Registration_Date),"Mon, Tue, Wed, Fri, Sat, Sun, Thur","0, 0, 0, 2, 2, 2, 2","Give me a bar chart shows the distinct registration date, and bin the date into the weekday interval in a bar chart, and show by the y axis in asc."
"SELECT gender , count(*) FROM dorm GROUP BY gender ORDER BY gender DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['X', 'M', 'F']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': ''}",bar,gender,count(*),"X, M, F","5, 1, 1","How many dorms are there for each gender? Show me a bar chart, and display in descending by the x axis."
"SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY SUM(COUNT(*)) DESC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'SUM(COUNT(*))', 'x_data': [['Democratic', 'Liberal', 'Working Families', 'Independence']], 'y_data': [[4, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,SUM(COUNT(*)),"Democratic, Liberal, Working Families, Independence","4, 2, 1, 1","For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, and show total number in desc order."
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description",Bar,Medium,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Published Research Paper', 'Research Patent']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Published Research Paper, Research Patent","10, 5",What are the number of the descriptions of all the project outcomes?
"SELECT All_Road , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'School_ID', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Road,School_ID,"13–0, 8–2, 6–5, 4–8","1, 2, 4, 5",Show me school_id by all road in a histogram
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'count(*)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[2, 2, 4]], 'classify': [], 'describe': ''}",bar,decor,count(*),"modern, rustic, traditional","2, 2, 4","Give me a histogram for how many rooms cost more than 120, for each different decor?"
"SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'CITY', 'y_name': 'COUNT(CITY)', 'x_data': [['London', 'Munich', 'OX9 9ZB', 'Seattle', 'South San Francisco', 'Southlake', 'Toronto']], 'y_data': [[1, 1, 1, 21, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CITY'}",bar,CITY,COUNT(CITY),"London, Munich, OX9 9ZB, Seattle, South San Francisco, Southlake, Toronto","1, 1, 1, 21, 1, 1, 1",Give me a bar chart to compare the number of departments located in different cities.
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) ASC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Fri', 'Tue', 'Wed', 'Mon', 'Sat', 'Sun', 'Thur']], 'y_data': [[0, 0, 0, 1, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_became_customer BY WEEKDAY'}",bar,date_became_customer,COUNT(date_became_customer),"Fri, Tue, Wed, Mon, Sat, Sun, Thur","0, 0, 0, 1, 1, 1, 3","Find the ""date became customers"" of the customers whose ID is between 10 and 20, and count them by a bar chart, and order total number in ascending order please."
"SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY Venue ASC",Bar,Medium,debate,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Abu Dhabi , UAE', 'Doha , Qatar', 'Dubai , UAE', 'Manama , Bahrain']], 'y_data': [[1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"Abu Dhabi , UAE, Doha , Qatar, Dubai , UAE, Manama , Bahrain","1, 1, 1, 3","A bar chart showing how many debates are held for each venue, order in ascending by the x axis."
"SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county",Bar,Medium,customer_deliveries,"{'chart': 'bar', 'x_name': 'state_province_county', 'y_name': 'count(*)', 'x_data': [['California', 'Colorado', 'Idaho', 'Illinois', 'Maine', 'Michigan', 'Nebraska', 'Tennessee', 'Wyoming']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 4, 1]], 'classify': [], 'describe': ''}",bar,state_province_county,count(*),"California, Colorado, Idaho, Illinois, Maine, Michigan, Nebraska, Tennessee, Wyoming","2, 2, 1, 1, 1, 2, 1, 4, 1",List the state names and the number of customers living in each state. 
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Fri', 'Thur', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed']], 'y_data': [[0, 192, 201, 202, 203, 204, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Fri, Thur, Sat, Sun, Mon, Tue, Wed","0, 192, 201, 202, 203, 204, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and could you rank by the y-axis in asc?"
"SELECT job , avg(age) FROM Person GROUP BY job",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25.5]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer, student","45, 35, 25.5",A bar chart about what is average age for different job title?
"SELECT Participant_Details , Participant_ID FROM Participants",Bar,Easy,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Details', 'y_name': 'Participant_ID', 'x_data': [['Karlee Batz', 'Vilma Schinner', 'Lupe Deckow', 'Kenyatta Kuhn', 'Miss Kaci Lebsack', 'Macy Mayer DDS', 'Dewitt Walter', 'Prof. Michelle Maggio Jr.', 'Dr. Jaydon Renner', 'Justyn Lebsack', 'Berniece Weimann', 'Neil Blick', 'Dedrick Ebert', 'Miss Joyce Cremin', 'Dr. Kris Deckow']], 'y_data': [[9, 26, 28, 36, 37, 38, 60, 63, 64, 66, 75, 86, 90, 96, 98]], 'classify': [], 'describe': ''}",bar,Participant_Details,Participant_ID,"Karlee Batz, Vilma Schinner, Lupe Deckow, Kenyatta Kuhn, Miss Kaci Lebsack, Macy Mayer DDS, Dewitt Walter, Prof. Michelle Maggio Jr., Dr. Jaydon Renner, Justyn Lebsack, Berniece Weimann, Neil Blick, Dedrick Ebert, Miss Joyce Cremin, Dr. Kris Deckow","9, 26, 28, 36, 37, 38, 60, 63, 64, 66, 75, 86, 90, 96, 98",Bar chart x axis participant details y axis participant_id
"SELECT Location , COUNT(*) FROM performance GROUP BY LOCATION ORDER BY COUNT(*) ASC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(*)', 'x_data': [['Bell Centre', 'Madison Square Garden', 'Scotiabank Place', 'TD Garden', 'Verizon Center']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Location,COUNT(*),"Bell Centre, Madison Square Garden, Scotiabank Place, TD Garden, Verizon Center","1, 1, 1, 1, 2","Bar chart of the total number from each location, and could you list from low to high by the Y?"
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"F, T","9, 19","Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, sort X-axis from low to high order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[200, 50, 50, 120, 30, 130, 30, 150, 100, 100]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","200, 50, 50, 120, 30, 130, 30, 150, 100, 100","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, and sort X-axis in descending order."
"SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Statement_Details', 'y_name': 'SUM(Account_Details)', 'x_data': [['Open Project', 'Private Project']], 'y_data': [[20316, 21335]], 'classify': [], 'describe': 'GROUP BY Statement_Details'}",bar,Statement_Details,SUM(Account_Details),"Open Project, Private Project","20316, 21335",Show the sum of account details for different statement details in a bar chart.
"SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY min(weight) ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'min(weight)', 'x_data': [['M', 'F']], 'y_data': [[82, 90]], 'classify': [], 'describe': ''}",bar,Sex,min(weight),"M, F","82, 90","Show me minimal weight by sex in a histogram, and display in ascending by the y-axis."
"SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC",Bar,Medium,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'COUNT(Participant_Type_Code)', 'x_data': [['Organizer', 'Participant']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,COUNT(Participant_Type_Code),"Organizer, Participant","7, 8","Bar chart x axis participant type code y axis the number of participant type code, and sort in ascending by the x axis."
"SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY min(T2.HS) DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pPos', 'y_name': 'min(T2.HS)', 'x_data': [['striker', 'goalie', 'mid']], 'y_data': [[1600, 1200, 300]], 'classify': [], 'describe': ''}",bar,pPos,min(T2.HS),"striker, goalie, mid","1600, 1200, 300","What is minimum hours of the students playing in different position Plot them as bar chart, and could you sort by the y axis in descending?"
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Published Research Paper', 'Research Patent']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Published Research Paper, Research Patent","10, 5","What are the number of the descriptions of all the project outcomes?, and I want to show by the bar in ascending."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",Bar,Easy,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Bulgaria', 'Russia']], 'y_data': [[1, 6]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Bulgaria, Russia","1, 6",What are different nationalities of people and the corresponding number of people from each nation. Visualize by bar chart.
"SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'ACC_Percent', 'x_data': [['4–8', '6–5', '8–2', '13–0']], 'y_data': [[0.563, 0.625, 0.813, 0.875]], 'classify': [], 'describe': ''}",bar,All_Road,ACC_Percent,"4–8, 6–5, 8–2, 13–0","0.563, 0.625, 0.813, 0.875","Return a bar chart about the distribution of All_Road and ACC_Percent , and display y-axis in ascending order please."
"SELECT date_of_latest_logon , COUNT(date_of_latest_logon) FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""  ORDER BY COUNT(date_of_latest_logon) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_latest_logon', 'y_name': 'COUNT(date_of_latest_logon)', 'x_data': [['Sat', 'Wed', 'Tue', 'Thur', 'Sun', 'Mon', 'Fri']], 'y_data': [[2, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_latest_logon BY WEEKDAY'}",bar,date_of_latest_logon,COUNT(date_of_latest_logon),"Sat, Wed, Tue, Thur, Sun, Mon, Fri","2, 0, 0, 0, 0, 0, 0","Find the number of the latest logon date of the students whose family name is ""Jaskolski"" or ""Langosh"", and sort in descending by the Y please."
"SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY day_of_week ASC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'day_of_week', 'y_name': 'avg(high_temperature)', 'x_data': [['Friday', 'Monday', 'Saturday', 'Sunday', 'Thursday', 'Tuesday', 'Wednesday']], 'y_data': [[55, 56, 55, 54, 57, 58, 58]], 'classify': [], 'describe': ''}",bar,day_of_week,avg(high_temperature),"Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday","55, 56, 55, 54, 57, 58, 58","What is the average high temperature for each day of week Plot them as bar chart, display in ascending by the X."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, could you list bar from low to high order?"
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY Team ASC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Batista, Team Orton","4, 2","Bar graph to show the total number from different team, and list in ascending by the bar."
"SELECT Date , COUNT(Date) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY COUNT(Date) DESC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['21 May', '21 Jun', '20 May', '2 Aug', '19 May', '11 July']], 'y_data': [[2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",bar,Date,COUNT(Date),"21 May, 21 Jun, 20 May, 2 Aug, 19 May, 11 July","2, 1, 1, 1, 1, 1","For each record in schedule, show the number of films for each day in a bar chart, I want to sort by the y-axis from high to low."
"SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type ORDER BY COUNT(premises_type) ASC",Bar,Hard,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'premises_type', 'y_name': 'COUNT(premises_type)', 'x_data': [['Residence', 'Office', 'Warehouse']], 'y_data': [[3, 6, 6]], 'classify': [], 'describe': 'GROUP BY premises_type'}",bar,premises_type,COUNT(premises_type),"Residence, Office, Warehouse","3, 6, 6","Give me a bar chart about the number of customer addresses in each premises type, and display Y in asc order."
"SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Kacey', 'Lyric', 'Evangeline']], 'y_data': [[6, 4, 1]], 'classify': [], 'describe': ''}",bar,name,age,"Kacey, Lyric, Evangeline","6, 4, 1","List the dog name and age of the dogs who have been abandoned in a bar chart, rank total number in descending order."
"SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",Bar,Medium,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'SUM(sum(T2.order_quantity))', 'x_data': [['Apple', 'gucci', 'jcrew']], 'y_data': [[23, 21, 40]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,SUM(sum(T2.order_quantity)),"Apple, gucci, jcrew","23, 21, 40",Show the product name and total order quantity for each product in a bar chart.
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'ST_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'SA_MAN', 'PU_MAN', 'PR_REP', 'MK_REP', 'HR_REP', 'FI_MGR', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[30, 20, 20, 5, 5, 5, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, ST_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, SA_MAN, PU_MAN, PR_REP, MK_REP, HR_REP, FI_MGR, AD_ASST, AC_MGR, AC_ACCOUNT","30, 20, 20, 5, 5, 5, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1","Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, and order Y-axis in desc order."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['July', 'Aug', 'Sept', 'June', 'Oct']], 'y_data': [[31, 31, 30, 14, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"July, Aug, Sept, June, Oct","31, 31, 30, 14, 1","For those employees who was hired before 2002-06-21, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, sort by the how many hire date in descending please."
"SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(School_ID),"3–5, 6–2, 8–0","4.5, 2, 1","Bar chart x axis acc road y axis the average of school id, and rank in desc by the Y please."
"SELECT year , count(*) FROM matches ORDER BY count(*) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2014', '2015', '2013', '2017', '2016']], 'y_data': [[0, 0, 12, 108, 158]], 'classify': [], 'describe': 'BIN year BY YEAR'}",bar,year,count(*),"2014, 2015, 2013, 2017, 2016","0, 0, 12, 108, 158","Show me a bar chart for how many matches were played each year?, and order from low to high by the y axis."
"SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY count(*) DESC",Bar,Hard,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'count(*)', 'x_data': [['statistics', 'French', 'English', 'data structure']], 'y_data': [[4, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,count(*),"statistics, French, English, data structure","4, 2, 2, 1","how many registed students do each course have? List course name and the number of their registered students?, and list y axis from high to low order."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[79600, 86200, 94300, 94800, 97400, 108200, 124400]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","79600, 86200, 94300, 94800, 97400, 108200, 124400","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart, rank sum salary from low to high order please."
"SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'COUNT(Is_full_time)', 'x_data': [['F', 'T']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,COUNT(Is_full_time),"F, T","2, 5","Draw a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and I want to show in ascending by the bars."
"SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date ORDER BY Publication_Date DESC",Bar,Medium,book_2,"{'chart': 'bar', 'x_name': 'Publication_Date', 'y_name': 'COUNT(Publication_Date)', 'x_data': [['October 2005', 'March 2008', 'March 2007', 'June 2006', 'August 2008', 'April 2007']], 'y_data': [[1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Publication_Date'}",bar,Publication_Date,COUNT(Publication_Date),"October 2005, March 2008, March 2007, June 2006, August 2008, April 2007","1, 1, 1, 1, 2, 1","A bar chart showing the number of publication dates of books, and list from high to low by the Publication_Date."
"SELECT STU_FNAME , SUM(STU_GPA) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'STU_FNAME', 'y_name': 'SUM(STU_GPA)', 'x_data': [['John', 'Juliette', 'William']], 'y_data': [[4, 2, 2]], 'classify': [], 'describe': 'GROUP BY STU_FNAME'}",bar,STU_FNAME,SUM(STU_GPA),"John, Juliette, William","4, 2, 2",Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?
"SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 1, 0, 1, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_of_birth BY WEEKDAY'}",bar,date_of_birth,COUNT(date_of_birth),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 1, 0, 1, 0, 1, 1","When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a bar chart"
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_start_date) ASC",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2017', '2016']], 'y_data': [[6, 9]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2017, 2016","6, 9","Show the number of apartment bookings in each year and bin booking start date by year with a bar chart, could you sort from low to high by the y axis?"
"SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'count(*)', 'x_data': [['Whitman', 'Taylor', 'Stabler', 'Saucon', 'Rathbone', 'Painter', 'Nassa', 'Lambea', 'Gates', 'Garfield']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,building,count(*),"Whitman, Taylor, Stabler, Saucon, Rathbone, Painter, Nassa, Lambea, Gates, Garfield","1, 2, 1, 1, 1, 1, 1, 1, 1, 1","Find the number of rooms with more than 50 capacity for each building Show bar chart, and order from high to low by the X-axis."
"SELECT Days , COUNT(Days) FROM COURSE GROUP BY Days ORDER BY Credits",Bar,Medium,college_3,"{'chart': 'bar', 'x_name': 'Days', 'y_name': 'COUNT(Days)', 'x_data': [['M', 'MT', 'MTW', 'MW', 'T', 'TTh', 'TW', 'Th', 'ThF', 'T', 'W']], 'y_data': [[6, 3, 37, 5, 3, 1, 1, 6, 8, 1, 5]], 'classify': [], 'describe': 'GROUP BY Days'}",bar,Days,COUNT(Days),"M, MT, MTW, MW, T, TTh, TW, Th, ThF, T, W","6, 3, 37, 5, 3, 1, 1, 6, 8, 1, 5","Give me the comparison about the amount of Days over the  Days , and group by attribute Days."
"SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY count(*) DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[51, 7]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,count(*),"M, F","51, 7","How many faculty members do we have for each gender? Draw a bar chart, order by the Y-axis in descending."
"SELECT formats , count(*) FROM files GROUP BY formats ORDER BY formats DESC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'formats', 'y_name': 'count(*)', 'x_data': [['mp4', 'mp3']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,formats,count(*),"mp4, mp3","4, 2","Bar graph to show the total number from different formats, and I want to rank by the x axis in desc."
"SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) DESC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Class,count(*),"DP/GT, GT","5, 2","What are the different classes of races, and how many races correspond to each Show bar chart, could you list y-axis in desc order?"
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name ASC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'capacity', 'x_data': [['Diet Mountain Dew', 'Diet Pepsi', 'Dr Pepper', 'Sprite Lemo', 'Vimto']], 'y_data': [[8, 9, 1, 8, 6]], 'classify': [], 'describe': ''}",bar,catalog_entry_name,capacity,"Diet Mountain Dew, Diet Pepsi, Dr Pepper, Sprite Lemo, Vimto","8, 9, 1, 8, 6","Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, I want to list in asc by the x axis."
"SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) DESC",Bar,Extra Hard,flight_4,"{'chart': 'bar', 'x_name': 'country', 'y_name': 'COUNT(country)', 'x_data': [['United States', 'Turkey', 'Azerbaijan']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY country'}",bar,country,COUNT(country),"United States, Turkey, Azerbaijan","4, 1, 1","What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, could you display Y in desc order?"
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of  job_id and the sum of department_id , and group by attribute job_id."
"SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) DESC",Bar,Extra Hard,local_govt_mdm,"{'chart': 'bar', 'x_name': 'cmi_details', 'y_name': 'COUNT(cmi_details)', 'x_data': [['Volkman, Mills and Ferry', 'Schmitt-Lang', 'Schmidt, Kertzmann and Lubowitz', 'Reynolds-McClure']], 'y_data': [[3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY cmi_details'}",bar,cmi_details,COUNT(cmi_details),"Volkman, Mills and Ferry, Schmitt-Lang, Schmidt, Kertzmann and Lubowitz, Reynolds-McClure","3, 1, 1, 1","what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a bar chart, and rank by the y-axis in desc."
"SELECT EMAIL , SALARY FROM employees ORDER BY EMAIL DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'SALARY', 'x_data': [['SMAVRIS', 'SKING', 'SHIGGINS', 'NGREENBE', 'MHARTSTE', 'JWHALEN', 'JRUSSEL', 'HBAER', 'DRAPHEAL', 'AHUNOLD', 'AFRIPP']], 'y_data': [[6500, 24000, 12000, 12000, 13000, 4400, 14000, 10000, 11000, 9000, 8200]], 'classify': [], 'describe': ''}",bar,EMAIL,SALARY,"SMAVRIS, SKING, SHIGGINS, NGREENBE, MHARTSTE, JWHALEN, JRUSSEL, HBAER, DRAPHEAL, AHUNOLD, AFRIPP","6500, 24000, 12000, 12000, 13000, 4400, 14000, 10000, 11000, 9000, 8200","Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary, and order in desc by the X please."
"SELECT COUNTRY_NAME , SUM(EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id GROUP BY COUNTRY_NAME ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'COUNTRY_NAME', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['United States of America', 'Canada', 'Germany', 'United Kingdom']], 'y_data': [[9891, 403, 204, 203]], 'classify': [], 'describe': 'GROUP BY COUNTRY_NAME'}",bar,COUNTRY_NAME,SUM(EMPLOYEE_ID),"United States of America, Canada, Germany, United Kingdom","9891, 403, 204, 203","Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, show Y from high to low order."
"SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC",Bar,Hard,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['SAAB 340', 'Piper Archer III', 'Lockheed L1011', 'Embraer ERJ-145', 'Boeing 757-300', 'Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,name,count(*),"SAAB 340, Piper Archer III, Lockheed L1011, Embraer ERJ-145, Boeing 757-300, Boeing 747-400, Boeing 737-800, Airbus A340-300","1, 1, 2, 1, 1, 1, 1, 2","What is the name of each aircraft and how many flights does each one complete Show bar chart, order by the X-axis from high to low."
"SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['WGIETZ', 'SHIGGINS', 'HBAER', 'SMAVRIS', 'PFAY', 'MHARTSTE', 'KGRANT']], 'y_data': [[206, 205, 204, 203, 202, 201, 178]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"WGIETZ, SHIGGINS, HBAER, SMAVRIS, PFAY, MHARTSTE, KGRANT","206, 205, 204, 203, 202, 201, 178","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and employee_id , rank from high to low by the total number please."
"SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION",Bar,Easy,match_season,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(*)', 'x_data': [['Defender', 'Forward', 'Midfielder']], 'y_data': [[7, 3, 6]], 'classify': [], 'describe': ''}",bar,Position,COUNT(*),"Defender, Forward, Midfielder","7, 3, 6",Return a bar chart on how many players played each position?
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Sept', 'Oct']], 'y_data': [[54500, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Sept, Oct","54500, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, find  hire_date and the sum of salary bin hire_date by time, and visualize them by a bar chart."
"SELECT Location , count(*) FROM cinema GROUP BY LOCATION",Bar,Easy,cinema,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'count(*)', 'x_data': [['County Clare', 'County Cork', 'County Dublin', 'County Laois', 'County Louth', 'County Tipperary', 'County Wicklow']], 'y_data': [[3, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Location,count(*),"County Clare, County Cork, County Dublin, County Laois, County Louth, County Tipperary, County Wicklow","3, 1, 1, 1, 1, 2, 1",Show each location and the number of cinemas there by a bar chart.
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 203, 555, 108, 525, 201, 202, 204, 585, 114, 735, 4935, 3790, 2690, 610","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the  job_id , and group by attribute job_id."
"SELECT Room , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY Room ASC",Bar,Hard,inn_1,"{'chart': 'bar', 'x_name': 'Room', 'y_name': 'count(*)', 'x_data': [['AOB', 'CAS', 'FNA', 'HBB', 'IBD', 'IBS', 'MWC', 'RND', 'RTE', 'TAA']], 'y_data': [[51, 69, 66, 60, 63, 59, 56, 62, 55, 59]], 'classify': [], 'describe': ''}",bar,Room,count(*),"AOB, CAS, FNA, HBB, IBD, IBS, MWC, RND, RTE, TAA","51, 69, 66, 60, 63, 59, 56, 62, 55, 59","For each room, find its the number of times reservations were made for it Visualize them using a bar chart, I want to sort by the X in asc please."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['Chrisside', 'Feliciaberg', 'Jasthaven', 'Macejkovicchester', 'Monahanshire', 'Nataliamouth', 'New Lonzoville', 'Port Maximeview', 'Purdyville', 'Rueckermouth', 'South Eugenia', 'West Sherwoodstad']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"Chrisside, Feliciaberg, Jasthaven, Macejkovicchester, Monahanshire, Nataliamouth, New Lonzoville, Port Maximeview, Purdyville, Rueckermouth, South Eugenia, West Sherwoodstad","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1","How many drama workshop groups are there in each city? Return both the city and the count Plot them as bar chart, order in ascending by the x-axis."
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Beijing', 'Taiwan', 'Tokyo', 'Austin', 'Los Angeles', 'Paris']], 'y_data': [[200, 130, 120, 100, 50, 30]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Beijing, Taiwan, Tokyo, Austin, Los Angeles, Paris","200, 130, 120, 100, 50, 30","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of revenue , and group by attribute headquarter, sort from high to low by the mean revenue."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Sun', 'Wed', 'Tue', 'Mon', 'Fri', 'Sat', 'Thur']], 'y_data': [[7733.333333333333, 7590.909090909091, 6620, 6525, 6357.142857142857, 4933.333333333333, 3280]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Sun, Wed, Tue, Mon, Fri, Sat, Thur","7733.333333333333, 7590.909090909091, 6620, 6525, 6357.142857142857, 4933.333333333333, 3280","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday, and sort in descending by the mean salary please."
"SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY COUNT(Founder) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'COUNT(Founder)', 'x_data': [['Andy', 'John', 'Mary', 'Robert', 'James', 'Owen']], 'y_data': [[1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,COUNT(Founder),"Andy, John, Mary, Robert, James, Owen","1, 1, 1, 2, 3, 3","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, and order Y-axis in ascending order."
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–3', '15–1', '14–2']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,COUNT(All_Home),"14–3, 15–1, 14–2","1, 1, 2","Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, rank y axis from low to high order."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['SA_REP', 'SH_CLERK', 'ST_CLERK', 'SA_MAN', 'ST_MAN', 'PU_CLERK', 'FI_ACCOUNT', 'IT_PROG', 'AC_ACCOUNT', 'AC_MGR', 'PR_REP', 'AD_VP', 'MK_REP', 'MK_MAN', 'AD_ASST', 'PU_MAN', 'FI_MGR', 'AD_PRES']], 'y_data': [[4935, 3790, 2690, 735, 610, 585, 555, 525, 206, 205, 204, 203, 202, 201, 200, 114, 108, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"SA_REP, SH_CLERK, ST_CLERK, SA_MAN, ST_MAN, PU_CLERK, FI_ACCOUNT, IT_PROG, AC_ACCOUNT, AC_MGR, PR_REP, AD_VP, MK_REP, MK_MAN, AD_ASST, PU_MAN, FI_MGR, AD_PRES","4935, 3790, 2690, 735, 610, 585, 555, 525, 206, 205, 204, 203, 202, 201, 200, 114, 108, 100","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, rank y axis in descending order."
"SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'pName', 'y_name': 'HS', 'x_data': [['Eddie', 'Charles', 'Andrew']], 'y_data': [[600, 300, 1200]], 'classify': [], 'describe': ''}",bar,pName,HS,"Eddie, Charles, Andrew","600, 300, 1200","Find the name and training hours of players whose hours are below 1500 Show bar chart, show names in desc order."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[154, 153.5, 155.06666666666666, 159.5, 151, 148.5, 153]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","154, 153.5, 155.06666666666666, 159.5, 151, 148.5, 153","For those employees who did not have any job in the past, return a bar chart about the distribution of  hire_date and the average of employee_id bin hire_date by weekday."
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY cust_name ASC",Bar,Medium,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Mary', 'Owen']], 'y_data': [[30, 210]], 'classify': [], 'describe': ''}",bar,cust_name,credit_score,"Mary, Owen","30, 210","Please compare the credit score of the customers who have some loans by a bar chart, and list from low to high by the x-axis."
"SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = ""Lisa"" GROUP BY T1.Allergy",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Allergy', 'y_name': 'COUNT(Allergy)', 'x_data': [['Anchovies', 'Cat', 'Dog', 'Eggs', 'Grass Pollen', 'Milk', 'Ragweed', 'Shellfish', 'Tree Pollen']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Allergy'}",bar,Allergy,COUNT(Allergy),"Anchovies, Cat, Dog, Eggs, Grass Pollen, Milk, Ragweed, Shellfish, Tree Pollen","1, 1, 1, 1, 2, 1, 1, 1, 1",What is the number of each allergie that the student with first name Lisa has? Draw a bar chart.
"SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(count(*))', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(count(*)),"Tiffany, Logan, Kyle, Kris, Jordan, Jessica, Haley, Gabriel, Cassandra, Austin, Andrew, Alexis","1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 3, 2","What are the names of the high schoolers and how many friends does each have Visualize by bar chart, rank in desc by the X."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony']], 'y_data': [[150, 240, 162, 150, 240]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony","150, 240, 162, 150, 240","Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, and display by the x axis from low to high please."
"SELECT guest_first_name , COUNT(guest_first_name) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id GROUP BY guest_first_name",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'guest_first_name', 'y_name': 'COUNT(guest_first_name)', 'x_data': [['Else', 'Gabe', 'Juvenal', 'Keith', 'Keon', 'Lo', 'Louvenia', 'Mozell', 'Rebeca', 'Tamia']], 'y_data': [[1, 1, 1, 1, 2, 2, 1, 1, 4, 1]], 'classify': [], 'describe': 'GROUP BY guest_first_name'}",bar,guest_first_name,COUNT(guest_first_name),"Else, Gabe, Juvenal, Keith, Keon, Lo, Louvenia, Mozell, Rebeca, Tamia","1, 1, 1, 1, 2, 2, 1, 1, 4, 1",How many bookings for different guests? Show me a bar chart grouping by guest first name.
"SELECT Fname , Age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid ORDER BY Fname DESC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'Age', 'x_data': [['Tracy', 'Linda']], 'y_data': [[19, 18]], 'classify': [], 'describe': ''}",bar,Fname,Age,"Tracy, Linda","19, 18","What are the different first names and ages of the students who do have pets Visualize by bar chart, I want to rank in descending by the bar."
"SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(School_ID),"3–5, 6–2, 8–0","4.5, 2, 1","Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, sort bar in asc order please."
"SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY Team_ID ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'Team_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,All_Neutral,Team_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 3, 4","Give me the comparison about Team_ID over the All_Neutral , and could you rank by the total number in asc please?"
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[1193, 206]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Oct","1193, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, display total number from high to low order."
"SELECT Name , AVG(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name ORDER BY AVG(Num_Employees) ASC",Bar,Extra Hard,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Num_Employees)', 'x_data': [['Treasury', 'Homeland Security']], 'y_data': [[115897, 208000]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Num_Employees),"Treasury, Homeland Security","115897, 208000","Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, order by the y-axis in asc."
"SELECT job , min(age) FROM Person GROUP BY job ORDER BY job ASC",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25]], 'classify': [], 'describe': ''}",bar,job,min(age),"doctor, engineer, student","45, 35, 25","what is minimum age for different job title?, order x-axis in ascending order please."
"SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY PetType ASC",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,PetType,max(pet_age),"cat, dog","3, 2","Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, could you list PetType in asc order please?"
"SELECT born_state , COUNT(born_state) FROM head GROUP BY born_state",Bar,Easy,department_management,"{'chart': 'bar', 'x_name': 'born_state', 'y_name': 'COUNT(born_state)', 'x_data': [['Alabama', 'California', 'Connecticut', 'Delaware', 'Florida']], 'y_data': [[2, 4, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY born_state'}",bar,born_state,COUNT(born_state),"Alabama, California, Connecticut, Delaware, Florida","2, 4, 2, 1, 1",Show me the number of born state by born state in a histogram
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY AVG(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['PU_CLERK', 'ST_CLERK', 'SH_CLERK', 'AD_ASST', 'IT_PROG', 'MK_REP', 'ST_MAN', 'FI_ACCOUNT', 'AC_ACCOUNT', 'SA_REP', 'PR_REP', 'PU_MAN', 'AC_MGR', 'FI_MGR', 'SA_MAN', 'MK_MAN', 'AD_VP', 'AD_PRES']], 'y_data': [[2780, 2785, 3215, 4400, 5760, 6000, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"PU_CLERK, ST_CLERK, SH_CLERK, AD_ASST, IT_PROG, MK_REP, ST_MAN, FI_ACCOUNT, AC_ACCOUNT, SA_REP, PR_REP, PU_MAN, AC_MGR, FI_MGR, SA_MAN, MK_MAN, AD_VP, AD_PRES","2780, 2785, 3215, 4400, 5760, 6000, 7280, 7920, 8300, 8350, 10000, 11000, 12000, 12000, 12200, 13000, 17000, 24000","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, sort Y-axis from low to high order."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['July', 'June', 'Sept', 'Aug']], 'y_data': [[670, 670, 680, 1040]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"July, June, Sept, Aug","670, 670, 680, 1040","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, rank by the Y from low to high."
"SELECT Director , COUNT(Director) FROM movie GROUP BY Director ORDER BY budget_million",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Director', 'y_name': 'COUNT(Director)', 'x_data': [['Anthony Hickox', 'Christian Duguay', 'Damian Lee', 'Demian Lichtenstein', 'John Swanbeck', 'Jonathan Lynn', 'Roger Christian', 'Stephen Kay', 'Troy Duffy']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Director'}",bar,Director,COUNT(Director),"Anthony Hickox, Christian Duguay, Damian Lee, Demian Lichtenstein, John Swanbeck, Jonathan Lynn, Roger Christian, Stephen Kay, Troy Duffy","2, 1, 1, 1, 1, 1, 1, 1, 1",Show how many movies did each director direct in a bar chart.
"SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_HIREDATE', 'y_name': 'COUNT(EMP_HIREDATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN EMP_HIREDATE BY WEEKDAY'}",bar,EMP_HIREDATE,COUNT(EMP_HIREDATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 1, 0",Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart.
"SELECT FIRST_NAME , SALARY FROM employees ORDER BY SALARY DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Steven', 'John', 'Michael', 'Shelley', 'Nancy', 'Den', 'Hermann', 'Alexander', 'Adam', 'Susan', 'Jennifer']], 'y_data': [[24000, 14000, 13000, 12000, 12000, 11000, 10000, 9000, 8200, 6500, 4400]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Steven, John, Michael, Shelley, Nancy, Den, Hermann, Alexander, Adam, Susan, Jennifer","24000, 14000, 13000, 12000, 12000, 11000, 10000, 9000, 8200, 6500, 4400","Just show employees' salaries by their first name in a bar chart, I want to order by the Y in desc."
"SELECT LAST_NAME , SALARY FROM employees ORDER BY SALARY ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Whalen', 'Mavris', 'Fripp', 'Hunold', 'Baer', 'Raphaely', 'Greenberg', 'Higgins', 'Hartstein', 'Russell', 'King']], 'y_data': [[4400, 6500, 8200, 9000, 10000, 11000, 12000, 12000, 13000, 14000, 24000]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Whalen, Mavris, Fripp, Hunold, Baer, Raphaely, Greenberg, Higgins, Hartstein, Russell, King","4400, 6500, 8200, 9000, 10000, 11000, 12000, 12000, 13000, 14000, 24000","Show me salary by last name in a histogram, list y axis in asc order."
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[34.22222222222222, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"England, Northern Ireland, Wales","34.22222222222222, 29, 27","What are the nationalities and their average ages of journalists Show me a bar chart, and list x-axis from low to high order."
"SELECT job , avg(age) FROM Person GROUP BY job",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['doctor', 'engineer', 'student']], 'y_data': [[45, 35, 25.5]], 'classify': [], 'describe': ''}",bar,job,avg(age),"doctor, engineer, student","45, 35, 25.5",How old is the average person for each job. Show bar chart.
"SELECT Sex , SUM(Weight) FROM people GROUP BY Sex ORDER BY SUM(Weight) ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'SUM(Weight)', 'x_data': [['F', 'M']], 'y_data': [[184, 607]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,SUM(Weight),"F, M","184, 607","Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart, could you rank y axis from low to high order?"
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 75, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 75, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, display x axis in asc order please."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[23, 1, 28, 3, 5, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","23, 1, 28, 3, 5, 6","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and the sum of code , and group by attribute name."
"SELECT premises_type , count(*) FROM premises GROUP BY premises_type ORDER BY count(*) DESC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'premises_type', 'y_name': 'count(*)', 'x_data': [['Office', 'Warehouse', 'Residence']], 'y_data': [[7, 4, 4]], 'classify': [], 'describe': ''}",bar,premises_type,count(*),"Office, Warehouse, Residence","7, 4, 4","Show each premise type and the number of premises in that type with a bar chart, and show y axis in descending order."
"SELECT Name , Height FROM people ORDER BY Height DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Laurent Capet', 'Stéphane Antiga', 'Dominique Daquin', 'Vincent Montméat', 'Guillaume Samica', 'Frantz Granvorka', 'Philippe Barça-Cysique', 'Loïc De Kergret', 'Hubert Henno']], 'y_data': [[202, 200, 197, 196, 196, 195, 194, 193, 188]], 'classify': [], 'describe': ''}",bar,Name,Height,"Laurent Capet, Stéphane Antiga, Dominique Daquin, Vincent Montméat, Guillaume Samica, Frantz Granvorka, Philippe Barça-Cysique, Loïc De Kergret, Hubert Henno","202, 200, 197, 196, 196, 195, 194, 193, 188","Give me the comparison about Height over the Name by a bar chart, and could you rank y-axis in desc order please?"
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[17, 10]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"T, F","17, 10","A bar chart shows the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, rank y-axis in desc order."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1197, 740, 1653, 834, 980, 1361, 424]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1197, 740, 1653, 834, 980, 1361, 424","For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of  hire_date and the sum of employee_id bin hire_date by weekday."
"SELECT All_Games , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Games,All_Games_Percent,"35–2, 28–6, 24–10, 21–14","0.946, 0.8240000000000001, 0.706, 0.6",Plot all_games_percent by grouped by all games as a bar graph
"SELECT All_Neutral , Team_ID FROM basketball_match ORDER BY All_Neutral DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'Team_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,All_Neutral,Team_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 3, 4","Find All_Neutral and Team_ID , and visualize them by a bar chart, and show in descending by the names."
"SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY count(DISTINCT dept_name) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_name)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_name),"A&SCI, BUS","7, 4","A bar chart about how many departments are in each school?, could you order in descending by the count(DISTINCTdept_name)?"
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Taiwan', 'Beijing', 'Tokyo', 'Paris', 'Austin', 'Los Angeles']], 'y_data': [[1, 3, 5, 6, 23, 28]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Taiwan, Beijing, Tokyo, Paris, Austin, Los Angeles","1, 3, 5, 6, 23, 28","For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of code , and group by attribute headquarter in a bar chart, could you rank y-axis in asc order please?"
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[125.5, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sept, Oct","125.5, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, and order by the y axis in ascending."
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",Bar,Easy,cre_Theme_park,"{'chart': 'bar', 'x_name': 'How_to_Get_There', 'y_name': 'COUNT(*)', 'x_data': [['bus', 'shuttle', 'walk']], 'y_data': [[6, 4, 5]], 'classify': [], 'describe': ''}",bar,How_to_Get_There,COUNT(*),"bus, shuttle, walk","6, 4, 5",Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. Plot them as bar chart.
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Shop_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[17, 10]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"T, F","17, 10","Bar chart of sum shop id from each is full time, and list in desc by the total number of shop id."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Thur', 'Mon', 'Wed', 'Sun', 'Sat', 'Tue', 'Fri']], 'y_data': [[5, 4, 3, 3, 3, 2, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Thur, Mon, Wed, Sun, Sat, Tue, Fri","5, 4, 3, 3, 3, 2, 0","Bar chart x axis date of enrolment y axis the number of date of enrolment, sort in desc by the Y-axis."
"SELECT Date_of_Birth , Height FROM people ORDER BY Date_of_Birth DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['28.09.1981', '22.04.1977', '20.08.1970', '10.11.1972', '10.03.1976', '06.10.1976', '05.05.1972', '03.02.1976', '01.09.1977']], 'y_data': [[196, 194, 193, 197, 195, 188, 202, 200, 196]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"28.09.1981, 22.04.1977, 20.08.1970, 10.11.1972, 10.03.1976, 06.10.1976, 05.05.1972, 03.02.1976, 01.09.1977","196, 194, 193, 197, 195, 188, 202, 200, 196","Bar chart x axis date of birth y axis height, sort by the x-axis from high to low."
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) DESC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Batista, Team Orton","4, 2","Bar graph to show the total number from different team, and could you list by the total number in desc?"
"SELECT state , SUM(vote_id) FROM votes GROUP BY state ORDER BY SUM(vote_id) ASC",Bar,Medium,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'SUM(vote_id)', 'x_data': [['CA', 'NY', 'NJ\n']], 'y_data': [[3, 3, 5]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,SUM(vote_id),"CA, NY, NJ
","3, 3, 5","List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and display sum vote id in ascending order."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Los Angeles', 'Austin', 'Paris', 'Tokyo', 'Beijing', 'Taiwan']], 'y_data': [[28, 23, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Los Angeles, Austin, Paris, Tokyo, Beijing, Taiwan","28, 23, 6, 5, 3, 1","For those records from the products and each product's manufacturer, find headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart, and list from high to low by the Y-axis."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Thur', 'Mon', 'Wed', 'Sun', 'Sat', 'Tue', 'Fri']], 'y_data': [[5, 4, 3, 3, 3, 2, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Thur, Mon, Wed, Sun, Sat, Tue, Fri","5, 4, 3, 3, 3, 2, 0","How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday, rank the number of date of enrolment from high to low order."
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(*)', 'x_data': [['Team Orton', 'Team Batista']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",bar,Team,COUNT(*),"Team Orton, Team Batista","2, 4","A bar chart about how many eliminations did each team have?, and could you show in ascending by the y-axis please?"
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY name DESC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Turkish Grand Prix', 'Spanish Grand Prix', 'Singapore Grand Prix', 'Monaco Grand Prix', 'Malaysian Grand Prix', 'Korean Grand Prix', 'Japanese Grand Prix', 'Italian Grand Prix', 'Indian Grand Prix', 'Hungarian Grand Prix', 'German Grand Prix', 'European Grand Prix', 'Chinese Grand Prix', 'Canadian Grand Prix', 'British Grand Prix', 'Brazilian Grand Prix', 'Belgian Grand Prix', 'Bahrain Grand Prix', 'Australian Grand Prix', 'Abu Dhabi Grand Prix']], 'y_data': [[3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Turkish Grand Prix, Spanish Grand Prix, Singapore Grand Prix, Monaco Grand Prix, Malaysian Grand Prix, Korean Grand Prix, Japanese Grand Prix, Italian Grand Prix, Indian Grand Prix, Hungarian Grand Prix, German Grand Prix, European Grand Prix, Chinese Grand Prix, Canadian Grand Prix, British Grand Prix, Brazilian Grand Prix, Belgian Grand Prix, Bahrain Grand Prix, Australian Grand Prix, Abu Dhabi Grand Prix","3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3","What are the number of the names of races held between 2009 and 2011?, and display by the bars in descending."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and employee_id , show by the Y in asc please."
"SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY T1.Participant_Type_Code ASC",Bar,Hard,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'AVG(count(*))', 'x_data': [['Organizer', 'Participant']], 'y_data': [[1.5, 2]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,AVG(count(*)),"Organizer, Participant","1.5, 2","How many events have each participants attended? Show their average number by each participant type code using a bar chart, sort from low to high by the names."
"SELECT All_Home , SUM(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(Team_ID)', 'x_data': [['14–3', '14–2', '15–1']], 'y_data': [[4, 4, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(Team_ID),"14–3, 14–2, 15–1","4, 4, 2","Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to list by the y axis from high to low please."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[178, 204, 202, 201, 203, 205, 206]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","178, 204, 202, 201, 203, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the job_id , and display in desc by the bars."
"SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['bangla', 'english']], 'y_data': [[7.5, 7]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"bangla, english","7.5, 7","What is the average rating of songs for each language Plot them as bar chart, and could you list from high to low by the total number?"
"SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code",Bar,Easy,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'COUNT(Participant_Type_Code)', 'x_data': [['Organizer', 'Participant']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,COUNT(Participant_Type_Code),"Organizer, Participant","7, 8",Bar chart x axis participant type code y axis the number of participant type code
"SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY PetID ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetID', 'y_name': 'weight', 'x_data': [['2001-01-01', '2002-01-01']], 'y_data': [[12, 13.4]], 'classify': [], 'describe': ''}",bar,PetID,weight,"2001-01-01, 2002-01-01","12, 13.4","Visualize a bar chart for what is the id and weight of every pet who is older than 1?, display bar from low to high order."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Oct', 'Aug', 'Sept', 'July', 'June']], 'y_data': [[205, 139.16129032258064, 125.51724137931035, 116.45161290322581, 96.78571428571429]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Oct, Aug, Sept, July, June","205, 139.16129032258064, 125.51724137931035, 116.45161290322581, 96.78571428571429","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and order by the mean manager id in desc."
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Sun', 'Thur', 'Tue', 'Fri', 'Mon', 'Sat', 'Wed']], 'y_data': [[3, 5, 5, 7, 8, 9, 11]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Sun, Thur, Tue, Fri, Mon, Sat, Wed","3, 5, 5, 7, 8, 9, 11","For all employees who have the letters D or S in their first name, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, show by the how many hire date in ascending."
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name DESC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Denmark', 'Algeria', 'Albania', 'Afghanistan']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Denmark, Algeria, Albania, Afghanistan","1, 1, 2, 2","Draw a bar chart for how many storms occured in each region?, could you rank in desc by the bars?"
"SELECT Name , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID ORDER BY COUNT(*) DESC",Bar,Hard,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['exploration trial', 'US museum', 'jungle cruise', 'parking', 'fun games', 'presidents hall', 'history gallery', 'fun shops', 'flying elephant', 'UK gallery']], 'y_data': [[4, 4, 3, 2, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"exploration trial, US museum, jungle cruise, parking, fun games, presidents hall, history gallery, fun shops, flying elephant, UK gallery","4, 4, 3, 2, 2, 1, 1, 1, 1, 1","A bar chart showing the number of tourist attractions for each attraction name, and order y-axis from high to low order please."
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass"" GROUP BY date_test_taken ORDER BY date_test_taken ASC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['2018-03-19', '2018-03-21', '2018-03-23', '2018-03-24', '2018-03-25']], 'y_data': [[2, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY date_test_taken'}",bar,date_test_taken,COUNT(date_test_taken),"2018-03-19, 2018-03-21, 2018-03-23, 2018-03-24, 2018-03-25","2, 1, 1, 1, 3","Find the dates of the tests taken with result ""Pass"", and count them by a bar chart, display by the names in ascending."
"SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['21–14', '24–10', '28–6', '35–2']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Games,All_Games_Percent,"21–14, 24–10, 28–6, 35–2","0.6, 0.706, 0.8240000000000001, 0.946","Give me the comparison about All_Games_Percent over the All_Games by a bar chart, order in asc by the X-axis."
"SELECT Class , avg(age) FROM captain GROUP BY CLASS",Bar,Easy,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'avg(age)', 'x_data': [['Armed schooner', 'Cutter', 'Frigate', 'Sloop-of-war', 'Third-rate ship of the line']], 'y_data': [[45, 43, 38, 38, 51.33333333333334]], 'classify': [], 'describe': ''}",bar,Class,avg(age),"Armed schooner, Cutter, Frigate, Sloop-of-war, Third-rate ship of the line","45, 43, 38, 38, 51.33333333333334",Return the average age of captains in each class.
"SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements  ORDER BY COUNT(Date_Claim_Settled) DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Claim_Settled', 'y_name': 'COUNT(Date_Claim_Settled)', 'x_data': [['2018', '2017']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'BIN Date_Claim_Settled BY YEAR'}",bar,Date_Claim_Settled,COUNT(Date_Claim_Settled),"2018, 2017","10, 5","Bar chart x axis date claim settled y axis the number of date claim settled, rank from high to low by the Y-axis."
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code DESC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Direct Debit', 'Credit Card']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Direct Debit, Credit Card","10, 5","List all payment methods and number of payments using each payment methods Plot them as bar chart, and could you display in descending by the bar?"
"SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) DESC",Bar,Medium,device,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Penygraig', 'Dinas', 'Blaenllecha', 'Wattstown', 'Porth', 'Pentre', 'Maerdy', 'Gelli', 'Cymmer']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Penygraig, Dinas, Blaenllecha, Wattstown, Porth, Pentre, Maerdy, Gelli, Cymmer","2, 2, 2, 1, 1, 1, 1, 1, 1","Create a bar chart showing how many location across location, list Y from high to low order."
"SELECT Team_Name , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'School_ID', 'x_data': [['Virginia Tech', 'Clemson', 'Duke', 'North Carolina']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,Team_Name,School_ID,"Virginia Tech, Clemson, Duke, North Carolina","5, 4, 2, 1","Bar chart x axis team name y axis school_id, display in desc by the Y-axis."
"SELECT apt_number , COUNT(apt_number) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id GROUP BY apt_number ORDER BY COUNT(apt_number) DESC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'COUNT(apt_number)', 'x_data': [['Suite 693', 'Apt. 859', 'Suite 749', 'Suite 634', 'Suite 088', 'Apt. 940', 'Apt. 794', 'Apt. 585', 'Apt. 477', 'Apt. 187']], 'y_data': [[3, 3, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY apt_number'}",bar,apt_number,COUNT(apt_number),"Suite 693, Apt. 859, Suite 749, Suite 634, Suite 088, Apt. 940, Apt. 794, Apt. 585, Apt. 477, Apt. 187","3, 3, 2, 1, 1, 1, 1, 1, 1, 1","How many bookings for each apartment number? Plot a bar chart, and I want to sort by the total number from high to low please."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[23, 1, 28, 3, 5, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","23, 1, 28, 3, 5, 6","For those records from the products and each product's manufacturer, find  name and the sum of code , and group by attribute name, and visualize them by a bar chart."
"SELECT date_to , COUNT(date_to) FROM Project_Staff",Bar,Easy,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'date_to', 'y_name': 'COUNT(date_to)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 2, 2, 3, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_to BY WEEKDAY'}",bar,date_to,COUNT(date_to),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 2, 2, 3, 1, 0, 0",When do all the researcher role staff stop working? Bin the time into weekday interval and count them with a bar chart.
"SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor ORDER BY Governor DESC",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Governor', 'y_name': 'COUNT(Governor)', 'x_data': [['Tom Golisano', 'Peter Vallone']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Governor'}",bar,Governor,COUNT(Governor),"Tom Golisano, Peter Vallone","1, 2","Find the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, could you sort from high to low by the Governor?"
"SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum(T1.show_times_per_day) DESC",Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T1.show_times_per_day)', 'x_data': [['Codling', 'Oriel', 'Mount Callan', 'Carrowleagh', 'Gortahile']], 'y_data': [[10, 5, 5, 5, 4]], 'classify': [], 'describe': ''}",bar,Name,sum(T1.show_times_per_day),"Codling, Oriel, Mount Callan, Carrowleagh, Gortahile","10, 5, 5, 5, 4","What is total number of show times per dat for each cinema Show bar chart, sort from high to low by the show times per day please."
"SELECT LAST_NAME , LOCATION_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY LAST_NAME ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'LOCATION_ID', 'x_data': [['Baer', 'Fripp', 'Greenberg', 'Hartstein', 'Higgins', 'Hunold', 'King', 'Mavris', 'Raphaely', 'Russell', 'Whalen']], 'y_data': [[2700, 1500, 1700, 1800, 1700, 1400, 1700, 2400, 1700, 2500, 1700]], 'classify': [], 'describe': ''}",bar,LAST_NAME,LOCATION_ID,"Baer, Fripp, Greenberg, Hartstein, Higgins, Hunold, King, Mavris, Raphaely, Russell, Whalen","2700, 1500, 1700, 1800, 1700, 1400, 1700, 2400, 1700, 2500, 1700","Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id, and display bar in asc order."
"SELECT Name , COUNT(Name) FROM technician GROUP BY Name ORDER BY Age ASC",Bar,Medium,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Cochrane', 'Joe Sewell', 'John Brown', 'Lou Boudrea', 'Mark Sewell', 'Mickey Cochrane', 'Tony Sewell']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Cochrane, Joe Sewell, John Brown, Lou Boudrea, Mark Sewell, Mickey Cochrane, Tony Sewell","1, 2, 1, 1, 1, 1, 1, 1, 1",What are the number of the names of the technicians by ascending order of age?
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69",Show the transaction types and the total amount of transactions. 
"SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY languages ASC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['bangla', 'english']], 'y_data': [[7.5, 7]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"bangla, english","7.5, 7","Show me a bar chart for what is the average rating of songs for each language?, and I want to order by the x axis in asc."
"SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AssocProf', 'AsstProf', 'Professor']], 'y_data': [[2, 18, 14]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"AssocProf, AsstProf, Professor","2, 18, 14",Show all the faculty ranks and the number of students advised by each rank in a bar chart.
"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC",Bar,Medium,singer,"{'chart': 'bar', 'x_name': 'Citizenship', 'y_name': 'COUNT(*)', 'x_data': [['Australia', 'Chile', 'France', 'Germany', 'United States']], 'y_data': [[1, 1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Citizenship,COUNT(*),"Australia, Chile, France, Germany, United States","1, 1, 1, 1, 4","For each citizenship, how many singers are from that country, and display bars in asc order."
"SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY SCHOOL_CODE ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_name)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_name),"A&SCI, BUS","7, 4","A bar chart about how many departments are in each school?, rank X-axis in asc order."
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Afghanistan', 'Albania', 'Algeria', 'Denmark']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Afghanistan, Albania, Algeria, Denmark","2, 2, 1, 1","Show me a bar chart for how many storms occured in each region?, and I want to sort by the names in ascending."
"SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name",Bar,Hard,product_catalog,"{'chart': 'bar', 'x_name': 'attribute_name', 'y_name': 'COUNT(attribute_name)', 'x_data': [['Black', 'Sweet', 'Yellow']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': 'GROUP BY attribute_name'}",bar,attribute_name,COUNT(attribute_name),"Black, Sweet, Yellow","3, 3, 2",Compute how many attributes in each name of the attribute definitions with attribute value 0. Show the result with a bar chart.
"SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) ASC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(Product_Type_Code)', 'x_data': [['Clothes', 'Books', 'Electronics', 'Food']], 'y_data': [[2, 4, 4, 5]], 'classify': [], 'describe': 'GROUP BY Product_Type_Code'}",bar,Product_Type_Code,COUNT(Product_Type_Code),"Clothes, Books, Electronics, Food","2, 4, 4, 5","What is the total number of different types of codes of products?, and show Y-axis in ascending order."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[450, 240, 486, 150, 240, 125]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","450, 240, 486, 150, 240, 125","For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the  name , and group by attribute name by a bar chart."
"SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'count(*)', 'x_data': [['female', 'male']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,gender,count(*),"female, male","2, 1",Find the number of people who is under 40 for each gender. 
"SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(credits)', 'x_data': [['World History', 'Groups and Rings', 'Game Programming', 'Embedded Systems', 'International Practicum', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'Immunology', 'Graph Theory', 'Fiction Writing', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[4, 4, 4, 4, 3.5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(credits),"World History, Groups and Rings, Game Programming, Embedded Systems, International Practicum, Rock and Roll, Ponzi Schemes, Operating Systems, Immunology, Graph Theory, Fiction Writing, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","4, 4, 4, 4, 3.5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3","Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, I want to order in descending by the y-axis."
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,poker_player,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(*)', 'x_data': [['Russia', 'Bulgaria']], 'y_data': [[6, 1]], 'classify': [], 'describe': ''}",bar,Nationality,COUNT(*),"Russia, Bulgaria","6, 1","Visualize a bar chart for how many people are there of each nationality?, list in descending by the bars."
"SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY Name ASC",Bar,Hard,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Grażyna Wolszczak', 'Kamila Porczyk', 'Marek Siudym', 'Maria Góralczyk', 'Piotr Pręgowski', 'Władysław Grzywna']], 'y_data': [[2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Grażyna Wolszczak, Kamila Porczyk, Marek Siudym, Maria Góralczyk, Piotr Pręgowski, Władysław Grzywna","2, 1, 1, 1, 1, 1","Just compare the number of journal committees of each editor using a histogram, show bar in ascending order."
"SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type ORDER BY premises_type ASC",Bar,Hard,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'premises_type', 'y_name': 'COUNT(premises_type)', 'x_data': [['Office', 'Residence', 'Warehouse']], 'y_data': [[6, 3, 6]], 'classify': [], 'describe': 'GROUP BY premises_type'}",bar,premises_type,COUNT(premises_type),"Office, Residence, Warehouse","6, 3, 6","Give me a bar chart about the number of customer addresses in each premises type, display premises_type in asc order."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) DESC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['male', 'female']], 'y_data': [[40, 25.5]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"male, female","40, 25.5","What is the average age for each gender Visualize by bar chart, I want to list by the mean age in descending."
"SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[120, 90, 66]], 'classify': [], 'describe': ''}",bar,Name,Price,"Memory, CD drive, Toner cartridge","120, 90, 66","For those products with a price between 60 and 120, find  name and  price , and visualize them by a bar chart."
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) DESC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Physics', 'Finance', 'Geology', 'Pol. Sci.', 'Comp. Sci.', 'Cybernetics', 'Astronomy', 'Mech. Eng.', 'Marketing']], 'y_data': [[108011.81, 105311.38, 99382.59, 87549.8, 80797.83, 79866.95, 79070.08, 51647.57, 43770.36]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Physics, Finance, Geology, Pol. Sci., Comp. Sci., Cybernetics, Astronomy, Mech. Eng., Marketing","108011.81, 105311.38, 99382.59, 87549.8, 80797.83, 79866.95, 79070.08, 51647.57, 43770.36","What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, list by the total number from high to low."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[260, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Sept, Oct","260, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, and display by the Y-axis in desc please."
"SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[300, 200, 150, 60, 130, 120]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","300, 200, 150, 60, 130, 120","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  headquarter and the sum of revenue , and group by attribute headquarter."
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Research Patent', 'Published Research Paper']], 'y_data': [[5, 10]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Research Patent, Published Research Paper","5, 10","A bar chart for listing the number of the description of the outcomes for all projects, could you sort in ascending by the y axis?"
"SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count(*) ASC",Bar,Hard,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Helen', 'Mark']], 'y_data': [[3, 4]], 'classify': [], 'describe': ''}",bar,name,count(*),"Helen, Mark","3, 4","For each user, find their name and the number of reviews written by them Show bar chart, order y-axis in asc order."
"SELECT Registration_Date , COUNT(Registration_Date) FROM VOTING_RECORD",Bar,Easy,voter_2,"{'chart': 'bar', 'x_name': 'Registration_Date', 'y_name': 'COUNT(Registration_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 2, 2, 2]], 'classify': [], 'describe': 'BIN Registration_Date BY WEEKDAY'}",bar,Registration_Date,COUNT(Registration_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 2, 2, 2",Show how many registration date from each registration date
"SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY job DESC",Bar,Hard,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'avg(age)', 'x_data': [['engineer', 'doctor']], 'y_data': [[35, 45]], 'classify': [], 'describe': ''}",bar,job,avg(age),"engineer, doctor","35, 45","Return a bar chart on what is the average age for a male in each job?, I want to rank by the X from high to low please."
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Oct', 'Aug', 'Sept', 'July', 'June']], 'y_data': [[205, 139.16129032258064, 125.5925925925926, 117.58620689655173, 96.25]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Oct, Aug, Sept, July, June","205, 139.16129032258064, 125.5925925925926, 117.58620689655173, 96.25","For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart, show by the y-axis in desc."
"SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(pet_age)', 'x_data': [['cat', 'dog']], 'y_data': [[3, 1.5]], 'classify': [], 'describe': ''}",bar,PetType,avg(pet_age),"cat, dog","3, 1.5",Bar chart of the average of pet age from each pettype
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY payment_method_code ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Credit Card, Direct Debit","10, 5","For each payment method, return how many customers use it, and list bar in asc order."
"SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(grade)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[9, 12, 12, 10, 10.5, 12, 11, 10, 10, 9, 10, 11, 10, 11]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(grade),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","9, 12, 12, 10, 10.5, 12, 11, 10, 10, 9, 10, 11, 10, 11","Show the names and their average grades of each high schooler, and order in descending by the bar."
"SELECT T2.organisation_details , T1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_details ORDER BY T2.organisation_details DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'organisation_details', 'y_name': 'SUM(organisation_id)', 'x_data': [['quo', 'officiis', 'itaque', 'eius', 'a']], 'y_data': [[14, 10, 19, 2, 9]], 'classify': [], 'describe': 'GROUP BY organisation_details'}",bar,organisation_details,SUM(organisation_id),"quo, officiis, itaque, eius, a","14, 10, 19, 2, 9","What are the ids and details for all organizations that have grants of more than 6000 dollars, and I want to order by the bars in descending."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T2.Revenue ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Floppy disk', 'Memory', 'Printer', 'Toner cartridge', 'DVD drive', 'CD drive', 'DVD burner', 'Monitor', 'Hard drive', 'ZIP drive']], 'y_data': [[30, 30, 50, 50, 75, 100, 100, 120, 130, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Floppy disk, Memory, Printer, Toner cartridge, DVD drive, CD drive, DVD burner, Monitor, Hard drive, ZIP drive","30, 30, 50, 50, 75, 100, 100, 120, 130, 200","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of revenue , and group by attribute name, show from low to high by the Y."
"SELECT JOB_ID , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 24000, 7920, 12000, 6500, 5760, 6000, 10000, 2780, 12200, 8341.379310344828, 3215, 2785, 7125]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(SALARY),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 24000, 7920, 12000, 6500, 5760, 6000, 10000, 2780, 12200, 8341.379310344828, 3215, 2785, 7125","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to rank by the x axis in asc please."
"SELECT LAST_NAME , DEPARTMENT_ID FROM employees ORDER BY DEPARTMENT_ID ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Whalen', 'Hartstein', 'Raphaely', 'Mavris', 'Fripp', 'Hunold', 'Baer', 'Russell', 'King', 'Greenberg', 'Higgins']], 'y_data': [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110]], 'classify': [], 'describe': ''}",bar,LAST_NAME,DEPARTMENT_ID,"Whalen, Hartstein, Raphaely, Mavris, Fripp, Hunold, Baer, Russell, King, Greenberg, Higgins","10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110","Can you list the employee's last name and the corresponding department id using a bar chart?, rank in ascending by the y-axis."
"SELECT All_Neutral , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"9–1, 5–3, 4–3, 3–3","0.946, 0.8240000000000001, 0.706, 0.6",Give me the comparison about  All_Games_Percent over the  All_Neutral .
"SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(School_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 9]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(School_ID),"8–0, 6–2, 3–5","1, 2, 9","Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display by the Y-axis from low to high."
"SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY min(weight) ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'min(weight)', 'x_data': [['M', 'F']], 'y_data': [[82, 90]], 'classify': [], 'describe': ''}",bar,Sex,min(weight),"M, F","82, 90","A bar chart showing the minimum weight for each gender, and I want to show y axis in asc order."
"SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Name ASC",Bar,Medium,museum_visit,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Level_of_membership', 'x_data': [['Fernando Gago', 'Gonzalo Higuaín ', 'Guti Midfielder']], 'y_data': [[6, 8, 5]], 'classify': [], 'describe': ''}",bar,Name,Level_of_membership,"Fernando Gago, Gonzalo Higuaín , Guti Midfielder","6, 8, 5","Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, could you order by the Name from low to high?"
"SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Michael', 'Shelley', 'Hermann', 'William', 'Kimberely', 'Susan', 'Pat']], 'y_data': [[13000, 12000, 10000, 8300, 7000, 6500, 6000]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Michael, Shelley, Hermann, William, Kimberely, Susan, Pat","13000, 12000, 10000, 8300, 7000, 6500, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and salary in a bar chart, list in desc by the Y."
"SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY Service_Type_Description DESC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(Service_Type_Description)', 'x_data': [['provide photo service', 'provide filming service', 'provide dinning service', 'provide adv promoting service']], 'y_data': [[5, 3, 5, 2]], 'classify': [], 'describe': 'GROUP BY Service_Type_Description'}",bar,Service_Type_Description,COUNT(Service_Type_Description),"provide photo service, provide filming service, provide dinning service, provide adv promoting service","5, 3, 5, 2","Give me the number of the descriptions of the service types that cost more than 100, could you sort X-axis from high to low order?"
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'HR_REP', 'IT_PROG', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_MGR, AD_PRES, FI_ACCOUNT, HR_REP, IT_PROG, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 4, 1, 3, 3, 1, 1, 13, 9, 9, 2","For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and could you display in ascending by the bar please?"
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['William', 'Shelley', 'Hermann', 'Susan', 'Pat', 'Michael', 'Kimberely']], 'y_data': [[110, 110, 70, 40, 20, 20, 0]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"William, Shelley, Hermann, Susan, Pat, Michael, Kimberely","110, 110, 70, 40, 20, 20, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and department_id , and I want to list by the Y in descending."
"SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC",Bar,Medium,music_4,"{'chart': 'bar', 'x_name': 'Result', 'y_name': 'COUNT(Result)', 'x_data': [['Nominated', 'Awarded']], 'y_data': [[6, 3]], 'classify': [], 'describe': 'GROUP BY Result'}",bar,Result,COUNT(Result),"Nominated, Awarded","6, 3","What is the distibution of results for each music festival? Could you show me the result with a bar chart, list from high to low by the x axis."
"SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name ORDER BY course_name DESC",Bar,Medium,student_assessment,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'COUNT(course_name)', 'x_data': [['statistics', 'data structure', 'French', 'English']], 'y_data': [[4, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY course_name'}",bar,course_name,COUNT(course_name),"statistics, data structure, French, English","4, 1, 2, 2","For all course_name from courses table, group by the course name and count them with a bar chart, I want to sort in descending by the x axis."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Thur', 'Wed', 'Mon', 'Tue', 'Sun', 'Fri', 'Sat']], 'y_data': [[159.5, 155.06666666666666, 154, 153.5, 153, 151, 148.5]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Thur, Wed, Mon, Tue, Sun, Fri, Sat","159.5, 155.06666666666666, 154, 153.5, 153, 151, 148.5","For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday, and list the average of employee id from high to low order."
"SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"3–3, 4–3, 5–3, 9–1","0.6, 0.706, 0.8240000000000001, 0.946","Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and rank total number in ascending order."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[2044, 16770]], 'classify': [], 'describe': 'BIN date_address_to BY MONTH'}",bar,date_address_to,SUM(monthly_rental),"Feb, Mar","2044, 16770",Give me the comparison about the sum of monthly_rental over the  date_address_to bin date_address_to by time.
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Fujits', 'Iomega', 'Winchester', 'Sony', 'Creative Labs', 'Hewlett-Packard']], 'y_data': [[1, 3, 3, 5, 7.666666666666667, 9.333333333333334]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Fujits, Iomega, Winchester, Sony, Creative Labs, Hewlett-Packard","1, 3, 3, 5, 7.666666666666667, 9.333333333333334","For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, and I want to display Y-axis from low to high order."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category ASC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5","Give me a histogram for how many books fall into each category?, and rank in ascending by the X-axis."
"SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town ASC",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'City_Town', 'y_name': 'count(*)', 'x_data': [['Chrisside', 'Feliciaberg', 'Jasthaven', 'Macejkovicchester', 'Monahanshire', 'Nataliamouth', 'New Lonzoville', 'Port Maximeview', 'Purdyville', 'Rueckermouth', 'South Eugenia', 'West Sherwoodstad']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,City_Town,count(*),"Chrisside, Feliciaberg, Jasthaven, Macejkovicchester, Monahanshire, Nataliamouth, New Lonzoville, Port Maximeview, Purdyville, Rueckermouth, South Eugenia, West Sherwoodstad","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1","How many drama workshop groups are there in each city? Return both the city and the count with a bar chart, and order in ascending by the x-axis."
"SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'COUNT(Class)', 'x_data': [['Third-rate ship of the line', 'Sloop-of-war', 'Frigate', 'Cutter', 'Armed schooner']], 'y_data': [[3, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Class'}",bar,Class,COUNT(Class),"Third-rate ship of the line, Sloop-of-war, Frigate, Cutter, Armed schooner","3, 1, 1, 1, 1","Plot how many class by grouped by class as a bar graph, and rank total number from high to low order please."
"SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(School_ID)', 'x_data': [['15–1', '14–2', '14–3']], 'y_data': [[2, 5, 5]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(School_ID),"15–1, 14–2, 14–3","2, 5, 5","Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and order sum school id from low to high order."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Thur', 'Wed', 'Tue', 'Sun', 'Sat', 'Fri', 'Mon']], 'y_data': [[2456, 2440, 2325, 2295, 2280, 2265, 2107]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Thur, Wed, Tue, Sun, Sat, Fri, Mon","2456, 2440, 2325, 2295, 2280, 2265, 2107","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, and sort in desc by the y-axis."
"SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['F', 'M']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"F, M","5, 10",A bar chart about how many students are older than average for each gender?
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['2018-03-24', '2018-03-25']], 'y_data': [[3, 6]], 'classify': [], 'describe': 'GROUP BY date_departed'}",bar,date_departed,COUNT(date_departed),"2018-03-24, 2018-03-25","3, 6",How many dogs who have gone through a treatment departed in each day? Return a bar chart.
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['July', 'Aug', 'Sept', 'June']], 'y_data': [[15, 13, 12, 8]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"July, Aug, Sept, June","15, 13, 12, 8","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time, and display by the y axis in descending."
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","8, 23, 28",Show all allergy type with number of students affected with a bar chart.
"SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(Rank)', 'x_data': [['AssocProf', 'AsstProf', 'Instructor', 'Professor']], 'y_data': [[8, 15, 8, 27]], 'classify': [], 'describe': 'GROUP BY Rank'}",bar,Rank,count(Rank),"AssocProf, AsstProf, Instructor, Professor","8, 15, 8, 27",Plot a bar with the total number across each rank
"SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY Team ASC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(Team)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Team'}",bar,Team,COUNT(Team),"Team Batista, Team Orton","4, 2","Visualize a bar chart for what is the number of their teams in elimination?, and show Team from low to high order."
"SELECT T1.Project_Details , T1.Project_ID FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id ORDER BY T1.Project_Details ASC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Project_Details', 'y_name': 'Project_ID', 'x_data': [['Graph Database project', 'Human Resource project', 'Internet of Things project', 'Society Research project']], 'y_data': [[105, 134, 35, 30]], 'classify': [], 'describe': ''}",bar,Project_Details,Project_ID,"Graph Database project, Human Resource project, Internet of Things project, Society Research project","105, 134, 35, 30","Return the ids and details corresponding to projects for which there are more than two documents Show bar chart, and sort x-axis from low to high order."
"SELECT LAST_NAME , DEPARTMENT_ID FROM employees",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['King', 'Hunold', 'Greenberg', 'Raphaely', 'Fripp', 'Russell', 'Whalen', 'Hartstein', 'Mavris', 'Baer', 'Higgins']], 'y_data': [[90, 60, 100, 30, 50, 80, 10, 20, 40, 70, 110]], 'classify': [], 'describe': ''}",bar,LAST_NAME,DEPARTMENT_ID,"King, Hunold, Greenberg, Raphaely, Fripp, Russell, Whalen, Hartstein, Mavris, Baer, Higgins","90, 60, 100, 30, 50, 80, 10, 20, 40, 70, 110",Bar graph to show department_id from different last name
"SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country",Bar,Medium,wedding,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'United States']], 'y_data': [[1, 5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, United States","1, 5",Show the number of countries for all people whose age is smaller than the average.
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY credit_score DESC",Bar,Medium,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Owen', 'Mary']], 'y_data': [[210, 30]], 'classify': [], 'describe': ''}",bar,cust_name,credit_score,"Owen, Mary","210, 30","Give me a histogram for what are the different names and credit scores of customers who have taken a loan?, display credit_score from high to low order please."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665","Return the average price for each product type by a bar chart, order by the total number in ascending please."
"SELECT ACC_Regular_Season , School_ID FROM basketball_match ORDER BY School_ID DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'School_ID', 'x_data': [['9–7', '10–6', '13–3', '14–2']], 'y_data': [[5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,School_ID,"9–7, 10–6, 13–3, 14–2","5, 4, 2, 1","Show me about the distribution of ACC_Regular_Season and School_ID in a bar chart, and order from high to low by the y axis please."
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""  ORDER BY COUNT(Date_of_Birth) DESC",Bar,Extra Hard,entrepreneur,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_of_Birth BY WEEKDAY'}",bar,Date_of_Birth,COUNT(Date_of_Birth),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","1, 1, 0, 0, 0, 0, 0","A bar chart for what are the number of the dates of birth of entrepreneurs with investor ""Simon Woodroffe"" or ""Peter Jones""?, sort by the Y-axis from high to low."
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Andrew', 'Kris', 'Alexis', 'Jordan', 'Gabriel', 'Tiffany', 'Logan', 'Kyle', 'Jessica', 'Haley', 'Cassandra', 'Austin']], 'y_data': [[3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Andrew, Kris, Alexis, Jordan, Gabriel, Tiffany, Logan, Kyle, Jessica, Haley, Cassandra, Austin","3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1","Display a bar chart for what are the names of the high schoolers and how many friends does each have?, and display Y-axis in descending order please."
"SELECT year , count(*) FROM matches",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2013', '2014', '2015', '2016', '2017']], 'y_data': [[12, 0, 0, 158, 108]], 'classify': [], 'describe': 'BIN year BY YEAR'}",bar,year,count(*),"2013, 2014, 2015, 2016, 2017","12, 0, 0, 158, 108",Show me a bar chart for how many matches were played each year?
"SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['28.09.1981', '22.04.1977', '20.08.1970', '10.11.1972', '10.03.1976', '06.10.1976', '05.05.1972', '03.02.1976', '01.09.1977']], 'y_data': [[82, 88, 89, 85, 90, 83, 92, 94, 88]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"28.09.1981, 22.04.1977, 20.08.1970, 10.11.1972, 10.03.1976, 06.10.1976, 05.05.1972, 03.02.1976, 01.09.1977","82, 88, 89, 85, 90, 83, 92, 94, 88","A bar chart shows the distribution of Date_of_Birth and Weight , and I want to sort from high to low by the X-axis."
"SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) ASC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'COUNT(destination)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.', 'Honolul']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY destination'}",bar,destination,COUNT(destination),"Boston, Chicago, Dallas, Los Angeles, New York, Sydney, Tokyo, Washington D.C., Honolul","1, 1, 1, 1, 1, 1, 1, 1, 2","How many flights in each destination city? Return a bar chart, and I want to rank y-axis in asc order please."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[28500, 55700, 64300, 241900, 61000, 13900, 10000, 6000, 28800, 6500, 12000, 39600, 24000, 12000, 8300]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","28500, 55700, 64300, 241900, 61000, 13900, 10000, 6000, 28800, 6500, 12000, 39600, 24000, 12000, 8300","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and could you sort x-axis in descending order please?"
"SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,phone_market,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['IPhone X', 'IPhone 5s', 'IPhone 7', 'IPhone 6s']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"IPhone X, IPhone 5s, IPhone 7, IPhone 6s","2, 2, 1, 1","I want to compare the number of the names of phones by a bar chart, could you rank by the the number of name in desc?"
"SELECT T1.cell_number , T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id ORDER BY T1.professional_id DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'cell_number', 'y_name': 'professional_id', 'x_data': [['1-185-137-1945x409', '461-801-2600', '962-983-8109x3509', '328.842.3792', '139-321-7313', '00230569697']], 'y_data': [[14, 10, 9, 8, 6, 4]], 'classify': [], 'describe': ''}",bar,cell_number,professional_id,"1-185-137-1945x409, 461-801-2600, 962-983-8109x3509, 328.842.3792, 139-321-7313, 00230569697","14, 10, 9, 8, 6, 4","Find the id and cell phone of the professionals who operate two or more types of treatments, show from high to low by the Y-axis."
"SELECT origin , count(*) FROM train GROUP BY origin ORDER BY origin ASC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'origin', 'y_name': 'count(*)', 'x_data': [['Bangalore', 'Chennai', 'Guruvayur', 'Kanniyakumari', 'Madurai', 'Mumbai', 'Nagercoil', 'Quilon', 'Trivandrum']], 'y_data': [[1, 2, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,origin,count(*),"Bangalore, Chennai, Guruvayur, Kanniyakumari, Madurai, Mumbai, Nagercoil, Quilon, Trivandrum","1, 2, 1, 2, 1, 1, 1, 1, 1","Show me the total number by origin in a histogram, could you display x-axis in ascending order?"
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[100, 130, 50, 200, 120, 30]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","100, 130, 50, 200, 120, 30","For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the  name , and group by attribute name."
"SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class DESC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['GT', 'DP/GT']], 'y_data': [[2, 5]], 'classify': [], 'describe': ''}",bar,Class,count(*),"GT, DP/GT","2, 5","Show the race class and number of races in each class with a bar chart, and sort in desc by the bars."
"SELECT state , SUM(vote_id) FROM votes GROUP BY state",Bar,Easy,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'SUM(vote_id)', 'x_data': [['CA', 'NJ\n', 'NY']], 'y_data': [[3, 5, 3]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,SUM(vote_id),"CA, NJ
, NY","3, 5, 3","List the states of all votes, compute the total number of states, and sum their vote id with a bar chart."
"SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Arrival', 'y_name': 'COUNT(Arrival)', 'x_data': [['23:44', '23:39', '13:28', '13:04', '09:48', '09:08', '08:54', '05:09']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Arrival'}",bar,Arrival,COUNT(Arrival),"23:44, 23:39, 13:28, 13:04, 09:48, 09:08, 08:54, 05:09","1, 1, 1, 2, 1, 1, 1, 1","Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and order names in descending order please."
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[34.22222222222222, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"England, Northern Ireland, Wales","34.22222222222222, 29, 27","Visualize a bar chart for what are the nationalities and their average ages of journalists?, order total number in desc order please."
"SELECT job , min(age) FROM Person GROUP BY job ORDER BY job DESC",Bar,Easy,network_2,"{'chart': 'bar', 'x_name': 'job', 'y_name': 'min(age)', 'x_data': [['student', 'engineer', 'doctor']], 'y_data': [[25, 35, 45]], 'classify': [], 'describe': ''}",bar,job,min(age),"student, engineer, doctor","25, 35, 45","how old is the youngest person for each job?, and sort in descending by the X."
"SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name",Bar,Hard,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Num_Employees)', 'x_data': [['Homeland Security', 'Treasury']], 'y_data': [[208000, 231794]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Num_Employees),"Homeland Security, Treasury","208000, 231794",Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' with a bar chart.
"SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY Investor ASC",Bar,Medium,entrepreneur,"{'chart': 'bar', 'x_name': 'Investor', 'y_name': 'COUNT(*)', 'x_data': [['Doug Richard', 'Duncan Bannatyne', 'Peter Jones', 'Rachel Elnaugh', 'Simon Woodroffe']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Investor,COUNT(*),"Doug Richard, Duncan Bannatyne, Peter Jones, Rachel Elnaugh, Simon Woodroffe","1, 2, 1, 1, 1","Draw a bar chart of investor versus the total number, I want to display by the bar in asc."
"SELECT min(T1.duration) , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY min(T1.duration) ORDER BY min(T2.rating) ASC",Bar,Medium,music_1,"{'chart': 'bar', 'x_name': 'min(T1.duration)', 'y_name': 'min(T2.rating)', 'x_data': [['2:56', '5:23', '4:12', '3:45', '4:34', '4:30']], 'y_data': [[5, 6, 7, 8, 8, 10]], 'classify': [], 'describe': ''}",bar,min(T1.duration),min(T2.rating),"2:56, 5:23, 4:12, 3:45, 4:34, 4:30","5, 6, 7, 8, 8, 10","Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, could you list in asc by the total number?"
"SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY COUNT(All_Home) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'COUNT(All_Home)', 'x_data': [['14–2', '15–1', '14–3']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,COUNT(All_Home),"14–2, 15–1, 14–3","2, 1, 1","Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, display from high to low by the total number."
"SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name DESC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'COUNT(*)', 'x_data': [['modern Arts', 'database', 'advanced database', 'Writing in French', 'Spanish', 'Japanese', 'French', 'Chinese Painting', 'Art history', 'AI']], 'y_data': [[2, 2, 2, 2, 2, 2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,course_name,COUNT(*),"modern Arts, database, advanced database, Writing in French, Spanish, Japanese, French, Chinese Painting, Art history, AI","2, 2, 2, 2, 2, 2, 3, 1, 2, 2","Display a bar chart for what is the name of each course and the corresponding number of student enrollment?, show by the names in descending please."
"SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'AVG(monthly_rental)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[897.75, 1081, 1036, 700, 1040.25, 966.3333333333334, 891.25]], 'classify': [], 'describe': 'BIN date_address_from BY WEEKDAY'}",bar,date_address_from,AVG(monthly_rental),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","897.75, 1081, 1036, 700, 1040.25, 966.3333333333334, 891.25",Show me about the distribution of  date_address_from and the average of monthly_rental bin date_address_from by weekday in a bar chart.
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Oct', 'June', 'Sept', 'Aug', 'July']], 'y_data': [[1, 14, 30, 31, 31]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Oct, June, Sept, Aug, July","1, 14, 30, 31, 31","For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and sort by the Y from low to high."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(SALARY) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Oct', 'July', 'June', 'Sept', 'Aug']], 'y_data': [[8300, 117000, 138400, 146400, 281300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Oct, July, June, Sept, Aug","8300, 117000, 138400, 146400, 281300","For those employees who was hired before 2002-06-21, find hire_date and the sum of salary bin hire_date by time, and visualize them by a bar chart, and order by the y-axis from low to high please."
"SELECT customer_details , COUNT(customer_details) FROM Customers GROUP BY customer_details ORDER BY customer_details ASC",Bar,Medium,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'customer_details', 'y_name': 'COUNT(customer_details)', 'x_data': [['Esteban Senger', 'Mackenzie Hettinger V', 'Monty Sauer III', 'Mr. Raul Prosacco', 'Oma Smith', 'Sabryna Moore PhD', 'Tyrique Durgan II', 'Vincenza Price']], 'y_data': [[1, 2, 1, 1, 2, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_details'}",bar,customer_details,COUNT(customer_details),"Esteban Senger, Mackenzie Hettinger V, Monty Sauer III, Mr. Raul Prosacco, Oma Smith, Sabryna Moore PhD, Tyrique Durgan II, Vincenza Price","1, 2, 1, 1, 2, 4, 1, 1","Please compare the frequency of the customer details using a bar chart, and could you list from low to high by the customer_details?"
"SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'COUNT(Headquarter)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[3, 1, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,COUNT(Headquarter),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","3, 1, 3, 2, 1, 1","For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the  headquarter , and group by attribute headquarter."
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Biology', 'History', 'Physics', 'Pol. Sci.', 'English', 'Languages', 'Finance', 'Cybernetics', 'Astronomy', 'Athletics', 'Psychology', 'Math']], 'y_data': [[647610.55, 699140.86, 942162.76, 573745.09, 611042.66, 601283.6, 866831.75, 794541.46, 617253.94, 734550.7, 848175.04, 777605.11]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Biology, History, Physics, Pol. Sci., English, Languages, Finance, Cybernetics, Astronomy, Athletics, Psychology, Math","647610.55, 699140.86, 942162.76, 573745.09, 611042.66, 601283.6, 866831.75, 794541.46, 617253.94, 734550.7, 848175.04, 777605.11",Display a bar chart for what are the names and budgets of departments with budgets greater than the average?
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY COUNT(HIRE_DATE) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Tue', 'Thur', 'Sat', 'Mon', 'Sun', 'Fri', 'Wed']], 'y_data': [[10, 11, 12, 13, 13, 14, 15]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Tue, Thur, Sat, Mon, Sun, Fri, Wed","10, 11, 12, 13, 13, 14, 15","On what dates were employees without the letter M in their first names hired, and count them by a bar chart, rank in ascending by the y-axis."
"SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY Sex DESC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'avg(age)', 'x_data': [['M', 'F']], 'y_data': [[19.5, 19.7]], 'classify': [], 'describe': ''}",bar,Sex,avg(age),"M, F","19.5, 19.7","Visualize a bar chart for what are the average ages for male and female students?, could you rank from high to low by the names?"
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[7775, 6762.5, 6493.333333333333, 6320, 6286.666666666667, 5746.666666666667, 5685.714285714285]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","7775, 6762.5, 6493.333333333333, 6320, 6286.666666666667, 5746.666666666667, 5685.714285714285","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, order from high to low by the total number."
"SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex ORDER BY Sex ASC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'COUNT(Sex)', 'x_data': [['F', 'M']], 'y_data': [[2, 7]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,COUNT(Sex),"F, M","2, 7","A bar chart shows the distribution of Sex and the amount of Sex , and group by attribute Sex, sort by the x axis in asc."
"SELECT Name , COUNT(Name) FROM editor GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Medium,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Grażyna Wolszczak', 'Władysław Grzywna', 'Piotr Pręgowski', 'Maria Góralczyk', 'Marek Siudym', 'Kamila Porczyk']], 'y_data': [[2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Grażyna Wolszczak, Władysław Grzywna, Piotr Pręgowski, Maria Góralczyk, Marek Siudym, Kamila Porczyk","2, 1, 1, 1, 1, 1","Bar chart x axis name y axis how many name, could you sort Y in descending order please?"
"SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id ORDER BY id ASC",Bar,Medium,medicine_enzyme_interaction,"{'chart': 'bar', 'x_name': 'Trade_Name', 'y_name': 'id', 'x_data': [['Abilify', 'Saphris']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Trade_Name,id,"Abilify, Saphris","2, 3","What is the id and trade name of the medicines can interact with at least 3 enzymes, list y-axis in asc order."
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) DESC",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Socialistic Republic', 'Constitutional Monarchy, Federation', 'Special Administrative Region of China', 'Federation', 'Socialistic State', 'Commonwealth of the US', 'Monarchy (Sultanate)', 'Emirate Federation', 'Constitutional Monarchy (Emirate)', 'Overseas Department of France', 'Monarchy (Emirate)', 'Nonmetropolitan Territory of France', 'US Territory', 'Nonmetropolitan Territory of The Netherlands', 'Dependent Territory of the UK', 'Part of Denmark', 'Parliamentary Coprincipality']], 'y_data': [[115072000, 82516000, 7255000, 7160400, 5605000, 3947000, 2870000, 2441000, 1972000, 1731000, 617000, 464000, 329000, 320000, 193050, 99000, 78000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Socialistic Republic, Constitutional Monarchy, Federation, Special Administrative Region of China, Federation, Socialistic State, Commonwealth of the US, Monarchy (Sultanate), Emirate Federation, Constitutional Monarchy (Emirate), Overseas Department of France, Monarchy (Emirate), Nonmetropolitan Territory of France, US Territory, Nonmetropolitan Territory of The Netherlands, Dependent Territory of the UK, Part of Denmark, Parliamentary Coprincipality","115072000, 82516000, 7255000, 7160400, 5605000, 3947000, 2870000, 2441000, 1972000, 1731000, 617000, 464000, 329000, 320000, 193050, 99000, 78000","Bar graph to show total number of population from different governmentform, and list from high to low by the Y-axis."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, could you rank by the x-axis in ascending?"
"SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Weight)', 'x_data': [['M', 'F']], 'y_data': [[86.71428571428571, 92]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Weight),"M, F","86.71428571428571, 92","A bar chart shows the distribution of Sex and the average of Weight , and group by attribute Sex, show by the bar in desc."
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Aug', 'Sept', 'June', 'July', 'Oct']], 'y_data': [[281300, 139900, 138400, 117000, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Aug, Sept, June, July, Oct","281300, 139900, 138400, 117000, 8300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and I want to rank from high to low by the total number."
"SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY T1.dept_name DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'count(DISTINCT T3.id)', 'x_data': [['Statistics', 'Psychology', 'Pol. Sci.', 'Physics', 'Mech. Eng.', 'Marketing', 'Languages', 'Geology', 'Finance', 'English', 'Elec. Eng.', 'Cybernetics', 'Comp. Sci.', 'Biology', 'Athletics', 'Astronomy', 'Accounting']], 'y_data': [[6, 2, 3, 2, 2, 4, 3, 1, 1, 4, 4, 4, 2, 2, 5, 1, 4]], 'classify': [], 'describe': ''}",bar,dept_name,count(DISTINCT T3.id),"Statistics, Psychology, Pol. Sci., Physics, Mech. Eng., Marketing, Languages, Geology, Finance, English, Elec. Eng., Cybernetics, Comp. Sci., Biology, Athletics, Astronomy, Accounting","6, 2, 3, 2, 2, 4, 3, 1, 1, 4, 4, 4, 2, 2, 5, 1, 4","Find the total number of instructors for each department with a bar chart, sort by the x axis from high to low."
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force",Bar,Easy,county_public_safety,"{'chart': 'bar', 'x_name': 'Police_force', 'y_name': 'COUNT(*)', 'x_data': [['Abbotsford Police Department', 'Central Saanich Police', 'RCMP']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Police_force,COUNT(*),"Abbotsford Police Department, Central Saanich Police, RCMP","1, 1, 4",How many counties correspond to each police force. 
"SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY SUM(School_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(School_ID)', 'x_data': [['15–1', '14–2', '14–3']], 'y_data': [[2, 5, 5]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(School_ID),"15–1, 14–2, 14–3","2, 5, 5","Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and rank sum school id in ascending order please."
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY Building ASC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Barton', 'Krieger', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",bar,Building,count(*),"Barton, Krieger, NEB","20, 20, 18","Show me a bar chart for how many faculty members does each building have? List the result with the name of the building, list by the X from low to high."
"SELECT Author , COUNT(Author) FROM submission GROUP BY Author ORDER BY COUNT(Author) DESC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(Author)', 'x_data': [['Sammy Green', 'Steve Raible', 'Steve Niehaus', 'Sherman Smith', 'Jeff Lloyd']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Author'}",bar,Author,COUNT(Author),"Sammy Green, Steve Raible, Steve Niehaus, Sherman Smith, Jeff Lloyd","2, 1, 1, 1, 1","Show the authors of their total submissions with a bar chart, and order from high to low by the how many author please."
"SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Revenue)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[120, 130, 60, 150, 200, 300]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Revenue),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","120, 130, 60, 150, 200, 300","For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of revenue , and group by attribute headquarter in a bar chart, list X from high to low order."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'ST_MAN', 'SA_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'AD_VP', 'PU_MAN', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'FI_MGR', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, ST_MAN, SA_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, AD_VP, PU_MAN, PR_REP, MK_REP, MK_MAN, HR_REP, FI_MGR, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, show by the Y in desc please."
"SELECT T1.product_name , AVG(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",Bar,Medium,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'AVG(sum(T2.order_quantity))', 'x_data': [['Apple', 'gucci', 'jcrew']], 'y_data': [[7.666666666666667, 7, 10]], 'classify': [], 'describe': 'GROUP BY product_name'}",bar,product_name,AVG(sum(T2.order_quantity)),"Apple, gucci, jcrew","7.666666666666667, 7, 10",Show the product name and total order quantity for each product. Show bar chart.
"SELECT JOB_ID , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SALARY', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[7000, 10000, 6000, 13000, 6500, 12000, 8300]], 'classify': [], 'describe': ''}",bar,JOB_ID,SALARY,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","7000, 10000, 6000, 13000, 6500, 12000, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , and order by the X in descending."
"SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name",Bar,Hard,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Num_Employees)', 'x_data': [['Homeland Security', 'Treasury']], 'y_data': [[208000, 231794]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Num_Employees),"Homeland Security, Treasury","208000, 231794",Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'. 
"SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY product_category ASC",Bar,Medium,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'product_category', 'y_name': 'count(*)', 'x_data': [['clothes', 'food']], 'y_data': [[9, 11]], 'classify': [], 'describe': ''}",bar,product_category,count(*),"clothes, food","9, 11","Show me the total number by product category in a histogram, and I want to sort in asc by the x-axis."
"SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Fay', 'Mavris', 'Grant', 'Gietz', 'Baer', 'Higgins', 'Hartstein']], 'y_data': [[6000, 6500, 7000, 8300, 10000, 12000, 13000]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Fay, Mavris, Grant, Gietz, Baer, Higgins, Hartstein","6000, 6500, 7000, 8300, 10000, 12000, 13000","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary , and show by the total number in ascending."
"SELECT All_Road , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['4–8', '6–5', '8–2', '13–0']], 'y_data': [[0.6, 0.706, 0.8240000000000001, 0.946]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"4–8, 6–5, 8–2, 13–0","0.6, 0.706, 0.8240000000000001, 0.946","Return a bar chart about the distribution of All_Road and All_Games_Percent , order from low to high by the total number."
"SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(School_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(School_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(School_ID),"3–5, 6–2, 8–0","4.5, 2, 1","A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and rank from high to low by the total number."
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""  ORDER BY COUNT(Date_of_Birth) ASC",Bar,Extra Hard,entrepreneur,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['Fri', 'Mon', 'Thur', 'Tue', 'Wed', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Date_of_Birth BY WEEKDAY'}",bar,Date_of_Birth,COUNT(Date_of_Birth),"Fri, Mon, Thur, Tue, Wed, Sat, Sun","0, 0, 0, 0, 0, 1, 1","A bar chart for returning the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and could you list by the total number in asc?"
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY Building DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['NEB', 'Krieger', 'Barton']], 'y_data': [[18, 20, 20]], 'classify': [], 'describe': ''}",bar,Building,count(*),"NEB, Krieger, Barton","18, 20, 20","Return a bar chart on how many faculty members does each building have? List the result with the name of the building, order from high to low by the x axis."
"SELECT Customer_name , Customer_ID FROM customers ORDER BY customer_id ASC",Bar,Easy,insurance_fnol,"{'chart': 'bar', 'x_name': 'Customer_name', 'y_name': 'Customer_ID', 'x_data': [['America Jaskolski', 'Ellsworth Paucek', 'Mrs. Hanna Willms', 'Dr. Diana Rath', 'Selena Gerhold', 'Dayana Robel', 'Mr. Edwardo Blanda I', 'Mr. Randal Lynch III', 'Mrs. Liza Heller V', 'Mrs. Lilly Graham III', 'Miss Felicita Reichel', 'Sydnie Friesen', 'David Ross', 'Cai Zhang', 'Jay Cho']], 'y_data': [[194, 214, 256, 562, 582, 641, 682, 756, 805, 826, 882, 892, 923, 956, 996]], 'classify': [], 'describe': ''}",bar,Customer_name,Customer_ID,"America Jaskolski, Ellsworth Paucek, Mrs. Hanna Willms, Dr. Diana Rath, Selena Gerhold, Dayana Robel, Mr. Edwardo Blanda I, Mr. Randal Lynch III, Mrs. Liza Heller V, Mrs. Lilly Graham III, Miss Felicita Reichel, Sydnie Friesen, David Ross, Cai Zhang, Jay Cho","194, 214, 256, 562, 582, 641, 682, 756, 805, 826, 882, 892, 923, 956, 996",Draw a bar chart for what is the ordered list of customer ids?
"SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'All_Games_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Games,All_Games_Percent,"35–2, 28–6, 24–10, 21–14","0.946, 0.8240000000000001, 0.706, 0.6","Visualize a bar chart about the distribution of All_Games and All_Games_Percent , rank Y-axis in desc order."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category ASC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Gay M/SF', 'Gay SF/F', 'Lesb. M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Gay M/SF, Gay SF/F, Lesb. M/SF","5, 2, 5","Show all book categories and the number of books in each category, list in asc by the bar."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Manufacturer)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 5, 6, 5, 6, 1, 3, 3, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Manufacturer),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 5, 6, 5, 6, 1, 3, 3, 4","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the sum of manufacturer , and group by attribute name."
"SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,decoration_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Canada']], 'y_data': [[6, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Canada","6, 4","A bar chart showing the number of members in each country, and sort y-axis in desc order."
"SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Price DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[120, 90, 66]], 'classify': [], 'describe': ''}",bar,Name,Price,"Memory, CD drive, Toner cartridge","120, 90, 66","For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price , and display by the total number from high to low."
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'count(*)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': ''}",bar,bedType,count(*),"Double, King, Queen","2, 4, 4","Find the number of rooms for each bed type Visualize by bar chart, and show in ascending by the bars."
"SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 119027]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(enrollment),"Private/Methodist, Public","2100, 119027","Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, order Affiliation in ascending order."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Wed', 'Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri']], 'y_data': [[1010, 930, 910, 900, 890, 860, 830]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Wed, Mon, Sun, Tue, Sat, Thur, Fri","1010, 930, 910, 900, 890, 860, 830","For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to display by the sum department id in descending please."
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY COUNT(T2.Party) DESC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Liberal', 'Working Families', 'Independence']], 'y_data': [[4, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Democratic, Liberal, Working Families, Independence","4, 2, 1, 1","Show how many delegates in each party with a bar chart, I want to show by the y axis in descending."
"SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = ""stop"" GROUP BY Store_Name ORDER BY Store_Name DESC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Store_Name', 'y_name': 'COUNT(Store_Name)', 'x_data': [['Warino Photo', 'Queen Art', 'Kling Workshop', 'Bednar Film']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Store_Name'}",bar,Store_Name,COUNT(Store_Name),"Warino Photo, Queen Art, Kling Workshop, Bednar Film","2, 1, 1, 1","What are the number of the names of the workshop groups that have bookings with status code ""stop""?, sort Store_Name in desc order."
"SELECT City , count(*) FROM employee GROUP BY city ORDER BY count(*) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'City', 'y_name': 'count(*)', 'x_data': [['Leicester', 'Sale', 'Wasps', 'Bath', 'Bristol']], 'y_data': [[1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,City,count(*),"Leicester, Sale, Wasps, Bath, Bristol","1, 1, 2, 3, 3","Draw a bar chart for what is the number of employees from each city?, show y axis in asc order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0","A bar chart for finding the number of the the date of enrollment of the ""Spanish"" course."
"SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building ASC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Chandler', 'Fairchild', 'Lambea', 'Lamberton', 'Main', 'Nassa', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[1, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Chandler, Fairchild, Lambea, Lamberton, Main, Nassa, Saucon, Stabler, Taylor, Whitman","1, 2, 2, 1, 1, 1, 1, 1, 1, 1","Find the number of courses offered by Psychology department in each building with a bar chart, and rank in asc by the X."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee ASC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Bob Fosse, Cleavant Derricks","5, 2","Show different nominees and the number of musicals they have been nominated in a bar chart, show Nominee from low to high order."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name ASC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Les Misérables', 'The Book of Mormon', 'The Phantom of the Opera', 'West Side Story']], 'y_data': [[2, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Les Misérables, The Book of Mormon, The Phantom of the Opera, West Side Story","2, 4, 2, 1","How many actors have appeared in each musical Plot them as bar chart, and order x axis in asc order please."
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Andrew', 'Kris', 'Alexis', 'Jordan', 'Gabriel', 'Tiffany', 'Logan', 'Kyle', 'Jessica', 'Haley', 'Cassandra', 'Austin']], 'y_data': [[3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Andrew, Kris, Alexis, Jordan, Gabriel, Tiffany, Logan, Kyle, Jessica, Haley, Cassandra, Austin","3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1","Show the names of high school students and their corresponding number of friends in a bar chart, and show by the Y-axis in desc."
"SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Builder', 'y_name': 'COUNT(*)', 'x_data': [['GWR Swindon', 'Swindon Works', 'Stephenson', 'SECR Ashford', 'MR Derby', 'GNR Doncaster', 'GER Stratford', 'GER Hartford', 'Avonside']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Builder,COUNT(*),"GWR Swindon, Swindon Works, Stephenson, SECR Ashford, MR Derby, GNR Doncaster, GER Stratford, GER Hartford, Avonside","2, 1, 1, 1, 1, 1, 1, 1, 1","Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, could you order from high to low by the y axis?"
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 1, 2, 2, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 1, 2, 2, 0, 0, 1","A bar chart for finding the number of the enrollment date for all the tests that have ""Pass"" result."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender""",Bar,Easy,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['1996 MLS Inaugural Player Draft', '1999 MLS College Draft', '2000 MLS SuperDraft', '2005 MLS SuperDraft', '2006 MLS SuperDraft', '2008 MLS SuperDraft', '2009 MLS SuperDraft']], 'y_data': [[87, 5, 4, 9, 37, 4, 3]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"1996 MLS Inaugural Player Draft, 1999 MLS College Draft, 2000 MLS SuperDraft, 2005 MLS SuperDraft, 2006 MLS SuperDraft, 2008 MLS SuperDraft, 2009 MLS SuperDraft","87, 5, 4, 9, 37, 4, 3",Show the draft pick numbers and draft classes of players whose positions are defenders. Show bar chart.
"SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC",Bar,Hard,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Midshipman', 'Lieutenant', 'Commander, junior captain']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Midshipman, Lieutenant, Commander, junior captain","3, 1, 1","Count the number of captains younger than 50 of each rank, show in descending by the y-axis."
"SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location DESC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'sum(number_of_platforms)', 'x_data': [['London', 'Glasgow', 'Birmingham']], 'y_data': [[140, 17, 13]], 'classify': [], 'describe': ''}",bar,Location,sum(number_of_platforms),"London, Glasgow, Birmingham","140, 17, 13","Show the total number of platforms of locations in each location in a bar chart, could you order by the names from high to low?"
"SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Cindy', 'Emelie', 'Gay', 'Jaclyn', 'Johann', 'Kade', 'Lorenz', 'Melisa', 'Nora', 'Orlando', 'Rachelle', 'Rolando']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Cindy, Emelie, Gay, Jaclyn, Johann, Kade, Lorenz, Melisa, Nora, Orlando, Rachelle, Rolando","1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1",List the number of dogs each owner has in a bar chart that groups by owner's first name.
"SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Four', 'Three', 'Five', 'One']], 'y_data': [[1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Four, Three, Five, One","1, 1, 2, 2","List the name for storms and the number of affected regions for each storm, rank in ascending by the Y please."
"SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['KGRANT', 'MHARTSTE', 'PFAY', 'SMAVRIS', 'HBAER', 'SHIGGINS', 'WGIETZ']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"KGRANT, MHARTSTE, PFAY, SMAVRIS, HBAER, SHIGGINS, WGIETZ","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of email and employee_id , list from low to high by the y axis."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Sat', 'Sun', 'Fri', 'Mon', 'Tue', 'Thur', 'Wed']], 'y_data': [[910, 910, 930, 930, 980, 1000, 1040]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Sat, Sun, Fri, Mon, Tue, Thur, Wed","910, 910, 930, 930, 980, 1000, 1040","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to show from low to high by the Y."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_MGR', 'HR_REP', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'ST_CLERK', 'ST_MAN', 'PU_CLERK', 'PU_MAN', 'FI_ACCOUNT', 'IT_PROG', 'AD_PRES']], 'y_data': [[205, 203, 189.55555555555554, 164.76923076923077, 148, 135.44444444444446, 122, 116, 114, 111.25, 105, 100]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_MGR, HR_REP, SH_CLERK, SA_REP, SA_MAN, ST_CLERK, ST_MAN, PU_CLERK, PU_MAN, FI_ACCOUNT, IT_PROG, AD_PRES","205, 203, 189.55555555555554, 164.76923076923077, 148, 135.44444444444446, 122, 116, 114, 111.25, 105, 100","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, display by the Y-axis in descending."
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(EMPLOYEE_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Sept', 'Aug', 'July', 'June']], 'y_data': [[2293, 2111, 1925, 860]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Sept, Aug, July, June","2293, 2111, 1925, 860","For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, I want to display from high to low by the y axis."
"SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'COUNT(FIRST_NAME)', 'x_data': [['Adam', 'Payam', 'William']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY FIRST_NAME'}",bar,FIRST_NAME,COUNT(FIRST_NAME),"Adam, Payam, William","1, 1, 2","For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, and rank total number in ascending order."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['2017', '2016']], 'y_data': [[6, 9]], 'classify': [], 'describe': 'BIN booking_start_date BY YEAR'}",bar,booking_start_date,COUNT(booking_start_date),"2017, 2016","6, 9","Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, list from low to high by the y axis."
"SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(Age)', 'x_data': [['England', 'Northern Ireland', 'Wales']], 'y_data': [[34.22222222222222, 29, 27]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(Age),"England, Northern Ireland, Wales","34.22222222222222, 29, 27","A bar chart about what are the nationalities and their average ages of journalists?, I want to rank by the x axis from low to high."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[200, 50, 50, 120, 30, 130, 30, 75, 100, 100]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","200, 50, 50, 120, 30, 130, 30, 75, 100, 100","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of revenue , and group by attribute name, and I want to display in descending by the X."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[240, 150, 162, 240, 150]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","240, 150, 162, 240, 150","Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, display in descending by the Name."
"SELECT Location , count(*) FROM cinema GROUP BY LOCATION ORDER BY Location DESC",Bar,Medium,cinema,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'count(*)', 'x_data': [['County Wicklow', 'County Tipperary', 'County Louth', 'County Laois', 'County Dublin', 'County Cork', 'County Clare']], 'y_data': [[1, 2, 1, 1, 1, 1, 3]], 'classify': [], 'describe': ''}",bar,Location,count(*),"County Wicklow, County Tipperary, County Louth, County Laois, County Dublin, County Cork, County Clare","1, 2, 1, 1, 1, 1, 3","Create a bar chart showing the total number across location, order in descending by the x axis."
"SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = ""Defender""",Bar,Easy,match_season,"{'chart': 'bar', 'x_name': 'Draft_Class', 'y_name': 'Draft_Pick_Number', 'x_data': [['1996 MLS Inaugural Player Draft', '1999 MLS College Draft', '2000 MLS SuperDraft', '2005 MLS SuperDraft', '2006 MLS SuperDraft', '2008 MLS SuperDraft', '2009 MLS SuperDraft']], 'y_data': [[87, 5, 4, 9, 37, 4, 3]], 'classify': [], 'describe': ''}",bar,Draft_Class,Draft_Pick_Number,"1996 MLS Inaugural Player Draft, 1999 MLS College Draft, 2000 MLS SuperDraft, 2005 MLS SuperDraft, 2006 MLS SuperDraft, 2008 MLS SuperDraft, 2009 MLS SuperDraft","87, 5, 4, 9, 37, 4, 3",Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_MGR', 'AD_PRES', 'HR_REP', 'PU_MAN', 'SA_MAN', 'ST_MAN', 'IT_PROG', 'PU_CLERK', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 3, 4, 9, 9, 13]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_MGR, AD_PRES, HR_REP, PU_MAN, SA_MAN, ST_MAN, IT_PROG, PU_CLERK, FI_ACCOUNT, SH_CLERK, ST_CLERK, SA_REP","1, 1, 1, 1, 1, 2, 3, 3, 4, 9, 9, 13","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort in asc by the the number of job id please."
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"3–5, 6–2, 8–0","3.5, 2, 1","Give me the comparison about the average of Team_ID over the  ACC_Road , and group by attribute ACC_Road."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[2480, 1470, 1430, 1170, 110]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Aug, Sept, July, June, Oct","2480, 1470, 1430, 1170, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and I want to display by the total number of department id in desc."
"SELECT Name , min(price) FROM products GROUP BY Name ORDER BY min(price) DESC",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'min(price)', 'x_data': [['Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'DVD drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[270, 240, 240, 180, 150, 150, 120, 90, 66, 5]], 'classify': [], 'describe': ''}",bar,Name,min(price),"Printer, Monitor, Hard drive, DVD burner, ZIP drive, DVD drive, Memory, CD drive, Toner cartridge, Floppy disk","270, 240, 240, 180, 150, 150, 120, 90, 66, 5","Show the name of the product that is cheapest in each product category with their minimum price with a bar graph, and rank in descending by the Y please."
"SELECT All_Home , AVG(Team_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'AVG(Team_ID)', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[2, 4, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,AVG(Team_ID),"15–1, 14–3, 14–2","2, 4, 2","A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and I want to show by the names from high to low please."
"SELECT destination , count(*) FROM Flight GROUP BY destination",Bar,Easy,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'count(*)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Honolul', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,destination,count(*),"Boston, Chicago, Dallas, Honolul, Los Angeles, New York, Sydney, Tokyo, Washington D.C.","1, 1, 1, 2, 1, 1, 1, 1, 1",Draw a bar chart for what are the destinations and number of flights to each one?
"SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY count(*) DESC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,Sex,count(*),"M, F","10, 5","Find the number of students whose age is older than the average age for each gender, and I want to show from high to low by the total number please."
"SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY dept_name ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'sum(credits)', 'x_data': [['Accounting', 'Astronomy', 'Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'Elec. Eng.', 'English', 'Finance', 'Geology', 'History', 'Languages', 'Marketing', 'Math', 'Mech. Eng.', 'Physics', 'Pol. Sci.', 'Psychology', 'Statistics']], 'y_data': [[40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21]], 'classify': [], 'describe': ''}",bar,dept_name,sum(credits),"Accounting, Astronomy, Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, Elec. Eng., English, Finance, Geology, History, Languages, Marketing, Math, Mech. Eng., Physics, Pol. Sci., Psychology, Statistics","40, 37, 30, 23, 34, 37, 67, 28, 28, 49, 33, 29, 37, 20, 34, 40, 38, 23, 44, 21","Show me a bar chart for how many total credits are offered by each department?, and order by the names from low to high."
"SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher ORDER BY Publisher ASC",Bar,Medium,book_2,"{'chart': 'bar', 'x_name': 'Publisher', 'y_name': 'COUNT(*)', 'x_data': [['Bertelsmann', 'Pearson', 'Springer Nature', 'Thomson Reuters', 'Wiley']], 'y_data': [[1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Publisher,COUNT(*),"Bertelsmann, Pearson, Springer Nature, Thomson Reuters, Wiley","1, 2, 1, 1, 2","Show different publishers together with the number of publications they have Plot them as bar chart, and I want to order by the bars in asc."
"SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details ASC",Bar,Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'organization_details', 'y_name': 'COUNT(organization_details)', 'x_data': [['Denesik and Sons Party', 'Reinger, Hudson and Nolan Group', 'Robel-Schulist Group']], 'y_data': [[10, 2, 3]], 'classify': [], 'describe': 'GROUP BY organization_details'}",bar,organization_details,COUNT(organization_details),"Denesik and Sons Party, Reinger, Hudson and Nolan Group, Robel-Schulist Group","10, 2, 3","List the number of items by the details of the organization that owns it using a bar chart, rank in ascending by the organization_details."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[7.666666666666667, 1, 9.333333333333334, 3, 5, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","7.666666666666667, 1, 9.333333333333334, 3, 5, 3","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and I want to list by the bar from low to high."
"SELECT All_Neutral , School_ID FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'School_ID', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[1, 2, 4, 5]], 'classify': [], 'describe': ''}",bar,All_Neutral,School_ID,"9–1, 5–3, 4–3, 3–3","1, 2, 4, 5",Give me the comparison about  School_ID over the  All_Neutral  by a bar chart.
"SELECT Name , SUM(Price) FROM products GROUP BY Name ORDER BY Name DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[150, 66, 270, 240, 120, 240, 5, 330, 180, 90]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","150, 66, 270, 240, 120, 240, 5, 330, 180, 90","Give me a bar chart for sum price of each name, I want to display by the x-axis in desc."
"SELECT All_Road , Team_ID FROM basketball_match ORDER BY All_Road DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'Team_ID', 'x_data': [['8–2', '6–5', '4–8', '13–0']], 'y_data': [[2, 3, 4, 1]], 'classify': [], 'describe': ''}",bar,All_Road,Team_ID,"8–2, 6–5, 4–8, 13–0","2, 3, 4, 1","Show me about the distribution of All_Road and Team_ID in a bar chart, I want to order x axis in desc order."
"SELECT Name , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'Memory', 'Toner cartridge']], 'y_data': [[2, 6, 3]], 'classify': [], 'describe': ''}",bar,Name,Manufacturer,"CD drive, Memory, Toner cartridge","2, 6, 3","For those products with a price between 60 and 120, return a bar chart about the distribution of name and manufacturer , I want to list in ascending by the bars."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","1, 1, 1, 5, 1, 1, 5, 1, 1, 5, 5, 29, 20, 20, 4","For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, and order in asc by the bar."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_name ASC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['cal', 'db', 'dl', 'ds', 'en', 'fr', 'la', 'math', 'ml', 'nlp', 'pl']], 'y_data': [[7, 12, 9, 1, 4, 5, 6, 2, 10, 8, 14]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"cal, db, dl, ds, en, fr, la, math, ml, nlp, pl","7, 12, 9, 1, 4, 5, 6, 2, 10, 8, 14","What are the names and id of courses having at most 2 sections, could you order in ascending by the x axis?"
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"F, T","9, 19","Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, could you rank in asc by the names?"
"SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",Bar,Medium,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T2.rating)', 'x_data': [['Helen', 'Mark']], 'y_data': [[7.333333333333332, 7]], 'classify': [], 'describe': ''}",bar,name,avg(T2.rating),"Helen, Mark","7.333333333333332, 7","For each user, return the name and the average rating of reviews given by them. Plot them as bar chart."
"SELECT Date_of_Birth , Height FROM people ORDER BY Height DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Height', 'x_data': [['05.05.1972', '03.02.1976', '10.11.1972', '28.09.1981', '01.09.1977', '10.03.1976', '22.04.1977', '20.08.1970', '06.10.1976']], 'y_data': [[202, 200, 197, 196, 196, 195, 194, 193, 188]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Height,"05.05.1972, 03.02.1976, 10.11.1972, 28.09.1981, 01.09.1977, 10.03.1976, 22.04.1977, 20.08.1970, 06.10.1976","202, 200, 197, 196, 196, 195, 194, 193, 188","Bar chart x axis date of birth y axis height, and could you list Y in descending order?"
"SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed ORDER BY COUNT(date_departed) ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['2018-03-24', '2018-03-25']], 'y_data': [[3, 12]], 'classify': [], 'describe': 'GROUP BY date_departed'}",bar,date_departed,COUNT(date_departed),"2018-03-24, 2018-03-25","3, 12","List the number of dogs departed in each day with a bar chart that groups by departed date, could you list in asc by the Y?"
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY COUNT(HIRE_DATE) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Sept', 'Oct']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Sept, Oct","6, 1","For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, and display y axis in desc order."
"SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code ORDER BY T1.role_code DESC",Bar,Extra Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'COUNT(role_code)', 'x_data': [['Veterenarian', 'Employee']], 'y_data': [[2, 5]], 'classify': [], 'describe': 'GROUP BY role_code'}",bar,role_code,COUNT(role_code),"Veterenarian, Employee","2, 5","Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, and sort x-axis from high to low order."
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 1, 1, 2, 4, 5.5, 8]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 1, 1, 2, 4, 5.5, 8","Bar chart x axis start from y axis the average of shop id, and display total number in ascending order."
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony']], 'y_data': [[150, 240, 162, 150, 240]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony","150, 240, 162, 150, 240","Draw a bar chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, display by the names from low to high."
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""  ORDER BY COUNT(Date_of_Birth) DESC",Bar,Extra Hard,entrepreneur,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_of_Birth BY WEEKDAY'}",bar,Date_of_Birth,COUNT(Date_of_Birth),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","1, 1, 0, 0, 0, 0, 0","What are the number of the dates of birth of entrepreneurs with investor ""Simon Woodroffe"" or ""Peter Jones""?, sort by the Y-axis from high to low."
"SELECT Hometown , Age FROM teacher ORDER BY Hometown DESC",Bar,Easy,course_teach,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'Age', 'x_data': [['Turton Urban District', 'Little Lever Urban District', 'Kearsley Urban District', 'Horwich Urban District', 'Farnworth Municipal Borough', 'Bolton County Borough', 'Blackrod Urban District']], 'y_data': [[39, 41, 45, 33, 26, 29, 32]], 'classify': [], 'describe': ''}",bar,Hometown,Age,"Turton Urban District, Little Lever Urban District, Kearsley Urban District, Horwich Urban District, Farnworth Municipal Borough, Bolton County Borough, Blackrod Urban District","39, 41, 45, 33, 26, 29, 32","A bar chart about what is the age and hometown of every teacher?, list from high to low by the bars."
"SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY COUNT(Service_Type_Description) DESC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Service_Type_Description', 'y_name': 'COUNT(Service_Type_Description)', 'x_data': [['provide photo service', 'provide dinning service', 'provide filming service', 'provide adv promoting service']], 'y_data': [[5, 5, 3, 2]], 'classify': [], 'describe': 'GROUP BY Service_Type_Description'}",bar,Service_Type_Description,COUNT(Service_Type_Description),"provide photo service, provide dinning service, provide filming service, provide adv promoting service","5, 5, 3, 2","What are the number of the descriptions of the service types with product price above 100?, and could you list in descending by the how many service type description please?"
"SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY Affiliation DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(enrollment)', 'x_data': [['Public', 'Private/Methodist']], 'y_data': [[119027, 2100]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(enrollment),"Public, Private/Methodist","119027, 2100","What are the total enrollments of universities of each affiliation type Plot them as bar chart, and display in descending by the bar."
"SELECT Date , Vote_Percent FROM election ORDER BY Vote_Percent ASC",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['1953', 'July 1942', 'October 1942', '1946', '1949']], 'y_data': [[16, 16.2, 18.5, 19.5, 19.5]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"1953, July 1942, October 1942, 1946, 1949","16, 16.2, 18.5, 19.5, 19.5","Show vote_percent from each date, list by the Vote_Percent in asc please."
"SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY AVG(Weight) DESC",Bar,Medium,candidate_poll,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'AVG(Weight)', 'x_data': [['F', 'M']], 'y_data': [[92, 86.71428571428571]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,AVG(Weight),"F, M","92, 86.71428571428571","Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, show Y in desc order."
"SELECT gender , avg(age) FROM Person GROUP BY gender ORDER BY avg(age) ASC",Bar,Medium,network_2,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'avg(age)', 'x_data': [['female', 'male']], 'y_data': [[25.5, 40]], 'classify': [], 'describe': ''}",bar,gender,avg(age),"female, male","25.5, 40","Return a bar chart on what is the average age for each gender?, and rank by the y-axis from low to high."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[101, 101, 101, 354, 0, 100, 201]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","101, 101, 101, 354, 0, 100, 201","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the  hire_date bin hire_date by weekday."
"SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY ACC_Regular_Season ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'All_Games_Percent', 'x_data': [['10–6', '13–3', '14–2', '9–7']], 'y_data': [[0.706, 0.8240000000000001, 0.946, 0.6]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,All_Games_Percent,"10–6, 13–3, 14–2, 9–7","0.706, 0.8240000000000001, 0.946, 0.6","Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, and show X-axis in asc order."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) DESC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['The Book of Mormon', 'The Phantom of the Opera', 'Les Misérables', 'West Side Story']], 'y_data': [[4, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"The Book of Mormon, The Phantom of the Opera, Les Misérables, West Side Story","4, 2, 2, 1","Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, could you rank from high to low by the the total number ?"
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Paris', 'Austin', 'Beijing', 'Los Angeles', 'Taiwan', 'Tokyo']], 'y_data': [[62.5, 150, 150, 162, 240, 240]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Paris, Austin, Beijing, Los Angeles, Taiwan, Tokyo","62.5, 150, 150, 162, 240, 240","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, rank by the Y-axis in asc."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[5, 1, 6, 28, 3, 23]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","5, 1, 6, 28, 3, 23","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, and sort in descending by the bar."
"SELECT destination , count(*) FROM Flight GROUP BY destination ORDER BY count(*) ASC",Bar,Medium,flight_1,"{'chart': 'bar', 'x_name': 'destination', 'y_name': 'count(*)', 'x_data': [['Boston', 'Chicago', 'Dallas', 'Los Angeles', 'New York', 'Sydney', 'Tokyo', 'Washington D.C.', 'Honolul']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,destination,count(*),"Boston, Chicago, Dallas, Los Angeles, New York, Sydney, Tokyo, Washington D.C., Honolul","1, 1, 1, 1, 1, 1, 1, 1, 2","Draw a bar chart of destination versus the total number, sort Y in asc order."
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force ORDER BY COUNT(*) ASC",Bar,Medium,county_public_safety,"{'chart': 'bar', 'x_name': 'Police_force', 'y_name': 'COUNT(*)', 'x_data': [['Abbotsford Police Department', 'Central Saanich Police', 'RCMP']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Police_force,COUNT(*),"Abbotsford Police Department, Central Saanich Police, RCMP","1, 1, 4","Create a bar chart showing the total number across police force, sort in ascending by the y-axis."
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code DESC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Direct Debit', 'Credit Card']], 'y_data': [[10, 5]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Direct Debit, Credit Card","10, 5","Show the total number from each payment method code, show in desc by the bar."
"SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['25th', '24th']], 'y_data': [[12, 3]], 'classify': [], 'describe': 'BIN date_departed BY DAY'}",bar,date_departed,COUNT(date_departed),"25th, 24th","12, 3","Bar chart x axis date departed y axis the number of date departed, and list by the Y from high to low."
"SELECT cName , min(enr) FROM college GROUP BY state ORDER BY cName DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'cName', 'y_name': 'min(enr)', 'x_data': [['OU', 'LSU', 'FSU', 'ASU']], 'y_data': [[22000, 18000, 19000, 12000]], 'classify': [], 'describe': ''}",bar,cName,min(enr),"OU, LSU, FSU, ASU","22000, 18000, 19000, 12000","Compare the smallest enrollment of schools in each state using a bar chart, and order cName in desc order."
"SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank ORDER BY COUNT(Rank) DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'COUNT(Rank)', 'x_data': [['Professor', 'AsstProf', 'Instructor', 'AssocProf']], 'y_data': [[27, 15, 8, 8]], 'classify': [], 'describe': 'GROUP BY Rank'}",bar,Rank,COUNT(Rank),"Professor, AsstProf, Instructor, AssocProf","27, 15, 8, 8","Show how many rank from each rank, rank by the Y-axis from high to low."
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[2, 7, 9]], 'classify': [], 'describe': ''}",bar,Name,Code,"Memory, CD drive, Toner cartridge","2, 7, 9","For those products with a price between 60 and 120, find name and code , and visualize them by a bar chart, list Y-axis in ascending order please."
"SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T1.Manufacturer DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Winchester', 'Fujits', 'Iomega', 'Hewlett-Packard', 'Creative Labs', 'Sony']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Manufacturer),"Winchester, Fujits, Iomega, Hewlett-Packard, Creative Labs, Sony","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, and I want to order in desc by the y axis please."
"SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'CITY', 'y_name': 'COUNT(CITY)', 'x_data': [['London', 'Munich', 'OX9 9ZB', 'Seattle', 'South San Francisco', 'Southlake', 'Toronto']], 'y_data': [[1, 1, 1, 21, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CITY'}",bar,CITY,COUNT(CITY),"London, Munich, OX9 9ZB, Seattle, South San Francisco, Southlake, Toronto","1, 1, 1, 21, 1, 1, 1","Give me a bar chart to compare the number of departments located in different cities, and rank in ascending by the x-axis."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T2.Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 9, 5, 4, 6, 12]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Andy, James, John, Mary, Owen, Robert","1, 9, 5, 4, 6, 12","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, could you order Founder from low to high order?"
"SELECT All_Road , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Road', 'y_name': 'All_Games_Percent', 'x_data': [['13–0', '8–2', '6–5', '4–8']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Road,All_Games_Percent,"13–0, 8–2, 6–5, 4–8","0.946, 0.8240000000000001, 0.706, 0.6",Show me about the distribution of  All_Road and  All_Games_Percent  in a bar chart.
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name ORDER BY name ASC",Bar,Extra Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Honda', 'Toyota']], 'y_data': [[45, 95]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Honda, Toyota","45, 95","What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and list by the X-axis from low to high please."
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'customer_status_code', 'y_name': 'count(*)', 'x_data': [['Good Customer', 'Bad Customer']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,customer_status_code,count(*),"Good Customer, Bad Customer","6, 9","List all customer status codes and the number of customers having each status code, I want to display by the y axis in ascending please."
"SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY CLASS_ROOM ASC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'CLASS_ROOM', 'y_name': 'count(*)', 'x_data': [['BUS252', 'BUS311', 'KLR200', 'KLR209']], 'y_data': [[2, 2, 4, 3]], 'classify': [], 'describe': ''}",bar,CLASS_ROOM,count(*),"BUS252, BUS311, KLR200, KLR209","2, 2, 4, 3","Find the number of classes offered for all class rooms that held at least 2 classes Show bar chart, sort by the CLASS_ROOM in asc."
"SELECT FIRST_NAME , LOCATION_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id ORDER BY LOCATION_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'LOCATION_ID', 'x_data': [['Hermann', 'John', 'Susan', 'Michael', 'Steven', 'Shelley', 'Nancy', 'Jennifer', 'Den', 'Adam', 'Alexander']], 'y_data': [[2700, 2500, 2400, 1800, 1700, 1700, 1700, 1700, 1700, 1500, 1400]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,LOCATION_ID,"Hermann, John, Susan, Michael, Steven, Shelley, Nancy, Jennifer, Den, Adam, Alexander","2700, 2500, 2400, 1800, 1700, 1700, 1700, 1700, 1700, 1500, 1400","Just list the first name of the employee and show the location id of the corresponding department using a bar chart, and display by the Y in desc."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200","For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, order from low to high by the X-axis."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[150, 240, 162, 150, 240, 62.5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","150, 240, 162, 150, 240, 62.5","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name, and display x-axis from low to high order."
"SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY Name ASC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Five', 'Four', 'One', 'Three']], 'y_data': [[2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Five, Four, One, Three","2, 1, 2, 1","How many regions were affected by each storm Visualize by bar chart, and show Name from low to high order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 75, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 75, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of revenue , and group by attribute name, and could you order from low to high by the bar?"
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[125.5, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sept, Oct","125.5, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the average of manager_id bin hire_date by time in a bar chart."
"SELECT Rank , count(*) FROM Faculty GROUP BY rank ORDER BY count(*) ASC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AssocProf', 'Instructor', 'AsstProf', 'Professor']], 'y_data': [[8, 8, 15, 27]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"AssocProf, Instructor, AsstProf, Professor","8, 8, 15, 27","Create a bar chart showing the total number across rank, rank by the the total number from low to high."
"SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Grażyna Wolszczak', 'Kamila Porczyk', 'Maria Góralczyk', 'Władysław Grzywna']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Grażyna Wolszczak, Kamila Porczyk, Maria Góralczyk, Władysław Grzywna","2, 1, 1, 1","Show the number of the names of editors that are on the committee of journals with sales bigger than 3000, list in asc by the x-axis please."
"SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name DESC",Bar,Hard,singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'sum(T2.Sales)', 'x_data': [['Susanne Klatten', 'Liliane Bettencourt', 'Jacqueline Mars', 'Iris Fontbona', 'Gina Rinehart', 'Christy Walton']], 'y_data': [[261000, 1646407, 275000, 335000, 292000, 651421]], 'classify': [], 'describe': ''}",bar,Name,sum(T2.Sales),"Susanne Klatten, Liliane Bettencourt, Jacqueline Mars, Iris Fontbona, Gina Rinehart, Christy Walton","261000, 1646407, 275000, 335000, 292000, 651421","Show the names of singers and the total sales of their songs Visualize by bar chart, list in descending by the bar please."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY T2.Name DESC",Bar,Hard,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['West Side Story', 'The Phantom of the Opera', 'The Book of Mormon', 'Les Misérables']], 'y_data': [[1, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"West Side Story, The Phantom of the Opera, The Book of Mormon, Les Misérables","1, 2, 4, 2","Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and could you rank from high to low by the bars?"
"SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'ACC_Percent', 'x_data': [['3–3', '4–3', '5–3', '9–1']], 'y_data': [[0.563, 0.625, 0.813, 0.875]], 'classify': [], 'describe': ''}",bar,All_Neutral,ACC_Percent,"3–3, 4–3, 5–3, 9–1","0.563, 0.625, 0.813, 0.875","Bar chart of acc_percent from each all neutral, and show in ascending by the Y please."
"SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Price)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[450, 150, 486, 125, 240, 240]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Price),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","450, 150, 486, 125, 240, 240","For those records from the products and each product's manufacturer, a bar chart shows the distribution of  headquarter and the sum of price , and group by attribute headquarter."
"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC",Bar,Medium,singer,"{'chart': 'bar', 'x_name': 'Citizenship', 'y_name': 'COUNT(*)', 'x_data': [['Australia', 'Chile', 'France', 'Germany', 'United States']], 'y_data': [[1, 1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Citizenship,COUNT(*),"Australia, Chile, France, Germany, United States","1, 1, 1, 1, 4","Show different citizenship of singers and the number of singers of each citizenship in a bar chart, and I want to list by the Y-axis from low to high."
"SELECT T2.Name , COUNT(T2.Name) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Name",Bar,Medium,county_public_safety,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Abbotsford', 'Burnaby', 'Campbell River', 'Castlegar', 'Central Saanich', 'Chilliwack']], 'y_data': [[3, 2, 6, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Abbotsford, Burnaby, Campbell River, Castlegar, Central Saanich, Chilliwack","3, 2, 6, 2, 2, 2",What is the number of cities in each country? Return a bar chart.
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[40, 70, 110, 110, 0, 20, 20]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","40, 70, 110, 110, 0, 20, 20","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  hire_date and the sum of department_id bin hire_date by weekday in a bar chart."
"SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier ORDER BY SUM(Memory_in_G) DESC",Bar,Medium,phone_market,"{'chart': 'bar', 'x_name': 'Carrier', 'y_name': 'SUM(Memory_in_G)', 'x_data': [['TMobile', 'Sprint']], 'y_data': [[208, 160]], 'classify': [], 'describe': 'GROUP BY Carrier'}",bar,Carrier,SUM(Memory_in_G),"TMobile, Sprint","208, 160","What are the memories and carriers of phones, could you sort total number in desc order please?"
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Sat', 'Sun', 'Fri', 'Mon', 'Thur', 'Wed', 'Tue']], 'y_data': [[60.666666666666664, 60.666666666666664, 62, 62, 62.5, 65, 65.33333333333333]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Sat, Sun, Fri, Mon, Thur, Wed, Tue","60.666666666666664, 60.666666666666664, 62, 62, 62.5, 65, 65.33333333333333","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, list by the Y in ascending please."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Paris', 'Los Angeles', 'Austin', 'Taiwan', 'Beijing', 'Tokyo']], 'y_data': [[12, 9, 6, 5, 4, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Paris, Los Angeles, Austin, Taiwan, Beijing, Tokyo","12, 9, 6, 5, 4, 1","For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter, order by the y-axis from high to low."
"SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName",Bar,Hard,soccer_2,"{'chart': 'bar', 'x_name': 'pName', 'y_name': 'COUNT(pName)', 'x_data': [['Andrew', 'Blake', 'Charles', 'David', 'Eddie']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY pName'}",bar,pName,COUNT(pName),"Andrew, Blake, Charles, David, Eddie","2, 1, 1, 1, 1",A bar chart for what are the number of the names of all students who tried out in alphabetical order?
"SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'min(stu_gpa)', 'x_data': [['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL']], 'y_data': [[2.26, 2.84, 3.09, 3.87, 2.11]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,min(stu_gpa),"ACCT, BIOL, CIS, EDU, ENGL","2.26, 2.84, 3.09, 3.87, 2.11",What is the lowest student GPA for every department? Return a bar chart.
"SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY COUNT(section_description) DESC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'section_description', 'y_name': 'COUNT(section_description)', 'x_data': [['qui', 'et', 'voluptatem', 'voluptas', 'reprehenderit', 'quis', 'provident', 'non', 'nesciunt', 'facilis', 'ex', 'doloremque', 'ad']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY section_description'}",bar,section_description,COUNT(section_description),"qui, et, voluptatem, voluptas, reprehenderit, quis, provident, non, nesciunt, facilis, ex, doloremque, ad","2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Count the section_description, and group by section_description with a bar chart, and display by the the number of section description in desc please."
"SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY name DESC",Bar,Hard,flight_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['SAAB 340', 'Piper Archer III', 'Lockheed L1011', 'Embraer ERJ-145', 'Boeing 757-300', 'Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,name,count(*),"SAAB 340, Piper Archer III, Lockheed L1011, Embraer ERJ-145, Boeing 757-300, Boeing 747-400, Boeing 737-800, Airbus A340-300","1, 1, 2, 1, 1, 1, 1, 2","Visualize a bar chart for what is the name of each aircraft and how many flights does each one complete?, and display by the x-axis from high to low."
"SELECT FIRST_NAME , SALARY FROM employees ORDER BY SALARY DESC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Steven', 'John', 'Michael', 'Shelley', 'Nancy', 'Den', 'Hermann', 'Alexander', 'Adam', 'Susan', 'Jennifer']], 'y_data': [[24000, 14000, 13000, 12000, 12000, 11000, 10000, 9000, 8200, 6500, 4400]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Steven, John, Michael, Shelley, Nancy, Den, Hermann, Alexander, Adam, Susan, Jennifer","24000, 14000, 13000, 12000, 12000, 11000, 10000, 9000, 8200, 6500, 4400","You can return a bar chart with employees' first names and their salaries, display by the y axis from high to low."
"SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[100, 200, 50, 30, 130, 120]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","100, 200, 50, 30, 130, 120","For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, and I want to list from low to high by the Headquarter."
"SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_HIREDATE', 'y_name': 'COUNT(EMP_HIREDATE)', 'x_data': [['May', 'June', 'July', 'Aug']], 'y_data': [[1, 0, 0, 1]], 'classify': [], 'describe': 'BIN EMP_HIREDATE BY MONTH'}",bar,EMP_HIREDATE,COUNT(EMP_HIREDATE),"May, June, July, Aug","1, 0, 0, 1",How many professors whose office is located in DRE 102 are hired in each month? Return a bar chart.
"SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description",Bar,Easy,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Type_Description', 'y_name': 'COUNT(Document_Type_Description)', 'x_data': [['excellent', 'fun', 'good', 'very good']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Type_Description'}",bar,Document_Type_Description,COUNT(Document_Type_Description),"excellent, fun, good, very good","2, 1, 1, 1",How many document type for different document type description? Visualize with a bar chart.
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Oct', 'July', 'June', 'Sept', 'Aug']], 'y_data': [[8300, 117000, 138400, 139900, 281300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(SALARY),"Oct, July, June, Sept, Aug","8300, 117000, 138400, 139900, 281300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, could you list by the total number in asc?"
"SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue ORDER BY Venue ASC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Istanbul Turkey', 'London UK', 'New Jersey USA', 'New York USA']], 'y_data': [[1, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"Istanbul Turkey, London UK, New Jersey USA, New York USA","1, 2, 1, 2","Draw a bar chart that counts the number of venues of each workshop, and I want to order in ascending by the X."
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""  ORDER BY COUNT(Date_of_Birth) DESC",Bar,Extra Hard,entrepreneur,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_of_Birth BY WEEKDAY'}",bar,Date_of_Birth,COUNT(Date_of_Birth),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","1, 1, 0, 0, 0, 0, 0","Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and count them by a bar chart, and rank by the how many date of birth from high to low."
"SELECT date_incident_start , COUNT(date_incident_start) FROM Behavior_Incident WHERE incident_type_code = ""NOISE""",Bar,Medium,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_incident_start', 'y_name': 'COUNT(date_incident_start)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 1, 0, 0, 0, 1, 2]], 'classify': [], 'describe': 'BIN date_incident_start BY WEEKDAY'}",bar,date_incident_start,COUNT(date_incident_start),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 1, 0, 0, 0, 1, 2","What is the number of end dates for incidents with incident type code ""NOISE""? Bin by weekday and return a bar chart."
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC",Bar,Extra Hard,products_gen_characteristics,"{'chart': 'bar', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Seeds', 'Herbs', 'Spices']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",bar,product_category_description,COUNT(product_category_description),"Seeds, Herbs, Spices","3, 2, 1","Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, display Y from high to low order."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) DESC",Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Thur', 'Fri', 'Wed', 'Tue', 'Sun', 'Sat', 'Mon']], 'y_data': [[2, 2, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Thur, Fri, Wed, Tue, Sun, Sat, Mon","2, 2, 0, 0, 0, 0, 0","Find the number of customers that use email as the contact channel for each weekday Visualize with a bar chart, list in descending by the y axis."
"SELECT Name , Revenue FROM manufacturers ORDER BY revenue DESC",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['Iomega', 'Fujits', 'Sony', 'Creative Labs', 'Hewlett-Packard', 'Winchester']], 'y_data': [[200, 130, 120, 100, 50, 30]], 'classify': [], 'describe': ''}",bar,Name,Revenue,"Iomega, Fujits, Sony, Creative Labs, Hewlett-Packard, Winchester","200, 130, 120, 100, 50, 30",Please show me a bar chart for visualizing the name and revenue of all manufacturers sorted by their revenue in the descending order.
"SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Northern Ireland', 'Wales', 'England']], 'y_data': [[1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Northern Ireland, Wales, England","1, 1, 9","Compare the total number of journalist with different nationality using a bar chart, and show in ascending by the how many nationality."
"SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Evangeline', 'Kacey', 'Lyric']], 'y_data': [[1, 6, 4]], 'classify': [], 'describe': ''}",bar,name,age,"Evangeline, Kacey, Lyric","1, 6, 4","How old is each dog that was abandoned? Show in a bar chart, rank names in ascending order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""  ORDER BY COUNT(date_of_enrolment) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Nov', 'Oct', 'Sept', 'Aug', 'Dec']], 'y_data': [[0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_of_enrolment BY MONTH'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Nov, Oct, Sept, Aug, Dec","0, 0, 0, 1, 1","Find the the date of enrollment of the ""Spanish"" course, and count them by a bar chart, and sort by the Y from low to high."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['James', 'Owen', 'Robert', 'Andy', 'Mary', 'John']], 'y_data': [[28, 23, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"James, Owen, Robert, Andy, Mary, John","28, 23, 6, 5, 3, 1","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, and show Y in descending order."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail"" GROUP BY date_of_completion ORDER BY date_of_completion ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-02-26', '2018-03-02', '2018-03-04', '2018-03-06', '2018-03-07', '2018-03-22']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",bar,date_of_completion,COUNT(date_of_completion),"2018-02-26, 2018-03-02, 2018-03-04, 2018-03-06, 2018-03-07, 2018-03-22","1, 1, 1, 1, 1, 2","A bar chart for returning the number of the completion date for all the tests that have ""Fail"" result, and I want to order in asc by the X."
"SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter",Bar,Easy,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'max(revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[100, 200, 50, 30, 130, 120]], 'classify': [], 'describe': ''}",bar,Headquarter,max(revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","100, 200, 50, 30, 130, 120",Please tell the revenues of the companies with the highest revenues in each headquarter city.
"SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"9–1, 5–3, 4–3, 3–3","0.946, 0.8240000000000001, 0.706, 0.6","Create a bar chart showing all_games_percent across all neutral, sort by the y axis from high to low."
"SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[3, 1, 3, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","3, 1, 3, 1, 1, 2","For those records from the products and each product's manufacturer, find  name and the amount of name , and group by attribute name, and visualize them by a bar chart."
"SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name ORDER BY Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Memory', 'Toner cartridge', 'ZIP drive']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"CD drive, DVD burner, DVD drive, Floppy disk, Memory, Toner cartridge, ZIP drive","1, 1, 2, 1, 1, 1, 1","What are the names of products with price at most 200, and count them by a bar chart, display by the Name in ascending."
"SELECT building , COUNT(building) FROM department GROUP BY building ORDER BY building DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Wrigley', 'Whitman', 'Thompson', 'Taylor', 'Saucon', 'Rauch', 'Palmer', 'Mercer', 'Main', 'Linderman', 'Lamberton', 'Lambea', 'Chandler', 'Candlestick', 'Bronfman', 'Brodhead']], 'y_data': [[1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Wrigley, Whitman, Thompson, Taylor, Saucon, Rauch, Palmer, Mercer, Main, Linderman, Lamberton, Lambea, Chandler, Candlestick, Bronfman, Brodhead","1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1","Bar chart of how many building from each building, sort bar from high to low order."
"SELECT Date , Vote_Percent FROM election",Bar,Easy,election_representative,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Vote_Percent', 'x_data': [['July 1942', 'October 1942', '1946', '1949', '1953']], 'y_data': [[16.2, 18.5, 19.5, 19.5, 16]], 'classify': [], 'describe': ''}",bar,Date,Vote_Percent,"July 1942, October 1942, 1946, 1949, 1953","16.2, 18.5, 19.5, 19.5, 16",List the dates and vote percents of elections in a bar chart.
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[86100, 85700, 113400, 83300, 73400, 84400, 86200]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","86100, 85700, 113400, 83300, 73400, 84400, 86200","For those employees who did not have any job in the past, show me about the distribution of  hire_date and the sum of salary bin hire_date by weekday in a bar chart."
"SELECT T2.customer_name , COUNT(T2.customer_name) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name ORDER BY T2.customer_name ASC",Bar,Hard,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'customer_name', 'y_name': 'COUNT(customer_name)', 'x_data': [['Buford', 'Cecelia', 'Cheyenne', 'Lela', 'Madaline', 'Melissa', 'Orion', 'Shany', 'Sterling']], 'y_data': [[2, 3, 2, 1, 4, 3, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY customer_name'}",bar,customer_name,COUNT(customer_name),"Buford, Cecelia, Cheyenne, Lela, Madaline, Melissa, Orion, Shany, Sterling","2, 3, 2, 1, 4, 3, 1, 2, 2","Show the number of addrens history for each customer in a bar chart, rank in asc by the bar."
"SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = ""Fanny""  ORDER BY COUNT(date_of_notes) DESC",Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_of_notes', 'y_name': 'COUNT(date_of_notes)', 'x_data': [['Tue', 'Thur', 'Wed', 'Sun', 'Sat', 'Mon', 'Fri']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_notes BY WEEKDAY'}",bar,date_of_notes,COUNT(date_of_notes),"Tue, Thur, Wed, Sun, Sat, Mon, Fri","1, 1, 0, 0, 0, 0, 0","Find the dates of assessment notes for students with first name ""Fanny"", and count them by a bar chart, and I want to sort from high to low by the Y please."
"SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY Location DESC",Bar,Medium,performance_attendance,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Verizon Center', 'TD Garden', 'Scotiabank Place', 'Madison Square Garden', 'Bell Centre']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Verizon Center, TD Garden, Scotiabank Place, Madison Square Garden, Bell Centre","2, 1, 1, 1, 1","Compare the total number of locations in each location using a bar graph, and display x axis from high to low order please."
"SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'COUNT(Date_Payment_Made)', 'x_data': [['2017', '2018']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'BIN Date_Payment_Made BY YEAR'}",bar,Date_Payment_Made,COUNT(Date_Payment_Made),"2017, 2018","3, 1","For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart."
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(*)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Nominee,COUNT(*),"Bob Fosse, Cleavant Derricks","5, 2","Show different nominees and the number of musicals they have been nominated in a bar chart, sort in desc by the Y-axis."
"SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 119027]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(enrollment),"Private/Methodist, Public","2100, 119027",What are the total enrollments of universities of each affiliation type. Plot them as bar chart.
"SELECT Year , COUNT(Year) FROM movie  ORDER BY budget_million",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['1999', '2000', '2001']], 'y_data': [[3, 6, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",bar,Year,COUNT(Year),"1999, 2000, 2001","3, 6, 1",Show the number of movies for each year in a bar chart and ordered by budget.
"SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Wales', 'Northern Ireland', 'England']], 'y_data': [[1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Wales, Northern Ireland, England","1, 1, 9","Compare the total number of journalist with different nationality using a bar chart, and list in descending by the Nationality."
"SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = ""Kyle"" GROUP BY apt_type_code ORDER BY COUNT(apt_type_code) ASC",Bar,Extra Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_type_code', 'y_name': 'COUNT(apt_type_code)', 'x_data': [['Flat', 'Studio', 'Duplex']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY apt_type_code'}",bar,apt_type_code,COUNT(apt_type_code),"Flat, Studio, Duplex","1, 1, 2","How many buildings are managed by ""Kyle""? Return a bar chart grouping by apartment type codes, list y-axis in asc order."
"SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY LName ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'AVG(Age)', 'x_data': [['Apap', 'Cheng', 'Jones', 'Kim', 'Lee', 'Nelson', 'Prater', 'Schmidt', 'Smith']], 'y_data': [[18, 21, 21, 19, 16, 20, 18, 26, 19]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,AVG(Age),"Apap, Cheng, Jones, Kim, Lee, Nelson, Prater, Schmidt, Smith","18, 21, 21, 19, 16, 20, 18, 26, 19","Show the average age for all female students and group them by last name with a bar chart, and rank bar in ascending order."
"SELECT T1.name , T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id ORDER BY T1.id DESC",Bar,Medium,battle_death,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Siege of Constantinople', 'Battle of Boruy', 'Battle of Messinopolis']], 'y_data': [[8, 6, 5]], 'classify': [], 'describe': ''}",bar,name,id,"Siege of Constantinople, Battle of Boruy, Battle of Messinopolis","8, 6, 5","What are the ids and names of the battles that led to more than 10 people killed in total, and could you show by the total number in descending?"
"SELECT Name , COUNT(Name) FROM Products GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD burner', 'CD drive']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"DVD drive, ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD burner, CD drive","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","A bar chart for what are the number of the names of all products?, and list the number of name from high to low order."
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Cola', 'Root beer', 'Ginger Beer', 'Carbonated Water']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Cola, Root beer, Ginger Beer, Carbonated Water","2, 1, 1, 1","A bar chart for finding the number of the names of catalog entries with level number 8, and I want to rank y axis in desc order."
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Psychology', 'Pol. Sci.', 'Physics', 'Math', 'Languages', 'History', 'Finance', 'English', 'Cybernetics', 'Biology', 'Athletics', 'Astronomy']], 'y_data': [[848175.04, 573745.09, 942162.76, 777605.11, 601283.6, 699140.86, 866831.75, 611042.66, 794541.46, 647610.55, 734550.7, 617253.94]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Psychology, Pol. Sci., Physics, Math, Languages, History, Finance, English, Cybernetics, Biology, Athletics, Astronomy","848175.04, 573745.09, 942162.76, 777605.11, 601283.6, 699140.86, 866831.75, 611042.66, 794541.46, 647610.55, 734550.7, 617253.94","What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and could you show by the bars in descending?"
"SELECT Team_Name , ACC_Percent FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'ACC_Percent', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[0.563, 0.875, 0.813, 0.625]], 'classify': [], 'describe': ''}",bar,Team_Name,ACC_Percent,"Virginia Tech, North Carolina, Duke, Clemson","0.563, 0.875, 0.813, 0.625","Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and order from high to low by the X."
"SELECT cust_name , credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id ORDER BY cust_name DESC",Bar,Medium,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'credit_score', 'x_data': [['Owen', 'Mary']], 'y_data': [[210, 30]], 'classify': [], 'describe': ''}",bar,cust_name,credit_score,"Owen, Mary","210, 30","Return a histogram on what are the different names and credit scores of customers who have taken a loan?, and display in descending by the bars."
"SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY min(salary) ASC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'min(salary)', 'x_data': [['Marketing', 'Mech. Eng.', 'Astronomy', 'Cybernetics', 'Comp. Sci.', 'Pol. Sci.', 'Geology', 'Finance', 'Physics']], 'y_data': [[43770.36, 51647.57, 79070.08, 79866.95, 80797.83, 87549.8, 99382.59, 105311.38, 108011.81]], 'classify': [], 'describe': ''}",bar,dept_name,min(salary),"Marketing, Mech. Eng., Astronomy, Cybernetics, Comp. Sci., Pol. Sci., Geology, Finance, Physics","43770.36, 51647.57, 79070.08, 79866.95, 80797.83, 87549.8, 99382.59, 105311.38, 108011.81","Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, and could you list Y from low to high order please?"
"SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) DESC",Bar,Medium,soccer_2,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'min(enr)', 'x_data': [['OK', 'FL', 'LA', 'AZ']], 'y_data': [[22000, 19000, 18000, 12000]], 'classify': [], 'describe': ''}",bar,state,min(enr),"OK, FL, LA, AZ","22000, 19000, 18000, 12000","Show the smallest enrollment of each state using a bar chart, and show in descending by the y axis."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'ST_MAN', 'SA_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'AD_VP', 'PU_MAN', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'FI_MGR', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, ST_MAN, SA_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, AD_VP, PU_MAN, PR_REP, MK_REP, MK_MAN, HR_REP, FI_MGR, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and show Y-axis in descending order."
"SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'SALARY', 'x_data': [['603.123.6666', '515.123.7777', '011.44.1644.429263', '515.123.8181', '515.123.8888', '515.123.8080', '515.123.5555']], 'y_data': [[6000, 6500, 7000, 8300, 10000, 12000, 13000]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,SALARY,"603.123.6666, 515.123.7777, 011.44.1644.429263, 515.123.8181, 515.123.8888, 515.123.8080, 515.123.5555","6000, 6500, 7000, 8300, 10000, 12000, 13000","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and salary , and list y axis in ascending order."
"SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC",Bar,Hard,customers_and_invoices,"{'chart': 'bar', 'x_name': 'customer_first_name', 'y_name': 'count(*)', 'x_data': [['Abbey', 'Jensen', 'Joesph', 'Vesta', 'Ruby', 'Kieran', 'Meaghan']], 'y_data': [[1, 1, 1, 1, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,customer_first_name,count(*),"Abbey, Jensen, Joesph, Vesta, Ruby, Kieran, Meaghan","1, 1, 1, 1, 3, 4, 4","How many accounts for each customer? Show a bar chart that groups by customer's first name, sort by the the total number in ascending."
"SELECT title , COUNT(title) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY COUNT(title) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['International Practicum', 'Game Programming', 'World History', 'Rock and Roll', 'Ponzi Schemes', 'Operating Systems', 'Immunology', 'Groups and Rings', 'Graph Theory', 'Fiction Writing', 'Embedded Systems', 'Electron Microscopy', 'Elastic Structures', 'Differential Geometry', 'Cat Herding', 'Aquatic Chemistry']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"International Practicum, Game Programming, World History, Rock and Roll, Ponzi Schemes, Operating Systems, Immunology, Groups and Rings, Graph Theory, Fiction Writing, Embedded Systems, Electron Microscopy, Elastic Structures, Differential Geometry, Cat Herding, Aquatic Chemistry","2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many courses with more than one prerequisite for each title? Return a bar chart, sort Y-axis from high to low order."
"SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY COUNT(name) DESC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Mingoz', 'Dale', 'DAgostino', 'Ullman ', 'Mahmoud', 'Jaekel', 'Bietzk']], 'y_data': [[2, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Mingoz, Dale, DAgostino, Ullman , Mahmoud, Jaekel, Bietzk","2, 2, 2, 1, 1, 1, 1","Show how many courses in 2008 for every instructor with a bar chart, display Y-axis from high to low order."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Sept', 'Oct']], 'y_data': [[9083.333333333334, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"Sept, Oct","9083.333333333334, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of salary over the  hire_date bin hire_date by time by a bar chart."
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[5, 1, 3, 9.333333333333334, 3, 7.666666666666667]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","5, 1, 3, 9.333333333333334, 3, 7.666666666666667","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, could you rank by the bars from high to low please?"
"SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed ORDER BY date_departed DESC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_departed', 'y_name': 'COUNT(date_departed)', 'x_data': [['2018-03-25', '2018-03-24']], 'y_data': [[6, 3]], 'classify': [], 'describe': 'GROUP BY date_departed'}",bar,date_departed,COUNT(date_departed),"2018-03-25, 2018-03-24","6, 3","How many dogs who have gone through a treatment departed in each day? Return a bar chart, list x-axis in descending order."
"SELECT EMAIL , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'DEPARTMENT_ID', 'x_data': [['WGIETZ', 'SMAVRIS', 'SHIGGINS', 'PFAY', 'MHARTSTE', 'KGRANT', 'HBAER']], 'y_data': [[110, 40, 110, 20, 20, 0, 70]], 'classify': [], 'describe': ''}",bar,EMAIL,DEPARTMENT_ID,"WGIETZ, SMAVRIS, SHIGGINS, PFAY, MHARTSTE, KGRANT, HBAER","110, 40, 110, 20, 20, 0, 70","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the email , show by the EMAIL in descending."
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType DESC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'count(*)', 'x_data': [['Queen', 'King', 'Double']], 'y_data': [[4, 4, 2]], 'classify': [], 'describe': ''}",bar,bedType,count(*),"Queen, King, Double","4, 4, 2","A bar chart about what are the number of rooms for each bed type?, could you sort in descending by the x-axis?"
"SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Revenue)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[300, 200, 150, 60, 130, 120]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Revenue),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","300, 200, 150, 60, 130, 120","For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the  headquarter , and group by attribute headquarter by a bar chart."
"SELECT Affiliation , sum(Enrollment) FROM university WHERE founded > 1850 GROUP BY affiliation",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'Affiliation', 'y_name': 'sum(Enrollment)', 'x_data': [['Private/Methodist', 'Public']], 'y_data': [[2100, 43092]], 'classify': [], 'describe': ''}",bar,Affiliation,sum(Enrollment),"Private/Methodist, Public","2100, 43092","Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?"
"SELECT staff_name , COUNT(staff_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY staff_name ORDER BY staff_name ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'staff_name', 'y_name': 'COUNT(staff_name)', 'x_data': [['Berneice', 'Bernice', 'Christophe', 'Cyrus', 'Edmond', 'Kadin', 'Oren', 'Rodger']], 'y_data': [[2, 2, 1, 1, 3, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY staff_name'}",bar,staff_name,COUNT(staff_name),"Berneice, Bernice, Christophe, Cyrus, Edmond, Kadin, Oren, Rodger","2, 2, 1, 1, 3, 4, 1, 1","How many engineers does each staff contact? Show a bar chart, rank in ascending by the staff_name."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY SUM(MANAGER_ID) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[753, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Sept, Oct","753, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, display y axis in desc order."
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date",Bar,Hard,performance_attendance,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 2', 'February 5']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Date'}",bar,Date,COUNT(Date),"February 11, February 2, February 5","1, 2, 1","Show the dates of performances with attending members whose roles are ""Violin"", and count them by a bar chart"
"SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank ORDER BY Rank DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(Rank)', 'x_data': [['Professor', 'Instructor', 'AsstProf', 'AssocProf']], 'y_data': [[27, 8, 15, 8]], 'classify': [], 'describe': 'GROUP BY Rank'}",bar,Rank,count(Rank),"Professor, Instructor, AsstProf, AssocProf","27, 8, 15, 8","How many faculty members do we have for each rank? Show bar chart, rank X-axis from high to low order please."
"SELECT T1.Location , T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID ORDER BY T1.Location DESC",Bar,Medium,railway,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'Railway_ID', 'x_data': [['York', 'Bressingham']], 'y_data': [[1, 5]], 'classify': [], 'describe': ''}",bar,Location,Railway_ID,"York, Bressingham","1, 5","Show id and location of railways that are associated with more than one train Visualize by bar chart, could you sort x axis in desc order?"
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 100, 100, 40, 60, 20, 70, 30, 80, 77.24137931034483, 50, 50, 50","For those employees who did not have any job in the past, show me about the distribution of job_id and the average of department_id , and group by attribute job_id in a bar chart, display in ascending by the X."
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%"" ORDER BY customer_id ASC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'customer_name', 'y_name': 'customer_id', 'x_data': [['Lukas', 'Kenya']], 'y_data': [[3, 13]], 'classify': [], 'describe': ''}",bar,customer_name,customer_id,"Lukas, Kenya","3, 13","what are the names and ids of customers whose address contains TN?, and sort in ascending by the y axis please."
"SELECT CITY , COUNT(CITY) FROM locations GROUP BY CITY ORDER BY CITY DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'CITY', 'y_name': 'COUNT(CITY)', 'x_data': [['Toronto', 'Southlake', 'South San Francisco', 'Seattle', 'OX9 9ZB', 'Munich', 'London']], 'y_data': [[1, 1, 1, 21, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CITY'}",bar,CITY,COUNT(CITY),"Toronto, Southlake, South San Francisco, Seattle, OX9 9ZB, Munich, London","1, 1, 1, 21, 1, 1, 1","Give me a bar chart to compare the number of departments located in different cities, sort bars from high to low order."
"SELECT T1.Event_Details , T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_Details",Bar,Medium,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Event_Details', 'y_name': 'SUM(Event_ID)', 'x_data': [['Fail', 'Success']], 'y_data': [[70, 83]], 'classify': [], 'describe': 'GROUP BY Event_Details'}",bar,Event_Details,SUM(Event_ID),"Fail, Success","70, 83",Show me a bar chart for what are the ids and details of events that have more than one participants?
"SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'max(revenue)', 'x_data': [['Winchester', 'Hewlett-Packard', 'Creative Labs', 'Sony', 'Fujits', 'Iomega']], 'y_data': [[30, 50, 100, 120, 130, 200]], 'classify': [], 'describe': ''}",bar,Name,max(revenue),"Winchester, Hewlett-Packard, Creative Labs, Sony, Fujits, Iomega","30, 50, 100, 120, 130, 200","Please tell the names and revenues of the companies with the highest revenues in each headquarter city, and display from low to high by the maximal revenue."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['June', 'July', 'Aug', 'Sept']], 'y_data': [[83.75, 44.666666666666664, 80, 56.666666666666664]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"June, July, Aug, Sept","83.75, 44.666666666666664, 80, 56.666666666666664","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of  hire_date and the average of department_id bin hire_date by time."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 2, 1, 0, 1]], 'classify': [], 'describe': 'BIN date_of_completion BY WEEKDAY'}",bar,date_of_completion,COUNT(date_of_completion),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 2, 1, 0, 1","Return the completion date for all the tests that have ""Fail"" result, and count them by a bar chart"
"SELECT name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",Bar,Easy,medicine_enzyme_interaction,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Aripiprazole', 'Asenapine', 'Iloperidone', 'Ziprasidone']], 'y_data': [[2, 3, 8, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Aripiprazole, Asenapine, Iloperidone, Ziprasidone","2, 3, 8, 20",A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Thur', 'Sun', 'Sat', 'Mon', 'Wed', 'Tue', 'Fri']], 'y_data': [[3, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_became_customer BY WEEKDAY'}",bar,date_became_customer,COUNT(date_became_customer),"Thur, Sun, Sat, Mon, Wed, Tue, Fri","3, 1, 1, 1, 0, 0, 0","What are the number of the dates when customers with ids between 10 and 20 became customers?, and order by the the number of date became customer in descending please."
"SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[0.6, 0.946, 0.8240000000000001, 0.706]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"Virginia Tech, North Carolina, Duke, Clemson","0.6, 0.946, 0.8240000000000001, 0.706","Find Team_Name and All_Games_Percent , and visualize them by a bar chart, and order by the x axis from high to low."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(SALARY) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[5685.714285714285, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","5685.714285714285, 5746.666666666667, 6286.666666666667, 6320, 6493.333333333333, 6762.5, 7775","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, I want to display from low to high by the mean salary."
"SELECT FullName , Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker ORDER BY FullName ASC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'FullName', 'y_name': 'Id', 'x_data': [['Chrysler', 'General Motors']], 'y_data': [[6, 4]], 'classify': [], 'describe': ''}",bar,FullName,Id,"Chrysler, General Motors","6, 4","Show me a bar chart for what are the names and ids of all makers with more than 3 models?, show FullName in ascending order."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_PRES', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_REP', 'PR_REP', 'PU_CLERK', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_PRES, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_REP, PR_REP, PU_CLERK, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 90, 500, 100, 40, 300, 20, 70, 150, 400, 2240, 1000, 1000, 200","For those employees who did not have any job in the past, visualize a bar chart about the distribution of  job_id and the sum of department_id , and group by attribute job_id."
"SELECT JOB_ID , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'EMPLOYEE_ID', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'PR_REP', 'HR_REP', 'MK_REP', 'MK_MAN', 'SA_REP']], 'y_data': [[206, 205, 204, 203, 202, 201, 178]], 'classify': [], 'describe': ''}",bar,JOB_ID,EMPLOYEE_ID,"AC_ACCOUNT, AC_MGR, PR_REP, HR_REP, MK_REP, MK_MAN, SA_REP","206, 205, 204, 203, 202, 201, 178","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the job_id , order in desc by the y-axis please."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) ASC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Sun', 'Thur', 'Wed', 'Fri', 'Tue', 'Mon', 'Sat']], 'y_data': [[1, 1, 1, 2, 2, 4, 4]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Sun, Thur, Wed, Fri, Tue, Mon, Sat","1, 1, 1, 2, 2, 4, 4","What is the number of start dates of each apartment booking for each weekday? Return a bar chart, show y axis in ascending order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 75, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 75, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and the average of revenue , and group by attribute name."
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['9–7', '10–6', '13–3', '14–2']], 'y_data': [[0.563, 0.625, 0.813, 0.875]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,ACC_Percent,"9–7, 10–6, 13–3, 14–2","0.563, 0.625, 0.813, 0.875","Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and display ACC_Percent in ascending order."
"SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) DESC",Bar,Hard,driving_school,"{'chart': 'bar', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['Mon', 'Tue', 'Thur', 'Sun', 'Sat', 'Wed', 'Fri']], 'y_data': [[2, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_birth BY WEEKDAY'}",bar,date_of_birth,COUNT(date_of_birth),"Mon, Tue, Thur, Sun, Sat, Wed, Fri","2, 1, 1, 1, 1, 0, 0","When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a bar chart, I want to list from high to low by the Y-axis."
"SELECT formats , count(*) FROM files GROUP BY formats",Bar,Easy,music_1,"{'chart': 'bar', 'x_name': 'formats', 'y_name': 'count(*)', 'x_data': [['mp3', 'mp4']], 'y_data': [[2, 4]], 'classify': [], 'describe': ''}",bar,formats,count(*),"mp3, mp4","2, 4",how many songs were released for each format?
"SELECT HIRE_DATE , AVG(MANAGER_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(MANAGER_ID)', 'x_data': [['Sept', 'Oct']], 'y_data': [[125.5, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(MANAGER_ID),"Sept, Oct","125.5, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time, and could you list y axis in ascending order?"
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['14–2', '13–3', '10–6', '9–7']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,ACC_Percent,"14–2, 13–3, 10–6, 9–7","0.875, 0.813, 0.625, 0.563",Return a bar chart about the distribution of  ACC_Regular_Season and  ACC_Percent .
"SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher ORDER BY COUNT(*) ASC",Bar,Medium,book_2,"{'chart': 'bar', 'x_name': 'Publisher', 'y_name': 'COUNT(*)', 'x_data': [['Bertelsmann', 'Springer Nature', 'Thomson Reuters', 'Pearson', 'Wiley']], 'y_data': [[1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Publisher,COUNT(*),"Bertelsmann, Springer Nature, Thomson Reuters, Pearson, Wiley","1, 1, 1, 2, 2","Show different publishers together with the number of publications they have in a bar chart, show total number from low to high order."
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code ASC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Memory', 'CD drive', 'Toner cartridge']], 'y_data': [[2, 7, 9]], 'classify': [], 'describe': ''}",bar,Name,Code,"Memory, CD drive, Toner cartridge","2, 7, 9","For those products with a price between 60 and 120, draw a bar chart about the distribution of name and code , and rank by the y axis in asc please."
"SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname ORDER BY COUNT(Fname) ASC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['David', 'George', 'Ian', 'Jun', 'Lisa', 'Mark', 'Michael', 'Paul', 'Stacy', 'William', 'Sarah', 'Eric']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"David, George, Ian, Jun, Lisa, Mark, Michael, Paul, Stacy, William, Sarah, Eric","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4","Find the number of students who are not in the largest major and group by students' first name in a bar chart, and order in ascending by the Y-axis."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 3, 5, 0, 3, 3]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 3, 5, 0, 3, 3",How many enrolment students in each day? Return a bar chart binning date of enrolment by weekday.
"SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",Bar,Medium,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(trust)', 'x_data': [['Mark', 'Terry', 'Nancy', 'Rosie', 'Roxi']], 'y_data': [[4.666666666666667, 5, 8, 4.5, 10]], 'classify': [], 'describe': ''}",bar,name,avg(trust),"Mark, Terry, Nancy, Rosie, Roxi","4.666666666666667, 5, 8, 4.5, 10",Find each target user's name and average trust score. Visualize by bar chart.
"SELECT ACC_Road , SUM(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY SUM(School_ID) ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'SUM(School_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 9]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,SUM(School_ID),"8–0, 6–2, 3–5","1, 2, 9","Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, display in asc by the total number of school id."
"SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code",Bar,Easy,insurance_and_eClaims,"{'chart': 'bar', 'x_name': 'Policy_Type_Code', 'y_name': 'count(*)', 'x_data': [['Deputy', 'Jurisdiction', 'Normal', 'Uniformed']], 'y_data': [[3, 3, 1, 8]], 'classify': [], 'describe': ''}",bar,Policy_Type_Code,count(*),"Deputy, Jurisdiction, Normal, Uniformed","3, 3, 1, 8","For each policy type, return its type code and its count in the record. Visualize by bar chart."
"SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY Product_Name DESC",Bar,Hard,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Name', 'y_name': 'COUNT(Product_Name)', 'x_data': [['Men suits', 'Dinning', 'Business Policy B', 'Business Policy']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Product_Name'}",bar,Product_Name,COUNT(Product_Name),"Men suits, Dinning, Business Policy B, Business Policy","1, 2, 1, 1","List the names of products that are not in any event, and count them by a bar chart, and order in descending by the bar please."
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass""",Bar,Medium,e_learning,"{'chart': 'bar', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_test_taken BY WEEKDAY'}",bar,date_test_taken,COUNT(date_test_taken),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 1, 0, 1, 1, 3","Find the number of the dates of the tests taken with result ""Pass""."
"SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'MANAGER_ID', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[149, 101, 201, 100, 101, 101, 205]], 'classify': [], 'describe': ''}",bar,JOB_ID,MANAGER_ID,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","149, 101, 201, 100, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, could you order in desc by the bars please?"
"SELECT JOB_ID , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'MANAGER_ID', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'HR_REP', 'MK_MAN', 'MK_REP', 'PR_REP', 'SA_REP']], 'y_data': [[205, 101, 101, 100, 201, 101, 149]], 'classify': [], 'describe': ''}",bar,JOB_ID,MANAGER_ID,"AC_ACCOUNT, AC_MGR, HR_REP, MK_MAN, MK_REP, PR_REP, SA_REP","205, 101, 101, 100, 201, 101, 149","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, and list by the X from low to high."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category DESC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Lesb. M/SF', 'Gay SF/F', 'Gay M/SF']], 'y_data': [[5, 2, 5]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Lesb. M/SF, Gay SF/F, Gay M/SF","5, 2, 5","Show the total number from each category, I want to list in desc by the bars."
"SELECT LAST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY LAST_NAME DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'SALARY', 'x_data': [['Mavris', 'Higgins', 'Hartstein', 'Grant', 'Gietz', 'Fay', 'Baer']], 'y_data': [[6500, 12000, 13000, 7000, 8300, 6000, 10000]], 'classify': [], 'describe': ''}",bar,LAST_NAME,SALARY,"Mavris, Higgins, Hartstein, Grant, Gietz, Fay, Baer","6500, 12000, 13000, 7000, 8300, 6000, 10000","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary , show in descending by the X."
"SELECT LAST_NAME , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY COMMISSION_PCT ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'COMMISSION_PCT', 'x_data': [['Baer', 'Fay', 'Gietz', 'Hartstein', 'Higgins', 'Mavris', 'Grant']], 'y_data': [[0, 0, 0, 0, 0, 0, 0.15]], 'classify': [], 'describe': ''}",bar,LAST_NAME,COMMISSION_PCT,"Baer, Fay, Gietz, Hartstein, Higgins, Mavris, Grant","0, 0, 0, 0, 0, 0, 0.15","For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and commission_pct , show by the Y from low to high."
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_status_code', 'y_name': 'COUNT(*)', 'x_data': [['Confirmed', 'Provisional']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,booking_status_code,COUNT(*),"Confirmed, Provisional","7, 8",Show the booking status code and the corresponding number of bookings in a bar chart.
"SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Price)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[240, 486, 240, 150, 450, 125]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Price),"Andy, James, John, Mary, Owen, Robert","240, 486, 240, 150, 450, 125","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  founder and the sum of price , and group by attribute founder."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Code)', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'DVD drive', 'Toner cartridge', 'DVD burner']], 'y_data': [[1, 2, 3, 4, 5, 7, 8, 8.5, 9, 10]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Code),"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, DVD drive, Toner cartridge, DVD burner","1, 2, 3, 4, 5, 7, 8, 8.5, 9, 10","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of code , and group by attribute name, could you display by the y axis in ascending?"
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Sat', 'Sun', 'Fri', 'Thur', 'Mon', 'Wed', 'Tue']], 'y_data': [[60.666666666666664, 60.666666666666664, 62, 62.5, 63.57142857142857, 65, 65.33333333333333]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Sat, Sun, Fri, Thur, Mon, Wed, Tue","60.666666666666664, 60.666666666666664, 62, 62.5, 63.57142857142857, 65, 65.33333333333333","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, and I want to rank by the y axis in asc."
"SELECT T1.Participant_Type_Code , SUM(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY SUM(count(*)) DESC",Bar,Hard,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'SUM(count(*))', 'x_data': [['Participant', 'Organizer']], 'y_data': [[12, 6]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,SUM(count(*)),"Participant, Organizer","12, 6","How many events have each participants attended? Show their total number by each participant type code using a bar chart, and sort y-axis in desc order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0","Find the number of the the date of enrollment of the ""Spanish"" course."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[4, 20, 20, 29, 5, 5, 1, 1, 5, 1, 1, 5, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","4, 20, 20, 29, 5, 5, 1, 1, 5, 1, 1, 5, 1, 1, 1","For those employees who did not have any job in the past, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, could you display JOB_ID in descending order?"
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, find  job_id and  department_id , and visualize them by a bar chart."
"SELECT Duration , COUNT(Duration) FROM actor GROUP BY Duration ORDER BY Duration DESC",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Duration', 'y_name': 'COUNT(Duration)', 'x_data': [['1995, 1996—', '1994—', '1993—', '1988—', '1988–2008, 2013', '1988, 1992—', '1987–1991, 1996–2009, 2011', '1985–1992, 1993, 2004—']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Duration'}",bar,Duration,COUNT(Duration),"1995, 1996—, 1994—, 1993—, 1988—, 1988–2008, 2013, 1988, 1992—, 1987–1991, 1996–2009, 2011, 1985–1992, 1993, 2004—","1, 2, 1, 1, 1, 1, 1, 1","Bar chart x axis duration y axis how many duration, I want to sort in desc by the bar please."
"SELECT hand , count(*) FROM players GROUP BY hand ORDER BY count(*) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'hand', 'y_name': 'count(*)', 'x_data': [['L', '', 'R', 'U']], 'y_data': [[487, 954, 5028, 14193]], 'classify': [], 'describe': ''}",bar,hand,count(*),"L, , R, U","487, 954, 5028, 14193","How many players are there for each hand type Visualize by bar chart, and I want to list by the Y-axis in ascending please."
"SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY COUNT(*) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'DEPARTMENT_NAME', 'y_name': 'COUNT(*)', 'x_data': [['Administration', 'Human Resources', 'Public Relations', 'Accounting', 'Marketing', 'Executive', 'IT', 'Finance', 'Purchasing', 'Sales', 'Shipping']], 'y_data': [[1, 1, 1, 2, 2, 3, 5, 6, 6, 34, 45]], 'classify': [], 'describe': ''}",bar,DEPARTMENT_NAME,COUNT(*),"Administration, Human Resources, Public Relations, Accounting, Marketing, Executive, IT, Finance, Purchasing, Sales, Shipping","1, 1, 1, 2, 2, 3, 5, 6, 6, 34, 45","Give the name of each department and the number of employees in each Plot them as bar chart, and could you display from low to high by the y-axis?"
"SELECT catalog_entry_name , COUNT(catalog_entry_name) FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8"" GROUP BY catalog_entry_name ORDER BY COUNT(catalog_entry_name) DESC",Bar,Extra Hard,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'COUNT(catalog_entry_name)', 'x_data': [['Cola', 'Root beer', 'Ginger Beer', 'Carbonated Water']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY catalog_entry_name'}",bar,catalog_entry_name,COUNT(catalog_entry_name),"Cola, Root beer, Ginger Beer, Carbonated Water","2, 1, 1, 1","Find the number of the names of catalog entries with level number 8, and rank in descending by the y axis."
"SELECT building , max(capacity) FROM classroom GROUP BY building ORDER BY max(capacity) ASC",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'max(capacity)', 'x_data': [['Lamberton', 'Chandler', 'Bronfman', 'Power', 'Drown', 'Fairchild', 'Polya', 'Main', 'Grace', 'Alumni', 'Lambea', 'Garfield', 'Rathbone', 'Gates', 'Nassa', 'Painter', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[10, 11, 12, 12, 18, 27, 28, 30, 34, 47, 51, 59, 60, 65, 92, 97, 109, 113, 115, 120]], 'classify': [], 'describe': ''}",bar,building,max(capacity),"Lamberton, Chandler, Bronfman, Power, Drown, Fairchild, Polya, Main, Grace, Alumni, Lambea, Garfield, Rathbone, Gates, Nassa, Painter, Saucon, Stabler, Taylor, Whitman","10, 11, 12, 12, 18, 27, 28, 30, 34, 47, 51, 59, 60, 65, 92, 97, 109, 113, 115, 120","Bar chart x axis building y axis maximal capacity, I want to show in asc by the total number please."
"SELECT FIRST_NAME , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMPLOYEE_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'EMPLOYEE_ID', 'x_data': [['William', 'Shelley', 'Hermann', 'Susan', 'Pat', 'Michael', 'Kimberely']], 'y_data': [[206, 205, 204, 203, 202, 201, 178]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,EMPLOYEE_ID,"William, Shelley, Hermann, Susan, Pat, Michael, Kimberely","206, 205, 204, 203, 202, 201, 178","For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and employee_id , and visualize them by a bar chart, and sort by the y axis in descending."
"SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY Type DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Cargo ship, Battle ship","5, 3","What is the total number of each ship type? Give me a bar chart, and list Type in desc order."
"SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['AssocProf', 'AsstProf', 'Professor']], 'y_data': [[2, 18, 14]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"AssocProf, AsstProf, Professor","2, 18, 14",Show me a bar chart for how many students are advised by each rank of faculty? List the rank and the number of students.
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%"" ORDER BY customer_id ASC",Bar,Hard,department_store,"{'chart': 'bar', 'x_name': 'customer_name', 'y_name': 'customer_id', 'x_data': [['Lukas', 'Kenya']], 'y_data': [[3, 13]], 'classify': [], 'describe': ''}",bar,customer_name,customer_id,"Lukas, Kenya","3, 13","Return a histogram on what are the names and ids of customers whose address contains TN?, rank in asc by the y-axis."
"SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played",Bar,Easy,match_season,"{'chart': 'bar', 'x_name': 'Years_Played', 'y_name': 'COUNT(Years_Played)', 'x_data': [['1 (2011)', '2 (1988, 1990)', '2 (2010-2011)', '2 (2010–2011)', '3 (2005, 2007–2008)', '3 (2009–2011)', '4 (2003–2004, 2010–2011)', '8 (2003–2005, 2007–2011)']], 'y_data': [[2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Years_Played'}",bar,Years_Played,COUNT(Years_Played),"1 (2011), 2 (1988, 1990), 2 (2010-2011), 2 (2010–2011), 3 (2005, 2007–2008), 3 (2009–2011), 4 (2003–2004, 2010–2011), 8 (2003–2005, 2007–2011)","2, 1, 1, 2, 1, 1, 1, 1",Please give me a bar chart to show the number of players in each years played.
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Sammy Green', 'Steve Raible', 'Steve Niehaus', 'Sherman Smith', 'Jeff Lloyd']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Author,COUNT(DISTINCT T1.workshop_id),"Sammy Green, Steve Raible, Steve Niehaus, Sherman Smith, Jeff Lloyd","2, 1, 1, 1, 1","Show each author and the number of workshops they submitted to Show bar chart, show by the Y-axis in desc."
"SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name ORDER BY dorm_name DESC",Bar,Hard,dorm_1,"{'chart': 'bar', 'x_name': 'dorm_name', 'y_name': 'avg(T1.age)', 'x_data': [['University Hovels', 'Smith Hall', 'Grad Student Asylum', 'Fawlty Towers', 'Dorm-plex 2000', 'Bud Jones Hall', 'Anonymous Donor Hall']], 'y_data': [[18, 20.166666666666668, 18, 19.777777777777782, 19.6, 20, 19.666666666666668]], 'classify': [], 'describe': ''}",bar,dorm_name,avg(T1.age),"University Hovels, Smith Hall, Grad Student Asylum, Fawlty Towers, Dorm-plex 2000, Bud Jones Hall, Anonymous Donor Hall","18, 20.166666666666668, 18, 19.777777777777782, 19.6, 20, 19.666666666666668","what is the average age for each dorm and what are the names of each dorm?, order from high to low by the x-axis."
"SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY Budget_Type_Code DESC",Bar,Medium,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Budget_Type_Code', 'y_name': 'count(*)', 'x_data': [['SF', 'ORG', 'GV']], 'y_data': [[2, 2, 6]], 'classify': [], 'describe': ''}",bar,Budget_Type_Code,count(*),"SF, ORG, GV","2, 2, 6","Show me a bar chart for what are the different budget type codes, and how many documents are there for each?, list x-axis in descending order."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY EMP_FNAME",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 2, 3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 2, 3, 2, 3, 1",How many courses for each teacher? Show me a bar chart.
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Code)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[1, 5, 6, 3, 4, 2]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Code),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","1, 5, 6, 3, 4, 2","For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, order by the x axis in desc please."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['01.09.1977', '03.02.1976', '05.05.1972', '06.10.1976', '10.03.1976', '10.11.1972', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[88, 94, 92, 83, 90, 85, 89, 88, 82]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"01.09.1977, 03.02.1976, 05.05.1972, 06.10.1976, 10.03.1976, 10.11.1972, 20.08.1970, 22.04.1977, 28.09.1981","88, 94, 92, 83, 90, 85, 89, 88, 82","Visualize a bar chart about the distribution of Date_of_Birth and Weight , and could you display x-axis from low to high order?"
"SELECT T1.Name , COUNT(T1.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","1, 1, 1, 1, 1, 1, 1, 2, 1, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the amount of name , and group by attribute name, and show from high to low by the bars."
"SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Jordan', 'Gabriel', 'Tiffany', 'Logan', 'Kyle', 'Kris', 'John', 'Jessica', 'Haley', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Jordan, Gabriel, Tiffany, Logan, Kyle, Kris, John, Jessica, Haley, Cassandra, Brittany, Austin, Andrew, Alexis","2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Count the names of each high schooler using a bar chart, order in desc by the how many name."
"SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC",Bar,Medium,train_station,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Birmingham', 'Glasgow', 'London']], 'y_data': [[1, 1, 10]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Birmingham, Glasgow, London","1, 1, 10","How many locations? Draw a bar chart, sort total number from low to high order."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 2, 1, 1, 1, 2, 0]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 2, 1, 1, 1, 2, 0","A bar chart showing the number of start date of the apartment bookings made by female guests (gender code ""Female"") for each weekday."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[6, 5, 3, 28, 1, 23]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","6, 5, 3, 28, 1, 23","For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and display in descending by the X."
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code ASC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'payment_method_code', 'y_name': 'count(*)', 'x_data': [['Credit Card', 'Direct Debit']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,payment_method_code,count(*),"Credit Card, Direct Debit","5, 10","List all payment methods and number of payments using each payment methods Plot them as bar chart, display names in ascending order please."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[200, 50, 50, 120, 30, 130, 30, 150, 100, 100]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","200, 50, 50, 120, 30, 130, 30, 150, 100, 100","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of revenue , and group by attribute name, and I want to rank in desc by the names."
"SELECT Writer , COUNT(Writer) FROM book GROUP BY Writer ORDER BY Writer ASC",Bar,Medium,book_2,"{'chart': 'bar', 'x_name': 'Writer', 'y_name': 'COUNT(Writer)', 'x_data': [['Christopher Hinz', 'Christopher Moeller', 'Dave Gibbons', 'Elaine Lee', 'Garth Ennis', 'Howard Chaykin', 'Michael Moorcock', 'Timothy Truman']], 'y_data': [[2, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Writer'}",bar,Writer,COUNT(Writer),"Christopher Hinz, Christopher Moeller, Dave Gibbons, Elaine Lee, Garth Ennis, Howard Chaykin, Michael Moorcock, Timothy Truman","2, 1, 1, 1, 2, 1, 1, 1","List the writers of the books in ascending alphabetical order, and count them by a bar chart"
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[540, 360, 670, 230, 470, 530, 260]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","540, 360, 670, 230, 470, 530, 260","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of  hire_date and the sum of department_id bin hire_date by weekday."
"SELECT Years_Played , COUNT(Years_Played) FROM player GROUP BY Years_Played ORDER BY COUNT(Years_Played) ASC",Bar,Medium,match_season,"{'chart': 'bar', 'x_name': 'Years_Played', 'y_name': 'COUNT(Years_Played)', 'x_data': [['2 (1988, 1990)', '2 (2010-2011)', '3 (2005, 2007–2008)', '3 (2009–2011)', '4 (2003–2004, 2010–2011)', '8 (2003–2005, 2007–2011)', '1 (2011)', '2 (2010–2011)']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Years_Played'}",bar,Years_Played,COUNT(Years_Played),"2 (1988, 1990), 2 (2010-2011), 3 (2005, 2007–2008), 3 (2009–2011), 4 (2003–2004, 2010–2011), 8 (2003–2005, 2007–2011), 1 (2011), 2 (2010–2011)","1, 1, 1, 1, 1, 1, 2, 2","Please give me a bar chart to show the number of players in each years played, and display by the y-axis in ascending."
"SELECT All_Games , ACC_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Games', 'y_name': 'ACC_Percent', 'x_data': [['35–2', '28–6', '24–10', '21–14']], 'y_data': [[0.875, 0.813, 0.625, 0.563]], 'classify': [], 'describe': ''}",bar,All_Games,ACC_Percent,"35–2, 28–6, 24–10, 21–14","0.875, 0.813, 0.625, 0.563",Bar chart x axis all games y axis acc_percent
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(SALARY) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['SA_REP', 'SH_CLERK', 'SA_MAN', 'ST_CLERK', 'FI_ACCOUNT', 'ST_MAN', 'AD_VP', 'IT_PROG', 'AD_PRES', 'PU_CLERK', 'MK_MAN', 'FI_MGR', 'AC_MGR', 'PU_MAN', 'PR_REP', 'AC_ACCOUNT', 'HR_REP', 'MK_REP', 'AD_ASST']], 'y_data': [[250500, 64300, 61000, 55700, 39600, 36400, 34000, 28800, 24000, 13900, 13000, 12000, 12000, 11000, 10000, 8300, 6500, 6000, 4400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"SA_REP, SH_CLERK, SA_MAN, ST_CLERK, FI_ACCOUNT, ST_MAN, AD_VP, IT_PROG, AD_PRES, PU_CLERK, MK_MAN, FI_MGR, AC_MGR, PU_MAN, PR_REP, AC_ACCOUNT, HR_REP, MK_REP, AD_ASST","250500, 64300, 61000, 55700, 39600, 36400, 34000, 28800, 24000, 13900, 13000, 12000, 12000, 11000, 10000, 8300, 6500, 6000, 4400","For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and I want to list Y from high to low order."
"SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_address)', 'x_data': [['BUS', 'A&SCI']], 'y_data': [[4, 7]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_address),"BUS, A&SCI","4, 7","Count different addresses of each school with a bar chart, and order by the x-axis in desc please."
"SELECT Name , Budget_in_Billions FROM department ORDER BY Budget_in_Billions ASC",Bar,Easy,department_management,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Budget_in_Billions', 'x_data': [['Commerce', 'State', 'Interior', 'Treasury', 'Energy', 'Justice', 'Homeland Security', 'Housing and Urban Development', 'Transportation', 'Labor', 'Education', 'Veterans Affairs', 'Agriculture', 'Defense', 'Health and Human Services']], 'y_data': [[6.2, 9.96, 10.7, 11.1, 21.5, 23.4, 44.6, 46.2, 58, 59.7, 62.8, 73.2, 77.6, 439.3, 543.2]], 'classify': [], 'describe': ''}",bar,Name,Budget_in_Billions,"Commerce, State, Interior, Treasury, Energy, Justice, Homeland Security, Housing and Urban Development, Transportation, Labor, Education, Veterans Affairs, Agriculture, Defense, Health and Human Services","6.2, 9.96, 10.7, 11.1, 21.5, 23.4, 44.6, 46.2, 58, 59.7, 62.8, 73.2, 77.6, 439.3, 543.2","Give me a bar chart for budget_in_billions of each name, and sort by the total number in asc."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""  ORDER BY COUNT(date_of_completion) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['Mar', 'Feb']], 'y_data': [[6, 1]], 'classify': [], 'describe': 'BIN date_of_completion BY MONTH'}",bar,date_of_completion,COUNT(date_of_completion),"Mar, Feb","6, 1","What are the number of the completion dates of all the tests that have result ""Fail""?, and sort y axis in desc order."
"SELECT year , count(year) FROM matches ORDER BY count(year) ASC",Bar,Medium,wta_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'count(year)', 'x_data': [['2014', '2015', '2013', '2017', '2016']], 'y_data': [[0, 0, 12, 108, 158]], 'classify': [], 'describe': 'BIN year BY YEAR'}",bar,year,count(year),"2014, 2015, 2013, 2017, 2016","0, 0, 12, 108, 158","Bar graph to show count year from different year, bin year into YEAR interaval and then rank in asc order by the Y."
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC",Bar,Medium,product_catalog,"{'chart': 'bar', 'x_name': 'catalog_entry_name', 'y_name': 'capacity', 'x_data': [['Vimto', 'Sprite Lemo', 'Dr Pepper', 'Diet Pepsi', 'Diet Mountain Dew']], 'y_data': [[6, 8, 1, 9, 8]], 'classify': [], 'describe': ''}",bar,catalog_entry_name,capacity,"Vimto, Sprite Lemo, Dr Pepper, Diet Pepsi, Diet Mountain Dew","6, 8, 1, 9, 8","Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, could you list x axis in desc order?"
"SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY COUNT(T2.Party) DESC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(Party)', 'x_data': [['Democratic', 'Working Families', 'Liberal', 'Independence']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Party'}",bar,Party,COUNT(Party),"Democratic, Working Families, Liberal, Independence","2, 1, 1, 1","Please compare the number of names of parties using a bar chart, and could you order in descending by the total number?"
"SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(DISTINCT dept_address)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[7, 4]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(DISTINCT dept_address),"A&SCI, BUS","7, 4",A bar chart about how many different locations does each school have?
"SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[0.6, 0.946, 0.8240000000000001, 0.706]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"Virginia Tech, North Carolina, Duke, Clemson","0.6, 0.946, 0.8240000000000001, 0.706","Draw a bar chart about the distribution of Team_Name and All_Games_Percent , could you display from high to low by the X-axis please?"
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[1, 3, 5, 4, 2, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Andy, James, John, Mary, Owen, Robert","1, 3, 5, 4, 2, 6","For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the  founder , and group by attribute founder by a bar chart."
"SELECT Date_of_Birth , Weight FROM people ORDER BY Date_of_Birth ASC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Date_of_Birth', 'y_name': 'Weight', 'x_data': [['01.09.1977', '03.02.1976', '05.05.1972', '06.10.1976', '10.03.1976', '10.11.1972', '20.08.1970', '22.04.1977', '28.09.1981']], 'y_data': [[88, 94, 92, 83, 90, 85, 89, 88, 82]], 'classify': [], 'describe': ''}",bar,Date_of_Birth,Weight,"01.09.1977, 03.02.1976, 05.05.1972, 06.10.1976, 10.03.1976, 10.11.1972, 20.08.1970, 22.04.1977, 28.09.1981","88, 94, 92, 83, 90, 85, 89, 88, 82","A bar chart shows the distribution of Date_of_Birth and Weight , sort names from low to high order."
"SELECT fault_status , COUNT(fault_status) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_status ORDER BY COUNT(fault_status) ASC",Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'fault_status', 'y_name': 'COUNT(fault_status)', 'x_data': [['Return', 'Waiting', 'Fixed', 'Reported']], 'y_data': [[2, 3, 5, 5]], 'classify': [], 'describe': 'GROUP BY fault_status'}",bar,fault_status,COUNT(fault_status),"Return, Waiting, Fixed, Reported","2, 3, 5, 5","A bar chart about the number of faults for different fault status of all the faults recoreded in the logs, could you display in ascending by the y-axis please?"
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 2, 0, 0]], 'classify': [], 'describe': 'BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 2, 0, 0",Find the number of customers that use email as the contact channel for each weekday. Visualize with a bar chart.
"SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'SCHOOL_CODE', 'y_name': 'count(*)', 'x_data': [['A&SCI', 'BUS']], 'y_data': [[12, 10]], 'classify': [], 'describe': ''}",bar,SCHOOL_CODE,count(*),"A&SCI, BUS","12, 10","How many different professors are there for the different schools Show bar chart, list y axis from high to low order."
"SELECT Is_full_time , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Is_full_time DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'AVG(Shop_ID)', 'x_data': [['T', 'F']], 'y_data': [[3.4, 5]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,AVG(Shop_ID),"T, F","3.4, 5","Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, I want to rank from high to low by the x-axis."
"SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'count(*)', 'x_data': [['ACCT', 'ART', 'BIOL', 'CIS', 'ECON/FIN', 'ENG', 'HIST', 'MATH', 'MKT/MGT', 'PSYCH', 'SOC']], 'y_data': [[3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,count(*),"ACCT, ART, BIOL, CIS, ECON/FIN, ENG, HIST, MATH, MKT/MGT, PSYCH, SOC","3, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1",Return a histogram on how many professors have a Ph.D. in each department?
"SELECT CountryName , CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country ORDER BY CountryName ASC",Bar,Medium,car_1,"{'chart': 'bar', 'x_name': 'CountryName', 'y_name': 'CountryId', 'x_data': [['france', 'germany', 'italy', 'japan', 'korea', 'sweden', 'uk', 'usa']], 'y_data': [[3, 2, 5, 4, 8, 6, 7, 1]], 'classify': [], 'describe': ''}",bar,CountryName,CountryId,"france, germany, italy, japan, korea, sweden, uk, usa","3, 2, 5, 4, 8, 6, 7, 1","Return a bar chart on what are the names and ids of all countries with at least one car maker?, show in ascending by the CountryName."
"SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY count(*) DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Sex', 'y_name': 'count(*)', 'x_data': [['M', 'F']], 'y_data': [[51, 7]], 'classify': [], 'describe': 'GROUP BY Sex'}",bar,Sex,count(*),"M, F","51, 7","A bar chart showing the number of male and female faculty, order by the Y-axis in desc please."
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority ORDER BY COUNT(local_authority) DESC",Bar,Medium,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Three Rivers', 'Chiltern', 'Broxbourne', 'Watford', 'Thurrock', 'Brentwood']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Three Rivers, Chiltern, Broxbourne, Watford, Thurrock, Brentwood","3, 3, 2, 1, 1, 1","A bar graph listing the local authorities and how many local authorities provided by all stations, rank from high to low by the the number of local authority."
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY budget ASC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'budget', 'x_data': [['Pol. Sci.', 'Languages', 'English', 'Astronomy', 'Biology', 'History', 'Athletics', 'Math', 'Cybernetics', 'Psychology', 'Finance', 'Physics']], 'y_data': [[573745.09, 601283.6, 611042.66, 617253.94, 647610.55, 699140.86, 734550.7, 777605.11, 794541.46, 848175.04, 866831.75, 942162.76]], 'classify': [], 'describe': ''}",bar,dept_name,budget,"Pol. Sci., Languages, English, Astronomy, Biology, History, Athletics, Math, Cybernetics, Psychology, Finance, Physics","573745.09, 601283.6, 611042.66, 617253.94, 647610.55, 699140.86, 734550.7, 777605.11, 794541.46, 848175.04, 866831.75, 942162.76","Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order total number in asc order."
"SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",Bar,Extra Hard,inn_1,"{'chart': 'bar', 'x_name': 'roomName', 'y_name': 'COUNT(roomName)', 'x_data': [['Harbinger but bequest', 'Frugal not apropos', 'Thrift and accolade', 'Convoke and sanguine']], 'y_data': [[3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY roomName'}",bar,roomName,COUNT(roomName),"Harbinger but bequest, Frugal not apropos, Thrift and accolade, Convoke and sanguine","3, 2, 1, 1","Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, list by the Y-axis in descending."
"SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id ORDER BY County_name ASC",Bar,Hard,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'COUNT(*)', 'x_data': [['Baltimore County', 'Colony', 'Howard', 'Mansfield']], 'y_data': [[2, 2, 3, 1]], 'classify': [], 'describe': ''}",bar,County_name,COUNT(*),"Baltimore County, Colony, Howard, Mansfield","2, 2, 3, 1","Show the name of each county along with the corresponding number of delegates from that county with a bar chart, and sort by the names in ascending."
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY T1.Continent DESC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['europe', 'asia', 'america']], 'y_data': [[11, 7, 4]], 'classify': [], 'describe': ''}",bar,Continent,count(*),"europe, asia, america","11, 7, 4","how many car makers are there in each continents? List the continent name and the count, display by the x axis from high to low."
"SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY AVG(age) DESC",Bar,Medium,department_management,"{'chart': 'bar', 'x_name': 'born_state', 'y_name': 'AVG(age)', 'x_data': [['Alabama', 'California', 'Connecticut', 'Delaware', 'Florida']], 'y_data': [[68, 61.25, 55, 53, 50]], 'classify': [], 'describe': 'GROUP BY born_state'}",bar,born_state,AVG(age),"Alabama, California, Connecticut, Delaware, Florida","68, 61.25, 55, 53, 50","Show the average age of heads of departments born in each state with a bar chart, and could you display y-axis in descending order?"
"SELECT Fname , COUNT(Fname) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY COUNT(Fname) ASC",Bar,Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'COUNT(Fname)', 'x_data': [['Jandy', 'Linda', 'Shiela', 'Stacy', 'Susan', 'Tracy', 'Lisa', 'Sarah']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Fname'}",bar,Fname,COUNT(Fname),"Jandy, Linda, Shiela, Stacy, Susan, Tracy, Lisa, Sarah","1, 1, 1, 1, 1, 1, 2, 2","A bar chart about the number of first name for all female students whose sex is F, and list in asc by the Y."
"SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY count(*) DESC",Bar,Medium,culture_company,"{'chart': 'bar', 'x_name': 'Category', 'y_name': 'count(*)', 'x_data': [['Lesb. M/SF', 'Gay M/SF', 'Gay SF/F']], 'y_data': [[5, 5, 2]], 'classify': [], 'describe': ''}",bar,Category,count(*),"Lesb. M/SF, Gay M/SF, Gay SF/F","5, 5, 2","Show all book categories and the number of books in each category, and sort from high to low by the the total number ."
"SELECT LName , COUNT(LName) FROM Student WHERE Major = 600 GROUP BY LName ORDER BY LName ASC",Bar,Hard,restaurant_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Adams', 'Apap', 'Davis', 'Gompers', 'Jones', 'Kim', 'Kumar', 'Lee', 'Leighton', 'Nelson', 'Norris', 'Pang', 'Schultz', 'Schwartz', 'Smith', 'Tai', 'Wilson']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Adams, Apap, Davis, Gompers, Jones, Kim, Kumar, Lee, Leighton, Nelson, Norris, Pang, Schultz, Schwartz, Smith, Tai, Wilson","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","List how many students in each last name who majored in 600 using a bar chart, and sort by the bars from low to high."
"SELECT Name , Height FROM people ORDER BY Height DESC",Bar,Easy,candidate_poll,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Laurent Capet', 'Stéphane Antiga', 'Dominique Daquin', 'Vincent Montméat', 'Guillaume Samica', 'Frantz Granvorka', 'Philippe Barça-Cysique', 'Loïc De Kergret', 'Hubert Henno']], 'y_data': [[202, 200, 197, 196, 196, 195, 194, 193, 188]], 'classify': [], 'describe': ''}",bar,Name,Height,"Laurent Capet, Stéphane Antiga, Dominique Daquin, Vincent Montméat, Guillaume Samica, Frantz Granvorka, Philippe Barça-Cysique, Loïc De Kergret, Hubert Henno","202, 200, 197, 196, 196, 195, 194, 193, 188","Return a bar chart about the distribution of Name and Height , and show Y-axis in descending order."
"SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'SALARY', 'x_data': [['Kimberely', 'Michael', 'Pat', 'Susan', 'Hermann', 'Shelley', 'William']], 'y_data': [[7000, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,SALARY,"Kimberely, Michael, Pat, Susan, Hermann, Shelley, William","7000, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of  first_name and  salary ."
"SELECT T2.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Winchester', 'Sony', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Creative Labs']], 'y_data': [[6, 1, 4, 3, 5, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Manufacturer),"Winchester, Sony, Iomega, Hewlett-Packard, Fujits, Creative Labs","6, 1, 4, 3, 5, 2","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, rank in desc by the x axis please."
"SELECT Start_from , AVG(Employee_ID) FROM hiring",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 6, 2, 1, 6, 3, 4]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Employee_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 6, 2, 1, 6, 3, 4",Visualize a bar chart about the distribution of  Start_from and the average of Employee_ID bin start_from by weekday.
"SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY count(*) DESC",Bar,Medium,activity_1,"{'chart': 'bar', 'x_name': 'Building', 'y_name': 'count(*)', 'x_data': [['Krieger', 'Barton', 'NEB']], 'y_data': [[20, 20, 18]], 'classify': [], 'describe': ''}",bar,Building,count(*),"Krieger, Barton, NEB","20, 20, 18","Show all the buildings along with the number of faculty members the buildings have Plot them as bar chart, show in descending by the total number."
"SELECT JOB_ID , SUM(SALARY) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(SALARY)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(SALARY),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","8300, 12000, 4400, 24000, 34000, 39600, 12000, 28800, 13000, 6000, 10000, 13900, 11000, 61000, 250500, 64300, 55700, 36400","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the  job_id , and group by attribute job_id."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)  ORDER BY SUM(MANAGER_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Fri', 'Tue', 'Sat', 'Wed', 'Mon', 'Thur', 'Sun']], 'y_data': [[1669, 1684, 1718, 1727, 1845, 1890, 1942]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Fri, Tue, Sat, Wed, Mon, Thur, Sun","1669, 1684, 1718, 1727, 1845, 1890, 1942","For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and display by the Y in ascending."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) DESC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Clothes']], 'y_data': [[796.0416666666665, 715.5366666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Hardware, Clothes","796.0416666666665, 715.5366666666665","What is the average price for each type of product Visualize by bar chart, and display in descending by the the average of product price."
"SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY Class ASC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Class,count(*),"DP/GT, GT","5, 2","Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and list x axis in asc order please."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Wed', 'Thur', 'Tue', 'Fri', 'Sun', 'Sat', 'Mon']], 'y_data': [[1040, 1000, 980, 930, 910, 910, 890]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Wed, Thur, Tue, Fri, Sun, Sat, Mon","1040, 1000, 980, 930, 910, 910, 890","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to sort from high to low by the sum department id."
"SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY COUNT(Comptroller) DESC",Bar,Extra Hard,election,"{'chart': 'bar', 'x_name': 'Comptroller', 'y_name': 'COUNT(Comptroller)', 'x_data': [['Carl McCall', 'John Faso', 'Alan Hevesi']], 'y_data': [[3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Comptroller'}",bar,Comptroller,COUNT(Comptroller),"Carl McCall, John Faso, Alan Hevesi","3, 1, 1","Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a bar chart, and show in desc by the Y."
"SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",Bar,Medium,insurance_policies,"{'chart': 'bar', 'x_name': 'Payment_Method_Code', 'y_name': 'COUNT(Payment_Method_Code)', 'x_data': [['Visa', 'MasterCard', 'Discover Card', 'American Express']], 'y_data': [[4, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Payment_Method_Code'}",bar,Payment_Method_Code,COUNT(Payment_Method_Code),"Visa, MasterCard, Discover Card, American Express","4, 7, 3, 1","Compare the frequency of each payment method code using a bar chart, and could you display x-axis in descending order please?"
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Sat', 'Sun', 'Fri', 'Mon', 'Tue', 'Thur', 'Wed']], 'y_data': [[910, 910, 930, 930, 980, 1000, 1040]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Sat, Sun, Fri, Mon, Tue, Thur, Wed","910, 910, 930, 930, 980, 1000, 1040","For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and list in ascending by the y axis."
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY AVG(Team_ID) DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3.5, 2, 1]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"3–5, 6–2, 8–0","3.5, 2, 1","Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, list in desc by the total number."
"SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = ""stop"" GROUP BY Store_Name",Bar,Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Store_Name', 'y_name': 'COUNT(Store_Name)', 'x_data': [['Bednar Film', 'Kling Workshop', 'Queen Art', 'Warino Photo']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Store_Name'}",bar,Store_Name,COUNT(Store_Name),"Bednar Film, Kling Workshop, Queen Art, Warino Photo","1, 1, 1, 2","What are the names of the workshop groups that have bookings with status code ""stop"", and count them by a bar chart"
"SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY name DESC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'age', 'x_data': [['Lyric', 'Kacey', 'Evangeline']], 'y_data': [[4, 6, 1]], 'classify': [], 'describe': ''}",bar,name,age,"Lyric, Kacey, Evangeline","4, 6, 1","How old is each dog that was abandoned? Show in a bar chart, could you show X-axis from high to low order?"
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Price DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[330, 270, 240, 240, 180, 150, 120, 90, 66, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","330, 270, 240, 240, 180, 150, 120, 90, 66, 5","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, and order y axis in descending order."
"SELECT T2.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[6, 5, 9, 4, 1, 12]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","6, 5, 9, 4, 1, 12","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and the sum of code , and group by attribute name."
"SELECT ACC_Road , AVG(School_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(School_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 4.5]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(School_ID),"8–0, 6–2, 3–5","1, 2, 4.5","Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, order X-axis in descending order please."
"SELECT name , SUM(grade) FROM Highschooler GROUP BY name ORDER BY name DESC",Bar,Medium,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'SUM(grade)', 'x_data': [['Tiffany', 'Logan', 'Kyle', 'Kris', 'Jordan', 'John', 'Jessica', 'Haley', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,SUM(grade),"Tiffany, Logan, Kyle, Kris, Jordan, John, Jessica, Haley, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","9, 12, 12, 10, 21, 12, 11, 10, 20, 9, 10, 11, 10, 11","Show the names and the total grades of each high schooler by a bar chart, sort in desc by the name."
"SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id",Bar,Medium,apartment_rentals,"{'chart': 'bar', 'x_name': 'booking_start_date', 'y_name': 'COUNT(booking_start_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 2, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'BIN booking_start_date BY WEEKDAY'}",bar,booking_start_date,COUNT(booking_start_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 2, 1, 1, 2, 4, 1",Show the number of apartment bookings for each weekday and bin booking start date by weekday interval in a bar chart.
"SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY COUNT(Start_from) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Tue', 'Wed', 'Thur', 'Sun', 'Sat', 'Fri', 'Mon']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Tue, Wed, Thur, Sun, Sat, Fri, Mon","2, 1, 1, 1, 1, 1, 0","Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart, and sort from high to low by the Y."
"SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = ""stop"" GROUP BY Store_Name ORDER BY Store_Name ASC",Bar,Extra Hard,cre_Drama_Workshop_Groups,"{'chart': 'bar', 'x_name': 'Store_Name', 'y_name': 'COUNT(Store_Name)', 'x_data': [['Bednar Film', 'Kling Workshop', 'Queen Art', 'Warino Photo']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Store_Name'}",bar,Store_Name,COUNT(Store_Name),"Bednar Film, Kling Workshop, Queen Art, Warino Photo","1, 1, 1, 2","What are the number of the names of the workshop groups that have bookings with status code ""stop""?, and list bars from low to high order."
"SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20  ORDER BY COUNT(date_became_customer) DESC",Bar,Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'date_became_customer', 'y_name': 'COUNT(date_became_customer)', 'x_data': [['Thur', 'Sun', 'Sat', 'Mon', 'Wed', 'Tue', 'Fri']], 'y_data': [[3, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_became_customer BY WEEKDAY'}",bar,date_became_customer,COUNT(date_became_customer),"Thur, Sun, Sat, Mon, Wed, Tue, Fri","3, 1, 1, 1, 0, 0, 0","A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, list the number of date became customer in descending order."
"SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code",Bar,Easy,customers_campaigns_ecommerce,"{'chart': 'bar', 'x_name': 'outcome_code', 'y_name': 'count(*)', 'x_data': [['No Response', 'Order']], 'y_data': [[5, 10]], 'classify': [], 'describe': ''}",bar,outcome_code,count(*),"No Response, Order","5, 10",Show me the total number by outcome code in a histogram
"SELECT apt_number , room_count FROM Apartments ORDER BY room_count DESC",Bar,Easy,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'room_count', 'x_data': [['Suite 693', 'Suite 307', 'Apt. 411', 'Apt. 187', 'Suite 749', 'Suite 634', 'Apt. 940', 'Apt. 837', 'Suite 645', 'Apt. 908', 'Suite 088', 'Apt. 859', 'Apt. 585', 'Apt. 794', 'Apt. 477']], 'y_data': [[9, 9, 9, 9, 8, 8, 8, 8, 7, 7, 6, 6, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,apt_number,room_count,"Suite 693, Suite 307, Apt. 411, Apt. 187, Suite 749, Suite 634, Apt. 940, Apt. 837, Suite 645, Apt. 908, Suite 088, Apt. 859, Apt. 585, Apt. 794, Apt. 477","9, 9, 9, 9, 8, 8, 8, 8, 7, 7, 6, 6, 5, 3, 3","Show me a bar chart for what are the apartment number and the room count of each apartment?, and could you show y axis from high to low order please?"
"SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY Fname DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'count(*)', 'x_data': [['Yair', 'Steven', 'Stacey', 'Scott', 'Russell', 'Robert', 'Michael', 'Mark', 'Luigi', 'Louis', 'Leslie', 'Lawrence', 'Joanne', 'Ellie', 'David', 'Daniel', 'Cheng', 'Alan']], 'y_data': [[3, 2, 3, 3, 2, 1, 3, 3, 2, 2, 1, 2, 2, 1, 3, 3, 2, 2]], 'classify': [], 'describe': ''}",bar,Fname,count(*),"Yair, Steven, Stacey, Scott, Russell, Robert, Michael, Mark, Luigi, Louis, Leslie, Lawrence, Joanne, Ellie, David, Daniel, Cheng, Alan","3, 2, 3, 3, 2, 1, 3, 3, 2, 2, 1, 2, 2, 1, 3, 3, 2, 2","A bar chart showing the first name of all the faculty members who participated in some activity, together with the number of activities they participated in, and show by the x-axis in desc."
"SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(Product_Type_Code) DESC",Bar,Medium,solvency_ii,"{'chart': 'bar', 'x_name': 'Product_Type_Code', 'y_name': 'COUNT(Product_Type_Code)', 'x_data': [['Food', 'Electronics', 'Books', 'Clothes']], 'y_data': [[5, 4, 4, 2]], 'classify': [], 'describe': 'GROUP BY Product_Type_Code'}",bar,Product_Type_Code,COUNT(Product_Type_Code),"Food, Electronics, Books, Clothes","5, 4, 4, 2","Compare the total number of different product type codes, and I want to sort how many product type code from high to low order."
"SELECT Trade_Name , id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id",Bar,Easy,medicine_enzyme_interaction,"{'chart': 'bar', 'x_name': 'Trade_Name', 'y_name': 'id', 'x_data': [['Abilify', 'Saphris']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Trade_Name,id,"Abilify, Saphris","2, 3",Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description ASC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Published Research Paper', 'Research Patent']], 'y_data': [[10, 5]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Published Research Paper, Research Patent","10, 5","What are the descriptions of all the project outcomes, and count them by a bar chart, and rank bars from low to high order."
"SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code",Bar,Easy,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(crs_credit)', 'x_data': [['ACCT', 'CIS']], 'y_data': [[6, 14]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(crs_credit),"ACCT, CIS","6, 14",How many credits does the department offer. Show bar chart.
"SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Flag', 'y_name': 'count(*)', 'x_data': [['Malta', 'Panama']], 'y_data': [[1, 8]], 'classify': [], 'describe': ''}",bar,Flag,count(*),"Malta, Panama","1, 8","Show the total number from each flag, could you display bar from low to high order?"
"SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = ""Fanny""  ORDER BY COUNT(date_of_notes) ASC",Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_of_notes', 'y_name': 'COUNT(date_of_notes)', 'x_data': [['Fri', 'Mon', 'Sat', 'Sun', 'Wed', 'Thur', 'Tue']], 'y_data': [[0, 0, 0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_of_notes BY WEEKDAY'}",bar,date_of_notes,COUNT(date_of_notes),"Fri, Mon, Sat, Sun, Wed, Thur, Tue","0, 0, 0, 0, 0, 1, 1","Find the number of the dates of assessment notes for students with first name ""Fanny"", display by the y axis in ascending."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code ORDER BY avg(product_price) ASC",Bar,Medium,department_store,"{'chart': 'bar', 'x_name': 'product_type_code', 'y_name': 'avg(product_price)', 'x_data': [['Clothes', 'Hardware']], 'y_data': [[715.5366666666665, 796.0416666666665]], 'classify': [], 'describe': ''}",bar,product_type_code,avg(product_price),"Clothes, Hardware","715.5366666666665, 796.0416666666665","What is the average price for each type of product Visualize by bar chart, list by the Y-axis in asc."
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69","Show sum transaction amount from each transaction type, could you order in ascending by the X?"
"SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY count(*) DESC",Bar,Hard,storm_record,"{'chart': 'bar', 'x_name': 'Region_name', 'y_name': 'count(*)', 'x_data': [['Albania', 'Afghanistan', 'Denmark', 'Algeria']], 'y_data': [[2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Region_name,count(*),"Albania, Afghanistan, Denmark, Algeria","2, 2, 1, 1","Show the name for regions and the number of storms for each region by a bar chart, and display in descending by the Y please."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'PU_MAN', 'SA_MAN', 'HR_REP', 'AC_MGR', 'ST_MAN', 'IT_PROG', 'PU_CLERK', 'FI_ACCOUNT', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 114, 148, 203, 205, 244, 315, 348, 445, 1219, 1706, 2142]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, PU_MAN, SA_MAN, HR_REP, AC_MGR, ST_MAN, IT_PROG, PU_CLERK, FI_ACCOUNT, ST_CLERK, SH_CLERK, SA_REP","100, 114, 148, 203, 205, 244, 315, 348, 445, 1219, 1706, 2142","For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and could you rank in asc by the sum employee id?"
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'MK_MAN', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_VP', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 203, 108, 111, 101.5, 100, 200, 205, 206]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_MAN, PU_CLERK, PR_REP, MK_REP, MK_MAN, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_VP, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","122, 134.5, 189.5, 164.5, 147, 114, 117, 204, 202, 201, 105, 203, 108, 111, 101.5, 100, 200, 205, 206","For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and rank from high to low by the names."
"SELECT name , partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid ORDER BY partitionid DESC",Bar,Medium,twitter_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'partitionid', 'x_data': [['Black Widow\n', 'Tyler Swift']], 'y_data': [[23, 10]], 'classify': [], 'describe': ''}",bar,name,partitionid,"Black Widow
, Tyler Swift","23, 10","Find the name and partition id for users who tweeted less than twice Show bar chart, rank by the y-axis in descending."
"SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5",Bar,Hard,college_3,"{'chart': 'bar', 'x_name': 'CName', 'y_name': 'COUNT(CName)', 'x_data': [['ALGORITHMS I', 'APPLIED STATISTICS AND DATA ANALYSIS', 'CIRCUITS', 'COMBINATORIAL ANALYSIS', 'COMPUTER SYSTEM FUNDAMENTALS', 'COMPUTER VISION', 'DATA STRUCTURES in JAVA', 'DATABASE SYSTEMS', 'DISTRIBUTED SYSTEMS', 'EXPLORING THE INTERNET', 'INTRO TO NATURAL LANGUAGE PROCESSING', 'INTRO TO PROGRAMMING IN JAVA', 'INTRODUCTION TO PROBABILITY', 'MULTIMEDIA COMPUTING', 'QUANTITATIVE MEDICAL COMPUTING', 'SUPERCOMPUTING']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY CName'}",bar,CName,COUNT(CName),"ALGORITHMS I, APPLIED STATISTICS AND DATA ANALYSIS, CIRCUITS, COMBINATORIAL ANALYSIS, COMPUTER SYSTEM FUNDAMENTALS, COMPUTER VISION, DATA STRUCTURES in JAVA, DATABASE SYSTEMS, DISTRIBUTED SYSTEMS, EXPLORING THE INTERNET, INTRO TO NATURAL LANGUAGE PROCESSING, INTRO TO PROGRAMMING IN JAVA, INTRODUCTION TO PROBABILITY, MULTIMEDIA COMPUTING, QUANTITATIVE MEDICAL COMPUTING, SUPERCOMPUTING","1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1",Give the number of each course name with at least five enrollments. Return a bar chart.
"SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor",Bar,Easy,inn_1,"{'chart': 'bar', 'x_name': 'decor', 'y_name': 'avg(basePrice)', 'x_data': [['modern', 'rustic', 'traditional']], 'y_data': [[112.5, 162.5, 187.5]], 'classify': [], 'describe': ''}",bar,decor,avg(basePrice),"modern, rustic, traditional","112.5, 162.5, 187.5",What is the average price of the rooms for each different decor? Show me a bar chart!
"SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY COUNT(AllergyType) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'COUNT(AllergyType)', 'x_data': [['environmental', 'animal', 'food']], 'y_data': [[3, 4, 7]], 'classify': [], 'describe': 'GROUP BY AllergyType'}",bar,AllergyType,COUNT(AllergyType),"environmental, animal, food","3, 4, 7","Create a bar chart showing how many allergytype across allergytype, and show Y from low to high order."
"SELECT T2.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Price)', 'x_data': [['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester']], 'y_data': [[450, 240, 486, 150, 240, 125]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Price),"Creative Labs, Fujits, Hewlett-Packard, Iomega, Sony, Winchester","450, 240, 486, 150, 240, 125","For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of price , and group by attribute name in a bar chart, show x axis in asc order please."
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Take for a Walk', 'Physical examination', 'Vaccination']], 'y_data': [[2392, 2429, 2540]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,SUM(cost_of_treatment),"Take for a Walk, Physical examination, Vaccination","2392, 2429, 2540","What are the cost and treatment type description of each treatment, order in asc by the y axis."
"SELECT PHONE_NUMBER , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'DEPARTMENT_ID', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,DEPARTMENT_ID,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of  phone_number and  department_id ."
"SELECT Type , COUNT(Type) FROM ship GROUP BY Type ORDER BY COUNT(Type) DESC",Bar,Medium,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[5, 3]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Cargo ship, Battle ship","5, 3","Show me how many type by type in a histogram, and sort by the y axis in desc."
"SELECT PetType , max(pet_age) FROM pets GROUP BY PetType ORDER BY max(pet_age) ASC",Bar,Easy,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'max(pet_age)', 'x_data': [['dog', 'cat']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,PetType,max(pet_age),"dog, cat","2, 3","What is the maximum age for each pet type? Please show me a bar chart, and show y-axis from low to high order."
"SELECT Team , COUNT(Team) FROM elimination GROUP BY Team",Bar,Easy,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(Team)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Team'}",bar,Team,COUNT(Team),"Team Batista, Team Orton","4, 2",Show the number of teams in elimination in a bar chart.
"SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T1.Price)', 'x_data': [['Creative Labs', 'Iomega', 'Hewlett-Packard', 'Fujits', 'Sony']], 'y_data': [[150, 150, 162, 240, 240]], 'classify': [], 'describe': ''}",bar,Name,avg(T1.Price),"Creative Labs, Iomega, Hewlett-Packard, Fujits, Sony","150, 150, 162, 240, 240","Draw a bar chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, and rank y axis from low to high order."
"SELECT Team , COUNT(Team) FROM elimination GROUP BY Team",Bar,Easy,wrestler,"{'chart': 'bar', 'x_name': 'Team', 'y_name': 'COUNT(Team)', 'x_data': [['Team Batista', 'Team Orton']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Team'}",bar,Team,COUNT(Team),"Team Batista, Team Orton","4, 2",Visualize a bar chart for what is the number of their teams in elimination?
"SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype",Bar,Easy,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[4, 3, 7]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","4, 3, 7",What are the allergy types and how many allergies correspond to each one. 
"SELECT HIRE_DATE , SUM(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21'  ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['Oct', 'June', 'July', 'Aug', 'Sept']], 'y_data': [[206, 1491, 3999, 4960, 5715]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(EMPLOYEE_ID),"Oct, June, July, Aug, Sept","206, 1491, 3999, 4960, 5715","For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, could you list by the y axis from low to high?"
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Wed', 'Thur', 'Mon', 'Tue', 'Sun', 'Sat', 'Fri']], 'y_data': [[2, 2, 2, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Wed, Thur, Mon, Tue, Sun, Sat, Fri","2, 2, 2, 1, 1, 0, 0","Find the enrollment date for all the tests that have ""Pass"" result, and count them by a bar chart, and sort by the total number in desc."
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",Bar,Medium,musical,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['The Phantom of the Opera', 'Les Misérables', 'West Side Story', 'The Book of Mormon']], 'y_data': [[2, 2, 1, 4]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"The Phantom of the Opera, Les Misérables, West Side Story, The Book of Mormon","2, 2, 1, 4",How many actors have appeared in each musical. Plot them as bar chart.
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC",Bar,Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['2015', '2016']], 'y_data': [[9, 4]], 'classify': [], 'describe': 'BIN date_moved_in BY YEAR'}",bar,date_moved_in,COUNT(date_moved_in),"2015, 2016","9, 4","What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Year interval, sort from high to low by the the number of date moved in."
"SELECT HIRE_DATE , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['Mon', 'Sat', 'Sun', 'Fri', 'Tue', 'Thur', 'Wed']], 'y_data': [[890, 910, 910, 930, 980, 1000, 1040]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(DEPARTMENT_ID),"Mon, Sat, Sun, Fri, Tue, Thur, Wed","890, 910, 910, 930, 980, 1000, 1040","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and could you rank in asc by the total number?"
"SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_TITLE', 'y_name': 'AVG(salary)', 'x_data': [['President', 'Administration Vice President', 'Marketing Manager', 'Sales Manager', 'Finance Manager', 'Accounting Manager', 'Purchasing Manager', 'Public Relations Representative', 'Sales Representative', 'Public Accountant', 'Accountant', 'Stock Manager', 'Human Resources Representative', 'Marketing Representative', 'Programmer', 'Administration Assistant', 'Shipping Clerk', 'Stock Clerk', 'Purchasing Clerk']], 'y_data': [[24000, 17000, 13000, 12200, 12000, 12000, 11000, 10000, 8350, 8300, 7920, 7280, 6500, 6000, 5760, 4400, 3215, 2785, 2780]], 'classify': [], 'describe': ''}",bar,JOB_TITLE,AVG(salary),"President, Administration Vice President, Marketing Manager, Sales Manager, Finance Manager, Accounting Manager, Purchasing Manager, Public Relations Representative, Sales Representative, Public Accountant, Accountant, Stock Manager, Human Resources Representative, Marketing Representative, Programmer, Administration Assistant, Shipping Clerk, Stock Clerk, Purchasing Clerk","24000, 17000, 13000, 12200, 12000, 12000, 11000, 10000, 8350, 8300, 7920, 7280, 6500, 6000, 5760, 4400, 3215, 2785, 2780","Display a bar chart for what is the average salary for each job title?, and show in descending by the the average of salary."
"SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender ORDER BY sum(student_capacity) ASC",Bar,Medium,dorm_1,"{'chart': 'bar', 'x_name': 'gender', 'y_name': 'sum(student_capacity)', 'x_data': [['M', 'F', 'X']], 'y_data': [[116, 128, 1136]], 'classify': [], 'describe': ''}",bar,gender,sum(student_capacity),"M, F, X","116, 128, 1136","Find total capacity of dorms for each gender in a bar chart, and I want to sort y-axis in ascending order."
"SELECT T2.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY T2.Revenue DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Revenue)', 'x_data': [['Iomega', 'Fujits', 'Sony', 'Creative Labs', 'Hewlett-Packard', 'Winchester']], 'y_data': [[200, 130, 120, 100, 50, 30]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Revenue),"Iomega, Fujits, Sony, Creative Labs, Hewlett-Packard, Winchester","200, 130, 120, 100, 50, 30","For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, could you show y-axis in desc order?"
"SELECT T2.name , T1.category_id FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id ORDER BY T2.name DESC",Bar,Medium,sakila_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'category_id', 'x_data': [['Travel', 'Sports', 'Sci-Fi', 'New', 'Music', 'Horror', 'Games', 'Foreign', 'Family', 'Drama', 'Documentary', 'Comedy', 'Classics', 'Children', 'Animation', 'Action']], 'y_data': [[16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,category_id,"Travel, Sports, Sci-Fi, New, Music, Horror, Games, Foreign, Family, Drama, Documentary, Comedy, Classics, Children, Animation, Action","16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1","What are the names and ids of the different categories? Show me the bar chart, and I want to show in descending by the names."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""  ORDER BY COUNT(date_of_enrolment) DESC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['Thur', 'Wed', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri']], 'y_data': [[2, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date_of_enrolment BY WEEKDAY'}",bar,date_of_enrolment,COUNT(date_of_enrolment),"Thur, Wed, Tue, Sun, Sat, Mon, Fri","2, 0, 0, 0, 0, 0, 0","Find the the date of enrollment of the ""Spanish"" course, and count them by a bar chart, and order Y-axis in descending order."
"SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY outcome_description DESC",Bar,Hard,tracking_grants_for_research,"{'chart': 'bar', 'x_name': 'outcome_description', 'y_name': 'COUNT(outcome_description)', 'x_data': [['Research Patent', 'Published Research Paper']], 'y_data': [[5, 10]], 'classify': [], 'describe': 'GROUP BY outcome_description'}",bar,outcome_description,COUNT(outcome_description),"Research Patent, Published Research Paper","5, 10","What are the number of the descriptions of all the project outcomes?, and sort in descending by the names."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'FI_MGR', 'HR_REP', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_MAN', 'AD_VP', 'FI_ACCOUNT', 'IT_PROG', 'PU_CLERK', 'SA_MAN', 'ST_MAN', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5, 5, 5, 20, 20, 30]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, FI_MGR, HR_REP, MK_MAN, MK_REP, PR_REP, PU_MAN, AD_VP, FI_ACCOUNT, IT_PROG, PU_CLERK, SA_MAN, ST_MAN, SH_CLERK, ST_CLERK, SA_REP","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5, 5, 5, 20, 20, 30","For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and order y-axis from low to high order."
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType",Bar,Easy,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'count(*)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[2, 4, 4]], 'classify': [], 'describe': ''}",bar,bedType,count(*),"Double, King, Queen","2, 4, 4",Create a bar chart showing the total number across bedtype
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY SUM(MANAGER_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['Aug', 'Sept', 'July', 'June', 'Oct']], 'y_data': [[4314, 3640, 3610, 1355, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"Aug, Sept, July, June, Oct","4314, 3640, 3610, 1355, 205","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, order in descending by the y-axis."
"SELECT LAST_NAME , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY DEPARTMENT_ID ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Grant', 'Fay', 'Hartstein', 'Mavris', 'Baer', 'Gietz', 'Higgins']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,LAST_NAME,DEPARTMENT_ID,"Grant, Fay, Hartstein, Mavris, Baer, Gietz, Higgins","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the last_name by a bar chart, and could you rank from low to high by the DEPARTMENT_ID please?"
"SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'COUNT(HIRE_DATE)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 4, 1, 1, 3, 0]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,COUNT(HIRE_DATE),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 4, 1, 1, 3, 0",Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart.
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","110, 110, 10, 90, 180, 500, 100, 300, 20, 20, 70, 150, 30, 400, 2320, 1000, 1000, 250","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and display by the bar in asc."
"SELECT time , COUNT(time) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = ""Chiltern"" GROUP BY time ORDER BY time DESC",Bar,Extra Hard,station_weather,"{'chart': 'bar', 'x_name': 'time', 'y_name': 'COUNT(time)', 'x_data': [['22:10', '21:49', '17:15', '16:59', '06:30', '04:55']], 'y_data': [[2, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY time'}",bar,time,COUNT(time),"22:10, 21:49, 17:15, 16:59, 06:30, 04:55","2, 1, 1, 2, 1, 1","Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, I want to rank by the X from high to low."
"SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,college_2,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Animal Behavior', 'Elastic Structures', 'Embedded Systems', 'Marine Mammals', 'Networking', 'Race Car Driving', 'Surfing', 'Transaction Processing', 'World History']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Animal Behavior, Elastic Structures, Embedded Systems, Marine Mammals, Networking, Race Car Driving, Surfing, Transaction Processing, World History","1, 2, 1, 1, 1, 1, 1, 1, 1","How many instructors for every course in 2008? Show me a bar chart grouping by course title, could you order from low to high by the X?"
"SELECT Name , Code FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Code DESC",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Toner cartridge', 'CD drive', 'Memory']], 'y_data': [[9, 7, 2]], 'classify': [], 'describe': ''}",bar,Name,Code,"Toner cartridge, CD drive, Memory","9, 7, 2","For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and code , and display Code in desc order."
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY T1.Continent DESC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['europe', 'asia', 'america']], 'y_data': [[11, 7, 4]], 'classify': [], 'describe': ''}",bar,Continent,count(*),"europe, asia, america","11, 7, 4","A bar chart about what is the name of each continent and how many car makers are there in each one?, show by the X-axis in desc."
"SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",Bar,Medium,epinions_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Helen', 'Mark']], 'y_data': [[3, 4]], 'classify': [], 'describe': ''}",bar,name,count(*),"Helen, Mark","3, 4","For each user, find their name and the number of reviews written by them. Show bar chart."
"SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state",Bar,Medium,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'COUNT(state)', 'x_data': [['CA', 'NJ\n', 'NY']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,COUNT(state),"CA, NJ
, NY","1, 1, 2",Group by distinct states and them count them in a bar chart.
"SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank ORDER BY Rank DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Professor', 'AsstProf', 'AssocProf']], 'y_data': [[14, 18, 2]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Professor, AsstProf, AssocProf","14, 18, 2","How many students are advised by each rank of faculty? List the rank and the number of students Plot them as bar chart, and could you show by the Rank from high to low?"
"SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'COUNT(Founder)', 'x_data': [['Robert', 'Owen', 'Mary', 'John', 'James', 'Andy']], 'y_data': [[2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,COUNT(Founder),"Robert, Owen, Mary, John, James, Andy","2, 3, 1, 1, 3, 1","For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the amount of founder , and group by attribute founder, display in descending by the Founder."
"SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY PROF_OFFICE ORDER BY PROF_OFFICE DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'PROF_OFFICE', 'y_name': 'COUNT(PROF_OFFICE)', 'x_data': [['KLR 300', 'KLR 244', 'KLR 229D', 'KLR 211', 'KLR 203E', 'BBG 208']], 'y_data': [[2, 2, 2, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY PROF_OFFICE'}",bar,PROF_OFFICE,COUNT(PROF_OFFICE),"KLR 300, KLR 244, KLR 229D, KLR 211, KLR 203E, BBG 208","2, 2, 2, 3, 3, 1","How many courses for each office? Show me a bar chart, could you show by the x-axis in desc please?"
"SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin"" GROUP BY Date ORDER BY COUNT(Date) ASC",Bar,Extra Hard,performance_attendance,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'COUNT(Date)', 'x_data': [['February 11', 'February 5', 'February 2']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Date'}",bar,Date,COUNT(Date),"February 11, February 5, February 2","1, 1, 2","A bar chart for showing the number of the dates of performances with attending members whose roles are ""Violin"", could you list how many date in asc order please?"
"SELECT T1.role_code , COUNT(T1.role_code) FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.role_code",Bar,Extra Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'COUNT(role_code)', 'x_data': [['Employee', 'Veterenarian']], 'y_data': [[5, 2]], 'classify': [], 'describe': 'GROUP BY role_code'}",bar,role_code,COUNT(role_code),"Employee, Veterenarian","5, 2",How many professionals did not operate any treatment on dogs for each role? Draw a bar chart.
"SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(SALARY)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[6500, 10000, 12000, 15300, 0, 13000, 6000]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,SUM(SALARY),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","6500, 10000, 12000, 15300, 0, 13000, 6000","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of  hire_date and the sum of salary bin hire_date by weekday."
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) DESC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['T', 'F']], 'y_data': [[19, 9]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"T, F","19, 9","Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, list by the total number in descending please."
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY AVG(Shop_ID) ASC",Bar,Medium,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 1, 1, 2, 4, 5.5, 8]], 'classify': [], 'describe': 'BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 1, 1, 2, 4, 5.5, 8","Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart, could you order by the y-axis from low to high?"
"SELECT T2.Headquarter , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Headquarter ORDER BY T2.Headquarter ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Code)', 'x_data': [['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo']], 'y_data': [[6, 4, 9, 12, 5, 1]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Code),"Austin, Beijing, Los Angeles, Paris, Taiwan, Tokyo","6, 4, 9, 12, 5, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and display in asc by the Headquarter."
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id ORDER BY T1.course_id DESC",Bar,Medium,student_transcripts_tracking,"{'chart': 'bar', 'x_name': 'course_name', 'y_name': 'course_id', 'x_data': [['pl', 'db', 'ml', 'dl', 'nlp', 'cal', 'la', 'fr', 'en', 'math', 'ds']], 'y_data': [[14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1]], 'classify': [], 'describe': ''}",bar,course_name,course_id,"pl, db, ml, dl, nlp, cal, la, fr, en, math, ds","14, 12, 10, 9, 8, 7, 6, 5, 4, 2, 1","what are the names and id of courses having at most 2 sections?, and I want to sort in desc by the y-axis."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122","For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the  job_id , and group by attribute job_id by a bar chart."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Manufacturer)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 5, 6, 5, 6, 1, 3, 3, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Manufacturer),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 5, 6, 5, 6, 1, 3, 3, 4","For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the  name , and group by attribute name by a bar chart."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) GROUP BY JOB_ID ORDER BY JOB_ID DESC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['ST_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP', 'SA_MAN', 'PU_CLERK', 'PR_REP', 'MK_REP', 'IT_PROG', 'HR_REP', 'FI_MGR', 'FI_ACCOUNT', 'AD_PRES', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[50, 50, 50, 77.24137931034483, 80, 30, 70, 20, 60, 40, 100, 100, 90, 110, 110]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"ST_MAN, ST_CLERK, SH_CLERK, SA_REP, SA_MAN, PU_CLERK, PR_REP, MK_REP, IT_PROG, HR_REP, FI_MGR, FI_ACCOUNT, AD_PRES, AC_MGR, AC_ACCOUNT","50, 50, 50, 77.24137931034483, 80, 30, 70, 20, 60, 40, 100, 100, 90, 110, 110","For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, sort by the names in descending please."
"SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY SUM(Revenue) ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'SUM(Revenue)', 'x_data': [['Paris', 'Tokyo', 'Taiwan', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[60, 120, 130, 150, 200, 300]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,SUM(Revenue),"Paris, Tokyo, Taiwan, Los Angeles, Beijing, Austin","60, 120, 130, 150, 200, 300","For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter, rank total number from low to high order."
"SELECT other_details , resident_id FROM Residents ORDER BY other_details DESC",Bar,Easy,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'other_details', 'y_name': 'resident_id', 'x_data': [['Tiffany Jaskolski', 'Terrill Bernhard', 'Prof. Nasir Hoppe', 'Mrs. Raphaelle Fisher', 'Miss Alanis Lockman', 'Loy Walter', 'Jess Wyman', 'Jacques Glover II', 'Elroy Schuster', 'Cassie Johnson', 'Anderson Batz']], 'y_data': [[47, 67, 45, 87, 28, 83, 23, 88, 43, 90, 6]], 'classify': [], 'describe': ''}",bar,other_details,resident_id,"Tiffany Jaskolski, Terrill Bernhard, Prof. Nasir Hoppe, Mrs. Raphaelle Fisher, Miss Alanis Lockman, Loy Walter, Jess Wyman, Jacques Glover II, Elroy Schuster, Cassie Johnson, Anderson Batz","47, 67, 45, 87, 28, 83, 23, 88, 43, 90, 6","Just list the resident id and details in a bar chart, rank in descending by the bars."
"SELECT T2.first_name , T1.teacher_id FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id ORDER BY count(*) DESC LIMIT 3",Bar,Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'teacher_id', 'x_data': [['Trystan', 'Citlalli', 'Woodrow']], 'y_data': [[3, 6, 9]], 'classify': [], 'describe': ''}",bar,first_name,teacher_id,"Trystan, Citlalli, Woodrow","3, 6, 9",Find the ids and first names of the 3 teachers that have the most number of assessment notes. Show bar chart.
"SELECT Is_full_time , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Employee_ID)', 'x_data': [['F', 'T']], 'y_data': [[9, 19]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Employee_ID),"F, T","9, 19","Find  Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart."
"SELECT HIRE_DATE , AVG(EMPLOYEE_ID) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)  ORDER BY AVG(EMPLOYEE_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['Fri', 'Thur', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed']], 'y_data': [[0, 192, 201, 202, 203, 204, 205]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(EMPLOYEE_ID),"Fri, Thur, Sat, Sun, Mon, Tue, Wed","0, 192, 201, 202, 203, 204, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, list by the Y from low to high please."
"SELECT Class , count(*) FROM race GROUP BY CLASS",Bar,Easy,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'count(*)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': ''}",bar,Class,count(*),"DP/GT, GT","5, 2","Visualize a bar chart for what are the different classes of races, and how many races correspond to each?"
"SELECT Name , Age FROM editor ORDER BY Age ASC",Bar,Easy,journal_committee,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Szymon Wydra', 'Marek Siudym', 'Władysław Grzywna', 'Mariusz Zalejski', 'Kamila Porczyk', 'Anna Powierza', 'Maria Góralczyk', 'Piotr Pręgowski', 'Grażyna Wolszczak']], 'y_data': [[20, 21, 24, 25, 34, 35, 38, 43, 54]], 'classify': [], 'describe': ''}",bar,Name,Age,"Szymon Wydra, Marek Siudym, Władysław Grzywna, Mariusz Zalejski, Kamila Porczyk, Anna Powierza, Maria Góralczyk, Piotr Pręgowski, Grażyna Wolszczak","20, 21, 24, 25, 34, 35, 38, 43, 54","What are the names and ages of editors? Show me a bar chart, and sort Y-axis in ascending order please."
"SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY Name DESC",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(*)', 'x_data': [['Vicente Carretero', 'Lucy Wong', 'Kearsley Brown', 'Gustaaf Deloor', 'Anne Walker']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,COUNT(*),"Vicente Carretero, Lucy Wong, Kearsley Brown, Gustaaf Deloor, Anne Walker","1, 1, 1, 1, 2","Show names of teachers and the number of courses they teach with a bar chart, and I want to sort x axis from high to low order."
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'MK_MAN', 'MK_REP', 'HR_REP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, MK_MAN, MK_REP, HR_REP, PR_REP, AC_MGR, AC_ACCOUNT","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of  job_id and  department_id ."
"SELECT All_Home , SUM(School_ID) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'SUM(School_ID)', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[5, 5, 2]], 'classify': [], 'describe': 'GROUP BY All_Home'}",bar,All_Home,SUM(School_ID),"14–2, 14–3, 15–1","5, 5, 2","Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and order All_Home from low to high order please."
"SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class ASC",Bar,Medium,race_track,"{'chart': 'bar', 'x_name': 'Class', 'y_name': 'COUNT(Class)', 'x_data': [['DP/GT', 'GT']], 'y_data': [[5, 2]], 'classify': [], 'describe': 'GROUP BY Class'}",bar,Class,COUNT(Class),"DP/GT, GT","5, 2","Create a bar chart showing how many class across class, show by the X-axis in ascending."
"SELECT building , avg(capacity) FROM classroom GROUP BY building",Bar,Easy,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'avg(capacity)', 'x_data': [['Alumni', 'Bronfman', 'Chandler', 'Drown', 'Fairchild', 'Garfield', 'Gates', 'Grace', 'Lambea', 'Lamberton', 'Main', 'Nassa', 'Painter', 'Polya', 'Power', 'Rathbone', 'Saucon', 'Stabler', 'Taylor', 'Whitman']], 'y_data': [[36.5, 12, 10.5, 18, 27, 59, 37.5, 34, 51, 10, 26, 92, 97, 28, 11, 60, 49.33333333333334, 113, 93, 76]], 'classify': [], 'describe': ''}",bar,building,avg(capacity),"Alumni, Bronfman, Chandler, Drown, Fairchild, Garfield, Gates, Grace, Lambea, Lamberton, Main, Nassa, Painter, Polya, Power, Rathbone, Saucon, Stabler, Taylor, Whitman","36.5, 12, 10.5, 18, 27, 59, 37.5, 34, 51, 10, 26, 92, 97, 28, 11, 60, 49.33333333333334, 113, 93, 76",Find the average capacity among rooms in each building with a bar chart.
"SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY name DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Kyle', 'John', 'Jessica', 'Gabriel', 'Cassandra', 'Brittany', 'Austin', 'Andrew', 'Alexis']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Kyle, John, Jessica, Gabriel, Cassandra, Brittany, Austin, Andrew, Alexis","1, 1, 1, 2, 1, 1, 1, 1, 1","Show me the frequency of names of high schoolers who have likes with a bar chart, rank x-axis from high to low order."
"SELECT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC",Bar,Medium,voter_1,"{'chart': 'bar', 'x_name': 'state', 'y_name': 'COUNT(state)', 'x_data': [['NY', 'NJ\n', 'CA']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY state'}",bar,state,COUNT(state),"NY, NJ
, CA","2, 1, 1","List the states of all votes, group states and count them in a bar chart, display y-axis in desc order please."
"SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY building DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'building', 'y_name': 'COUNT(building)', 'x_data': [['Wrigley', 'Whitman', 'Thompson', 'Taylor', 'Palmer', 'Mercer', 'Linderman', 'Candlestick', 'Bronfman', 'Brodhead']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY building'}",bar,building,COUNT(building),"Wrigley, Whitman, Thompson, Taylor, Palmer, Mercer, Linderman, Candlestick, Bronfman, Brodhead","1, 1, 1, 2, 1, 1, 1, 2, 1, 1","Give the number of departments with greater than average budget in each building with a bar chart, I want to show X-axis from high to low order please."
"SELECT Year , COUNT(Year) FROM cars_data where weight between 3000 and 4000  ORDER BY COUNT(Year) DESC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sat', 'Mon', 'Fri', 'Wed', 'Sun']], 'y_data': [[3, 2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sat, Mon, Fri, Wed, Sun","3, 2, 2, 2, 2, 1, 1","In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart, and order by the Y in desc."
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Code)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[5, 28, 1, 3, 23, 6]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Code),"Andy, James, John, Mary, Owen, Robert","5, 28, 1, 3, 23, 6","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  founder and the sum of code , and group by attribute founder."
"SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'COUNT(JOB_ID)', 'x_data': [['SA_REP', 'ST_CLERK', 'SH_CLERK', 'ST_MAN', 'SA_MAN', 'PU_CLERK', 'IT_PROG', 'FI_ACCOUNT', 'AD_VP', 'PU_MAN', 'PR_REP', 'MK_REP', 'MK_MAN', 'FI_MGR', 'AD_PRES', 'AD_ASST', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,COUNT(JOB_ID),"SA_REP, ST_CLERK, SH_CLERK, ST_MAN, SA_MAN, PU_CLERK, IT_PROG, FI_ACCOUNT, AD_VP, PU_MAN, PR_REP, MK_REP, MK_MAN, FI_MGR, AD_PRES, AD_ASST, AC_MGR, AC_ACCOUNT","30, 20, 20, 5, 5, 5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, I want to show y-axis in descending order please."
"SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team ORDER BY Home_team DESC",Bar,Medium,game_injury,"{'chart': 'bar', 'x_name': 'Home_team', 'y_name': 'COUNT(Home_team)', 'x_data': [['Quruvchi', 'Pakhtakor', 'Bunyodkor']], 'y_data': [[1, 10, 9]], 'classify': [], 'describe': 'GROUP BY Home_team'}",bar,Home_team,COUNT(Home_team),"Quruvchi, Pakhtakor, Bunyodkor","1, 10, 9","Show me how many home team by home team in a histogram, rank from high to low by the bar please."
"SELECT Course , COUNT(Course) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Course ORDER BY T3.Name",Bar,Hard,course_teach,"{'chart': 'bar', 'x_name': 'Course', 'y_name': 'COUNT(Course)', 'x_data': [['Bible', 'History', 'Math', 'Music', 'Science']], 'y_data': [[1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Course'}",bar,Course,COUNT(Course),"Bible, History, Math, Music, Science","1, 1, 2, 1, 1",Show the number of teachers of each course in a bar chart.
"SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank ASC",Bar,Medium,ship_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Commander, junior captain', 'Lieutenant', 'Midshipman']], 'y_data': [[1, 2, 4]], 'classify': [], 'describe': ''}",bar,Rank,count(*),"Commander, junior captain, Lieutenant, Midshipman","1, 2, 4","How many captains are in each rank, and show from low to high by the x axis please."
"SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Regular_Season DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Regular_Season', 'y_name': 'ACC_Percent', 'x_data': [['9–7', '14–2', '13–3', '10–6']], 'y_data': [[0.563, 0.875, 0.813, 0.625]], 'classify': [], 'describe': ''}",bar,ACC_Regular_Season,ACC_Percent,"9–7, 14–2, 13–3, 10–6","0.563, 0.875, 0.813, 0.625","Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and show X in desc order."
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC",Bar,Medium,dog_kennels,"{'chart': 'bar', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['2018', '2017']], 'y_data': [[2, 13]], 'classify': [], 'describe': 'BIN date_arrived BY YEAR'}",bar,date_arrived,COUNT(date_arrived),"2018, 2017","2, 13","List the number of dogs arrived in each year with a bar chart, and order in ascending by the total number please."
"SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY COUNT(DISTINCT T1.workshop_id) DESC",Bar,Medium,workshop_paper,"{'chart': 'bar', 'x_name': 'Author', 'y_name': 'COUNT(DISTINCT T1.workshop_id)', 'x_data': [['Sammy Green', 'Steve Raible', 'Steve Niehaus', 'Sherman Smith', 'Jeff Lloyd']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Author,COUNT(DISTINCT T1.workshop_id),"Sammy Green, Steve Raible, Steve Niehaus, Sherman Smith, Jeff Lloyd","2, 1, 1, 1, 1","How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and order from high to low by the Y-axis."
"SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank",Bar,Hard,machine_repair,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Charlie Hollocher', 'Eddie Collins', 'Joe Sewell', 'John Brown', 'Tony Sewell']], 'y_data': [[1, 1, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Charlie Hollocher, Eddie Collins, Joe Sewell, John Brown, Tony Sewell","1, 1, 5, 1, 1","Show names of technicians in ascending order of quality rank of the machine they are assigned, and count them by a bar chart"
"SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY Team_Name DESC",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'Team_Name', 'y_name': 'All_Games_Percent', 'x_data': [['Virginia Tech', 'North Carolina', 'Duke', 'Clemson']], 'y_data': [[0.6, 0.946, 0.8240000000000001, 0.706]], 'classify': [], 'describe': ''}",bar,Team_Name,All_Games_Percent,"Virginia Tech, North Carolina, Duke, Clemson","0.6, 0.946, 0.8240000000000001, 0.706","Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , order by the x axis from high to low."
"SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY dept_name ASC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'AVG(credits)', 'x_data': [['Athletics', 'Biology', 'Civil Eng.', 'Comp. Sci.', 'Cybernetics', 'English', 'Finance', 'History', 'Marketing', 'Mech. Eng.', 'Psychology', 'Statistics']], 'y_data': [[3.5, 3, 3.5, 4, 3.5, 3, 4, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY dept_name'}",bar,dept_name,AVG(credits),"Athletics, Biology, Civil Eng., Comp. Sci., Cybernetics, English, Finance, History, Marketing, Mech. Eng., Psychology, Statistics","3.5, 3, 3.5, 4, 3.5, 3, 4, 3, 3, 3, 3, 3","Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, rank by the X in asc."
"SELECT Founder , AVG(Manufacturer) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Manufacturer) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Manufacturer)', 'x_data': [['Robert', 'John', 'Mary', 'James', 'Owen', 'Andy']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Manufacturer),"Robert, John, Mary, James, Owen, Andy","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder by a bar chart, and list from high to low by the Y-axis."
"SELECT charge_type , charge_amount FROM Charges ORDER BY charge_type ASC",Bar,Easy,dog_kennels,"{'chart': 'bar', 'x_name': 'charge_type', 'y_name': 'charge_amount', 'x_data': [['Daily Accommodation', 'Drugs', 'Health Check']], 'y_data': [[98, 322, 640]], 'classify': [], 'describe': ''}",bar,charge_type,charge_amount,"Daily Accommodation, Drugs, Health Check","98, 322, 640","List each charge type and its amount Show bar chart, display bars in asc order."
"SELECT Party , COUNT(*) FROM people GROUP BY Party",Bar,Easy,debate,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'COUNT(*)', 'x_data': [['Anti-Lecompton Democrat', 'Democratic', 'Independent Democrat', 'Republican']], 'y_data': [[2, 3, 1, 4]], 'classify': [], 'describe': ''}",bar,Party,COUNT(*),"Anti-Lecompton Democrat, Democratic, Independent Democrat, Republican","2, 3, 1, 4",Show different parties of people along with the number of people in each party. Plot them as bar chart.
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination",Bar,Easy,school_player,"{'chart': 'bar', 'x_name': 'Denomination', 'y_name': 'COUNT(*)', 'x_data': [['Anglican', 'Catholic', 'Uniting Church']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,Denomination,COUNT(*),"Anglican, Catholic, Uniting Church","3, 2, 1","For each denomination, return the denomination and the count of schools with that denomination. Visualize by bar chart."
"SELECT languages , avg(rating) FROM song GROUP BY languages",Bar,Easy,music_1,"{'chart': 'bar', 'x_name': 'languages', 'y_name': 'avg(rating)', 'x_data': [['bangla', 'english']], 'y_data': [[7.5, 7]], 'classify': [], 'describe': ''}",bar,languages,avg(rating),"bangla, english","7.5, 7",Show me a bar chart for what is the average song rating for each language?
"SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = ""Spring"" OR Party_Theme = ""Teqnology"" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC",Bar,Hard,party_host,"{'chart': 'bar', 'x_name': 'Last_year', 'y_name': 'COUNT(Last_year)', 'x_data': [['2004', '2001', '2003', '2002']], 'y_data': [[1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Last_year BY TIME'}",bar,Last_year,COUNT(Last_year),"2004, 2001, 2003, 2002","1, 1, 0, 0","What are the last year of the parties whose theme is ""Spring"" or ""Teqnology""? Count the last year for a bar chart, I want to rank y axis in desc order."
"SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5 GROUP BY name",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Honda', 'Toyota']], 'y_data': [[45, 95]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Honda, Toyota","45, 95","Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart"
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY count(*) DESC",Bar,Hard,car_1,"{'chart': 'bar', 'x_name': 'Continent', 'y_name': 'count(*)', 'x_data': [['europe', 'asia', 'america']], 'y_data': [[11, 7, 4]], 'classify': [], 'describe': ''}",bar,Continent,count(*),"europe, asia, america","11, 7, 4","how many car makers are there in each continents? List the continent name and the count, sort by the y-axis in desc."
"SELECT DEPT_CODE , sum(stu_hrs) FROM student GROUP BY dept_code ORDER BY sum(stu_hrs) DESC",Bar,Medium,college_1,"{'chart': 'bar', 'x_name': 'DEPT_CODE', 'y_name': 'sum(stu_hrs)', 'x_data': [['ACCT', 'CIS', 'EDU', 'ENGL', 'BIOL']], 'y_data': [[165, 147, 120, 102, 42]], 'classify': [], 'describe': ''}",bar,DEPT_CODE,sum(stu_hrs),"ACCT, CIS, EDU, ENGL, BIOL","165, 147, 120, 102, 42","Visualize a bar chart for how many hours do the students spend studying in each department?, could you display Y in desc order please?"
"SELECT name , elevation FROM airports WHERE city = 'New York' ORDER BY elevation DESC",Bar,Medium,flight_4,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'elevation', 'x_data': [['One Police Plaza Heliport', 'Indianola Municipal Airport', 'La Guardia Airport', 'John F Kennedy International Airport']], 'y_data': [[244, 126, 21, 13]], 'classify': [], 'describe': ''}",bar,name,elevation,"One Police Plaza Heliport, Indianola Municipal Airport, La Guardia Airport, John F Kennedy International Airport","244, 126, 21, 13","What is the altitude (or elevation) of the airports in the city of New York? Show me a bar chart, could you rank in descending by the elevation please?"
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name",Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Revenue)', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 150, 30, 130, 30, 120, 50, 50, 200]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Revenue),"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 150, 30, 130, 30, 120, 50, 50, 200","For those records from the products and each product's manufacturer, find  name and the sum of revenue , and group by attribute name, and visualize them by a bar chart."
"SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY count(*) DESC",Bar,Medium,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'count(*)', 'x_data': [['Civil Eng.', 'Languages', 'History', 'Pol. Sci.', 'Comp. Sci.', 'Astronomy', 'Mech. Eng.', 'Psychology', 'Biology', 'Accounting', 'Elec. Eng.', 'Finance', 'Physics', 'English', 'Geology', 'Athletics', 'Math', 'Cybernetics', 'Statistics', 'Marketing']], 'y_data': [[120, 119, 117, 109, 108, 106, 105, 100, 100, 99, 98, 97, 96, 95, 92, 92, 91, 86, 85, 85]], 'classify': [], 'describe': ''}",bar,dept_name,count(*),"Civil Eng., Languages, History, Pol. Sci., Comp. Sci., Astronomy, Mech. Eng., Psychology, Biology, Accounting, Elec. Eng., Finance, Physics, English, Geology, Athletics, Math, Cybernetics, Statistics, Marketing","120, 119, 117, 109, 108, 106, 105, 100, 100, 99, 98, 97, 96, 95, 92, 92, 91, 86, 85, 85","how many students are in each department?, and could you rank by the the total number in desc?"
"SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC",Bar,Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'date_moved_in', 'y_name': 'COUNT(date_moved_in)', 'x_data': [['2016-09-27', '2015-03-27']], 'y_data': [[4, 9]], 'classify': [], 'describe': 'GROUP BY date_moved_in'}",bar,date_moved_in,COUNT(date_moved_in),"2016-09-27, 2015-03-27","4, 9","What is the proportion of each customer's move in date? Show me the bar chart, and show by the how many date moved in in asc please."
"SELECT LAST_NAME , MANAGER_ID FROM employees ORDER BY LAST_NAME ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'LAST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Baer', 'Fripp', 'Greenberg', 'Hartstein', 'Higgins', 'Hunold', 'King', 'Mavris', 'Raphaely', 'Russell', 'Whalen']], 'y_data': [[204, 121, 108, 201, 205, 103, 100, 203, 114, 145, 200]], 'classify': [], 'describe': ''}",bar,LAST_NAME,MANAGER_ID,"Baer, Fripp, Greenberg, Hartstein, Higgins, Hunold, King, Mavris, Raphaely, Russell, Whalen","204, 121, 108, 201, 205, 103, 100, 203, 114, 145, 200","Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, could you show by the x-axis in asc?"
"SELECT Is_full_time , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time",Bar,Easy,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Is_full_time', 'y_name': 'SUM(Shop_ID)', 'x_data': [['F', 'T']], 'y_data': [[10, 17]], 'classify': [], 'describe': 'GROUP BY Is_full_time'}",bar,Is_full_time,SUM(Shop_ID),"F, T","10, 17","Draw a bar chart about the distribution of  Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'  ORDER BY AVG(SALARY) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['Wed', 'Tue', 'Fri', 'Sat', 'Thur', 'Mon', 'Sun']], 'y_data': [[7746.666666666667, 6810, 6571.428571428572, 6558.333333333333, 6400, 5830.7692307692305, 5561.538461538462]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(SALARY),"Wed, Tue, Fri, Sat, Thur, Mon, Sun","7746.666666666667, 6810, 6571.428571428572, 6558.333333333333, 6400, 5830.7692307692305, 5561.538461538462","Bin the hire date into the day of week interval, and then calculate the average salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, display the average of salary from high to low order."
"SELECT JOB_ID , AVG(DEPARTMENT_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID ORDER BY AVG(DEPARTMENT_ID) DESC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['AC_MGR', 'FI_ACCOUNT', 'AD_PRES', 'SA_REP', 'SA_MAN', 'IT_PROG', 'ST_MAN', 'ST_CLERK', 'SH_CLERK', 'HR_REP', 'PU_MAN', 'PU_CLERK']], 'y_data': [[110, 100, 90, 80, 80, 60, 50, 50, 50, 40, 30, 30]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(DEPARTMENT_ID),"AC_MGR, FI_ACCOUNT, AD_PRES, SA_REP, SA_MAN, IT_PROG, ST_MAN, ST_CLERK, SH_CLERK, HR_REP, PU_MAN, PU_CLERK","110, 100, 90, 80, 80, 60, 50, 50, 50, 40, 30, 30","For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, I want to rank from high to low by the Y-axis."
"SELECT FIRST_NAME , DEPARTMENT_ID FROM employees ORDER BY FIRST_NAME ASC",Bar,Easy,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'DEPARTMENT_ID', 'x_data': [['Adam', 'Alexander', 'Den', 'Hermann', 'Jennifer', 'John', 'Michael', 'Nancy', 'Shelley', 'Steven', 'Susan']], 'y_data': [[50, 60, 30, 70, 10, 80, 20, 100, 110, 90, 40]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,DEPARTMENT_ID,"Adam, Alexander, Den, Hermann, Jennifer, John, Michael, Nancy, Shelley, Steven, Susan","50, 60, 30, 70, 10, 80, 20, 100, 110, 90, 40","Show me department_id by first name in a histogram, I want to list by the bars in asc."
"SELECT ACC_Road , AVG(Team_ID) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC",Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'AVG(Team_ID)', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY ACC_Road'}",bar,ACC_Road,AVG(Team_ID),"8–0, 6–2, 3–5","1, 2, 3.5","Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order in desc by the bars."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",Bar,Medium,inn_1,"{'chart': 'bar', 'x_name': 'bedType', 'y_name': 'avg(basePrice)', 'x_data': [['Double', 'King', 'Queen']], 'y_data': [[100, 181.25, 150]], 'classify': [], 'describe': ''}",bar,bedType,avg(basePrice),"Double, King, Queen","100, 181.25, 150","For each bed type, find the average room price Show bar chart, order X from low to high order."
"SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Headquarter', 'y_name': 'AVG(Price)', 'x_data': [['Tokyo', 'Taiwan', 'Paris', 'Los Angeles', 'Beijing', 'Austin']], 'y_data': [[240, 240, 62.5, 162, 150, 150]], 'classify': [], 'describe': 'GROUP BY Headquarter'}",bar,Headquarter,AVG(Price),"Tokyo, Taiwan, Paris, Los Angeles, Beijing, Austin","240, 240, 62.5, 162, 150, 150","For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter, and could you order by the bar in descending?"
"SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY count(*) ASC",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'city_code', 'y_name': 'count(*)', 'x_data': [['ATL', 'BOS', 'CHI', 'DAL', 'DET', 'HOU', 'LON', 'LOS', 'NAR', 'PEK', 'ROC', 'SFO', 'YYZ', 'HKG', 'NYC', 'PHL', 'WAS', 'BAL', 'PIT']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,city_code,count(*),"ATL, BOS, CHI, DAL, DET, HOU, LON, LOS, NAR, PEK, ROC, SFO, YYZ, HKG, NYC, PHL, WAS, BAL, PIT","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 4, 4","How many students live in each city, display in asc by the Y-axis."
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_and_invoices,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'sum(transaction_amount)', 'x_data': [['Payment', 'Refund']], 'y_data': [[8743.15, 11192.69]], 'classify': [], 'describe': ''}",bar,transaction_type,sum(transaction_amount),"Payment, Refund","8743.15, 11192.69","Show the transaction types and the total amount of transactions, and order by the X-axis from low to high."
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id ORDER BY T1.part_name DESC",Bar,Medium,assets_maintenance,"{'chart': 'bar', 'x_name': 'part_name', 'y_name': 'part_id', 'x_data': [['top', 'package']], 'y_data': [[1, 3]], 'classify': [], 'describe': ''}",bar,part_name,part_id,"top, package","1, 3","Which parts have more than 2 faults? Show the part name and id Plot them as bar chart, and sort in descending by the X."
"SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters",Bar,Easy,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(*)', 'x_data': [['Brazil', 'China', 'France', 'Germany', 'Netherlands', 'Russia', 'UK', 'USA']], 'y_data': [[1, 4, 1, 1, 1, 1, 2, 8]], 'classify': [], 'describe': ''}",bar,Headquarters,COUNT(*),"Brazil, China, France, Germany, Netherlands, Russia, UK, USA","1, 4, 1, 1, 1, 1, 2, 8",Show the different headquarters and number of companies at each headquarter. 
"SELECT T2.Name , COUNT(T2.Name) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Hewlett-Packard', 'Creative Labs', 'Winchester', 'Sony', 'Iomega', 'Fujits']], 'y_data': [[3, 3, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Hewlett-Packard, Creative Labs, Winchester, Sony, Iomega, Fujits","3, 3, 2, 1, 1, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, sort by the y-axis from high to low."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'HR_REP', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, HR_REP, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 101.5, 111, 108, 203, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122","For those employees who was hired before 2002-06-21, a bar chart shows the distribution of  job_id and the average of employee_id , and group by attribute job_id."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[150, 66, 270, 240, 120, 240, 5, 165, 180, 90]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","150, 66, 270, 240, 120, 240, 5, 165, 180, 90","For those records from the products and each product's manufacturer, show me about the distribution of name and the average of price , and group by attribute name in a bar chart, and could you display from high to low by the Name?"
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass"" GROUP BY date_test_taken ORDER BY date_test_taken ASC",Bar,Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['2018-03-19', '2018-03-21', '2018-03-23', '2018-03-24', '2018-03-25']], 'y_data': [[2, 1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY date_test_taken'}",bar,date_test_taken,COUNT(date_test_taken),"2018-03-19, 2018-03-21, 2018-03-23, 2018-03-24, 2018-03-25","2, 1, 1, 1, 3","Which tests have ""Pass"" results? Return the dates when the tests were taken, and count them by a bar chart, sort by the names in asc please."
"SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(SALARY)', 'x_data': [['June', 'July', 'Aug', 'Sept', 'Oct']], 'y_data': [[8700, 3382.7586206896553, 9074.193548387097, 4459.259259259259, 8300]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,AVG(SALARY),"June, July, Aug, Sept, Oct","8700, 3382.7586206896553, 9074.193548387097, 4459.259259259259, 8300","For those employees who did not have any job in the past, return a bar chart about the distribution of  hire_date and the average of salary bin hire_date by time."
"SELECT JOB_ID , SUM(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY SUM(EMPLOYEE_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(EMPLOYEE_ID)', 'x_data': [['AD_PRES', 'FI_MGR', 'PU_MAN', 'AD_ASST', 'MK_MAN', 'MK_REP', 'AD_VP', 'PR_REP', 'AC_MGR', 'AC_ACCOUNT', 'IT_PROG', 'FI_ACCOUNT', 'PU_CLERK', 'ST_MAN', 'SA_MAN', 'ST_CLERK', 'SH_CLERK', 'SA_REP']], 'y_data': [[100, 108, 114, 200, 201, 202, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(EMPLOYEE_ID),"AD_PRES, FI_MGR, PU_MAN, AD_ASST, MK_MAN, MK_REP, AD_VP, PR_REP, AC_MGR, AC_ACCOUNT, IT_PROG, FI_ACCOUNT, PU_CLERK, ST_MAN, SA_MAN, ST_CLERK, SH_CLERK, SA_REP","100, 108, 114, 200, 201, 202, 203, 204, 205, 206, 525, 555, 585, 610, 735, 2690, 3790, 4935","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, I want to order total number of employee id in asc order."
"SELECT Nominee , COUNT(Nominee) FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks"" GROUP BY Nominee ORDER BY Nominee ASC",Bar,Extra Hard,musical,"{'chart': 'bar', 'x_name': 'Nominee', 'y_name': 'COUNT(Nominee)', 'x_data': [['Bob Fosse', 'Cleavant Derricks']], 'y_data': [[3, 1]], 'classify': [], 'describe': 'GROUP BY Nominee'}",bar,Nominee,COUNT(Nominee),"Bob Fosse, Cleavant Derricks","3, 1","A bar chart for showing the number of the musical nominee with award ""Bob Fosse"" or ""Cleavant Derricks"", could you sort names from low to high order please?"
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[4, 3, 3, 1, 6, 5, 6, 5, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","4, 3, 3, 1, 6, 5, 6, 5, 2, 2","For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name, rank in descending by the Name."
"SELECT HIRE_DATE , SUM(MANAGER_ID) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY SUM(MANAGER_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'SUM(MANAGER_ID)', 'x_data': [['June', 'Sept', 'July', 'Aug']], 'y_data': [[740, 1449, 1742, 1862]], 'classify': [], 'describe': 'BIN HIRE_DATE BY MONTH'}",bar,HIRE_DATE,SUM(MANAGER_ID),"June, Sept, July, Aug","740, 1449, 1742, 1862","For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and show in ascending by the y-axis please."
"SELECT JOB_ID , SUM(DEPARTMENT_ID) FROM employees WHERE hire_date < '2002-06-21' GROUP BY JOB_ID ORDER BY SUM(DEPARTMENT_ID) ASC",Bar,Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'SUM(DEPARTMENT_ID)', 'x_data': [['AD_ASST', 'MK_MAN', 'MK_REP', 'PU_MAN', 'HR_REP', 'PR_REP', 'AD_PRES', 'FI_MGR', 'AC_ACCOUNT', 'AC_MGR', 'PU_CLERK', 'AD_VP', 'ST_MAN', 'IT_PROG', 'SA_MAN', 'FI_ACCOUNT', 'SH_CLERK', 'ST_CLERK', 'SA_REP']], 'y_data': [[10, 20, 20, 30, 40, 70, 90, 100, 110, 110, 150, 180, 250, 300, 400, 500, 1000, 1000, 2320]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,SUM(DEPARTMENT_ID),"AD_ASST, MK_MAN, MK_REP, PU_MAN, HR_REP, PR_REP, AD_PRES, FI_MGR, AC_ACCOUNT, AC_MGR, PU_CLERK, AD_VP, ST_MAN, IT_PROG, SA_MAN, FI_ACCOUNT, SH_CLERK, ST_CLERK, SA_REP","10, 20, 20, 30, 40, 70, 90, 100, 110, 110, 150, 180, 250, 300, 400, 500, 1000, 1000, 2320","For those employees who was hired before 2002-06-21, find job_id and the sum of department_id , and group by attribute job_id, and visualize them by a bar chart, I want to sort by the total number in ascending."
"SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",Bar,Medium,allergy_1,"{'chart': 'bar', 'x_name': 'AllergyType', 'y_name': 'count(*)', 'x_data': [['animal', 'environmental', 'food']], 'y_data': [[8, 23, 28]], 'classify': [], 'describe': ''}",bar,AllergyType,count(*),"animal, environmental, food","8, 23, 28",How many students are affected by each allergy type. Visualize by bar chart.
"SELECT Status , avg(Population) FROM city GROUP BY Status",Bar,Easy,farm,"{'chart': 'bar', 'x_name': 'Status', 'y_name': 'avg(Population)', 'x_data': [['Town', 'Village']], 'y_data': [[5706, 1009.75]], 'classify': [], 'describe': ''}",bar,Status,avg(Population),"Town, Village","5706, 1009.75",Give me a histogram for what are the statuses and average populations of each city?
"SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC",Bar,Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'treatment_type_description', 'y_name': 'SUM(cost_of_treatment)', 'x_data': [['Take for a Walk', 'Physical examination', 'Vaccination']], 'y_data': [[2392, 2429, 2540]], 'classify': [], 'describe': 'GROUP BY treatment_type_description'}",bar,treatment_type_description,SUM(cost_of_treatment),"Take for a Walk, Physical examination, Vaccination","2392, 2429, 2540","List the cost of each treatment and the corresponding treatment type description, order Y-axis from low to high order."
"SELECT Location , COUNT(Location) FROM wrestler GROUP BY Location ORDER BY Location ASC",Bar,Medium,wrestler,"{'chart': 'bar', 'x_name': 'Location', 'y_name': 'COUNT(Location)', 'x_data': [['Nagoya , Japan', 'Osaka , Japan', 'Sapporo , Japan', 'Tijuana , Mexico', 'Tokyo , Japan']], 'y_data': [[1, 1, 1, 3, 4]], 'classify': [], 'describe': 'GROUP BY Location'}",bar,Location,COUNT(Location),"Nagoya , Japan, Osaka , Japan, Sapporo , Japan, Tijuana , Mexico, Tokyo , Japan","1, 1, 1, 3, 4","A bar chart for what is the number of locations of the wrestlers, and could you order in asc by the Location?"
"SELECT role_code , count(*) FROM users GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,document_management,"{'chart': 'bar', 'x_name': 'role_code', 'y_name': 'count(*)', 'x_data': [['DBA', 'PROJ-MGR']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,role_code,count(*),"DBA, PROJ-MGR","8, 7","what are the different role codes for users, and how many users have each?, and sort from high to low by the Y."
"SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county",Bar,Easy,customers_and_products_contacts,"{'chart': 'bar', 'x_name': 'state_province_county', 'y_name': 'count(*)', 'x_data': [['Colorado', 'District of Columbia', 'Idaho', 'Illinois', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Nevada', 'Oklahoma', 'Oregon', 'SouthDakota', 'Vermont', 'Virginia']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,state_province_county,count(*),"Colorado, District of Columbia, Idaho, Illinois, Kentucky, Louisiana, Maine, Maryland, Nevada, Oklahoma, Oregon, SouthDakota, Vermont, Virginia","1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",Show the total number from each state province county
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal DESC",Bar,Hard,loan_1,"{'chart': 'bar', 'x_name': 'cust_name', 'y_name': 'acc_bal', 'x_data': [['Mary', 'Jack']], 'y_data': [[2000, 1000]], 'classify': [], 'describe': ''}",bar,cust_name,acc_bal,"Mary, Jack","2000, 1000","Find the name and account balance of the customer whose name includes the letter ‘a’ Visualize them using a bar chart, show y-axis in descending order."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'AVG(Price)', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[150, 66, 270, 240, 120, 240, 5, 165, 180, 90]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,AVG(Price),"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","150, 66, 270, 240, 120, 240, 5, 165, 180, 90","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, show by the Name in desc."
"SELECT PHONE_NUMBER , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'PHONE_NUMBER', 'y_name': 'SALARY', 'x_data': [['011.44.1644.429263', '515.123.5555', '603.123.6666', '515.123.7777', '515.123.8888', '515.123.8080', '515.123.8181']], 'y_data': [[7000, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",bar,PHONE_NUMBER,SALARY,"011.44.1644.429263, 515.123.5555, 603.123.6666, 515.123.7777, 515.123.8888, 515.123.8080, 515.123.8181","7000, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of  phone_number and  salary  in a bar chart."
"SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) ASC",Bar,Extra Hard,products_gen_characteristics,"{'chart': 'bar', 'x_name': 'product_category_description', 'y_name': 'COUNT(product_category_description)', 'x_data': [['Spices', 'Herbs', 'Seeds']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': 'GROUP BY product_category_description'}",bar,product_category_description,COUNT(product_category_description),"Spices, Herbs, Seeds","1, 2, 3","Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, order from low to high by the total number."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name ORDER BY T1.Code ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'SUM(Code)', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[1, 2, 2, 3, 3, 4, 5, 5, 6, 6]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,SUM(Code),"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","1, 2, 2, 3, 3, 4, 5, 5, 6, 6","For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, and I want to sort in asc by the Y."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail"" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) ASC",Bar,Extra Hard,e_learning,"{'chart': 'bar', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-02-26', '2018-03-02', '2018-03-04', '2018-03-06', '2018-03-07', '2018-03-22']], 'y_data': [[1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",bar,date_of_completion,COUNT(date_of_completion),"2018-02-26, 2018-03-02, 2018-03-04, 2018-03-06, 2018-03-07, 2018-03-22","1, 1, 1, 1, 1, 2","What are the number of the completion dates of all the tests that have result ""Fail""?, and rank from low to high by the the number of date of completion."
"SELECT dept_name , COUNT(dept_name) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY COUNT(dept_name) DESC",Bar,Hard,college_2,"{'chart': 'bar', 'x_name': 'dept_name', 'y_name': 'COUNT(dept_name)', 'x_data': [['Psychology', 'Mech. Eng.', 'Cybernetics', 'Comp. Sci.', 'Civil Eng.', 'Athletics', 'Statistics', 'Marketing', 'History', 'Finance', 'English', 'Biology']], 'y_data': [[2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY dept_name'}",bar,dept_name,COUNT(dept_name),"Psychology, Mech. Eng., Cybernetics, Comp. Sci., Civil Eng., Athletics, Statistics, Marketing, History, Finance, English, Biology","2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1","Find the number of courses that have more than one prerequisites for each department in a bar chart, list from high to low by the the number of dept name."
"SELECT GovernmentForm , sum(Population) FROM country GROUP BY GovernmentForm ORDER BY sum(Population) ASC",Bar,Medium,world_1,"{'chart': 'bar', 'x_name': 'GovernmentForm', 'y_name': 'sum(Population)', 'x_data': [['Parliamentary Coprincipality', 'Part of Denmark', 'Dependent Territory of the UK', 'Nonmetropolitan Territory of The Netherlands', 'US Territory', 'Nonmetropolitan Territory of France', 'Monarchy (Emirate)', 'Overseas Department of France', 'Constitutional Monarchy (Emirate)', 'Emirate Federation', 'Monarchy (Sultanate)', 'Commonwealth of the US', 'Socialistic State', 'Federation', 'Special Administrative Region of China', 'Constitutional Monarchy, Federation', 'Socialistic Republic']], 'y_data': [[78000, 99000, 193050, 320000, 329000, 464000, 617000, 1731000, 1972000, 2441000, 2870000, 3947000, 5605000, 7160400, 7255000, 82516000, 115072000]], 'classify': [], 'describe': ''}",bar,GovernmentForm,sum(Population),"Parliamentary Coprincipality, Part of Denmark, Dependent Territory of the UK, Nonmetropolitan Territory of The Netherlands, US Territory, Nonmetropolitan Territory of France, Monarchy (Emirate), Overseas Department of France, Constitutional Monarchy (Emirate), Emirate Federation, Monarchy (Sultanate), Commonwealth of the US, Socialistic State, Federation, Special Administrative Region of China, Constitutional Monarchy, Federation, Socialistic Republic","78000, 99000, 193050, 320000, 329000, 464000, 617000, 1731000, 1972000, 2441000, 2870000, 3947000, 5605000, 7160400, 7255000, 82516000, 115072000","Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and rank in ascending by the Y."
"SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) ASC",Bar,Medium,pets_1,"{'chart': 'bar', 'x_name': 'PetType', 'y_name': 'avg(weight)', 'x_data': [['dog', 'cat']], 'y_data': [[11.35, 12]], 'classify': [], 'describe': ''}",bar,PetType,avg(weight),"dog, cat","11.35, 12","what is the average weight for each type of pet?, could you order by the total number from low to high?"
"SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = ""Lisa"" GROUP BY T1.Allergy ORDER BY T1.Allergy ASC",Bar,Extra Hard,allergy_1,"{'chart': 'bar', 'x_name': 'Allergy', 'y_name': 'COUNT(Allergy)', 'x_data': [['Anchovies', 'Cat', 'Dog', 'Eggs', 'Milk', 'Ragweed', 'Shellfish', 'Tree Pollen', 'Grass Pollen']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Allergy'}",bar,Allergy,COUNT(Allergy),"Anchovies, Cat, Dog, Eggs, Milk, Ragweed, Shellfish, Tree Pollen, Grass Pollen","1, 1, 1, 1, 1, 1, 1, 1, 2","What is the number of each allergie that the student with first name Lisa has? Draw a bar chart, order by the Y from low to high please."
"SELECT HIRE_DATE , AVG(DEPARTMENT_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40  ORDER BY AVG(DEPARTMENT_ID) ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'HIRE_DATE', 'y_name': 'AVG(DEPARTMENT_ID)', 'x_data': [['Sat', 'Sun', 'Fri', 'Thur', 'Mon', 'Wed', 'Tue']], 'y_data': [[60.666666666666664, 60.666666666666664, 62, 62.5, 63.57142857142857, 65, 65.33333333333333]], 'classify': [], 'describe': 'BIN HIRE_DATE BY WEEKDAY'}",bar,HIRE_DATE,AVG(DEPARTMENT_ID),"Sat, Sun, Fri, Thur, Mon, Wed, Tue","60.666666666666664, 60.666666666666664, 62, 62.5, 63.57142857142857, 65, 65.33333333333333","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, and sort in asc by the the average of department id."
"SELECT All_Neutral , All_Games_Percent FROM basketball_match",Bar,Easy,university_basketball,"{'chart': 'bar', 'x_name': 'All_Neutral', 'y_name': 'All_Games_Percent', 'x_data': [['9–1', '5–3', '4–3', '3–3']], 'y_data': [[0.946, 0.8240000000000001, 0.706, 0.6]], 'classify': [], 'describe': ''}",bar,All_Neutral,All_Games_Percent,"9–1, 5–3, 4–3, 3–3","0.946, 0.8240000000000001, 0.706, 0.6",Give me the comparison about  All_Games_Percent over the  All_Neutral  by a bar chart.
"SELECT family_name , author_id FROM Course_Authors_and_Tutors ORDER BY personal_name",Bar,Easy,e_learning,"{'chart': 'bar', 'x_name': 'family_name', 'y_name': 'author_id', 'x_data': [['Rohan', 'Grant', 'Greenholt', 'Reichel', 'Champlin', 'Crist', 'Zboncak', 'Nader', 'Rowe', 'Treutel', 'Effertz', 'Armstrong', 'Haley', 'Kreiger', 'Barrows']], 'y_data': [[6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5]], 'classify': [], 'describe': ''}",bar,family_name,author_id,"Rohan, Grant, Greenholt, Reichel, Champlin, Crist, Zboncak, Nader, Rowe, Treutel, Effertz, Armstrong, Haley, Kreiger, Barrows","6, 1, 11, 3, 10, 14, 9, 4, 8, 7, 13, 2, 15, 12, 5",A bar chart shows the distribution of  family_name and  author_id .
"SELECT T2.Founder , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Founder ORDER BY T1.Code DESC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'AVG(Code)', 'x_data': [['Robert', 'John', 'Mary', 'James', 'Owen', 'Andy']], 'y_data': [[6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,AVG(Code),"Robert, John, Mary, James, Owen, Andy","6, 5, 4, 3, 2, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, I want to sort by the the average of code from high to low."
"SELECT JOB_ID , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY JOB_ID DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'DEPARTMENT_ID', 'x_data': [['SA_REP', 'PR_REP', 'MK_REP', 'MK_MAN', 'HR_REP', 'AC_MGR', 'AC_ACCOUNT']], 'y_data': [[0, 70, 20, 20, 40, 110, 110]], 'classify': [], 'describe': ''}",bar,JOB_ID,DEPARTMENT_ID,"SA_REP, PR_REP, MK_REP, MK_MAN, HR_REP, AC_MGR, AC_ACCOUNT","0, 70, 20, 20, 40, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and department_id , and could you rank names from high to low order?"
"SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder ASC",Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Founder', 'y_name': 'SUM(Price)', 'x_data': [['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert']], 'y_data': [[240, 486, 240, 150, 450, 125]], 'classify': [], 'describe': 'GROUP BY Founder'}",bar,Founder,SUM(Price),"Andy, James, John, Mary, Owen, Robert","240, 486, 240, 150, 450, 125","For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, could you order names from low to high order?"
"SELECT County_name , Population FROM county ORDER BY Population ASC",Bar,Easy,election,"{'chart': 'bar', 'x_name': 'County_name', 'y_name': 'Population', 'x_data': [['Manning', 'Howard', 'Colony', 'Mansfield', 'Baltimore County']], 'y_data': [[13300, 21000, 79000, 87200, 90000]], 'classify': [], 'describe': ''}",bar,County_name,Population,"Manning, Howard, Colony, Mansfield, Baltimore County","13300, 21000, 79000, 87200, 90000","Draw a bar chart for what are the name and population of each county?, and I want to sort in asc by the Y."
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY count(*) DESC",Bar,Medium,driving_school,"{'chart': 'bar', 'x_name': 'customer_status_code', 'y_name': 'count(*)', 'x_data': [['Bad Customer', 'Good Customer']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,customer_status_code,count(*),"Bad Customer, Good Customer","9, 6","List all customer status codes and the number of customers having each status code in a bar chart, and order from high to low by the y-axis."
"SELECT EMAIL , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY EMAIL DESC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'EMAIL', 'y_name': 'EMPLOYEE_ID', 'x_data': [['WGIETZ', 'SMAVRIS', 'SHIGGINS', 'PFAY', 'MHARTSTE', 'KGRANT', 'HBAER']], 'y_data': [[206, 203, 205, 202, 201, 178, 204]], 'classify': [], 'describe': ''}",bar,EMAIL,EMPLOYEE_ID,"WGIETZ, SMAVRIS, SHIGGINS, PFAY, MHARTSTE, KGRANT, HBAER","206, 203, 205, 202, 201, 178, 204","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and employee_id , could you rank X in descending order please?"
"SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) DESC",Bar,Hard,network_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'AVG(count(*))', 'x_data': [['Andrew', 'Kris', 'Alexis', 'Jordan', 'Gabriel', 'Tiffany', 'Logan', 'Kyle', 'Jessica', 'Haley', 'Cassandra', 'Austin']], 'y_data': [[3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,AVG(count(*)),"Andrew, Kris, Alexis, Jordan, Gabriel, Tiffany, Logan, Kyle, Jessica, Haley, Cassandra, Austin","3, 2, 2, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1","Show the names of high school students and their corresponding number of friends Plot them as bar chart, display Y-axis in descending order please."
"SELECT JOB_ID , AVG(EMPLOYEE_ID) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 GROUP BY JOB_ID ORDER BY JOB_ID ASC",Bar,Extra Hard,hr_1,"{'chart': 'bar', 'x_name': 'JOB_ID', 'y_name': 'AVG(EMPLOYEE_ID)', 'x_data': [['AC_ACCOUNT', 'AC_MGR', 'AD_ASST', 'AD_PRES', 'AD_VP', 'FI_ACCOUNT', 'FI_MGR', 'IT_PROG', 'MK_MAN', 'MK_REP', 'PR_REP', 'PU_CLERK', 'PU_MAN', 'SA_MAN', 'SA_REP', 'SH_CLERK', 'ST_CLERK', 'ST_MAN']], 'y_data': [[206, 205, 200, 100, 101.5, 111, 108, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122]], 'classify': [], 'describe': 'GROUP BY JOB_ID'}",bar,JOB_ID,AVG(EMPLOYEE_ID),"AC_ACCOUNT, AC_MGR, AD_ASST, AD_PRES, AD_VP, FI_ACCOUNT, FI_MGR, IT_PROG, MK_MAN, MK_REP, PR_REP, PU_CLERK, PU_MAN, SA_MAN, SA_REP, SH_CLERK, ST_CLERK, ST_MAN","206, 205, 200, 100, 101.5, 111, 108, 105, 201, 202, 204, 117, 114, 147, 164.5, 189.5, 134.5, 122","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, sort bar in asc order."
"SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",Bar,Medium,school_finance,"{'chart': 'bar', 'x_name': 'donator_name', 'y_name': 'sum(amount)', 'x_data': [['San José de Ocoa', 'Valverde', 'Distrito Nacional', 'Monte Plata', 'San Cristóbal', 'Santo Domingo Este', 'Santiago', 'La Vega', 'Duarte', 'Com. Dom. En Estados Unidos', 'Peravia']], 'y_data': [[9.83, 9.73, 9.55, 9.51, 9.05, 8.99, 8.85, 8.82, 8.53, 8.43, 8.33]], 'classify': [], 'describe': ''}",bar,donator_name,sum(amount),"San José de Ocoa, Valverde, Distrito Nacional, Monte Plata, San Cristóbal, Santo Domingo Este, Santiago, La Vega, Duarte, Com. Dom. En Estados Unidos, Peravia","9.83, 9.73, 9.55, 9.51, 9.05, 8.99, 8.85, 8.82, 8.53, 8.43, 8.33",List each donator name and the amount of endowment in descending order of the amount of endowment. Plot them as bar chart.
"SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY T1.Participant_Type_Code DESC",Bar,Hard,local_govt_in_alabama,"{'chart': 'bar', 'x_name': 'Participant_Type_Code', 'y_name': 'AVG(count(*))', 'x_data': [['Participant', 'Organizer']], 'y_data': [[2, 1.5]], 'classify': [], 'describe': 'GROUP BY Participant_Type_Code'}",bar,Participant_Type_Code,AVG(count(*)),"Participant, Organizer","2, 1.5","How many events have each participants attended? Show their average number by each participant type code using a bar chart, and list by the x axis in desc."
"SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY Fname DESC",Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Fname', 'y_name': 'count(*)', 'x_data': [['Yair', 'Steven', 'Stacey', 'Scott', 'Russell', 'Robert', 'Michael', 'Mark', 'Luigi', 'Louis', 'Leslie', 'Lawrence', 'Joanne', 'Ellie', 'David', 'Daniel', 'Cheng', 'Alan']], 'y_data': [[3, 2, 3, 3, 2, 1, 3, 3, 2, 2, 1, 2, 2, 1, 3, 3, 2, 2]], 'classify': [], 'describe': ''}",bar,Fname,count(*),"Yair, Steven, Stacey, Scott, Russell, Robert, Michael, Mark, Luigi, Louis, Leslie, Lawrence, Joanne, Ellie, David, Daniel, Cheng, Alan","3, 2, 3, 3, 2, 1, 3, 3, 2, 2, 1, 2, 2, 1, 3, 3, 2, 2","What is the first name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in with a bar chart, list from high to low by the bar."
"SELECT FIRST_NAME , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY FIRST_NAME ASC",Bar,Medium,hr_1,"{'chart': 'bar', 'x_name': 'FIRST_NAME', 'y_name': 'MANAGER_ID', 'x_data': [['Hermann', 'Kimberely', 'Michael', 'Pat', 'Shelley', 'Susan', 'William']], 'y_data': [[101, 149, 100, 201, 101, 101, 205]], 'classify': [], 'describe': ''}",bar,FIRST_NAME,MANAGER_ID,"Hermann, Kimberely, Michael, Pat, Shelley, Susan, William","101, 149, 100, 201, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name , order from low to high by the X."
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",Bar,Easy,store_product,"{'chart': 'bar', 'x_name': 'District_name', 'y_name': 'City_Population', 'x_data': [['Bahawalpur District', 'Chiniot District', 'Dera Ghazi Khan District', 'Gujranwala District', 'Gujrat District', 'Jhang District', 'Kasur District']], 'y_data': [[530438, 219254, 464742, 1526168, 328512, 365198, 314617]], 'classify': [], 'describe': ''}",bar,District_name,City_Population,"Bahawalpur District, Chiniot District, Dera Ghazi Khan District, Gujranwala District, Gujrat District, Jhang District, Kasur District","530438, 219254, 464742, 1526168, 328512, 365198, 314617","Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?"
"SELECT apt_number , COUNT(apt_number) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id GROUP BY apt_number ORDER BY apt_number DESC",Bar,Hard,apartment_rentals,"{'chart': 'bar', 'x_name': 'apt_number', 'y_name': 'COUNT(apt_number)', 'x_data': [['Suite 749', 'Suite 693', 'Suite 634', 'Suite 088', 'Apt. 940', 'Apt. 859', 'Apt. 794', 'Apt. 585', 'Apt. 477', 'Apt. 187']], 'y_data': [[2, 3, 1, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY apt_number'}",bar,apt_number,COUNT(apt_number),"Suite 749, Suite 693, Suite 634, Suite 088, Apt. 940, Apt. 859, Apt. 794, Apt. 585, Apt. 477, Apt. 187","2, 3, 1, 1, 1, 3, 1, 1, 1, 1","Return a bar chart about the number bookings for each apartment number, and rank from high to low by the x-axis."
"SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name ORDER BY COUNT(name) ASC",Bar,Hard,formula_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Indian Grand Prix', 'Bahrain Grand Prix', 'Canadian Grand Prix', 'Korean Grand Prix', 'Abu Dhabi Grand Prix', 'Australian Grand Prix', 'Belgian Grand Prix', 'Brazilian Grand Prix', 'British Grand Prix', 'Chinese Grand Prix', 'European Grand Prix', 'German Grand Prix', 'Hungarian Grand Prix', 'Italian Grand Prix', 'Japanese Grand Prix', 'Malaysian Grand Prix', 'Monaco Grand Prix', 'Singapore Grand Prix', 'Spanish Grand Prix', 'Turkish Grand Prix']], 'y_data': [[1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Indian Grand Prix, Bahrain Grand Prix, Canadian Grand Prix, Korean Grand Prix, Abu Dhabi Grand Prix, Australian Grand Prix, Belgian Grand Prix, Brazilian Grand Prix, British Grand Prix, Chinese Grand Prix, European Grand Prix, German Grand Prix, Hungarian Grand Prix, Italian Grand Prix, Japanese Grand Prix, Malaysian Grand Prix, Monaco Grand Prix, Singapore Grand Prix, Spanish Grand Prix, Turkish Grand Prix","1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3","A bar chart for what are the number of the names of races held between 2009 and 2011?, and order by the how many name in ascending."
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID ORDER BY T1.Tourist_Attraction_ID ASC",Bar,Medium,cre_Theme_park,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Tourist_Attraction_ID', 'x_data': [['UK gallery', 'flying elephant', 'history gallery', 'presidents hall', 'fun shops']], 'y_data': [[2701, 5076, 6653, 8429, 9360]], 'classify': [], 'describe': ''}",bar,Name,Tourist_Attraction_ID,"UK gallery, flying elephant, history gallery, presidents hall, fun shops","2701, 5076, 6653, 8429, 9360","Show the names and ids of tourist attractions that are visited at most once by a bar chart, list by the Y-axis in asc please."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ORDER BY COUNT(CRS_DESCRIPTION) DESC",Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Intro. to Microcomputing', 'Accounting I', 'Statistical Applications', 'Intro. to Statistics', 'Accounting II', 'Database Design and Implementation']], 'y_data': [[3, 3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Intro. to Microcomputing, Accounting I, Statistical Applications, Intro. to Statistics, Accounting II, Database Design and Implementation","3, 3, 2, 2, 2, 1","How many courses for each course description? Show me a bar chart, and display by the y axis in descending."
"SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY COUNT(Venue) ASC",Bar,Medium,debate,"{'chart': 'bar', 'x_name': 'Venue', 'y_name': 'COUNT(Venue)', 'x_data': [['Abu Dhabi , UAE', 'Doha , Qatar', 'Dubai , UAE', 'Manama , Bahrain']], 'y_data': [[1, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY Venue'}",bar,Venue,COUNT(Venue),"Abu Dhabi , UAE, Doha , Qatar, Dubai , UAE, Manama , Bahrain","1, 1, 1, 3","A bar chart showing how many debates are held for each venue, and I want to show y-axis in asc order."
"SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,news_report,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['England', 'Wales', 'Northern Ireland']], 'y_data': [[9, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"England, Wales, Northern Ireland","9, 1, 1","Bar graph to show the number of nationality from different nationality, and rank by the Y from high to low."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME",Stacked Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 1, 0], [0, 2, 1, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 0, 0, 0, 0, 1",Show the number of courses each instructor taught in a stacked bar chart. The x-axis is the instructor's first name and group by course description.
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Price ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Floppy disk', 'Toner cartridge', 'CD drive', 'Memory', 'ZIP drive', 'DVD burner', 'Hard drive', 'Monitor', 'Printer', 'DVD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 240, 0, 0], [0, 66, 0, 0, 0, 0, 0, 0, 270, 150], [0, 0, 0, 0, 0, 0, 0, 240, 0, 0], [0, 0, 0, 0, 150, 0, 0, 0, 0, 0], [0, 0, 90, 0, 0, 180, 0, 0, 0, 180], [5, 0, 0, 120, 0, 0, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Price,"Floppy disk, Toner cartridge, CD drive, Memory, ZIP drive, DVD burner, Hard drive, Monitor, Printer, DVD drive","0, 0, 0, 0, 0, 0, 0, 240, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder by a bar chart, and I want to display by the total number in asc."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[4, 5, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","4, 5, 0","Draw a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Road."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1","Draw a bar chart about the distribution of  ACC_Road and  Team_ID , and group by attribute ACC_Home."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME DESC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Robert', 'Peter', 'Ismael', 'Gerald', 'Carlos', 'Arnelle']], 'y_data': [[1, 0, 0, 0, 0, 2], [0, 0, 2, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 2, 0], [0, 0, 0, 2, 0, 0], [0, 2, 0, 0, 0, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Robert, Peter, Ismael, Gerald, Carlos, Arnelle","1, 0, 0, 0, 0, 2","Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, and could you show X from high to low order?"
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC",Stacked Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Mon', 'Sat', 'Sun', 'Tue', 'Wed', 'Thur', 'Fri']], 'y_data': [[0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 2]], 'classify': ['Devin Mills', 'Tillman Ernser'], 'describe': 'GROUP BY customer_name, BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Mon, Sat, Sun, Tue, Wed, Thur, Fri","0, 0, 0, 0, 0, 0, 2","How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart, I want to show by the total number in asc."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 180, 180, 90], [0, 0, 0, 0, 0, 240, 0, 0, 0, 0], [0, 66, 270, 0, 0, 0, 0, 150, 0, 0], [150, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 240, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 120, 0, 5, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 180, 180, 90","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute name, display by the bar in desc."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 2, 2, 2","For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, order names in descending order."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Manufacturer,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and manufacturer , and group by attribute headquarter, and sort bars from low to high order."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 5, 4], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"15–1, 14–3, 14–2","0, 5, 4","Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, rank in desc by the x axis."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3, 0, 1], [4, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","3, 0, 1","Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, order total number from high to low order."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY COUNT(EMP_FNAME) DESC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Peter', 'Gerald', 'Ismael', 'Carlos', 'Arnelle', 'Robert']], 'y_data': [[0, 0, 2, 0, 0, 1], [0, 0, 2, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 2, 0, 0, 0], [2, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Peter, Gerald, Ismael, Carlos, Arnelle, Robert","0, 0, 2, 0, 0, 1","Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, and list by the y axis in descending please."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 3], [0, 0, 4], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"8–0, 6–2, 3–5","1, 0, 3","Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, list in ascending by the Y-axis."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","0, 2, 2, 0, 0, 0, 0, 2, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and sort from low to high by the Code."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 2, 2, 2","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, and display by the X in desc."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Industry ,  Headquarters ORDER BY Headquarters DESC",Stacked Bar,Hard,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'Russia', 'Netherlands', 'Germany', 'France', 'China', 'Brazil']], 'y_data': [[0, 0, 0, 0, 1, 0, 0, 0], [3, 1, 0, 0, 0, 0, 3, 0], [2, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Automotive', 'Banking', 'Conglomerate', 'Oil and gas', 'Retailing'], 'describe': 'GROUP BY Industry, GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, Russia, Netherlands, Germany, France, China, Brazil","0, 0, 0, 0, 1, 0, 0, 0","Stack bar chart of the number of headquarters vs Industry based on headquarters, show by the names in desc."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","0, 0, 240, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute founder in a bar chart, and I want to rank by the Price from high to low."
"SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 0, 0, 2, 0, 0, 8], [0, 1, 1, 0, 4, 5.5, 0]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 0, 0, 2, 0, 0, 8","Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and display y axis from low to high order."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 5, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute founder, could you rank in ascending by the X-axis?"
"SELECT fault_status , COUNT(fault_status) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_description ,  fault_status ORDER BY COUNT(fault_status) DESC",Stacked Bar,Extra Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'fault_status', 'y_name': 'COUNT(fault_status)', 'x_data': [['Fixed', 'Reported', 'Waiting', 'Return']], 'y_data': [[3, 0, 3, 0], [5, 2, 0, 2]], 'classify': ['failed parts', 'system error'], 'describe': 'GROUP BY fault_description, GROUP BY fault_status'}",bar,fault_status,COUNT(fault_status),"Fixed, Reported, Waiting, Return","3, 0, 3, 0","A stacked bar about the number of faults for different fault description and fault status of all the faults recoreded in the logs, and show Y from high to low order."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME",Stacked Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 1, 0], [0, 2, 1, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 0, 0, 0, 0, 1",How many courses each teacher taught? Show me a stacked bar chart. The x-axis is the teacher's first name and group by course description.
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Tue', 'Wed', 'Thur', 'Sun', 'Sat', 'Fri', 'Mon']], 'y_data': [[0, 1, 1, 0, 0, 0, 0], [2, 1, 1, 1, 0, 0, 0]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Tue, Wed, Thur, Sun, Sat, Fri, Mon","0, 1, 1, 0, 0, 0, 0","Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank by the total number in desc."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 180, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 240, 0, 0, 0, 0, 0], [0, 0, 150, 0, 0, 0, 0, 270, 66, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 150], [0, 0, 0, 0, 0, 0, 240, 0, 0, 0], [0, 0, 0, 5, 0, 120, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 180, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute name by a bar chart, display Name from low to high order."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 5], [0, 2, 4]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"8–0, 6–2, 3–5","1, 0, 5","Stacked bar chart of school_id for with each ACC_Home in each acc road, rank by the Y-axis in asc."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY Team_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[4, 1, 0], [3, 0, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,Team_ID,"14–2, 14–3, 15–1","4, 1, 0","Stack bar chart of team_id vs ACC_Home based on all home, show by the total number from high to low."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 1, 5], [2, 0, 4]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,School_ID,"15–1, 14–3, 14–2","0, 1, 5","A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, order in asc by the Y-axis please."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[1, 4, 0], [3, 0, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,Team_ID,"14–2, 14–3, 15–1","1, 4, 0","Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, I want to rank All_Home in ascending order."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[4, 5, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","4, 5, 0","Stack bar chart of school_id vs ACC_Road based on all home, and show bar in asc order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 100, 100, 100], [0, 0, 0, 0, 0, 130, 0, 0, 0, 0], [0, 50, 50, 0, 0, 0, 0, 50, 0, 0], [200, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 120, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 30, 0, 30, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Revenue,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 100, 100, 100","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute name, and I want to sort by the Name in desc."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 1, 0], [0, 2, 1, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 0, 0, 0, 0, 1","How many courses for each teacher? Show me a stacked bar chart The x-axis is teacher's first name and group by course description, and display by the X in ascending."
"SELECT Name , Price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title ,  Name ORDER BY Price ASC",Stacked Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Carrowleagh', 'Mount Callan', 'Gortahile', 'Oriel', 'Codling']], 'y_data': [[0, 9, 0, 0, 0], [0, 9, 0, 15, 12], [0, 0, 12, 0, 0], [0, 0, 0, 0, 12], [0, 0, 0, 0, 8]], 'classify': ['The Case of the Bermuda Triangle', 'The Case of the Mystery Weekend', 'The Case of the Piggy Banker', 'The Case of the Smart Dummy', 'The Case: Off the Record'], 'describe': 'GROUP BY Title, GROUP BY Name'}",bar,Name,Price,"Carrowleagh, Mount Callan, Gortahile, Oriel, Codling","0, 9, 0, 0, 0","For each film, show the price and group them by cinema name in a stacked bar chart, I want to list Y-axis from low to high order."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","1, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and show Y in asc order please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 5, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, and show bars from low to high order please."
"SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sat', 'Sun', 'Fri', 'Tue']], 'y_data': [[0, 0, 0, 3, 0, 6, 0], [0, 1, 2, 0, 4, 0, 12]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Mon, Thur, Wed, Sat, Sun, Fri, Tue","0, 0, 0, 3, 0, 6, 0","Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart, and order total number from low to high order please."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Industry ,  Headquarters ORDER BY COUNT(Headquarters) DESC",Stacked Bar,Hard,company_employee,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'China', 'UK', 'Russia', 'Netherlands', 'Germany', 'France', 'Brazil']], 'y_data': [[0, 0, 0, 1, 0, 0, 0, 0], [3, 3, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Automotive', 'Banking', 'Conglomerate', 'Oil and gas', 'Retailing'], 'describe': 'GROUP BY Industry, GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, China, UK, Russia, Netherlands, Germany, France, Brazil","0, 0, 0, 1, 0, 0, 0, 0","How many companies are there in each headquarters? Return a stacked bar chart to group by industry and headquearters, and count by headquarters, and could you show in desc by the how many headquarters?"
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 4], [0, 0, 5], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"8–0, 6–2, 3–5","1, 0, 4","Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, order by the x axis in desc."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1","Give me the comparison about  Team_ID over the  ACC_Road , and group by attribute ACC_Home."
"SELECT Title , Price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ,  Title ORDER BY Title ASC",Stacked Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'Price', 'x_data': [['The Case of the Bermuda Triangle', 'The Case of the Mystery Weekend', 'The Case of the Piggy Banker', 'The Case of the Smart Dummy', 'The Case: Off the Record']], 'y_data': [[0, 9, 0, 0, 0], [0, 12, 0, 12, 8], [0, 0, 12, 0, 0], [9, 0, 0, 0, 0], [0, 15, 0, 0, 0]], 'classify': ['Carrowleagh', 'Codling', 'Gortahile', 'Mount Callan', 'Oriel'], 'describe': 'GROUP BY Name, GROUP BY Title'}",bar,Title,Price,"The Case of the Bermuda Triangle, The Case of the Mystery Weekend, The Case of the Piggy Banker, The Case of the Smart Dummy, The Case: Off the Record","0, 9, 0, 0, 0","For each cinema, show the price and group them by film title in a stacked bar chart, and show x axis in asc order."
"SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'AVG(monthly_rental)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1164.5, 0, 1021.5, 1032, 0, 0, 970.5], [679, 944.6666666666666, 865, 946.5, 1003.5, 0, 797.75]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY WEEKDAY'}",bar,date_address_to,AVG(monthly_rental),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1164.5, 0, 1021.5, 1032, 0, 0, 970.5","Visualize a bar chart about the distribution of  date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY School_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[5, 0, 1], [4, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"3–5, 6–2, 8–0","5, 0, 1","Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show Y-axis in descending order."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 1, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and  code , and group by attribute founder."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","0, 0, 240, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart, I want to rank by the Price from high to low."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","1, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, and rank in asc by the y axis please."
"SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'COUNT(date_address_to)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 2, 1, 0, 0, 2], [1, 3, 1, 2, 2, 0, 4]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY WEEKDAY'}",bar,date_address_to,COUNT(date_address_to),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 2, 1, 0, 0, 2","Find  date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 6, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, could you rank names in ascending order?"
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [5, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"3–5, 6–2, 8–0","4, 0, 1","Draw a bar chart about the distribution of  ACC_Road and  School_ID , and group by attribute All_Home."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 180, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 150], [0, 0, 150, 0, 0, 0, 0, 270, 66, 0], [0, 0, 0, 5, 0, 120, 0, 0, 0, 0], [0, 0, 0, 0, 240, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 240, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Price,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 180, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of  name and  price , and group by attribute headquarter."
"SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC",Stacked Bar,Hard,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[3, 2], [2, 1]], 'classify': ['United Kingdom', 'United States'], 'describe': 'GROUP BY Nationality, GROUP BY Type'}",bar,Type,COUNT(Type),"Cargo ship, Battle ship","3, 2","Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, and I want to order names in desc order."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Manufacturer,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 1, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute founder, and sort X-axis from high to low order please."
"SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY SUM(Employee_ID) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sat', 'Sun', 'Fri', 'Tue']], 'y_data': [[0, 0, 0, 3, 0, 6, 0], [0, 1, 2, 0, 4, 0, 12]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Mon, Thur, Wed, Sat, Sun, Fri, Tue","0, 0, 0, 3, 0, 6, 0","Stack bar chart of sum employee id vs Is_full_time based on start from, and I want to rank in ascending by the sum employee id."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 120, 0, 0, 0], [0, 0, 50, 0, 0, 0, 0, 50, 50, 0], [0, 0, 0, 0, 130, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [100, 100, 100, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 30, 0, 30, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Revenue,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 120, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, show from low to high by the bar."
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Employee_ID) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sat', 'Sun', 'Fri', 'Tue']], 'y_data': [[0, 0, 0, 3, 0, 0, 6], [0, 1, 2, 0, 4, 0, 6]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Employee_ID),"Mon, Thur, Wed, Sat, Sun, Fri, Tue","0, 0, 0, 3, 0, 0, 6","Give me the comparison about the average of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and sort in ascending by the the average of employee id."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 6, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, I want to order in asc by the x axis."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1","Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, list from high to low by the Team_ID."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 240, 0, 0, 0], [0, 0, 150, 0, 0, 0, 0, 270, 66, 0], [0, 0, 0, 0, 240, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 150], [90, 180, 180, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 0, 120, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Price,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 240, 0, 0, 0","For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart, and I want to rank x-axis in asc order."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 3, 4], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,Team_ID,"15–1, 14–3, 14–2","0, 3, 4","Stacked bar chart of team_id for with each ACC_Road in each all home, and list in asc by the y-axis."
"SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'SUM(monthly_rental)', 'x_data': [['2017', '2018']], 'y_data': [[5016, 2329], [8293, 3176]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_from BY YEAR'}",bar,date_address_from,SUM(monthly_rental),"2017, 2018","5016, 2329","Visualize a bar chart about the distribution of  date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by time."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1","Find  ACC_Road and  Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[4, 5, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","4, 5, 0","Find  All_Home and  School_ID , and group by attribute ACC_Road, and visualize them by a bar chart."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 4], [0, 2, 3]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"8–0, 6–2, 3–5","1, 0, 4","Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and could you show X in descending order?"
"SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",Stacked Bar,Extra Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'SUM(Amount_Payment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 177130, 0, 0], [0, 0, 0, 123255, 0, 71246, 38324], [423154, 0, 407235, 0, 241730, 456098, 1003648], [0, 0, 172309, 0, 0, 466750, 155654]], 'classify': ['American Express', 'Discover Card', 'MasterCard', 'Visa'], 'describe': 'GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY WEEKDAY'}",bar,Date_Payment_Made,SUM(Amount_Payment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 177130, 0, 0","Give me a bar chart that bins the payment date into the day of the day of the week interval and then compute the total amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 2, 2, 2","For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter by a bar chart, and sort x-axis in descending order."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[1, 5, 0], [4, 0, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","1, 5, 0","Visualize a bar chart about the distribution of  All_Home and  School_ID , and group by attribute ACC_Home."
"SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ,  Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",Stacked Bar,Extra Hard,local_govt_and_lot,"{'chart': 'bar', 'x_name': 'Type_of_Thing_Code', 'y_name': 'COUNT(Type_of_Thing_Code)', 'x_data': [['Commen', 'Electronics', 'Furniture']], 'y_data': [[5, 4, 1], [1, 1, 0], [2, 0, 1]], 'classify': ['Denesik and Sons Party', 'Reinger, Hudson and Nolan Group', 'Robel-Schulist Group'], 'describe': 'GROUP BY organization_details, GROUP BY Type_of_Thing_Code'}",bar,Type_of_Thing_Code,COUNT(Type_of_Thing_Code),"Commen, Electronics, Furniture","5, 4, 1","Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, show in desc by the Y."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY COUNT(EMP_FNAME) ASC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Robert', 'Arnelle', 'Carlos', 'Ismael', 'Gerald', 'Peter']], 'y_data': [[1, 0, 0, 2, 0, 0], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 1], [0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 2]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Robert, Arnelle, Carlos, Ismael, Gerald, Peter","1, 0, 0, 2, 0, 0","Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, could you order total number from low to high order please?"
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time",Stacked Bar,Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 1, 0], [0, 2, 1, 1, 0, 0, 1]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 1, 0",Stacked bar chart of the number of start from for with each Is_full_time in each start from
"SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time",Stacked Bar,Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 6, 3, 0], [0, 12, 2, 1, 0, 0, 4]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 6, 3, 0","Visualize a bar chart about the distribution of  Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 5], [0, 2, 4]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"8–0, 6–2, 3–5","1, 0, 5","Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, and order by the bars in desc."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) ASC",Stacked Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['2018', '2017']], 'y_data': [[1, 5], [2, 6]], 'classify': ['Devin Mills', 'Tillman Ernser'], 'describe': 'GROUP BY customer_name, BIN active_from_date BY YEAR'}",bar,active_from_date,COUNT(active_from_date),"2018, 2017","1, 5","How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart, display in ascending by the y-axis please."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute name, and visualize them by a bar chart, and rank names in ascending order."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 6, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and  code , and group by attribute headquarter."
"SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code ORDER BY Date_Payment_Made ASC",Stacked Bar,Extra Hard,insurance_policies,"{'chart': 'bar', 'x_name': 'Date_Payment_Made', 'y_name': 'AVG(Amount_Payment)', 'x_data': [['2017', '2018']], 'y_data': [[0, 25304.285714285714], [19402.083333333332, 0], [88524.33333333333, 109454.54545454546], [43742.77777777778, 611.9166666666666]], 'classify': ['American Express', 'Discover Card', 'MasterCard', 'Visa'], 'describe': 'GROUP BY Payment_Method_Code, BIN Date_Payment_Made BY YEAR'}",bar,Date_Payment_Made,AVG(Amount_Payment),"2017, 2018","0, 25304.285714285714","Give me a bar chart that bins the payment date into the Year interval and then shows the average of the amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [5, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"3–5, 6–2, 8–0","4, 0, 1",Stack bar chart of school_id vs All_Home based on acc road
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 4, 3], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,Team_ID,"15–1, 14–3, 14–2","0, 4, 3","Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, display from high to low by the X-axis."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[5, 4, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","5, 4, 0","Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and rank from high to low by the Y."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME",Stacked Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 1, 0], [0, 2, 1, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 0, 0, 0, 0, 1",How many courses for each teacher? Show me a stacked bar chart. The x-axis is teacher's first name and group by course description.
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Mon', 'Fri', 'Sat', 'Sun', 'Thur', 'Wed', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 2]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Mon, Fri, Sat, Sun, Thur, Wed, Tue","0, 0, 0, 0, 1, 1, 0","Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and show in asc by the Y."
"SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description ORDER BY COUNT(skill_description) DESC",Stacked Bar,Extra Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['TV, Video', 'Mechanical', 'Electrical']], 'y_data': [[4, 1, 0], [2, 2, 3], [1, 2, 0]], 'classify': ['MW', 'PW', 'TW'], 'describe': 'GROUP BY fault_short_name, GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"TV, Video, Mechanical, Electrical","4, 1, 0","A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is skill description and group by fault short name, display by the y axis in descending."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T2.Revenue ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['Floppy disk', 'Memory', 'Printer', 'Toner cartridge', 'CD drive', 'DVD burner', 'Monitor', 'Hard drive', 'DVD drive', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 100, 100, 0, 0, 100, 0], [0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 50, 50, 0, 0, 0, 0, 50, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [0, 0, 0, 0, 0, 0, 120, 0, 0, 0], [30, 30, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Revenue,"Floppy disk, Memory, Printer, Toner cartridge, CD drive, DVD burner, Monitor, Hard drive, DVD drive, ZIP drive","0, 0, 0, 0, 100, 100, 0, 0, 100, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute name, rank from low to high by the y-axis."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ,  CRS_DESCRIPTION",Stacked Bar,Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications']], 'y_data': [[2, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 2, 0], [0, 2, 0, 0, 0, 0], [0, 0, 1, 0, 0, 2], [1, 0, 0, 0, 0, 0]], 'classify': ['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert'], 'describe': 'GROUP BY EMP_FNAME, GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Accounting I, Accounting II, Database Design and Implementation, Intro. to Microcomputing, Intro. to Statistics, Statistical Applications","2, 0, 0, 0, 0, 0",How many courses for each course description? Show me a stacked bar chart. The x-axis is course description and group by instructor's name.
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY School_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[5, 1, 0], [4, 0, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","5, 1, 0","Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and sort by the y-axis from high to low."
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details",Stacked Bar,Hard,customers_and_invoices,"{'chart': 'bar', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 1, 0, 3, 2, 0], [3, 2, 0, 0, 0, 0, 2]], 'classify': ['Regular', 'VIP'], 'describe': 'GROUP BY other_account_details, BIN date_account_opened BY WEEKDAY'}",bar,date_account_opened,COUNT(date_account_opened),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 1, 0, 3, 2, 0",Show the number of accounts opened in each day. Bin the account open day by weekday and group by other account details in a stacked bar chart.
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Manufacturer ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","0, 2, 2, 0, 0, 0, 0, 2, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute name, and list by the y axis from low to high."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[3, 4, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,Team_ID,"14–2, 14–3, 15–1","3, 4, 0","Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to show X from low to high order."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[5, 4, 0], [0, 0, 2], [1, 0, 0]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"14–2, 14–3, 15–1","5, 4, 0","Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and sort by the Y-axis in descending."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['DVD drive', 'DVD burner', 'Toner cartridge', 'Printer', 'CD drive', 'Monitor', 'Floppy disk', 'ZIP drive', 'Memory', 'Hard drive']], 'y_data': [[6, 10, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0], [11, 0, 9, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"DVD drive, DVD burner, Toner cartridge, Printer, CD drive, Monitor, Floppy disk, ZIP drive, Memory, Hard drive","6, 10, 0, 0, 7, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, I want to order in descending by the Code."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert']], 'y_data': [[2, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 1, 0], [0, 2, 1, 0, 0, 0], [0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Arnelle, Carlos, Gerald, Ismael, Peter, Robert","2, 0, 0, 0, 0, 1","Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, and I want to display in asc by the x-axis."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Manufacturer,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 1, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute founder, and visualize them by a bar chart, sort bar from high to low order."
"SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank ORDER BY Rank DESC",Stacked Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Professor', 'Instructor', 'AsstProf', 'AssocProf']], 'y_data': [[0, 3, 3, 1], [27, 5, 12, 7]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex, GROUP BY Rank'}",bar,Rank,count(*),"Professor, Instructor, AsstProf, AssocProf","0, 3, 3, 1","Show all the ranks and the number of male and female faculty for each rank in a bar chart, list by the bar in desc."
"SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY AVG(Shop_ID) ASC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['Mon', 'Thur', 'Wed', 'Fri', 'Sun', 'Tue', 'Sat']], 'y_data': [[0, 0, 0, 2, 0, 0, 8], [0, 1, 1, 0, 4, 5.5, 0]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,AVG(Shop_ID),"Mon, Thur, Wed, Fri, Sun, Tue, Sat","0, 0, 0, 2, 0, 0, 8","Stacked bar chart of the average of shop id for with each Is_full_time in each start from, display y axis from low to high order."
"SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1032, 1297, 1036, 644, 1297, 1032, 1007], [2559, 865, 0, 756, 2864, 1867, 2558]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_from BY WEEKDAY'}",bar,date_address_from,SUM(monthly_rental),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1032, 1297, 1036, 644, 1297, 1032, 1007","Show me about the distribution of  date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by weekday in a bar chart."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 180, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 240, 0, 0, 0, 0, 0], [0, 0, 150, 0, 0, 0, 0, 270, 66, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 150], [0, 0, 0, 0, 0, 0, 240, 0, 0, 0], [0, 0, 0, 5, 0, 120, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 180, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of  name and  price , and group by attribute name."
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Start_from) DESC",Stacked Bar,Extra Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Tue', 'Wed', 'Thur', 'Sun', 'Sat', 'Fri', 'Mon']], 'y_data': [[0, 1, 1, 0, 0, 0, 0], [2, 1, 1, 1, 0, 0, 0]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Tue, Wed, Thur, Sun, Sat, Fri, Mon","0, 1, 1, 0, 0, 0, 0","Stacked bar chart of the number of start from for with each Is_full_time in each start from, and list from high to low by the y-axis."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Manufacturer ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","0, 2, 2, 0, 0, 0, 0, 2, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute name by a bar chart, and I want to list y axis from low to high order please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 6, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of  name and  code , and group by attribute headquarter."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 6, 10, 7], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 11, 0, 0], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 4, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 6, 10, 7","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, display in desc by the X."
"SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description ORDER BY COUNT(skill_description) ASC",Stacked Bar,Extra Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['Electrical', 'Mechanical', 'TV, Video']], 'y_data': [[0, 1, 4], [3, 2, 2], [0, 2, 1]], 'classify': ['MW', 'PW', 'TW'], 'describe': 'GROUP BY fault_short_name, GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"Electrical, Mechanical, TV, Video","0, 1, 4","A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is skill description and group by fault short name, and order by the Y in ascending."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","0, 0, 240, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder, display y axis in desc order."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 4, 1], [2, 0, 3]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,Team_ID,"15–1, 14–3, 14–2","0, 4, 1","Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and order bars in desc order."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2329, 0, 2043, 1032, 0, 0, 1941], [679, 2834, 865, 1893, 2007, 0, 3191]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY WEEKDAY'}",bar,date_address_to,SUM(monthly_rental),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2329, 0, 2043, 1032, 0, 0, 1941","Find  date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart."
"SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'COUNT(date_address_to)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 2, 1, 0, 0, 2], [1, 3, 1, 2, 2, 0, 4]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY WEEKDAY'}",bar,date_address_to,COUNT(date_address_to),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 2, 1, 0, 0, 2","Show me about the distribution of  date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday in a bar chart."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY ACC_Road ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3, 0, 1], [4, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","3, 0, 1","Stacked bar chart of team_id for with each All_Home in each acc road, and list X from low to high order please."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3, 0, 1], [4, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","3, 0, 1","Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, sort in desc by the Team_ID."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Manufacturer,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, rank by the X-axis in ascending."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name",Stacked Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0]], 'classify': ['Devin Mills', 'Tillman Ernser'], 'describe': 'GROUP BY customer_name, BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0",Find the number of customers that use email as the contact channel and group by customer name and bin active date by weekday in a stacked bar chart.
"SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY COUNT(services) DESC",Stacked Bar,Hard,station_weather,"{'chart': 'bar', 'x_name': 'services', 'y_name': 'COUNT(services)', 'x_data': [['Metropolitan line and Chiltern Railways', 'Greater Anglia', 'Metropolitan line', 'London Overground and London Midland', 'c2c', 'London Overground']], 'y_data': [[1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0], [2, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0]], 'classify': ['Brentwood', 'Broxbourne', 'Chiltern', 'Three Rivers', 'Thurrock', 'Watford'], 'describe': 'GROUP BY local_authority, GROUP BY services'}",bar,services,COUNT(services),"Metropolitan line and Chiltern Railways, Greater Anglia, Metropolitan line, London Overground and London Midland, c2c, London Overground","1, 0, 0, 0, 0, 0","Stacked bar of services and how many services colored by local_authority, and order by the y axis in desc."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 120, 0, 0, 0], [0, 0, 50, 0, 0, 0, 0, 50, 50, 0], [0, 0, 0, 0, 130, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [100, 100, 100, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 30, 0, 30, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Revenue,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 120, 0, 0, 0","For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute founder, and show from low to high by the bar."
"SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY COUNT(Away_team) DESC",Stacked Bar,Hard,game_injury,"{'chart': 'bar', 'x_name': 'Away_team', 'y_name': 'COUNT(Away_team)', 'x_data': [['Pakhtakor', 'Bunyodkor', 'Quruvchi']], 'y_data': [[9, 0, 0], [0, 7, 3], [1, 0, 0]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Home_team, GROUP BY Away_team'}",bar,Away_team,COUNT(Away_team),"Pakhtakor, Bunyodkor, Quruvchi","9, 0, 0","Stacked bar chart of how many away team for with each Home_team in each away team, and could you list y axis in desc order?"
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description",Stacked Bar,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 3, 1, 1, 1, 2], [0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 2, 1, 0]], 'classify': ['excellent', 'fun', 'good'], 'describe': 'GROUP BY Document_Type_Description, BIN Document_Date BY WEEKDAY'}",bar,Document_Date,COUNT(Document_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 3, 1, 1, 1, 2",Show the number of documents created in each day and bin document date by weekday and group by document type description with a stacked bar chart.
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name",Stacked Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0]], 'classify': ['Devin Mills', 'Tillman Ernser'], 'describe': 'GROUP BY customer_name, BIN active_from_date BY WEEKDAY'}",bar,active_from_date,COUNT(active_from_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 0, 0, 0",How many customers using email as the contact channel? Group by customer name and bin active date by weekday in a stacked bar chart.
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY Team_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 4], [0, 2, 3]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"8–0, 6–2, 3–5","1, 0, 4","Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and rank by the Team_ID in ascending please."
"SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC",Stacked Bar,Extra Hard,customers_and_addresses,"{'chart': 'bar', 'x_name': 'active_from_date', 'y_name': 'COUNT(active_from_date)', 'x_data': [['2017', '2018']], 'y_data': [[5, 1], [6, 2]], 'classify': ['Devin Mills', 'Tillman Ernser'], 'describe': 'GROUP BY customer_name, BIN active_from_date BY YEAR'}",bar,active_from_date,COUNT(active_from_date),"2017, 2018","5, 1","Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart, and I want to list y axis in desc order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T2.Revenue DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['ZIP drive', 'DVD drive', 'Hard drive', 'Monitor', 'DVD burner', 'CD drive', 'Toner cartridge', 'Printer', 'Memory', 'Floppy disk']], 'y_data': [[0, 100, 0, 0, 100, 100, 0, 0, 0, 0], [200, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 50, 0, 0, 0, 0, 50, 50, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 30, 30], [0, 0, 130, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 120, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Revenue,"ZIP drive, DVD drive, Hard drive, Monitor, DVD burner, CD drive, Toner cartridge, Printer, Memory, Floppy disk","0, 100, 0, 0, 100, 100, 0, 0, 0, 0","For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute headquarter in a bar chart, and could you list by the Revenue in desc?"
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Price ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['Floppy disk', 'Toner cartridge', 'CD drive', 'Memory', 'ZIP drive', 'DVD burner', 'Hard drive', 'Monitor', 'Printer', 'DVD drive']], 'y_data': [[0, 0, 90, 0, 0, 180, 0, 0, 0, 180], [0, 0, 0, 0, 0, 0, 0, 240, 0, 0], [0, 66, 0, 0, 0, 0, 0, 0, 270, 150], [0, 0, 0, 0, 150, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 240, 0, 0], [5, 0, 0, 120, 0, 0, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"Floppy disk, Toner cartridge, CD drive, Memory, ZIP drive, DVD burner, Hard drive, Monitor, Printer, DVD drive","0, 0, 90, 0, 0, 180, 0, 0, 0, 180","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute name, show Y-axis from low to high order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 120, 0, 0, 0], [0, 0, 50, 0, 0, 0, 0, 50, 50, 0], [0, 0, 0, 0, 130, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [100, 100, 100, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 30, 0, 30, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Revenue,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 120, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and  revenue , and group by attribute founder."
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY All_Home DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 5, 4], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"15–1, 14–3, 14–2","0, 5, 4","Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and rank in desc by the x axis."
"SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  fault_short_name ORDER BY COUNT(fault_short_name) ASC",Stacked Bar,Extra Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'fault_short_name', 'y_name': 'COUNT(fault_short_name)', 'x_data': [['TW', 'MW', 'PW']], 'y_data': [[0, 0, 3], [2, 1, 2], [1, 4, 2]], 'classify': ['Electrical', 'Mechanical', 'TV, Video'], 'describe': 'GROUP BY skill_description, GROUP BY fault_short_name'}",bar,fault_short_name,COUNT(fault_short_name),"TW, MW, PW","0, 0, 3","A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is falut short name and group by skill description, and I want to show from low to high by the y axis please."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute name, and rank by the x-axis in ascending."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, I want to display by the names in ascending."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 120, 0, 0, 0, 0, 0, 0], [0, 50, 50, 0, 0, 0, 0, 50, 0, 0], [0, 0, 0, 0, 0, 130, 0, 0, 0, 0], [200, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 100, 100, 100], [0, 0, 0, 0, 30, 0, 30, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Revenue,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 120, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, sort by the X-axis in descending."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 3, 4], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,Team_ID,"15–1, 14–3, 14–2","0, 3, 4","Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, could you rank by the total number in asc please?"
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY PROF_OFFICE ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION DESC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Statistical Applications', 'Intro. to Statistics', 'Intro. to Microcomputing', 'Database Design and Implementation', 'Accounting II', 'Accounting I']], 'y_data': [[0, 0, 0, 0, 0, 1], [2, 0, 0, 1, 0, 0], [0, 2, 1, 0, 0, 0], [0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0], [0, 0, 2, 0, 0, 0]], 'classify': ['BBG 208', 'KLR 203E', 'KLR 211', 'KLR 229D', 'KLR 244', 'KLR 300'], 'describe': 'GROUP BY PROF_OFFICE, GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Statistical Applications, Intro. to Statistics, Intro. to Microcomputing, Database Design and Implementation, Accounting II, Accounting I","0, 0, 0, 0, 0, 1","Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by office name, and list in descending by the x-axis."
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME DESC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Robert', 'Peter', 'Ismael', 'Gerald', 'Carlos', 'Arnelle']], 'y_data': [[1, 0, 0, 0, 0, 2], [0, 0, 2, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 2, 0], [0, 0, 0, 2, 0, 0], [0, 2, 0, 0, 0, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Robert, Peter, Ismael, Gerald, Carlos, Arnelle","1, 0, 0, 0, 0, 2","Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, sort in descending by the EMP_FNAME please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'Toner cartridge', 'DVD burner', 'DVD drive']], 'y_data': [[0, 0, 0, 0, 0, 7, 0, 0, 10, 6], [0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 9, 0, 11], [0, 2, 0, 4, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, Toner cartridge, DVD burner, DVD drive","0, 0, 0, 0, 0, 7, 0, 0, 10, 6","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, and order in ascending by the Y."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","180, 0, 0, 0, 180, 0, 0, 90, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute name, and show by the y axis in descending."
"SELECT CRS_DESCRIPTION , COUNT(CRS_DESCRIPTION) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY EMP_FNAME ,  CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION ASC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'CRS_DESCRIPTION', 'y_name': 'COUNT(CRS_DESCRIPTION)', 'x_data': [['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications']], 'y_data': [[2, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 2, 0], [0, 2, 0, 0, 0, 0], [0, 0, 1, 0, 0, 2], [1, 0, 0, 0, 0, 0]], 'classify': ['Arnelle', 'Carlos', 'Gerald', 'Ismael', 'Peter', 'Robert'], 'describe': 'GROUP BY EMP_FNAME, GROUP BY CRS_DESCRIPTION'}",bar,CRS_DESCRIPTION,COUNT(CRS_DESCRIPTION),"Accounting I, Accounting II, Database Design and Implementation, Intro. to Microcomputing, Intro. to Statistics, Statistical Applications","2, 0, 0, 0, 0, 0","Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's name, rank CRS_DESCRIPTION in asc order."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1",Stacked bar chart of team_id for with each ACC_Home in each acc road
"SELECT first_name , COUNT(first_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  first_name",Stacked Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'COUNT(first_name)', 'x_data': [['Alexys', 'Archibald', 'Brian', 'Clemens', 'Courtney', 'Cullen', 'Josie', 'Lorine', 'Manley', 'Naomi', 'Nellie', 'Samanta', 'Weston']], 'y_data': [[0, 1, 0, 0, 1, 0, 0, 1, 1, 2, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]], 'classify': ['Electrical', 'Mechanical', 'TV, Video'], 'describe': 'GROUP BY skill_description, GROUP BY first_name'}",bar,first_name,COUNT(first_name),"Alexys, Archibald, Brian, Clemens, Courtney, Cullen, Josie, Lorine, Manley, Naomi, Nellie, Samanta, Weston","0, 1, 0, 0, 1, 0, 0, 1, 1, 2, 1, 1, 1",List the number of enginners in a stacked bar chart. The x-axis is first name and group by skill description.
"SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_from', 'y_name': 'AVG(monthly_rental)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1032, 1297, 1036, 644, 1297, 1032, 1007], [853, 865, 0, 756, 954.6666666666666, 933.5, 852.6666666666666]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_from BY WEEKDAY'}",bar,date_address_from,AVG(monthly_rental),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1032, 1297, 1036, 644, 1297, 1032, 1007","A bar chart shows the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Code DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['DVD drive', 'DVD burner', 'Toner cartridge', 'Printer', 'CD drive', 'Monitor', 'Floppy disk', 'ZIP drive', 'Memory', 'Hard drive']], 'y_data': [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [11, 0, 9, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0], [6, 10, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 2, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"DVD drive, DVD burner, Toner cartridge, Printer, CD drive, Monitor, Floppy disk, ZIP drive, Memory, Hard drive","0, 0, 0, 0, 0, 5, 0, 0, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, rank y axis from high to low order."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Manufacturer ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Manufacturer,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","0, 2, 2, 0, 0, 0, 0, 2, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, and order in ascending by the Y-axis please."
"SELECT services , COUNT(services) FROM station GROUP BY local_authority ,  services ORDER BY services DESC",Stacked Bar,Hard,station_weather,"{'chart': 'bar', 'x_name': 'services', 'y_name': 'COUNT(services)', 'x_data': [['c2c', 'Metropolitan line and Chiltern Railways', 'Metropolitan line', 'London Overground and London Midland', 'London Overground', 'Greater Anglia']], 'y_data': [[0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 2], [0, 2, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0]], 'classify': ['Brentwood', 'Broxbourne', 'Chiltern', 'Three Rivers', 'Thurrock', 'Watford'], 'describe': 'GROUP BY local_authority, GROUP BY services'}",bar,services,COUNT(services),"c2c, Metropolitan line and Chiltern Railways, Metropolitan line, London Overground and London Midland, London Overground, Greater Anglia","0, 0, 0, 0, 0, 1","Stacked bar of services and how many services colored by local_authority, could you order from high to low by the bar please?"
"SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time",Stacked Bar,Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 6, 3, 0], [0, 12, 2, 1, 0, 0, 4]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,SUM(Employee_ID),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 6, 3, 0","Give me the comparison about the sum of Employee_ID over the  Start_from , and group by attribute Is_full_time and bin start_from by weekday."
"SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank ORDER BY count(*) DESC",Stacked Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Professor', 'AsstProf', 'AssocProf', 'Instructor']], 'y_data': [[0, 3, 3, 1], [27, 12, 7, 5]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex, GROUP BY Rank'}",bar,Rank,count(*),"Professor, AsstProf, AssocProf, Instructor","0, 3, 3, 1","Stacked bar chart of the total number for with each Sex in each rank, I want to show in desc by the the total number ."
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC",Stacked Bar,Hard,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[1, 2], [2, 3]], 'classify': ['Battle ship', 'Cargo ship'], 'describe': 'GROUP BY Type, GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","1, 2","Stacked bar chart of how many nationality for with each Type in each nationality, and show Y-axis in ascending order please."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 3, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 6, 0, 6, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Code,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 1, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, and rank by the bar in descending."
"SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY COUNT(Nationality) ASC",Stacked Bar,Hard,ship_mission,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['United States', 'United Kingdom']], 'y_data': [[1, 2], [2, 3]], 'classify': ['Battle ship', 'Cargo ship'], 'describe': 'GROUP BY Type, GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"United States, United Kingdom","1, 2","Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, order from low to high by the total number."
"SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC",Stacked Bar,Hard,ship_mission,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Cargo ship', 'Battle ship']], 'y_data': [[3, 2], [2, 1]], 'classify': ['United Kingdom', 'United States'], 'describe': 'GROUP BY Nationality, GROUP BY Type'}",bar,Type,COUNT(Type),"Cargo ship, Battle ship","3, 2","Draw a bar chart showing the total number of every ship type by categorizing by nationality, and list x-axis in descending order."
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time",Stacked Bar,Hard,employee_hire_evaluation,"{'chart': 'bar', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 1, 0], [0, 2, 1, 1, 0, 0, 1]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY WEEKDAY'}",bar,Start_from,COUNT(Start_from),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 1, 0","Give me the comparison about the amount of Start_from over the  Start_from , and group by attribute Is_full_time and bin start_from by weekday."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['Feb', 'Mar']], 'y_data': [[1297, 6048], [747, 10722]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY MONTH'}",bar,date_address_to,SUM(monthly_rental),"Feb, Mar","1297, 6048","Show me about the distribution of  date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time in a bar chart."
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY Team_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 3, 4], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,Team_ID,"15–1, 14–3, 14–2","0, 3, 4","Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and rank Team_ID in asc order."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 180, 180, 90], [150, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 66, 270, 0, 0, 0, 0, 150, 0, 0], [0, 0, 0, 0, 120, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 240, 0, 0, 0, 0], [0, 0, 0, 240, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Price,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 180, 180, 90","For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute headquarter by a bar chart, rank by the X in desc."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","2, 2, 2, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute headquarter, show bar from low to high order."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[90, 180, 180, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 240, 0, 0, 0, 0, 0], [0, 0, 150, 0, 0, 0, 0, 270, 66, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 150], [0, 0, 0, 0, 0, 0, 240, 0, 0, 0], [0, 0, 0, 5, 0, 120, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","90, 180, 180, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and  price , and group by attribute name."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","180, 0, 0, 0, 180, 0, 0, 90, 0, 0","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute headquarter, could you display by the y axis in desc?"
"SELECT local_authority , COUNT(local_authority) FROM station GROUP BY services ,  local_authority ORDER BY local_authority ASC",Stacked Bar,Hard,station_weather,"{'chart': 'bar', 'x_name': 'local_authority', 'y_name': 'COUNT(local_authority)', 'x_data': [['Brentwood', 'Broxbourne', 'Chiltern', 'Three Rivers', 'Thurrock', 'Watford']], 'y_data': [[1, 2, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0], [0, 0, 2, 1, 0, 0], [0, 0, 0, 0, 1, 0]], 'classify': ['Greater Anglia', 'London Overground', 'London Overground and London Midland', 'Metropolitan line', 'Metropolitan line and Chiltern Railways', 'c2c'], 'describe': 'GROUP BY services, GROUP BY local_authority'}",bar,local_authority,COUNT(local_authority),"Brentwood, Broxbourne, Chiltern, Three Rivers, Thurrock, Watford","1, 2, 0, 0, 0, 0","count services by services, and split by local authorities with a stacked bar chart, and show by the bars from low to high."
"SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Stacked Bar,Extra Hard,behavior_monitoring,"{'chart': 'bar', 'x_name': 'date_address_to', 'y_name': 'COUNT(date_address_to)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 0, 2, 1, 0, 0, 2], [1, 3, 1, 2, 2, 0, 4]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, BIN date_address_to BY WEEKDAY'}",bar,date_address_to,COUNT(date_address_to),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 0, 2, 1, 0, 0, 2","Return a bar chart about the distribution of  date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY All_Home ,  ACC_Road ORDER BY Team_ID DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[3, 0, 1], [4, 0, 0], [0, 2, 0]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","3, 0, 1","Stacked bar chart of team_id for with each All_Home in each acc road, and rank Y-axis from high to low order."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[5, 0, 1], [4, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"3–5, 6–2, 8–0","5, 0, 1","Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show x axis in ascending order."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Manufacturer DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Memory', 'Floppy disk', 'Hard drive', 'DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'DVD burner', 'CD drive', 'Monitor']], 'y_data': [[0, 0, 2, 0, 0, 0, 0, 2, 2, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 3, 3, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [6, 6, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Manufacturer,"Memory, Floppy disk, Hard drive, DVD drive, ZIP drive, Toner cartridge, Printer, DVD burner, CD drive, Monitor","0, 0, 2, 0, 0, 0, 0, 2, 2, 0","For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute name in a bar chart, and display Manufacturer in desc order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T2.Revenue DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['ZIP drive', 'DVD drive', 'Hard drive', 'Monitor', 'DVD burner', 'CD drive', 'Toner cartridge', 'Printer', 'Memory', 'Floppy disk']], 'y_data': [[0, 100, 0, 0, 100, 100, 0, 0, 0, 0], [0, 0, 130, 0, 0, 0, 0, 0, 0, 0], [0, 50, 0, 0, 0, 0, 50, 50, 0, 0], [200, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 120, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 30, 30]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Revenue,"ZIP drive, DVD drive, Hard drive, Monitor, DVD burner, CD drive, Toner cartridge, Printer, Memory, Floppy disk","0, 100, 0, 0, 100, 100, 0, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and revenue , and group by attribute name, order by the y-axis in desc."
"SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name",Stacked Bar,Extra Hard,dog_kennels,"{'chart': 'bar', 'x_name': 'date_of_treatment', 'y_name': 'COUNT(date_of_treatment)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0]], 'classify': ['Houston', 'Kacey', 'Lyric'], 'describe': 'GROUP BY name, BIN date_of_treatment BY WEEKDAY'}",bar,date_of_treatment,COUNT(date_of_treatment),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 1, 0, 0, 0",How many dogs of the rarest breed in each treatment day? Draw a stacked bar chart that bins date of treatment by weekday and groups by dog's name.
"SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME DESC",Stacked Bar,Extra Hard,college_1,"{'chart': 'bar', 'x_name': 'EMP_FNAME', 'y_name': 'COUNT(EMP_FNAME)', 'x_data': [['Robert', 'Peter', 'Ismael', 'Gerald', 'Carlos', 'Arnelle']], 'y_data': [[1, 0, 0, 0, 0, 2], [0, 0, 2, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 2, 0], [0, 0, 0, 2, 0, 0], [0, 2, 0, 0, 0, 0]], 'classify': ['Accounting I', 'Accounting II', 'Database Design and Implementation', 'Intro. to Microcomputing', 'Intro. to Statistics', 'Statistical Applications'], 'describe': 'GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME'}",bar,EMP_FNAME,COUNT(EMP_FNAME),"Robert, Peter, Ismael, Gerald, Carlos, Arnelle","1, 0, 0, 0, 0, 2","How many courses for each teacher? Show me a stacked bar chart The x-axis is teacher's first name and group by course description, show in descending by the bars."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Monitor', 'CD drive', 'DVD burner', 'Printer', 'Toner cartridge', 'ZIP drive', 'DVD drive', 'Hard drive', 'Floppy disk', 'Memory']], 'y_data': [[0, 2, 2, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Code,"Monitor, CD drive, DVD burner, Printer, Toner cartridge, ZIP drive, DVD drive, Hard drive, Floppy disk, Memory","0, 2, 2, 0, 0, 0, 0, 2, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, display in ascending by the y-axis."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY COUNT(Document_Date) DESC",Stacked Bar,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'bar', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Sun', 'Mon', 'Tue']], 'y_data': [[3, 1, 2, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0], [1, 2, 1, 1, 0, 0, 0]], 'classify': ['excellent', 'fun', 'good'], 'describe': 'GROUP BY Document_Type_Description, BIN Document_Date BY WEEKDAY'}",bar,Document_Date,COUNT(Document_Date),"Wed, Fri, Thur, Sat, Sun, Mon, Tue","3, 1, 2, 1, 1, 1, 0","Show the number of documents created in each day and bin document date by weekday and group by document type description with a stacked bar chart, could you rank by the Y-axis in descending please?"
"SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank ORDER BY count(*) ASC",Stacked Bar,Hard,activity_1,"{'chart': 'bar', 'x_name': 'Rank', 'y_name': 'count(*)', 'x_data': [['Instructor', 'AssocProf', 'AsstProf', 'Professor']], 'y_data': [[1, 3, 3, 0], [5, 7, 12, 27]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex, GROUP BY Rank'}",bar,Rank,count(*),"Instructor, AssocProf, AsstProf, Professor","1, 3, 3, 0","Show all the ranks and the number of male and female faculty for each rank in a bar chart, rank by the Y in ascending."
"SELECT ACC_Road , School_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road ORDER BY ACC_Road DESC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'School_ID', 'x_data': [['8–0', '6–2', '3–5']], 'y_data': [[1, 0, 5], [0, 2, 4]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,School_ID,"8–0, 6–2, 3–5","1, 0, 5","Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and display in descending by the X."
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name ORDER BY T1.Price DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['DVD drive', 'Printer', 'Monitor', 'Hard drive', 'DVD burner', 'ZIP drive', 'Memory', 'CD drive', 'Toner cartridge', 'Floppy disk']], 'y_data': [[180, 0, 0, 0, 180, 0, 0, 90, 0, 0], [0, 0, 0, 0, 0, 150, 0, 0, 0, 0], [150, 270, 0, 0, 0, 0, 0, 0, 66, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 5], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0], [0, 0, 240, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Price,"DVD drive, Printer, Monitor, Hard drive, DVD burner, ZIP drive, Memory, CD drive, Toner cartridge, Floppy disk","180, 0, 0, 0, 180, 0, 0, 90, 0, 0","For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute headquarter in a bar chart, and could you sort in desc by the Y?"
"SELECT Title , Price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ,  Title ORDER BY Price ASC",Stacked Bar,Hard,cinema,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'Price', 'x_data': [['The Case: Off the Record', 'The Case of the Bermuda Triangle', 'The Case of the Piggy Banker', 'The Case of the Smart Dummy', 'The Case of the Mystery Weekend']], 'y_data': [[0, 0, 0, 0, 9], [8, 0, 0, 12, 12], [0, 0, 0, 12, 0], [0, 9, 0, 0, 0], [0, 0, 0, 0, 15]], 'classify': ['Carrowleagh', 'Codling', 'Gortahile', 'Mount Callan', 'Oriel'], 'describe': 'GROUP BY Name, GROUP BY Title'}",bar,Title,Price,"The Case: Off the Record, The Case of the Bermuda Triangle, The Case of the Piggy Banker, The Case of the Smart Dummy, The Case of the Mystery Weekend","0, 0, 0, 0, 9","For each cinema, show the price and group them by film title in a stacked bar chart, could you display by the Price in asc?"
"SELECT All_Home , Team_ID FROM basketball_match GROUP BY ACC_Home ,  All_Home ORDER BY All_Home ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'Team_ID', 'x_data': [['14–2', '14–3', '15–1']], 'y_data': [[1, 4, 0], [3, 0, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY All_Home'}",bar,All_Home,Team_ID,"14–2, 14–3, 15–1","1, 4, 0","Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and rank x-axis from low to high order."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 3, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Manufacturer,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","0, 0, 0, 0, 0, 0, 1, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute founder, and could you sort by the bar in asc?"
"SELECT All_Home , School_ID FROM basketball_match GROUP BY ACC_Road ,  All_Home ORDER BY School_ID ASC",Stacked Bar,Medium,university_basketball,"{'chart': 'bar', 'x_name': 'All_Home', 'y_name': 'School_ID', 'x_data': [['15–1', '14–3', '14–2']], 'y_data': [[0, 4, 5], [2, 0, 0], [0, 0, 1]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road, GROUP BY All_Home'}",bar,All_Home,School_ID,"15–1, 14–3, 14–2","0, 4, 5","Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to list from low to high by the y-axis please."
"SELECT T1.Name , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder , T1.Name ORDER BY T1.Manufacturer DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer', 'x_data': [['Memory', 'Floppy disk', 'Hard drive', 'DVD drive', 'ZIP drive', 'Toner cartridge', 'Printer', 'DVD burner', 'CD drive', 'Monitor']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 3, 0, 0, 3, 3, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 2, 2, 0], [6, 6, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder, GROUP BY Name'}",bar,Name,Manufacturer,"Memory, Floppy disk, Hard drive, DVD drive, ZIP drive, Toner cartridge, Printer, DVD burner, CD drive, Monitor","0, 0, 0, 0, 0, 0, 0, 0, 0, 1","For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and manufacturer , and group by attribute founder, and could you rank in desc by the y-axis?"
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Code ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['Hard drive', 'Memory', 'ZIP drive', 'Floppy disk', 'Monitor', 'CD drive', 'Printer', 'Toner cartridge', 'DVD burner', 'DVD drive']], 'y_data': [[0, 0, 0, 0, 0, 7, 0, 0, 10, 6], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 9, 0, 11], [0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 2, 0, 4, 0, 0, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"Hard drive, Memory, ZIP drive, Floppy disk, Monitor, CD drive, Printer, Toner cartridge, DVD burner, DVD drive","0, 0, 0, 0, 0, 7, 0, 0, 10, 6","For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and could you list Y in ascending order?"
"SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY Away_team DESC",Stacked Bar,Hard,game_injury,"{'chart': 'bar', 'x_name': 'Away_team', 'y_name': 'COUNT(Away_team)', 'x_data': [['Quruvchi', 'Pakhtakor', 'Bunyodkor']], 'y_data': [[0, 9, 0], [3, 0, 7], [0, 1, 0]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Home_team, GROUP BY Away_team'}",bar,Away_team,COUNT(Away_team),"Quruvchi, Pakhtakor, Bunyodkor","0, 9, 0","Stacked bar chart of how many away team for with each Home_team in each away team, and I want to sort X-axis from high to low order please."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 100, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 0, 0, 0, 0, 0], [0, 0, 50, 0, 0, 0, 0, 50, 50, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [0, 0, 0, 0, 0, 0, 120, 0, 0, 0], [0, 0, 0, 30, 0, 30, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Revenue,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 100, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and revenue , and group by attribute name, display in asc by the X."
"SELECT ACC_Road , Team_ID FROM basketball_match GROUP BY ACC_Home ,  ACC_Road",Stacked Bar,Extra Hard,university_basketball,"{'chart': 'bar', 'x_name': 'ACC_Road', 'y_name': 'Team_ID', 'x_data': [['3–5', '6–2', '8–0']], 'y_data': [[4, 0, 1], [3, 2, 0]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home, GROUP BY ACC_Road'}",bar,ACC_Road,Team_ID,"3–5, 6–2, 8–0","4, 0, 1","Show me about the distribution of  ACC_Road and  Team_ID , and group by attribute ACC_Home in a bar chart."
"SELECT T1.Name , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name ASC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Code', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[7, 10, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 11, 0, 0, 0, 0, 8, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 4, 0, 2, 0, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Code,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","7, 10, 6, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, list by the Name from low to high."
"SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description",Stacked Bar,Hard,assets_maintenance,"{'chart': 'bar', 'x_name': 'skill_description', 'y_name': 'COUNT(skill_description)', 'x_data': [['Electrical', 'Mechanical', 'TV, Video']], 'y_data': [[0, 1, 4], [3, 2, 2], [0, 2, 1]], 'classify': ['MW', 'PW', 'TW'], 'describe': 'GROUP BY fault_short_name, GROUP BY skill_description'}",bar,skill_description,COUNT(skill_description),"Electrical, Mechanical, TV, Video","0, 1, 4",A stacked bar chart showing the number of faults for different fault short name and skills required to fix them. The x-axis is skill description and group by fault short name.
"SELECT T1.Name , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T1.Name , T1.Name ORDER BY T1.Name DESC",Stacked Bar,Hard,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price', 'x_data': [['ZIP drive', 'Toner cartridge', 'Printer', 'Monitor', 'Memory', 'Hard drive', 'Floppy disk', 'DVD drive', 'DVD burner', 'CD drive']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 180, 180, 90], [0, 0, 0, 0, 0, 240, 0, 0, 0, 0], [0, 66, 270, 0, 0, 0, 0, 150, 0, 0], [150, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 240, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 120, 0, 5, 0, 0, 0]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name, GROUP BY Name'}",bar,Name,Price,"ZIP drive, Toner cartridge, Printer, Monitor, Memory, Hard drive, Floppy disk, DVD drive, DVD burner, CD drive","0, 0, 0, 0, 0, 0, 0, 180, 180, 90","For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute name in a bar chart, sort Name from high to low order."
"SELECT T1.Name , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter , T1.Name",Stacked Bar,Medium,manufactory_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Revenue', 'x_data': [['CD drive', 'DVD burner', 'DVD drive', 'Floppy disk', 'Hard drive', 'Memory', 'Monitor', 'Printer', 'Toner cartridge', 'ZIP drive']], 'y_data': [[100, 100, 100, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 200], [0, 0, 50, 0, 0, 0, 0, 50, 50, 0], [0, 0, 0, 30, 0, 30, 0, 0, 0, 0], [0, 0, 0, 0, 130, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 120, 0, 0, 0]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter, GROUP BY Name'}",bar,Name,Revenue,"CD drive, DVD burner, DVD drive, Floppy disk, Hard drive, Memory, Monitor, Printer, Toner cartridge, ZIP drive","100, 100, 100, 0, 0, 0, 0, 0, 0, 0","For those records from the products and each product's manufacturer, return a bar chart about the distribution of  name and  revenue , and group by attribute headquarter."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, draw a line chart about the change of department_id over hire_date , show by the HIRE_DATE from low to high please."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, for  manager_id,  hire_date, visualize the trend."
"SELECT year , SUM(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year DESC",Line,Extra Hard,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'SUM(count(*))', 'x_data': [['2013', '2002~2012', '1991~2001', '1980~1990', '1969~1979', '1958~1968', '1947~1957', '1936~1946', '1925~1935', '1914~1924', '1903~1913']], 'y_data': [[15, 40, 5, 5, 5, 0, 0, 0, 0, 15, 10]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,SUM(count(*)),"2013, 2002~2012, 1991~2001, 1980~1990, 1969~1979, 1958~1968, 1947~1957, 1936~1946, 1925~1935, 1914~1924, 1903~1913","15, 40, 5, 5, 5, 0, 0, 0, 0, 15, 10","For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, order X-axis from high to low order."
"SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 GROUP BY Order_Date",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['1981-06-20', '1985-05-29', '1988-11-13', '1994-08-03', '1998-03-10', '1999-11-20', '2000-07-03', '2008-04-02', '2011-01-05', '2014-07-10']], 'y_data': [[2, 1, 1, 1, 1, 2, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Order_Date'}",line,Order_Date,COUNT(Order_Date),"1981-06-20, 1985-05-29, 1988-11-13, 1994-08-03, 1998-03-10, 1999-11-20, 2000-07-03, 2008-04-02, 2011-01-05, 2014-07-10","2, 1, 1, 1, 1, 2, 1, 1, 3, 1","What are the order dates of orders with price higher than 1000, and count them by a line chart"
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date ASC",Line,Extra Hard,sakila_1,"{'chart': 'line', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['2005-05-25', '2005-05-26', '2005-05-29', '2005-05-30', '2005-06-15', '2005-06-16', '2005-06-17', '2005-06-18', '2005-06-19', '2005-06-20', '2005-06-21', '2005-07-06', '2005-07-07', '2005-07-08', '2005-07-09', '2005-07-10', '2005-07-12', '2005-07-26', '2005-07-27', '2005-07-28', '2005-07-29', '2005-07-30', '2005-07-31', '2005-08-01', '2005-08-02', '2005-08-16', '2005-08-17', '2005-08-18', '2005-08-19', '2005-08-20', '2005-08-21', '2005-08-22', '2005-08-23']], 'y_data': [[2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5]], 'classify': [], 'describe': 'GROUP BY payment_date'}",line,payment_date,COUNT(payment_date),"2005-05-25, 2005-05-26, 2005-05-29, 2005-05-30, 2005-06-15, 2005-06-16, 2005-06-17, 2005-06-18, 2005-06-19, 2005-06-20, 2005-06-21, 2005-07-06, 2005-07-07, 2005-07-08, 2005-07-09, 2005-07-10, 2005-07-12, 2005-07-26, 2005-07-27, 2005-07-28, 2005-07-29, 2005-07-30, 2005-07-31, 2005-08-01, 2005-08-02, 2005-08-16, 2005-08-17, 2005-08-18, 2005-08-19, 2005-08-20, 2005-08-21, 2005-08-22, 2005-08-23","2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5","What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart, and order in ascending by the X."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment",Line,Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-08-02', '2017-09-06', '2017-09-21', '2017-10-10', '2017-10-23', '2017-10-29', '2017-11-13']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-08-02, 2017-09-06, 2017-09-21, 2017-10-10, 2017-10-23, 2017-10-29, 2017-11-13","1, 1, 2, 1, 1, 1, 1","A line chart for finding the number of the enrollment date for all the tests that have ""Pass"" result."
"SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['1981~1984', '1985~1988', '1989~1992', '1993~1996', '1997~2000', '2001~2004', '2005~2008', '2009~2012', '2013~2014']], 'y_data': [[2, 2, 0, 1, 4, 0, 1, 3, 1]], 'classify': [], 'describe': 'BIN Order_Date BY YEAR'}",line,Order_Date,COUNT(Order_Date),"1981~1984, 1985~1988, 1989~1992, 1993~1996, 1997~2000, 2001~2004, 2005~2008, 2009~2012, 2013~2014","2, 2, 0, 1, 4, 0, 1, 3, 1",Find the number of the order dates of the orders with price above 1000.
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[24000, 9000, 4800, 4200, 9000, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 8200, 6500, 2400, 2200, 2500, 3300, 3600, 3200, 2500, 3100, 2600, 11000, 9500, 8000, 8000, 7500, 7000, 9500, 6800, 6400, 11500, 10000, 6100, 8800, 6200, 3200, 2800, 4200, 4100, 2500, 4000, 3200, 2600, 2600, 6500, 12000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","24000, 9000, 4800, 4200, 9000, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 8200, 6500, 2400, 2200, 2500, 3300, 3600, 3200, 2500, 3100, 2600, 11000, 9500, 8000, 8000, 7500, 7000, 9500, 6800, 6400, 11500, 10000, 6100, 8800, 6200, 3200, 2800, 4200, 4100, 2500, 4000, 3200, 2600, 2600, 6500, 12000","For all employees who have the letters D or S in their first name, show me the trend about salary over hire_date with a line chart, order from low to high by the X-axis."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[110, 110, 70, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","110, 110, 70, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of department_id over hire_date in a line chart, and sort from high to low by the x axis."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of commission_pct over hire_date , and show by the HIRE_DATE in asc."
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass""",Line,Medium,e_learning,"{'chart': 'line', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['19th', '20th', '21th', '22th', '23th', '24th', '25th']], 'y_data': [[2, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_test_taken BY DAY'}",line,date_test_taken,COUNT(date_test_taken),"19th, 20th, 21th, 22th, 23th, 24th, 25th","2, 0, 1, 0, 1, 1, 3","Which tests have ""Pass"" results? Return the dates when the tests were taken, and count them by a line chart"
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205","For those employees who was hired before 2002-06-21, give me the trend about manager_id over hire_date , I want to rank x-axis in asc order."
"SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1","Can you draw the trend of the number of start from over the start from?, show by the X from low to high."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[149, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","149, 100, 201, 101, 101, 101, 205","For those employees who do not work in departments with managers that have ids between 100 and 200, for  manager_id,  hire_date, visualize the trend."
"SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Shop_ID', 'x_data': [['2003-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01']], 'y_data': [[1, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': ''}",line,Start_from,Shop_ID,"2003-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01","1, 6, 1, 2, 8, 4, 5","Visualize a line chart about the change of Shop_ID over Start_from , sort in ascending by the x axis."
"SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR",Line,Easy,car_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['1970-01-01', '1971-01-01', '1972-01-01', '1973-01-01', '1974-01-01', '1975-01-01', '1976-01-01', '1977-01-01', '1978-01-01', '1979-01-01', '1980-01-01', '1981-01-01', '1982-01-01']], 'y_data': [[3441.3142857142852, 2960.3448275862074, 3237.714285714286, 3419.025, 2877.925925925926, 3176.8, 3078.7352941176473, 2997.357142857143, 2861.805555555556, 3055.3448275862074, 2436.655172413793, 2532.1666666666665, 2453.548387096774]], 'classify': [], 'describe': ''}",line,Year,avg(Weight),"1970-01-01, 1971-01-01, 1972-01-01, 1973-01-01, 1974-01-01, 1975-01-01, 1976-01-01, 1977-01-01, 1978-01-01, 1979-01-01, 1980-01-01, 1981-01-01, 1982-01-01","3441.3142857142852, 2960.3448275862074, 3237.714285714286, 3419.025, 2877.925925925926, 3176.8, 3078.7352941176473, 2997.357142857143, 2861.805555555556, 3055.3448275862074, 2436.655172413793, 2532.1666666666665, 2453.548387096774",What is the average weight and year for each year. Plot them as line chart.
"SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from DESC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Shop_ID', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2003-01-01']], 'y_data': [[5, 4, 8, 2, 1, 6, 1]], 'classify': [], 'describe': ''}",line,Start_from,Shop_ID,"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2003-01-01","5, 4, 8, 2, 1, 6, 1","Can you draw the trend of shop_id over the start from?, and I want to list from high to low by the X-axis please."
"SELECT order_date , COUNT(order_date) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = ""Delivered""",Line,Hard,customers_and_addresses,"{'chart': 'line', 'x_name': 'order_date', 'y_name': 'COUNT(order_date)', 'x_data': [['4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th', '13th', '14th', '15th', '16th', '17th', '18th', '19th', '20th', '21th', '22th']], 'y_data': [[1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN order_date BY DAY'}",line,order_date,COUNT(order_date),"4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th, 15th, 16th, 17th, 18th, 19th, 20th, 21th, 22th","1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1",Find the number of orders in each day and show in a line chart.
"SELECT Planned_Delivery_Date , COUNT(Planned_Delivery_Date) FROM BOOKINGS  ORDER BY Planned_Delivery_Date DESC",Line,Medium,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Planned_Delivery_Date', 'y_name': 'COUNT(Planned_Delivery_Date)', 'x_data': [['2016~2017', '2011~2015', '2006~2010', '2001~2005', '1996~2000', '1991~1995', '1986~1990', '1981~1985', '1976~1980', '1971~1975']], 'y_data': [[2, 2, 2, 0, 1, 1, 1, 0, 2, 4]], 'classify': [], 'describe': 'BIN Planned_Delivery_Date BY YEAR'}",line,Planned_Delivery_Date,COUNT(Planned_Delivery_Date),"2016~2017, 2011~2015, 2006~2010, 2001~2005, 1996~2000, 1991~1995, 1986~1990, 1981~1985, 1976~1980, 1971~1975","2, 2, 2, 0, 1, 1, 1, 0, 2, 4","Visualize the general trend of the number of planned delivery date over the planned delivery date, and rank by the X-axis in descending."
"SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year DESC",Line,Hard,farm,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002","1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1","Give me a line chart about the number of competitions held in each year, and I want to list X in desc order."
"SELECT Season , COUNT(Season) FROM game GROUP BY Season",Line,Easy,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01']], 'y_data': [[3, 3, 3, 2, 2, 5, 2]], 'classify': [], 'describe': 'GROUP BY Season'}",line,Season,COUNT(Season),"2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01","3, 3, 3, 2, 2, 5, 2",I want to see trend of the number of season by season
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%'",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-09-25', '1987-09-27', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-09-28', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-15', '1987-07-16', '1987-07-19', '1987-07-20', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-09-05', '1987-09-06', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-04', '1987-06-17', '1987-06-18', '1987-06-19', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-30', '1987-09-30']], 'y_data': [[4400, 6000, 11000, 3100, 2900, 2800, 2600, 2500, 6500, 6500, 5800, 3200, 2700, 2200, 3300, 2100, 3300, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 3200, 3100, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2500, 4000, 3900, 2800, 3100, 3000, 2600, 2600, 9000, 6000, 4800, 4800, 4200, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 6800, 6400, 11500, 10000, 9600, 7300, 6100, 11000, 8800, 8600, 8400, 6200, 24000, 17000, 17000, 12000, 9000, 8200, 6900, 12000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-09-25, 1987-09-27, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-09-28, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-15, 1987-07-16, 1987-07-19, 1987-07-20, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-09-05, 1987-09-06, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-04, 1987-06-17, 1987-06-18, 1987-06-19, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-30, 1987-09-30","4400, 6000, 11000, 3100, 2900, 2800, 2600, 2500, 6500, 6500, 5800, 3200, 2700, 2200, 3300, 2100, 3300, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 3200, 3100, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2500, 4000, 3900, 2800, 3100, 3000, 2600, 2600, 9000, 6000, 4800, 4800, 4200, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 6800, 6400, 11500, 10000, 9600, 7300, 6100, 11000, 8800, 8600, 8400, 6200, 24000, 17000, 17000, 12000, 9000, 8200, 6900, 12000",Show me a line chart to show the change of salary for those employees whose first name does not containing the letter M over the corresponding hire date.
"SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC",Line,Medium,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_to', 'y_name': 'COUNT(date_to)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016']], 'y_data': [[2, 0, 1, 0, 1, 0, 3, 1, 0, 1]], 'classify': [], 'describe': 'BIN date_to BY YEAR'}",line,date_to,COUNT(date_to),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016","2, 0, 1, 0, 1, 0, 3, 1, 0, 1","When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and rank X in asc order."
"SELECT Creation , AVG(Budget_in_Billions) FROM department  ORDER BY Creation DESC",Line,Medium,department_management,"{'chart': 'line', 'x_name': 'Creation', 'y_name': 'AVG(Budget_in_Billions)', 'x_data': [['1999~2002', '1978~1998', '1957~1977', '1936~1956', '1915~1935', '1894~1914', '1873~1893', '1852~1872', '1831~1851', '1810~1830', '1789~1809']], 'y_data': [[44, 67.5, 41.666666666666664, 491, 0, 32.5, 77, 23, 10, 0, 10]], 'classify': [], 'describe': 'BIN Creation BY YEAR'}",line,Creation,AVG(Budget_in_Billions),"1999~2002, 1978~1998, 1957~1977, 1936~1956, 1915~1935, 1894~1914, 1873~1893, 1852~1872, 1831~1851, 1810~1830, 1789~1809","44, 67.5, 41.666666666666664, 491, 0, 32.5, 77, 23, 10, 0, 10","Show average of budget in each year and bin creation time by year in a line chart, sort from high to low by the Creation."
"SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[5, 4, 8, 2, 1, 6, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","5, 4, 8, 2, 1, 6, 0, 0, 0, 0, 1","Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time, I want to show in desc by the x-axis."
"SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season DESC",Line,Medium,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2007-01-01']], 'y_data': [[2, 5, 2, 2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY Season'}",line,Season,COUNT(Season),"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2007-01-01","2, 5, 2, 2, 3, 3, 3","List the number of games in each season with a line chart, and order in descending by the X."
"SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2","Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time, rank by the X-axis from high to low."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, give me the trend about  department_id over  hire_date ."
"SELECT year , COUNT(year) FROM home_game  ORDER BY year DESC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2011~2014', '1997~2010', '1983~1996', '1969~1982', '1955~1968', '1941~1954', '1927~1940', '1913~1926', '1899~1912', '1885~1898', '1871~1884']], 'y_data': [[4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2011~2014, 1997~2010, 1983~1996, 1969~1982, 1955~1968, 1941~1954, 1927~1940, 1913~1926, 1899~1912, 1885~1898, 1871~1884","4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14","Return me a line chart to show the frequency of the year attribute by binning into a weekday interval, list by the x-axis in desc."
"SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC",Line,Hard,farm,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1","Give me a line chart about the number of competitions held in each year, could you rank by the X in ascending?"
"SELECT Creation , COUNT(Creation) FROM department GROUP BY Creation ORDER BY Creation DESC",Line,Medium,department_management,"{'chart': 'line', 'x_name': 'Creation', 'y_name': 'COUNT(Creation)', 'x_data': [['2002-01-01', '1989-01-01', '1979-01-01', '1977-01-01', '1966-01-01', '1965-01-01', '1953-01-01', '1947-01-01', '1913-01-01', '1903-01-01', '1889-01-01', '1870-01-01', '1849-01-01', '1789-01-01']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Creation'}",line,Creation,COUNT(Creation),"2002-01-01, 1989-01-01, 1979-01-01, 1977-01-01, 1966-01-01, 1965-01-01, 1953-01-01, 1947-01-01, 1913-01-01, 1903-01-01, 1889-01-01, 1870-01-01, 1849-01-01, 1789-01-01","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","How many departments are built in each year? Group by creation time in a line chart, display from high to low by the X."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206","For those employees who did not have any job in the past, give me the trend about  employee_id over  hire_date ."
"SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date DESC",Line,Hard,student_transcripts_tracking,"{'chart': 'line', 'x_name': 'transcript_date', 'y_name': 'COUNT(transcript_date)', 'x_data': [['2011~2013', '2007~2010', '2003~2006', '1999~2002', '1995~1998', '1991~1994', '1987~1990', '1983~1986', '1979~1982', '1975~1978']], 'y_data': [[1, 1, 0, 0, 1, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN transcript_date BY YEAR'}",line,transcript_date,COUNT(transcript_date),"2011~2013, 2007~2010, 2003~2006, 1999~2002, 1995~1998, 1991~1994, 1987~1990, 1983~1986, 1979~1982, 1975~1978","1, 1, 0, 0, 1, 0, 0, 0, 0, 1","I want to visualize the trend about the total appears times of transcript date in the Year interval, and I want to rank X in desc order please."
"SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[8300, 12000, 10000, 6000, 13000, 4400, 2600, 2600, 3000, 3100, 2800, 3200, 3900, 4000, 2500, 2900, 3600, 3800, 3000, 3400, 4100, 4200, 2800, 2500, 3100, 3200, 6200, 7000, 8400, 8600, 8800, 11000, 6100, 7300, 7400, 9600, 10000, 11500, 6200, 6400, 6800, 7200, 9500, 10500, 7000, 7500, 8000, 9000, 9500, 10000, 7000, 7500, 8000, 9000, 9500, 10000, 10500, 11000, 12000, 13500, 14000, 2500, 2600, 3100, 3500, 2500, 2700, 3200, 3600, 2200, 2400, 2900, 3300, 2100, 2500, 2800, 3300, 2200, 2400, 2700, 3200, 5800, 6500, 7900, 8200, 8000, 2500, 2600, 2800, 2900, 3100, 11000, 6900, 7800, 7700, 8200, 9000, 12000, 4200, 4800, 4800, 6000, 9000, 17000, 17000, 24000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","8300, 12000, 10000, 6000, 13000, 4400, 2600, 2600, 3000, 3100, 2800, 3200, 3900, 4000, 2500, 2900, 3600, 3800, 3000, 3400, 4100, 4200, 2800, 2500, 3100, 3200, 6200, 7000, 8400, 8600, 8800, 11000, 6100, 7300, 7400, 9600, 10000, 11500, 6200, 6400, 6800, 7200, 9500, 10500, 7000, 7500, 8000, 9000, 9500, 10000, 7000, 7500, 8000, 9000, 9500, 10000, 10500, 11000, 12000, 13500, 14000, 2500, 2600, 3100, 3500, 2500, 2700, 3200, 3600, 2200, 2400, 2900, 3300, 2100, 2500, 2800, 3300, 2200, 2400, 2700, 3200, 5800, 6500, 7900, 8200, 8000, 2500, 2600, 2800, 2900, 3100, 11000, 6900, 7800, 7700, 8200, 9000, 12000, 4200, 4800, 4800, 6000, 9000, 17000, 17000, 24000","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for salary, hire_date, visualize the trend, could you rank x-axis from high to low order?"
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived ASC",Line,Hard,dog_kennels,"{'chart': 'line', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['2017-04-20', '2017-05-06', '2017-06-18', '2017-09-08', '2017-10-24', '2017-12-22', '2017-12-29', '2018-01-02']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY date_arrived'}",line,date_arrived,COUNT(date_arrived),"2017-04-20, 2017-05-06, 2017-06-18, 2017-09-08, 2017-10-24, 2017-12-22, 2017-12-29, 2018-01-02","1, 1, 1, 1, 1, 1, 2, 1","Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, could you list x axis in ascending order?"
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion DESC",Line,Medium,e_learning,"{'chart': 'line', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-03-22', '2018-03-19', '2018-03-18', '2018-03-16', '2018-03-14', '2018-03-10', '2018-03-09', '2018-03-07', '2018-03-06', '2018-03-04', '2018-03-02', '2018-03-01', '2018-02-28', '2018-02-27', '2018-02-26']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",line,date_of_completion,COUNT(date_of_completion),"2018-03-22, 2018-03-19, 2018-03-18, 2018-03-16, 2018-03-14, 2018-03-10, 2018-03-09, 2018-03-07, 2018-03-06, 2018-03-04, 2018-03-02, 2018-03-01, 2018-02-28, 2018-02-27, 2018-02-26","2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2","Visualize the general trend of the number of date of completion over the date of completion, and rank by the X-axis in desc."
"SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC",Line,Medium,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_address_to', 'y_name': 'COUNT(date_address_to)', 'x_data': [['2018-02-25', '2018-02-27', '2018-03-02', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-12', '2018-03-14', '2018-03-15', '2018-03-18', '2018-03-20', '2018-03-22', '2018-03-23']], 'y_data': [[1, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_address_to'}",line,date_address_to,COUNT(date_address_to),"2018-02-25, 2018-02-27, 2018-03-02, 2018-03-04, 2018-03-05, 2018-03-06, 2018-03-07, 2018-03-12, 2018-03-14, 2018-03-15, 2018-03-18, 2018-03-20, 2018-03-22, 2018-03-23","1, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1","Return a line chart about the change of the amount of date_address_to over  date_address_to , and group by attribute date_address_to."
"SELECT year , SUM(attendance) FROM home_game ORDER BY year DESC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'SUM(attendance)', 'x_data': [['2011~2014', '1997~2010', '1983~1996', '1969~1982', '1955~1968', '1941~1954', '1927~1940', '1913~1926', '1899~1912', '1885~1898', '1871~1884']], 'y_data': [[9550049, 32563010, 27746666, 18760115, 15436797, 12585780, 5260134, 3483527, 216476, 235196, 76306]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,SUM(attendance),"2011~2014, 1997~2010, 1983~1996, 1969~1982, 1955~1968, 1941~1954, 1927~1940, 1913~1926, 1899~1912, 1885~1898, 1871~1884","9550049, 32563010, 27746666, 18760115, 15436797, 12585780, 5260134, 3483527, 216476, 235196, 76306","Show the trend about the number of attendance at home games change over the years, bin year into year interval, I want to show in desc by the X."
"SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived ORDER BY date_arrived DESC",Line,Hard,dog_kennels,"{'chart': 'line', 'x_name': 'date_arrived', 'y_name': 'COUNT(date_arrived)', 'x_data': [['2018-01-02', '2017-12-29', '2017-12-22', '2017-10-24', '2017-09-08', '2017-06-18', '2017-05-06', '2017-04-20']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_arrived'}",line,date_arrived,COUNT(date_arrived),"2018-01-02, 2017-12-29, 2017-12-22, 2017-10-24, 2017-09-08, 2017-06-18, 2017-05-06, 2017-04-20","1, 2, 1, 1, 1, 1, 1, 1","Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and list X in descending order."
"SELECT year , count(*) FROM SECTION",Line,Medium,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010']], 'y_data': [[5, 13, 12, 7, 8, 13, 12, 10, 9, 11]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,count(*),"2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010","5, 13, 12, 7, 8, 13, 12, 10, 9, 11","Plot year and binning year, then count the total number as a trend line"
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who did not have any job in the past, give me the trend about commission_pct over hire_date , and I want to display by the x axis from low to high."
"SELECT Start_from , Employee_ID FROM hiring ORDER BY Start_from DESC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Employee_ID', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2003-01-01']], 'y_data': [[5, 4, 3, 6, 1, 7, 2]], 'classify': [], 'describe': ''}",line,Start_from,Employee_ID,"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2003-01-01","5, 4, 3, 6, 1, 7, 2","Visualize a line chart about the change of Employee_ID over Start_from , and show from high to low by the x axis."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-29, 1987-09-30, 1987-10-01","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 70, 110, 110","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of  department_id over  hire_date ."
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC",Line,Medium,apartment_rentals,"{'chart': 'line', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['2018-03-20', '2018-02-25', '2018-02-19', '2018-02-06', '2017-11-29', '2017-11-13', '2017-11-12', '2017-10-25', '2017-10-07', '2017-10-06', '2017-10-03', '2017-09-30', '2017-09-29', '2017-09-28']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY booking_end_date'}",line,booking_end_date,COUNT(booking_end_date),"2018-03-20, 2018-02-25, 2018-02-19, 2018-02-06, 2017-11-29, 2017-11-13, 2017-11-12, 2017-10-25, 2017-10-07, 2017-10-06, 2017-10-03, 2017-09-30, 2017-09-29, 2017-09-28","1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1","Show me a line chart of how how many booking end date change over the booking end date, and sort by the x-axis in desc please."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC",Line,Extra Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-11-13', '2017-10-29', '2017-10-23', '2017-10-10', '2017-09-21', '2017-09-06', '2017-08-02']], 'y_data': [[1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-11-13, 2017-10-29, 2017-10-23, 2017-10-10, 2017-09-21, 2017-09-06, 2017-08-02","1, 1, 1, 1, 2, 1, 1","What are the number of the enrollment dates of all the tests that have result ""Pass""?, and rank by the X-axis in desc."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY Document_Date ASC",Line,Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[4, 1, 3, 1, 0, 1, 0, 0, 2, 1, 2]], 'classify': [], 'describe': 'BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","4, 1, 3, 1, 0, 1, 0, 0, 2, 1, 2","How many documents are created in each day? Bin the document date by year interval with a line chart, could you sort x-axis in ascending order please?"
"SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date ASC",Line,Easy,wedding,"{'chart': 'line', 'x_name': 'Open_Date', 'y_name': 'COUNT(Open_Date)', 'x_data': [['1830', '1831', '1832', '1833', '1834', '1835', '1836', '1837', '1838', '1839', '1840', '1841', '1842', '1843', '1844']], 'y_data': [[1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1]], 'classify': [], 'describe': 'BIN Open_Date BY TIME'}",line,Open_Date,COUNT(Open_Date),"1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844","1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1","Show me a line chart of how the number of open date change over the open date, and I want to display by the x-axis from low to high."
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","For all employees who have the letters D or S in their first name, give me the trend about  salary over  hire_date ."
"SELECT year , COUNT(year) FROM home_game  ORDER BY year ASC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1871~1884', '1885~1898', '1899~1912', '1913~1926', '1927~1940', '1941~1954', '1955~1968', '1969~1982', '1983~1996', '1997~2010', '2011~2014']], 'y_data': [[14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1871~1884, 1885~1898, 1899~1912, 1913~1926, 1927~1940, 1941~1954, 1955~1968, 1969~1982, 1983~1996, 1997~2010, 2011~2014","14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4","How many home games by each year (bin the year attr into weekdays interval)? Give me a line chart, list X-axis from low to high order."
"SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[5, 4, 8, 2, 1, 6, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","5, 4, 8, 2, 1, 6, 0, 0, 0, 0, 1","Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time, and rank x axis in desc order please."
"SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year ASC",Line,Extra Hard,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1903~1913', '1914~1924', '1925~1935', '1936~1946', '1947~1957', '1958~1968', '1969~1979', '1980~1990', '1991~2001', '2002~2012', '2013']], 'y_data': [[2, 3, 0, 0, 0, 0, 1, 1, 1, 4, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1903~1913, 1914~1924, 1925~1935, 1936~1946, 1947~1957, 1958~1968, 1969~1979, 1980~1990, 1991~2001, 2002~2012, 2013","2, 3, 0, 0, 0, 0, 1, 1, 1, 4, 1","Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to sort by the x axis from low to high please."
"SELECT year , SUM(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year DESC",Line,Extra Hard,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'SUM(count(*))', 'x_data': [['2013', '2002~2012', '1991~2001', '1980~1990', '1969~1979', '1958~1968', '1947~1957', '1936~1946', '1925~1935', '1914~1924', '1903~1913']], 'y_data': [[15, 40, 5, 5, 5, 0, 0, 0, 0, 15, 10]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,SUM(count(*)),"2013, 2002~2012, 1991~2001, 1980~1990, 1969~1979, 1958~1968, 1947~1957, 1936~1946, 1925~1935, 1914~1924, 1903~1913","15, 40, 5, 5, 5, 0, 0, 0, 0, 15, 10","For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, sort by the x axis in desc."
"SELECT Creation , SUM(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation DESC",Line,Medium,department_management,"{'chart': 'line', 'x_name': 'Creation', 'y_name': 'SUM(Budget_in_Billions)', 'x_data': [['2002-01-01', '1989-01-01', '1979-01-01', '1977-01-01', '1966-01-01', '1965-01-01', '1953-01-01', '1947-01-01', '1913-01-01', '1903-01-01', '1889-01-01', '1870-01-01', '1849-01-01', '1789-01-01']], 'y_data': [[44, 73, 62, 21, 58, 46, 543, 439, 59, 6, 77, 23, 10, 20]], 'classify': [], 'describe': 'GROUP BY Creation'}",line,Creation,SUM(Budget_in_Billions),"2002-01-01, 1989-01-01, 1979-01-01, 1977-01-01, 1966-01-01, 1965-01-01, 1953-01-01, 1947-01-01, 1913-01-01, 1903-01-01, 1889-01-01, 1870-01-01, 1849-01-01, 1789-01-01","44, 73, 62, 21, 58, 46, 543, 439, 59, 6, 77, 23, 10, 20","Show sum of budget in different year and group by department creation time with a line chart, and order x axis from high to low order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC",Line,Extra Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-08-02', '2017-09-06', '2017-09-21', '2017-10-10', '2017-10-23', '2017-10-29', '2017-11-13']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-08-02, 2017-09-06, 2017-09-21, 2017-10-10, 2017-10-23, 2017-10-29, 2017-11-13","1, 1, 2, 1, 1, 1, 1","What are the enrollment dates of all the tests that have result ""Pass"", and count them by a line chart, show x-axis from low to high order."
"SELECT date_to , COUNT(date_to) FROM Project_Staff",Line,Easy,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_to', 'y_name': 'COUNT(date_to)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016']], 'y_data': [[2, 0, 1, 0, 1, 0, 3, 1, 0, 1]], 'classify': [], 'describe': 'BIN date_to BY YEAR'}",line,date_to,COUNT(date_to),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016","2, 0, 1, 0, 1, 0, 3, 1, 0, 1","Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval."
"SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from DESC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Shop_ID', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2003-01-01']], 'y_data': [[5, 4, 8, 2, 1, 6, 1]], 'classify': [], 'describe': ''}",line,Start_from,Shop_ID,"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2003-01-01","5, 4, 8, 2, 1, 6, 1","Show me about the change of Shop_ID over Start_from in a line chart, list by the X-axis in descending."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, for commission_pct, hire_date, visualize the trend, sort from high to low by the X."
"SELECT Season , COUNT(Season) FROM game  ORDER BY Season DESC",Line,Medium,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007']], 'y_data': [[2, 5, 2, 2, 3, 3, 3]], 'classify': [], 'describe': 'BIN Season BY YEAR'}",line,Season,COUNT(Season),"2013, 2012, 2011, 2010, 2009, 2008, 2007","2, 5, 2, 2, 3, 3, 3","List the number of games in each season with a line chart, order in descending by the x axis."
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC",Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[2, 1, 2, 2, 2, 2, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2003, 2004, 2005, 2006, 2007, 2008, 2009","2, 1, 2, 2, 2, 2, 1","How many courses are in the Psychology department for each year? Return a line chart, and order X from low to high order."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment ORDER BY date_of_enrolment DESC",Line,Extra Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-11-13', '2017-10-29', '2017-10-23', '2017-10-10', '2017-09-21', '2017-09-06', '2017-08-02']], 'y_data': [[1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-11-13, 2017-10-29, 2017-10-23, 2017-10-10, 2017-09-21, 2017-09-06, 2017-08-02","1, 1, 1, 1, 2, 1, 1","What are the enrollment dates of all the tests that have result ""Pass"", and count them by a line chart, I want to show by the x axis in desc please."
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5","Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time, and rank from low to high by the x-axis."
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",Line,Hard,customers_and_invoices,"{'chart': 'line', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['2010', '2011', '2012', '2013', '2014', '2015', '2016']], 'y_data': [[1, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_account_opened BY YEAR'}",line,date_account_opened,COUNT(date_account_opened),"2010, 2011, 2012, 2013, 2014, 2015, 2016","1, 0, 1, 0, 0, 1, 1",How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by year interval in a bar chart.
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206","For those employees who did not have any job in the past, visualize a line chart about the change of employee_id over hire_date , display from low to high by the x axis."
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, visualize a line chart about the change of  salary over  hire_date ."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[100, 103, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 121, 123, 127, 128, 131, 133, 137, 138, 140, 142, 143, 148, 151, 153, 159, 160, 161, 163, 165, 166, 168, 169, 173, 175, 179, 180, 183, 184, 185, 191, 192, 194, 198, 199, 203, 205]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","100, 103, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 121, 123, 127, 128, 131, 133, 137, 138, 140, 142, 143, 148, 151, 153, 159, 160, 161, 163, 165, 166, 168, 169, 173, 175, 179, 180, 183, 184, 185, 191, 192, 194, 198, 199, 203, 205","For all employees who have the letters D or S in their first name, draw a line chart about the change of employee_id over hire_date , and sort HIRE_DATE in asc order."
"SELECT date_from , COUNT(date_from) FROM Project_Staff ORDER BY date_from DESC",Line,Medium,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_from', 'y_name': 'COUNT(date_from)', 'x_data': [['2002~2005', '1998~2001', '1994~1997', '1990~1993', '1986~1989', '1982~1985', '1978~1981', '1974~1977', '1970~1973']], 'y_data': [[1, 1, 0, 1, 1, 1, 1, 0, 3]], 'classify': [], 'describe': 'BIN date_from BY YEAR'}",line,date_from,COUNT(date_from),"2002~2005, 1998~2001, 1994~1997, 1990~1993, 1986~1989, 1982~1985, 1978~1981, 1974~1977, 1970~1973","1, 1, 0, 1, 1, 1, 1, 0, 3","Can you draw the trend of how many date from over the date from?, I want to rank in desc by the X-axis."
"SELECT date_from , COUNT(date_from) FROM Project_Staff",Line,Easy,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_from', 'y_name': 'COUNT(date_from)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005']], 'y_data': [[3, 0, 1, 1, 1, 1, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_from BY YEAR'}",line,date_from,COUNT(date_from),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005","3, 0, 1, 1, 1, 1, 0, 1, 1",When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart.
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2","A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time, and list x axis from high to low order."
"SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from DESC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Shop_ID', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2003-01-01']], 'y_data': [[5, 4, 8, 2, 1, 6, 1]], 'classify': [], 'describe': ''}",line,Start_from,Shop_ID,"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2003-01-01","5, 4, 8, 2, 1, 6, 1","A line chart shows the trend of Shop_ID over Start_from , list by the x axis from high to low."
"SELECT Openning_year , AVG(Capacity) FROM cinema",Line,Easy,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'AVG(Capacity)', 'x_data': [['2009', '2010', '2011', '2012', '2013', '2014', '2015']], 'y_data': [[305, 544.3333333333334, 445.3333333333333, 368, 330, 0, 364]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,AVG(Capacity),"2009, 2010, 2011, 2012, 2013, 2014, 2015","305, 544.3333333333334, 445.3333333333333, 368, 330, 0, 364",Tell me the average of capacity of cinemas open for each year in a line chart.
"SELECT Start_from , AVG(Shop_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,AVG(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5","A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time, and could you rank X from low to high order?"
"SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 6000, 6500, 10000, 12000, 8300","For those employees who did not have any job in the past, give me the trend about  salary over  hire_date ."
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, a line chart shows the change of salary over hire_date, and list x-axis in ascending order."
"SELECT Start_from , AVG(Employee_ID) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","5, 4, 3, 6, 1, 7, 0, 0, 0, 0, 2","A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time, show X in desc order."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 100, 100, 102, 103, 103, 103, 103, 101, 108, 108, 108, 108, 108, 100, 114, 114, 114, 114, 114, 100, 100, 100, 100, 100, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 100, 100, 100, 100, 100, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 120, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 124, 124, 124, 124, 101, 100, 201, 101, 101, 101, 205","For those employees who was hired before 2002-06-21, draw a line chart about the change of  manager_id over  hire_date ."
"SELECT year , avg(attendance) FROM home_game GROUP BY YEAR",Line,Easy,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'avg(attendance)', 'x_data': [['1871-01-01', '1872-01-01', '1873-01-01', '1874-01-01', '1875-01-01', '1876-01-01', '1877-01-01', '1878-01-01', '1879-01-01', '1880-01-01', '1881-01-01', '1882-01-01', '1883-01-01', '1884-01-01', '1885-01-01', '1886-01-01', '1887-01-01', '1888-01-01', '1889-01-01', '1890-01-01', '1891-01-01', '1892-01-01', '1893-01-01', '1894-01-01', '1895-01-01', '1896-01-01', '1897-01-01', '1898-01-01', '1899-01-01', '1900-01-01', '1901-01-01', '1902-01-01', '1903-01-01', '1904-01-01', '1905-01-01', '1906-01-01', '1907-01-01', '1908-01-01', '1909-01-01', '1910-01-01', '1911-01-01', '1912-01-01', '1913-01-01', '1914-01-01', '1915-01-01', '1916-01-01', '1917-01-01', '1918-01-01', '1919-01-01', '1920-01-01', '1921-01-01', '1922-01-01', '1923-01-01', '1924-01-01', '1925-01-01', '1926-01-01', '1927-01-01', '1928-01-01', '1929-01-01', '1930-01-01', '1931-01-01', '1932-01-01', '1933-01-01', '1934-01-01', '1935-01-01', '1936-01-01', '1937-01-01', '1938-01-01', '1939-01-01', '1940-01-01', '1941-01-01', '1942-01-01', '1943-01-01', '1944-01-01', '1945-01-01', '1946-01-01', '1947-01-01', '1948-01-01', '1949-01-01', '1950-01-01', '1951-01-01', '1952-01-01', '1953-01-01', '1954-01-01', '1955-01-01', '1956-01-01', '1957-01-01', '1958-01-01', '1959-01-01', '1960-01-01', '1961-01-01', '1962-01-01', '1963-01-01', '1964-01-01', '1965-01-01', '1966-01-01', '1967-01-01', '1968-01-01', '1969-01-01', '1970-01-01', '1971-01-01', '1972-01-01', '1973-01-01', '1974-01-01', '1975-01-01', '1976-01-01', '1977-01-01', '1978-01-01', '1979-01-01', '1980-01-01', '1981-01-01', '1982-01-01', '1983-01-01', '1984-01-01', '1985-01-01', '1986-01-01', '1987-01-01', '1988-01-01', '1989-01-01', '1990-01-01', '1991-01-01', '1992-01-01', '1993-01-01', '1994-01-01', '1995-01-01', '1996-01-01', '1997-01-01', '1998-01-01', '1999-01-01', '2000-01-01', '2001-01-01', '2002-01-01', '2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01', '2014-01-01']], 'y_data': [[17125, 14603.333333333336, 0, 27249.7, 17329.391304347828, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11856.35294117647, 18591.666666666668, 8186.380952380952, 6767.571428571428, 10271.057142857142, 2324, 4512.642857142857, 9379.07142857143, 143202.375, 9883.333333333334, 0, 9875, 350, 3200, 36116.125, 7859, 0, 0, 0, 0, 46664.75, 0, 5284.6875, 0, 0, 117353.38888888886, 0, 0, 211425.64, 153360.2, 55500, 220268.875, 46148.75, 213044.1875, 280158.1176470588, 340739.625, 317164.375, 435409.8125, 501204.8125, 470832.6875, 238276.375, 488246.4705882353, 294843.25, 336567.82352941175, 213375.82352941175, 285558.4117647059, 221597.8333333333, 295785.1875, 189549, 350890.6875, 436795.58823529404, 437536.11764705885, 476012.22222222225, 604727.8823529412, 628654.4705882353, 560421.8823529412, 485573.6470588236, 465679.41176470596, 524242.9411764706, 651439.2352941176, 1019072.2777777779, 1286085.625, 1319362, 1285012.375, 1088765.5625, 1024580.3125, 912397.625, 929984.5625, 1033169.8125, 1041463.875, 991736.7647058823, 1007885.2941176472, 1087706.5625, 1203611.5625, 1248884.6875, 1051839.388888889, 1074105.2, 1039067.8, 1064345.1, 1127733, 1205586.5714285714, 1199437.7, 1093400.5238095238, 1094134.84, 1103714, 1218456.666666667, 1145264.708333333, 1255066.875, 1249488.416666667, 1241784.458333333, 1304951.458333333, 1510126.3461538462, 1562493.230769231, 1677201.4230769232, 1656938.730769231, 1023446.3461538459, 1717054.4230769232, 1745448.6538461538, 1721233.730769231, 1801622.3846153843, 1828231.7692307688, 2001087.1153846157, 2038187.4230769232, 2052794.9259259256, 2114356.576923077, 2187885.346153846, 2151571.1153846155, 2509234.0714285714, 1785157.5357142857, 1804337.8571428568, 2005524.2333333332, 2180498, 2278377.7741935486, 2197934.625, 2275673.625, 2341054.3870967743, 2264819.8666666667, 2182286.2258064514, 2212707.484848485, 2497232.666666666, 2534515.833333333, 2484490, 2382495.8484848486, 2447339.6, 2283591.625, 2368569.903225806, 2414815.096774193, 2387968.935483871, 2378697.483870968]], 'classify': [], 'describe': ''}",line,year,avg(attendance),"1871-01-01, 1872-01-01, 1873-01-01, 1874-01-01, 1875-01-01, 1876-01-01, 1877-01-01, 1878-01-01, 1879-01-01, 1880-01-01, 1881-01-01, 1882-01-01, 1883-01-01, 1884-01-01, 1885-01-01, 1886-01-01, 1887-01-01, 1888-01-01, 1889-01-01, 1890-01-01, 1891-01-01, 1892-01-01, 1893-01-01, 1894-01-01, 1895-01-01, 1896-01-01, 1897-01-01, 1898-01-01, 1899-01-01, 1900-01-01, 1901-01-01, 1902-01-01, 1903-01-01, 1904-01-01, 1905-01-01, 1906-01-01, 1907-01-01, 1908-01-01, 1909-01-01, 1910-01-01, 1911-01-01, 1912-01-01, 1913-01-01, 1914-01-01, 1915-01-01, 1916-01-01, 1917-01-01, 1918-01-01, 1919-01-01, 1920-01-01, 1921-01-01, 1922-01-01, 1923-01-01, 1924-01-01, 1925-01-01, 1926-01-01, 1927-01-01, 1928-01-01, 1929-01-01, 1930-01-01, 1931-01-01, 1932-01-01, 1933-01-01, 1934-01-01, 1935-01-01, 1936-01-01, 1937-01-01, 1938-01-01, 1939-01-01, 1940-01-01, 1941-01-01, 1942-01-01, 1943-01-01, 1944-01-01, 1945-01-01, 1946-01-01, 1947-01-01, 1948-01-01, 1949-01-01, 1950-01-01, 1951-01-01, 1952-01-01, 1953-01-01, 1954-01-01, 1955-01-01, 1956-01-01, 1957-01-01, 1958-01-01, 1959-01-01, 1960-01-01, 1961-01-01, 1962-01-01, 1963-01-01, 1964-01-01, 1965-01-01, 1966-01-01, 1967-01-01, 1968-01-01, 1969-01-01, 1970-01-01, 1971-01-01, 1972-01-01, 1973-01-01, 1974-01-01, 1975-01-01, 1976-01-01, 1977-01-01, 1978-01-01, 1979-01-01, 1980-01-01, 1981-01-01, 1982-01-01, 1983-01-01, 1984-01-01, 1985-01-01, 1986-01-01, 1987-01-01, 1988-01-01, 1989-01-01, 1990-01-01, 1991-01-01, 1992-01-01, 1993-01-01, 1994-01-01, 1995-01-01, 1996-01-01, 1997-01-01, 1998-01-01, 1999-01-01, 2000-01-01, 2001-01-01, 2002-01-01, 2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01, 2014-01-01","17125, 14603.333333333336, 0, 27249.7, 17329.391304347828, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11856.35294117647, 18591.666666666668, 8186.380952380952, 6767.571428571428, 10271.057142857142, 2324, 4512.642857142857, 9379.07142857143, 143202.375, 9883.333333333334, 0, 9875, 350, 3200, 36116.125, 7859, 0, 0, 0, 0, 46664.75, 0, 5284.6875, 0, 0, 117353.38888888886, 0, 0, 211425.64, 153360.2, 55500, 220268.875, 46148.75, 213044.1875, 280158.1176470588, 340739.625, 317164.375, 435409.8125, 501204.8125, 470832.6875, 238276.375, 488246.4705882353, 294843.25, 336567.82352941175, 213375.82352941175, 285558.4117647059, 221597.8333333333, 295785.1875, 189549, 350890.6875, 436795.58823529404, 437536.11764705885, 476012.22222222225, 604727.8823529412, 628654.4705882353, 560421.8823529412, 485573.6470588236, 465679.41176470596, 524242.9411764706, 651439.2352941176, 1019072.2777777779, 1286085.625, 1319362, 1285012.375, 1088765.5625, 1024580.3125, 912397.625, 929984.5625, 1033169.8125, 1041463.875, 991736.7647058823, 1007885.2941176472, 1087706.5625, 1203611.5625, 1248884.6875, 1051839.388888889, 1074105.2, 1039067.8, 1064345.1, 1127733, 1205586.5714285714, 1199437.7, 1093400.5238095238, 1094134.84, 1103714, 1218456.666666667, 1145264.708333333, 1255066.875, 1249488.416666667, 1241784.458333333, 1304951.458333333, 1510126.3461538462, 1562493.230769231, 1677201.4230769232, 1656938.730769231, 1023446.3461538459, 1717054.4230769232, 1745448.6538461538, 1721233.730769231, 1801622.3846153843, 1828231.7692307688, 2001087.1153846157, 2038187.4230769232, 2052794.9259259256, 2114356.576923077, 2187885.346153846, 2151571.1153846155, 2509234.0714285714, 1785157.5357142857, 1804337.8571428568, 2005524.2333333332, 2180498, 2278377.7741935486, 2197934.625, 2275673.625, 2341054.3870967743, 2264819.8666666667, 2182286.2258064514, 2212707.484848485, 2497232.666666666, 2534515.833333333, 2484490, 2382495.8484848486, 2447339.6, 2283591.625, 2368569.903225806, 2414815.096774193, 2387968.935483871, 2378697.483870968",Return a line chart on what is the average number of attendance at home games for each year?
"SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""",Line,Extra Hard,entrepreneur,"{'chart': 'line', 'x_name': 'Date_of_Birth', 'y_name': 'COUNT(Date_of_Birth)', 'x_data': [['1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980', '1981']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Date_of_Birth BY YEAR'}",line,Date_of_Birth,COUNT(Date_of_Birth),"1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981","1, 0, 0, 0, 0, 0, 0, 0, 0, 1","A line chart for what are the number of the dates of birth of entrepreneurs with investor ""Simon Woodroffe"" or ""Peter Jones""?"
"SELECT Year , avg(Weight) FROM CARS_DATA ORDER BY Year ASC",Line,Medium,car_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982']], 'y_data': [[3441, 2960, 3237, 3419, 2877, 3176, 3078, 2997, 2861, 3055, 2436, 2532, 2453]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,avg(Weight),"1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982","3441, 2960, 3237, 3419, 2877, 3176, 3078, 2997, 2861, 3055, 2436, 2532, 2453","Create a line chart of the mean weight change over the year, binning year and show by the x-axis in asc."
"SELECT date_to , COUNT(date_to) FROM Project_Staff ORDER BY date_to ASC",Line,Medium,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_to', 'y_name': 'COUNT(date_to)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016']], 'y_data': [[2, 0, 1, 0, 1, 0, 3, 1, 0, 1]], 'classify': [], 'describe': 'BIN date_to BY YEAR'}",line,date_to,COUNT(date_to),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016","2, 0, 1, 0, 1, 0, 3, 1, 0, 1","Plot date to by the number of date to as a trend line, I want to show by the X in asc."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110","For all employees who have the letters D or S in their first name, for department_id, hire_date, visualize the trend, and could you rank x axis from low to high order?"
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass""  ORDER BY date_test_taken DESC",Line,Hard,e_learning,"{'chart': 'line', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['25th', '24th', '23th', '22th', '21th', '20th', '19th']], 'y_data': [[3, 1, 1, 0, 1, 0, 2]], 'classify': [], 'describe': 'BIN date_test_taken BY DAY'}",line,date_test_taken,COUNT(date_test_taken),"25th, 24th, 23th, 22th, 21th, 20th, 19th","3, 1, 1, 0, 1, 0, 2","Find the dates of the tests taken with result ""Pass"", and count them by a line chart, could you rank in desc by the x axis?"
"SELECT date_from , COUNT(date_from) FROM Project_Staff",Line,Easy,tracking_grants_for_research,"{'chart': 'line', 'x_name': 'date_from', 'y_name': 'COUNT(date_from)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005']], 'y_data': [[3, 0, 1, 1, 1, 1, 0, 1, 1]], 'classify': [], 'describe': 'BIN date_from BY YEAR'}",line,date_from,COUNT(date_from),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005","3, 0, 1, 1, 1, 1, 0, 1, 1",Can you draw the trend of how many date from over the date from?
"SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""",Line,Hard,tracking_orders,"{'chart': 'line', 'x_name': 'date_order_placed', 'y_name': 'COUNT(date_order_placed)', 'x_data': [['1974~1976', '1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[2, 0, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_order_placed BY YEAR'}",line,date_order_placed,COUNT(date_order_placed),"1974~1976, 1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","2, 0, 0, 0, 0, 0, 0, 0, 0, 1","A line chart for what are the number of the dates of the orders made by the customer named ""Jeramie""?"
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts",Line,Easy,customers_and_invoices,"{'chart': 'line', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']], 'y_data': [[1, 1, 2, 1, 2, 0, 3, 2, 2, 1]], 'classify': [], 'describe': 'BIN date_account_opened BY YEAR'}",line,date_account_opened,COUNT(date_account_opened),"2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017","1, 1, 2, 1, 2, 0, 3, 2, 2, 1",Show the number of accounts opened in each year for all accounts in a line chart.
"SELECT transcript_date , COUNT(transcript_date) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  ORDER BY transcript_date ASC",Line,Hard,student_transcripts_tracking,"{'chart': 'line', 'x_name': 'transcript_date', 'y_name': 'COUNT(transcript_date)', 'x_data': [['1975~1978', '1979~1982', '1983~1986', '1987~1990', '1991~1994', '1995~1998', '1999~2002', '2003~2006', '2007~2010', '2011~2013']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN transcript_date BY YEAR'}",line,transcript_date,COUNT(transcript_date),"1975~1978, 1979~1982, 1983~1986, 1987~1990, 1991~1994, 1995~1998, 1999~2002, 2003~2006, 2007~2010, 2011~2013","1, 0, 0, 0, 0, 1, 0, 0, 1, 1","Bin the transcript date into year interval and count them for a line chart, list from low to high by the X."
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, visualize a line chart about the change of salary over hire_date , and order x axis in asc order."
"SELECT Start_from , SUM(Employee_ID) FROM hiring",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5",A line chart shows the trend of the sum of Employee_ID over  Start_from bin start_from by time.
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC",Line,Extra Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-08-02', '2017-09-06', '2017-09-21', '2017-10-10', '2017-10-23', '2017-10-29', '2017-11-13']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-08-02, 2017-09-06, 2017-09-21, 2017-10-10, 2017-10-23, 2017-10-29, 2017-11-13","1, 1, 2, 1, 1, 1, 1","Find the number of the enrollment date for all the tests that have ""Pass"" result, and list date_of_enrolment in ascending order please."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100","For those employees who was hired before 2002-06-21, show me about the change of employee_id over hire_date in a line chart, order X-axis in descending order."
"SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year DESC",Line,Hard,farm,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002","1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1","Show how many competitions are held in each year with a line chart, and sort in desc by the X-axis please."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who did not have any job in the past, for commission_pct, hire_date, visualize the trend, and sort X in asc order."
"SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY Visit_Date ASC",Line,Medium,cre_Theme_park,"{'chart': 'line', 'x_name': 'Visit_Date', 'y_name': 'COUNT(Visit_Date)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016~2018']], 'y_data': [[2, 1, 0, 3, 1, 3, 2, 4, 2, 2]], 'classify': [], 'describe': 'BIN Visit_Date BY YEAR'}",line,Visit_Date,COUNT(Visit_Date),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016~2018","2, 1, 0, 3, 1, 3, 2, 4, 2, 2","What are the distinct visit dates, and count them by a line chart, I want to display X-axis in asc order."
"SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC",Line,Hard,farm,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1","Give me a line chart about the number of competitions held in each year, display X from low to high order."
"SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR",Line,Easy,car_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['1970-01-01', '1971-01-01', '1972-01-01', '1973-01-01', '1974-01-01', '1975-01-01', '1976-01-01', '1977-01-01', '1978-01-01', '1979-01-01', '1980-01-01', '1981-01-01', '1982-01-01']], 'y_data': [[3441.3142857142852, 2960.3448275862074, 3237.714285714286, 3419.025, 2877.925925925926, 3176.8, 3078.7352941176473, 2997.357142857143, 2861.805555555556, 3055.3448275862074, 2436.655172413793, 2532.1666666666665, 2453.548387096774]], 'classify': [], 'describe': ''}",line,Year,avg(Weight),"1970-01-01, 1971-01-01, 1972-01-01, 1973-01-01, 1974-01-01, 1975-01-01, 1976-01-01, 1977-01-01, 1978-01-01, 1979-01-01, 1980-01-01, 1981-01-01, 1982-01-01","3441.3142857142852, 2960.3448275862074, 3237.714285714286, 3419.025, 2877.925925925926, 3176.8, 3078.7352941176473, 2997.357142857143, 2861.805555555556, 3055.3448275862074, 2436.655172413793, 2532.1666666666665, 2453.548387096774",Show me the trend about what is the average weight and year for each year?
"SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1","Show me about the change of the amount of Start_from over Start_from bin start_from by time in a line chart, and list by the X-axis in descending."
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-09-30', '1987-09-28', '1987-09-27', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-22', '1987-08-21', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-20', '1987-07-19', '1987-07-16', '1987-07-15', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[12000, 6500, 6000, 4400, 2600, 2600, 3000, 3100, 2800, 3900, 4000, 2500, 3600, 3800, 3000, 3400, 4100, 4200, 2800, 3100, 3200, 6200, 8400, 8600, 8800, 11000, 6100, 7300, 9600, 10000, 11500, 6400, 6800, 9500, 10500, 7000, 7500, 8000, 9000, 9500, 10000, 7000, 7500, 8000, 9000, 9500, 10000, 10500, 11000, 12000, 13500, 14000, 2500, 2600, 3100, 3500, 2500, 2700, 3200, 3600, 2200, 2400, 3300, 2100, 3300, 2200, 2700, 3200, 5800, 6500, 2500, 2600, 2800, 2900, 3100, 11000, 6900, 8200, 9000, 12000, 4200, 4800, 4800, 6000, 9000, 17000, 17000, 24000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-09-30, 1987-09-28, 1987-09-27, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-22, 1987-08-21, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-20, 1987-07-19, 1987-07-16, 1987-07-15, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","12000, 6500, 6000, 4400, 2600, 2600, 3000, 3100, 2800, 3900, 4000, 2500, 3600, 3800, 3000, 3400, 4100, 4200, 2800, 3100, 3200, 6200, 8400, 8600, 8800, 11000, 6100, 7300, 9600, 10000, 11500, 6400, 6800, 9500, 10500, 7000, 7500, 8000, 9000, 9500, 10000, 7000, 7500, 8000, 9000, 9500, 10000, 10500, 11000, 12000, 13500, 14000, 2500, 2600, 3100, 3500, 2500, 2700, 3200, 3600, 2200, 2400, 3300, 2100, 3300, 2200, 2700, 3200, 5800, 6500, 2500, 2600, 2800, 2900, 3100, 11000, 6900, 8200, 9000, 12000, 4200, 4800, 4800, 6000, 9000, 17000, 17000, 24000","For employees without the letter M in their first name, give me a line chart to show the salary change over their hire date using a line chart, and show X-axis from high to low order."
"SELECT HIRE_DATE , SALARY FROM employees",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-25', '1987-07-01', '1987-07-08', '1987-08-01', '1987-09-25', '1987-09-26', '1987-09-28', '1987-09-29', '1987-09-30']], 'y_data': [[24000, 9000, 12000, 11000, 8200, 14000, 4400, 13000, 6500, 10000, 12000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-20, 1987-06-25, 1987-07-01, 1987-07-08, 1987-08-01, 1987-09-25, 1987-09-26, 1987-09-28, 1987-09-29, 1987-09-30","24000, 9000, 12000, 11000, 8200, 14000, 4400, 13000, 6500, 10000, 12000","Line chart, the X is the hire date of employees and the Y-axis is the corresponding salary."
"SELECT Order_Date , COUNT(Order_Date) FROM BOOKINGS",Line,Easy,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016']], 'y_data': [[3, 2, 2, 0, 5, 1, 0, 1, 0, 1]], 'classify': [], 'describe': 'BIN Order_Date BY YEAR'}",line,Order_Date,COUNT(Order_Date),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016","3, 2, 2, 0, 5, 1, 0, 1, 0, 1",List the number of the order dates of all the bookings.
"SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid",Line,Easy,baseball_1,"{'chart': 'line', 'x_name': 'yearid', 'y_name': 'count(*)', 'x_data': [['1936-01-01', '1937-01-01', '1938-01-01', '1939-01-01', '1942-01-01', '1944-01-01', '1945-01-01', '1946-01-01', '1947-01-01', '1948-01-01', '1949-01-01', '1950-01-01', '1951-01-01', '1952-01-01', '1953-01-01', '1954-01-01', '1955-01-01', '1956-01-01', '1957-01-01', '1958-01-01', '1959-01-01', '1960-01-01', '1961-01-01', '1962-01-01', '1963-01-01', '1964-01-01', '1965-01-01', '1966-01-01', '1967-01-01', '1968-01-01', '1969-01-01', '1970-01-01', '1971-01-01', '1972-01-01', '1973-01-01', '1974-01-01', '1975-01-01', '1976-01-01', '1977-01-01', '1978-01-01', '1979-01-01', '1980-01-01', '1981-01-01', '1982-01-01', '1983-01-01', '1984-01-01', '1985-01-01', '1986-01-01', '1987-01-01', '1988-01-01', '1989-01-01', '1990-01-01', '1991-01-01', '1992-01-01', '1993-01-01', '1994-01-01', '1995-01-01', '1996-01-01', '1997-01-01', '1998-01-01', '1999-01-01', '2000-01-01', '2001-01-01', '2002-01-01', '2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01', '2014-01-01', '2015-01-01', '2016-01-01']], 'y_data': [[110, 118, 122, 115, 72, 1, 105, 108, 39, 106, 120, 100, 86, 75, 89, 53, 66, 106, 2, 154, 1, 134, 2, 81, 4, 94, 1, 50, 80, 50, 48, 49, 56, 51, 49, 48, 41, 36, 39, 39, 56, 63, 41, 44, 48, 31, 43, 43, 29, 44, 43, 44, 47, 39, 33, 41, 43, 39, 33, 30, 32, 33, 34, 28, 33, 32, 27, 46, 32, 30, 24, 28, 34, 28, 40, 39, 34, 32]], 'classify': [], 'describe': ''}",line,yearid,count(*),"1936-01-01, 1937-01-01, 1938-01-01, 1939-01-01, 1942-01-01, 1944-01-01, 1945-01-01, 1946-01-01, 1947-01-01, 1948-01-01, 1949-01-01, 1950-01-01, 1951-01-01, 1952-01-01, 1953-01-01, 1954-01-01, 1955-01-01, 1956-01-01, 1957-01-01, 1958-01-01, 1959-01-01, 1960-01-01, 1961-01-01, 1962-01-01, 1963-01-01, 1964-01-01, 1965-01-01, 1966-01-01, 1967-01-01, 1968-01-01, 1969-01-01, 1970-01-01, 1971-01-01, 1972-01-01, 1973-01-01, 1974-01-01, 1975-01-01, 1976-01-01, 1977-01-01, 1978-01-01, 1979-01-01, 1980-01-01, 1981-01-01, 1982-01-01, 1983-01-01, 1984-01-01, 1985-01-01, 1986-01-01, 1987-01-01, 1988-01-01, 1989-01-01, 1990-01-01, 1991-01-01, 1992-01-01, 1993-01-01, 1994-01-01, 1995-01-01, 1996-01-01, 1997-01-01, 1998-01-01, 1999-01-01, 2000-01-01, 2001-01-01, 2002-01-01, 2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01, 2014-01-01, 2015-01-01, 2016-01-01","110, 118, 122, 115, 72, 1, 105, 108, 39, 106, 120, 100, 86, 75, 89, 53, 66, 106, 2, 154, 1, 134, 2, 81, 4, 94, 1, 50, 80, 50, 48, 49, 56, 51, 49, 48, 41, 36, 39, 39, 56, 63, 41, 44, 48, 31, 43, 43, 29, 44, 43, 44, 47, 39, 33, 41, 43, 39, 33, 30, 32, 33, 34, 28, 33, 32, 27, 46, 32, 30, 24, 28, 34, 28, 40, 39, 34, 32",Count the number of players who enter hall of fame for each year with a line chart.
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-09-30', '1987-09-28', '1987-09-24', '1987-09-23', '1987-09-19', '1987-09-17', '1987-09-16', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-05', '1987-09-04', '1987-08-31', '1987-08-29', '1987-08-25', '1987-08-24', '1987-08-22', '1987-08-21', '1987-08-19', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-09', '1987-08-07', '1987-08-04', '1987-07-30', '1987-07-29', '1987-07-27', '1987-07-25', '1987-07-24', '1987-07-20', '1987-07-18', '1987-07-15', '1987-07-14', '1987-07-10', '1987-07-08', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-26', '1987-06-24', '1987-06-22', '1987-06-20', '1987-06-17']], 'y_data': [[101, 101, 124, 124, 123, 123, 122, 121, 121, 120, 120, 149, 149, 148, 148, 148, 147, 147, 147, 146, 146, 146, 145, 145, 100, 124, 124, 123, 123, 123, 122, 121, 120, 120, 100, 100, 114, 114, 114, 100, 108, 108, 108, 108, 103, 103, 102, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-09-30, 1987-09-28, 1987-09-24, 1987-09-23, 1987-09-19, 1987-09-17, 1987-09-16, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-05, 1987-09-04, 1987-08-31, 1987-08-29, 1987-08-25, 1987-08-24, 1987-08-22, 1987-08-21, 1987-08-19, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-09, 1987-08-07, 1987-08-04, 1987-07-30, 1987-07-29, 1987-07-27, 1987-07-25, 1987-07-24, 1987-07-20, 1987-07-18, 1987-07-15, 1987-07-14, 1987-07-10, 1987-07-08, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-26, 1987-06-24, 1987-06-22, 1987-06-20, 1987-06-17","101, 101, 124, 124, 123, 123, 122, 121, 121, 120, 120, 149, 149, 148, 148, 148, 147, 147, 147, 146, 146, 146, 145, 145, 100, 124, 124, 123, 123, 123, 122, 121, 120, 120, 100, 100, 114, 114, 114, 100, 108, 108, 108, 108, 103, 103, 102, 0","For all employees who have the letters D or S in their first name, show me about the change of manager_id over hire_date in a line chart, and rank x axis from high to low order."
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5","A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time, sort X-axis in asc order."
"SELECT EMP_DOB , COUNT(EMP_DOB) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = ""ACCT-211""  ORDER BY EMP_DOB DESC",Line,Extra Hard,college_1,"{'chart': 'line', 'x_name': 'EMP_DOB', 'y_name': 'COUNT(EMP_DOB)', 'x_data': [['1950', '1949', '1948', '1947', '1946', '1945', '1944', '1943', '1942', '1941', '1940', '1939', '1938', '1937']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN EMP_DOB BY YEAR'}",line,EMP_DOB,COUNT(EMP_DOB),"1950, 1949, 1948, 1947, 1946, 1945, 1944, 1943, 1942, 1941, 1940, 1939, 1938, 1937","1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1","Show birthdates of the professors in charge of ACCT-211 and bin the date by year interval in a line chart, and I want to list by the x axis in descending."
"SELECT year , AVG(count(*)) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' ORDER BY year DESC",Line,Extra Hard,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'AVG(count(*))', 'x_data': [['2013', '2002~2012', '1991~2001', '1980~1990', '1969~1979', '1958~1968', '1947~1957', '1936~1946', '1925~1935', '1914~1924', '1903~1913']], 'y_data': [[15, 10, 5, 5, 5, 0, 0, 0, 0, 5, 5]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,AVG(count(*)),"2013, 2002~2012, 1991~2001, 1980~1990, 1969~1979, 1958~1968, 1947~1957, 1936~1946, 1925~1935, 1914~1924, 1903~1913","15, 10, 5, 5, 5, 0, 0, 0, 0, 5, 5","For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, list by the year in descending."
"SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion ASC",Line,Medium,e_learning,"{'chart': 'line', 'x_name': 'date_of_completion', 'y_name': 'COUNT(date_of_completion)', 'x_data': [['2018-02-26', '2018-02-27', '2018-02-28', '2018-03-01', '2018-03-02', '2018-03-04', '2018-03-06', '2018-03-07', '2018-03-09', '2018-03-10', '2018-03-14', '2018-03-16', '2018-03-18', '2018-03-19', '2018-03-22']], 'y_data': [[2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY date_of_completion'}",line,date_of_completion,COUNT(date_of_completion),"2018-02-26, 2018-02-27, 2018-02-28, 2018-03-01, 2018-03-02, 2018-03-04, 2018-03-06, 2018-03-07, 2018-03-09, 2018-03-10, 2018-03-14, 2018-03-16, 2018-03-18, 2018-03-19, 2018-03-22","2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2","How many completion students in each day? Return a line chart grouping by date of completion, rank by the x axis from low to high."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","100, 205, 168, 114, 148, 169, 151, 163, 103, 109, 175, 121, 153, 159, 112, 111, 160, 161, 113, 165, 123, 203, 166, 179, 173, 105, 107, 184, 185, 192, 137, 133, 138, 180, 194, 115, 142, 116, 117, 183, 143, 198, 199, 131, 140, 191, 127, 128","For all employees who have the letters D or S in their first name, give me the trend about  employee_id over  hire_date ."
"SELECT Start_from , SUM(Employee_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5","A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time, I want to sort by the x-axis from low to high."
"SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY Document_Date ASC",Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2012']], 'y_data': [[2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2012","2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1","Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart, I want to sort in ascending by the x axis please."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[0, 102, 103, 103, 108, 108, 108, 108, 100, 114, 114, 114, 100, 100, 120, 120, 121, 122, 123, 123, 123, 124, 124, 100, 145, 145, 146, 146, 146, 147, 147, 147, 148, 148, 148, 149, 149, 120, 120, 121, 121, 122, 123, 123, 124, 124, 101, 101]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","0, 102, 103, 103, 108, 108, 108, 108, 100, 114, 114, 114, 100, 100, 120, 120, 121, 122, 123, 123, 123, 124, 124, 100, 145, 145, 146, 146, 146, 147, 147, 147, 148, 148, 148, 149, 149, 120, 120, 121, 121, 122, 123, 123, 124, 124, 101, 101","For all employees who have the letters D or S in their first name, give me the trend about manager_id over hire_date , display HIRE_DATE from low to high order."
"SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1 GROUP BY Actual_Delivery_Date",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Actual_Delivery_Date', 'y_name': 'COUNT(Actual_Delivery_Date)', 'x_data': [['1990-11-14', '1992-07-21', '1993-09-16', '1998-08-22', '2004-03-27', '2011-04-13', '2015-06-20']], 'y_data': [[1, 1, 2, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Actual_Delivery_Date'}",line,Actual_Delivery_Date,COUNT(Actual_Delivery_Date),"1990-11-14, 1992-07-21, 1993-09-16, 1998-08-22, 2004-03-27, 2011-04-13, 2015-06-20","1, 1, 2, 1, 2, 1, 1","List the actual delivery date for all the orders with quantity , and count them by a line chart"
"SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['1981~1984', '1985~1988', '1989~1992', '1993~1996', '1997~2000', '2001~2004', '2005~2008', '2009~2012', '2013~2014']], 'y_data': [[2, 2, 0, 1, 4, 0, 1, 3, 1]], 'classify': [], 'describe': 'BIN Order_Date BY YEAR'}",line,Order_Date,COUNT(Order_Date),"1981~1984, 1985~1988, 1989~1992, 1993~1996, 1997~2000, 2001~2004, 2005~2008, 2009~2012, 2013~2014","2, 2, 0, 1, 4, 0, 1, 3, 1",A line chart for finding the number of the order dates of the orders with price above 1000.
"SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5","Give me the trend about the sum of Shop_ID over Start_from bin start_from by time, and rank X in asc order please."
"SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",Line,Medium,insurance_policies,"{'chart': 'line', 'x_name': 'Date_Payment_Made', 'y_name': 'SUM(Amount_Payment)', 'x_data': [['2017-05-03', '2017-05-04', '2017-05-28', '2017-06-24', '2017-07-31', '2017-08-06', '2017-10-07', '2017-12-16', '2018-01-10', '2018-01-19', '2018-01-28', '2018-02-16', '2018-02-18', '2018-02-24']], 'y_data': [[172309, 123255, 604267, 456098, 423154, 38324, 71246, 459407, 407235, 177130, 319142, 241730, 235893, 7343]], 'classify': [], 'describe': 'GROUP BY Date_Payment_Made'}",line,Date_Payment_Made,SUM(Amount_Payment),"2017-05-03, 2017-05-04, 2017-05-28, 2017-06-24, 2017-07-31, 2017-08-06, 2017-10-07, 2017-12-16, 2018-01-10, 2018-01-19, 2018-01-28, 2018-02-16, 2018-02-18, 2018-02-24","172309, 123255, 604267, 456098, 423154, 38324, 71246, 459407, 407235, 177130, 319142, 241730, 235893, 7343","Show the trend about the total amount of each payment about the payment day, line chart. Note that, you should order the payment day in ascending order."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[110, 110, 70, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","110, 110, 70, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of department_id over hire_date , rank HIRE_DATE in descending order."
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year ORDER BY year DESC",Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01', '2003-01-01']], 'y_data': [[1, 2, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY year'}",line,year,COUNT(year),"2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01, 2003-01-01","1, 2, 2, 2, 2, 1, 2","How many courses are in the Psychology department for each year? Return a line chart, I want to rank X in descending order."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of  department_id over  hire_date "
"SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1","Show me the trend about the amount of Start_from over Start_from bin start_from by time with a line chart, and rank in desc by the Start_from."
"SELECT Creation , SUM(Budget_in_Billions) FROM department  ORDER BY Creation ASC",Line,Medium,department_management,"{'chart': 'line', 'x_name': 'Creation', 'y_name': 'SUM(Budget_in_Billions)', 'x_data': [['1789~1809', '1810~1830', '1831~1851', '1852~1872', '1873~1893', '1894~1914', '1915~1935', '1936~1956', '1957~1977', '1978~1998', '1999~2002']], 'y_data': [[20, 0, 10, 23, 77, 65, 0, 982, 125, 135, 44]], 'classify': [], 'describe': 'BIN Creation BY YEAR'}",line,Creation,SUM(Budget_in_Billions),"1789~1809, 1810~1830, 1831~1851, 1852~1872, 1873~1893, 1894~1914, 1915~1935, 1936~1956, 1957~1977, 1978~1998, 1999~2002","20, 0, 10, 23, 77, 65, 0, 982, 125, 135, 44","Show sum of budget in each year and bin creation time by year in a line chart, and could you rank from low to high by the X?"
"SELECT Start_from , AVG(Employee_ID) FROM hiring",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","2, 0, 0, 0, 0, 7, 1, 6, 3, 4, 5",Draw a line chart about the change of the average of Employee_ID over  Start_from bin start_from by time.
"SELECT built_year , COUNT(built_year) FROM mill WHERE TYPE = 'Grondzeiler'  ORDER BY built_year DESC",Line,Hard,architecture,"{'chart': 'line', 'x_name': 'built_year', 'y_name': 'COUNT(built_year)', 'x_data': [['1889~1890', '1882~1888', '1875~1881', '1868~1874', '1861~1867', '1854~1860', '1847~1853', '1840~1846', '1833~1839', '1826~1832', '1819~1825']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1]], 'classify': [], 'describe': 'BIN built_year BY YEAR'}",line,built_year,COUNT(built_year),"1889~1890, 1882~1888, 1875~1881, 1868~1874, 1861~1867, 1854~1860, 1847~1853, 1840~1846, 1833~1839, 1826~1832, 1819~1825","1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1","How many mills of 'Grondzeiler' type are built in each year? Give me the trend, order in descending by the X."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, show me the trend about commission_pct over hire_date with a line chart, and could you display x-axis in ascending order?"
"SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year ASC",Line,Medium,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'COUNT(Openning_year)', 'x_data': [['2009', '2010', '2011', '2012', '2013', '2014', '2015']], 'y_data': [[1, 3, 3, 1, 1, 0, 1]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,COUNT(Openning_year),"2009, 2010, 2011, 2012, 2013, 2014, 2015","1, 3, 3, 1, 1, 0, 1","Plot openning year by how many openning year as a trend line, display by the x axis in ascending please."
"SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC",Line,Medium,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'SUM(Capacity)', 'x_data': [['2009', '2010', '2011', '2012', '2013', '2014', '2015']], 'y_data': [[305, 1633, 1336, 368, 330, 0, 364]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,SUM(Capacity),"2009, 2010, 2011, 2012, 2013, 2014, 2015","305, 1633, 1336, 368, 330, 0, 364","What is the sum of capacity of cinemas open for each year? Return a line chart, and could you display by the x-axis in ascending?"
"SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from DESC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1","Can you draw the trend of the number of start from over the start from?, display x-axis in descending order."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110","For all employees who have the letters D or S in their first name, show me about the change of department_id over hire_date in a line chart, rank by the X-axis in asc."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, a line chart shows the trend of department_id over hire_date , order by the X in ascending."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of  commission_pct over  hire_date ."
"SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Actual_Delivery_Date', 'y_name': 'COUNT(Actual_Delivery_Date)', 'x_data': [['1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2010', '2011~2013', '2014~2015']], 'y_data': [[2, 2, 1, 0, 2, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Actual_Delivery_Date BY YEAR'}",line,Actual_Delivery_Date,COUNT(Actual_Delivery_Date),"1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2010, 2011~2013, 2014~2015","2, 2, 1, 0, 2, 0, 0, 1, 1","List the actual delivery date for all the orders with quantity , and count them by a line chart"
"SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-03']], 'y_data': [[8300, 12000, 10000, 6500, 6000, 13000, 7000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-03","8300, 12000, 10000, 6500, 6000, 13000, 7000","For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of salary over hire_date , and show in desc by the x axis."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-17']], 'y_data': [[110, 110, 70, 40, 20, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-17","110, 110, 70, 40, 20, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90","For those employees who did not have any job in the past, a line chart shows the trend of department_id over hire_date , and list x axis from high to low order please."
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[24000, 9000, 4800, 4200, 9000, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 8200, 6500, 2400, 2200, 2500, 3300, 3600, 3200, 2500, 3100, 2600, 11000, 9500, 8000, 8000, 7500, 7000, 9500, 6800, 6400, 11500, 10000, 6100, 8800, 6200, 3200, 2800, 4200, 4100, 2500, 4000, 3200, 2600, 2600, 6500, 12000]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","24000, 9000, 4800, 4200, 9000, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 8200, 6500, 2400, 2200, 2500, 3300, 3600, 3200, 2500, 3100, 2600, 11000, 9500, 8000, 8000, 7500, 7000, 9500, 6800, 6400, 11500, 10000, 6100, 8800, 6200, 3200, 2800, 4200, 4100, 2500, 4000, 3200, 2600, 2600, 6500, 12000","For all employees who have the letters D or S in their first name, a line chart shows the trend of salary over hire_date , and I want to order HIRE_DATE from low to high order please."
"SELECT HIRE_DATE , SALARY FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE ASC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 10000, 12000, 8300","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of salary over hire_date , and display X-axis in asc order."
"SELECT Order_Date , COUNT(Order_Date) FROM BOOKINGS",Line,Easy,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Order_Date', 'y_name': 'COUNT(Order_Date)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016']], 'y_data': [[3, 2, 2, 0, 5, 1, 0, 1, 0, 1]], 'classify': [], 'describe': 'BIN Order_Date BY YEAR'}",line,Order_Date,COUNT(Order_Date),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016","3, 2, 2, 0, 5, 1, 0, 1, 0, 1","List the order dates of all the bookings, and count them by a line chart"
"SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment ASC",Line,Hard,dog_kennels,"{'chart': 'line', 'x_name': 'date_of_treatment', 'y_name': 'COUNT(date_of_treatment)', 'x_data': [['2018-02-26', '2018-02-28', '2018-03-01', '2018-03-04', '2018-03-08', '2018-03-10', '2018-03-11', '2018-03-13', '2018-03-14', '2018-03-15', '2018-03-16', '2018-03-19', '2018-03-23', '2018-03-24']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_treatment'}",line,date_of_treatment,COUNT(date_of_treatment),"2018-02-26, 2018-02-28, 2018-03-01, 2018-03-04, 2018-03-08, 2018-03-10, 2018-03-11, 2018-03-13, 2018-03-14, 2018-03-15, 2018-03-16, 2018-03-19, 2018-03-23, 2018-03-24","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1","How many treatments in each day? Return a line chart that groups by date of treatment, and I want to sort by the date_of_treatment in ascending."
"SELECT Start_from , AVG(Shop_ID) FROM hiring",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,AVG(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5",A line chart shows the trend of the average of Shop_ID over  Start_from bin start_from by time.
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, a line chart shows the change of  salary over  hire_date "
"SELECT Start_from , COUNT(Start_from) FROM hiring",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1",Show me the trend about the amount of Start_from over  Start_from bin start_from by time with a line chart.
"SELECT Creation , AVG(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation DESC",Line,Medium,department_management,"{'chart': 'line', 'x_name': 'Creation', 'y_name': 'AVG(Budget_in_Billions)', 'x_data': [['2002-01-01', '1989-01-01', '1979-01-01', '1977-01-01', '1966-01-01', '1965-01-01', '1953-01-01', '1947-01-01', '1913-01-01', '1903-01-01', '1889-01-01', '1870-01-01', '1849-01-01', '1789-01-01']], 'y_data': [[44, 73, 62, 21, 58, 46, 543, 439, 59, 6, 77, 23, 10, 10]], 'classify': [], 'describe': 'GROUP BY Creation'}",line,Creation,AVG(Budget_in_Billions),"2002-01-01, 1989-01-01, 1979-01-01, 1977-01-01, 1966-01-01, 1965-01-01, 1953-01-01, 1947-01-01, 1913-01-01, 1903-01-01, 1889-01-01, 1870-01-01, 1849-01-01, 1789-01-01","44, 73, 62, 21, 58, 46, 543, 439, 59, 6, 77, 23, 10, 10","Plot the average of budget in billions over creation in a line chart, and order by the Creation in descending."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC",Line,Medium,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['2018-02-25', '2018-02-27', '2018-03-02', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-12', '2018-03-14', '2018-03-15', '2018-03-18', '2018-03-20', '2018-03-22', '2018-03-23']], 'y_data': [[1297, 747, 1113, 3215, 1032, 800, 865, 1976, 2043, 1858, 620, 1287, 1067, 894]], 'classify': [], 'describe': 'GROUP BY date_address_to'}",line,date_address_to,SUM(monthly_rental),"2018-02-25, 2018-02-27, 2018-03-02, 2018-03-04, 2018-03-05, 2018-03-06, 2018-03-07, 2018-03-12, 2018-03-14, 2018-03-15, 2018-03-18, 2018-03-20, 2018-03-22, 2018-03-23","1297, 747, 1113, 3215, 1032, 800, 865, 1976, 2043, 1858, 620, 1287, 1067, 894","A line chart shows the change of the sum of monthly_rental over  date_address_to , and group by attribute date_address_to"
"SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes",Line,Easy,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_of_notes', 'y_name': 'COUNT(date_of_notes)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016~2017']], 'y_data': [[3, 1, 2, 2, 3, 0, 1, 0, 2, 1]], 'classify': [], 'describe': 'BIN date_of_notes BY YEAR'}",line,date_of_notes,COUNT(date_of_notes),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016~2017","3, 1, 2, 2, 3, 0, 1, 0, 2, 1",I want to see trend of the number of date of notes by date of notes
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC",Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[2, 1, 2, 2, 2, 2, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2003, 2004, 2005, 2006, 2007, 2008, 2009","2, 1, 2, 2, 2, 2, 1","How many courses are in the Psychology department for each year? Return a line chart, and display from low to high by the x axis."
"SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass"" GROUP BY date_of_enrolment",Line,Hard,e_learning,"{'chart': 'line', 'x_name': 'date_of_enrolment', 'y_name': 'COUNT(date_of_enrolment)', 'x_data': [['2017-08-02', '2017-09-06', '2017-09-21', '2017-10-10', '2017-10-23', '2017-10-29', '2017-11-13']], 'y_data': [[1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY date_of_enrolment'}",line,date_of_enrolment,COUNT(date_of_enrolment),"2017-08-02, 2017-09-06, 2017-09-21, 2017-10-10, 2017-10-23, 2017-10-29, 2017-11-13","1, 1, 2, 1, 1, 1, 1","What are the enrollment dates of all the tests that have result ""Pass"", and count them by a line chart"
"SELECT Year , avg(Weight) FROM CARS_DATA",Line,Medium,car_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982']], 'y_data': [[3441, 2960, 3237, 3419, 2877, 3176, 3078, 2997, 2861, 3055, 2436, 2532, 2453]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,avg(Weight),"1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982","3441, 2960, 3237, 3419, 2877, 3176, 3078, 2997, 2861, 3055, 2436, 2532, 2453","Show me a line chart of the mean weight change over the year, binning by year"
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date",Line,Extra Hard,sakila_1,"{'chart': 'line', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['2005-05-25', '2005-05-26', '2005-05-29', '2005-05-30', '2005-06-15', '2005-06-16', '2005-06-17', '2005-06-18', '2005-06-19', '2005-06-20', '2005-06-21', '2005-07-06', '2005-07-07', '2005-07-08', '2005-07-09', '2005-07-10', '2005-07-12', '2005-07-26', '2005-07-27', '2005-07-28', '2005-07-29', '2005-07-30', '2005-07-31', '2005-08-01', '2005-08-02', '2005-08-16', '2005-08-17', '2005-08-18', '2005-08-19', '2005-08-20', '2005-08-21', '2005-08-22', '2005-08-23']], 'y_data': [[2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5]], 'classify': [], 'describe': 'GROUP BY payment_date'}",line,payment_date,COUNT(payment_date),"2005-05-25, 2005-05-26, 2005-05-29, 2005-05-30, 2005-06-15, 2005-06-16, 2005-06-17, 2005-06-18, 2005-06-19, 2005-06-20, 2005-06-21, 2005-07-06, 2005-07-07, 2005-07-08, 2005-07-09, 2005-07-10, 2005-07-12, 2005-07-26, 2005-07-27, 2005-07-28, 2005-07-29, 2005-07-30, 2005-07-31, 2005-08-01, 2005-08-02, 2005-08-16, 2005-08-17, 2005-08-18, 2005-08-19, 2005-08-20, 2005-08-21, 2005-08-22, 2005-08-23","2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5",A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who did not have any job in the past, visualize a line chart about the change of  commission_pct over  hire_date ."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE DESC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-09-30', '1987-09-28', '1987-09-24', '1987-09-23', '1987-09-19', '1987-09-17', '1987-09-16', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-05', '1987-09-04', '1987-08-31', '1987-08-29', '1987-08-25', '1987-08-24', '1987-08-22', '1987-08-21', '1987-08-19', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-09', '1987-08-07', '1987-08-04', '1987-07-30', '1987-07-29', '1987-07-27', '1987-07-25', '1987-07-24', '1987-07-20', '1987-07-18', '1987-07-15', '1987-07-14', '1987-07-10', '1987-07-08', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-26', '1987-06-24', '1987-06-22', '1987-06-20', '1987-06-17']], 'y_data': [[101, 101, 124, 124, 123, 123, 122, 121, 121, 120, 120, 149, 149, 148, 148, 148, 147, 147, 147, 146, 146, 146, 145, 145, 100, 124, 124, 123, 123, 123, 122, 121, 120, 120, 100, 100, 114, 114, 114, 100, 108, 108, 108, 108, 103, 103, 102, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-09-30, 1987-09-28, 1987-09-24, 1987-09-23, 1987-09-19, 1987-09-17, 1987-09-16, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-05, 1987-09-04, 1987-08-31, 1987-08-29, 1987-08-25, 1987-08-24, 1987-08-22, 1987-08-21, 1987-08-19, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-09, 1987-08-07, 1987-08-04, 1987-07-30, 1987-07-29, 1987-07-27, 1987-07-25, 1987-07-24, 1987-07-20, 1987-07-18, 1987-07-15, 1987-07-14, 1987-07-10, 1987-07-08, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-26, 1987-06-24, 1987-06-22, 1987-06-20, 1987-06-17","101, 101, 124, 124, 123, 123, 122, 121, 121, 120, 120, 149, 149, 148, 148, 148, 147, 147, 147, 146, 146, 146, 145, 145, 100, 124, 124, 123, 123, 123, 122, 121, 120, 120, 100, 100, 114, 114, 114, 100, 108, 108, 108, 108, 103, 103, 102, 0","For all employees who have the letters D or S in their first name, a line chart shows the change of manager_id over hire_date, and sort HIRE_DATE in descending order."
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, show me the trend about  salary over  hire_date  with a line chart."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","0, 101, 148, 100, 100, 148, 145, 147, 102, 108, 149, 100, 145, 146, 108, 108, 146, 146, 108, 147, 100, 101, 147, 149, 148, 103, 103, 121, 121, 123, 123, 122, 123, 120, 123, 114, 124, 114, 114, 120, 124, 124, 124, 121, 123, 122, 120, 120","For all employees who have the letters D or S in their first name, show me about the change of  manager_id over  hire_date  in a line chart."
"SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = ""Male""",Line,Medium,apartment_rentals,"{'chart': 'line', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004~2006', '2007~2009', '2010~2012', '2013~2015']], 'y_data': [[1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_birth BY YEAR'}",line,date_of_birth,COUNT(date_of_birth),"1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004~2006, 2007~2009, 2010~2012, 2013~2015","1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1","What are the number of dates of birth of all the guests whose gender is ""Male""?"
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, draw a line chart about the change of  salary over  hire_date ."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about  employee_id over  hire_date  with a line chart."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, show me about the change of department_id over hire_date in a line chart, sort in ascending by the HIRE_DATE."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-17']], 'y_data': [[206, 205, 204, 203, 202, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 121, 120, 119, 118, 117, 116, 115, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 100]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-17","206, 205, 204, 203, 202, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 121, 120, 119, 118, 117, 116, 115, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 100","For those employees who did not have any job in the past, visualize a line chart about the change of employee_id over hire_date , display by the HIRE_DATE in descending."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, show me about the change of commission_pct over hire_date in a line chart, and list in desc by the x-axis."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, visualize a line chart about the change of  department_id over  hire_date ."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[206, 205, 204, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","206, 205, 204, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of employee_id over hire_date , display in desc by the x-axis."
"SELECT Openning_year , SUM(Capacity) FROM cinema",Line,Easy,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'SUM(Capacity)', 'x_data': [['2009', '2010', '2011', '2012', '2013', '2014', '2015']], 'y_data': [[305, 1633, 1336, 368, 330, 0, 364]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,SUM(Capacity),"2009, 2010, 2011, 2012, 2013, 2014, 2015","305, 1633, 1336, 368, 330, 0, 364",Plot sum capacity over openning year in a line chart
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year",Line,Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01']], 'y_data': [[2, 1, 2, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY year'}",line,year,COUNT(year),"2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01","2, 1, 2, 2, 2, 2, 1",How many courses are in the Psychology department for each year? Return a line chart.
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'  ORDER BY year ASC",Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[2, 1, 2, 2, 2, 2, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2003, 2004, 2005, 2006, 2007, 2008, 2009","2, 1, 2, 2, 2, 2, 1","Find the number of courses offered by Psychology department in each year with a line chart, rank by the X-axis from low to high."
"SELECT date_of_notes , COUNT(date_of_notes) FROM Assessment_Notes  ORDER BY date_of_notes ASC",Line,Medium,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_of_notes', 'y_name': 'COUNT(date_of_notes)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016~2017']], 'y_data': [[3, 1, 2, 2, 3, 0, 1, 0, 2, 1]], 'classify': [], 'describe': 'BIN date_of_notes BY YEAR'}",line,date_of_notes,COUNT(date_of_notes),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016~2017","3, 1, 2, 2, 3, 0, 1, 0, 2, 1","What are the dates of the assessment notes, and count them by a line chart, I want to show in ascending by the X-axis."
"SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1",Line,Hard,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Actual_Delivery_Date', 'y_name': 'COUNT(Actual_Delivery_Date)', 'x_data': [['1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2010', '2011~2013', '2014~2015']], 'y_data': [[2, 2, 1, 0, 2, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Actual_Delivery_Date BY YEAR'}",line,Actual_Delivery_Date,COUNT(Actual_Delivery_Date),"1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2010, 2011~2013, 2014~2015","2, 2, 1, 0, 2, 0, 0, 1, 1",List the number of the actual delivery date for all the orders with quantity 1
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110","For all employees who have the letters D or S in their first name, visualize a line chart about the change of department_id over hire_date , list from low to high by the HIRE_DATE please."
"SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled",Line,Easy,insurance_policies,"{'chart': 'line', 'x_name': 'Date_Claim_Settled', 'y_name': 'COUNT(Date_Claim_Settled)', 'x_data': [['2017-10-06', '2017-11-04', '2017-11-15', '2017-11-30', '2017-12-24', '2018-01-16', '2018-01-27', '2018-02-04', '2018-02-11', '2018-02-14', '2018-02-15', '2018-02-20', '2018-03-02']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Date_Claim_Settled'}",line,Date_Claim_Settled,COUNT(Date_Claim_Settled),"2017-10-06, 2017-11-04, 2017-11-15, 2017-11-30, 2017-12-24, 2018-01-16, 2018-01-27, 2018-02-04, 2018-02-11, 2018-02-14, 2018-02-15, 2018-02-20, 2018-03-02","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1",Tell me the trend about the claim dates using a trend line.
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","0, 0, 0.25, 0, 0.3, 0.2, 0.25, 0.15, 0, 0, 0.25, 0, 0.2, 0.3, 0, 0, 0.3, 0.25, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For all employees who have the letters D or S in their first name, return a line chart about the change of  commission_pct over  hire_date ."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 20, 20, 40, 70, 110, 110","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about  department_id over  hire_date ."
"SELECT year , SUM(attendance) FROM home_game ORDER BY year ASC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'SUM(attendance)', 'x_data': [['1871~1884', '1885~1898', '1899~1912', '1913~1926', '1927~1940', '1941~1954', '1955~1968', '1969~1982', '1983~1996', '1997~2010', '2011~2014']], 'y_data': [[76306, 235196, 216476, 3483527, 5260134, 12585780, 15436797, 18760115, 27746666, 32563010, 9550049]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,SUM(attendance),"1871~1884, 1885~1898, 1899~1912, 1913~1926, 1927~1940, 1941~1954, 1955~1968, 1969~1982, 1983~1996, 1997~2010, 2011~2014","76306, 235196, 216476, 3483527, 5260134, 12585780, 15436797, 18760115, 27746666, 32563010, 9550049","Show the trend about the number of attendance at home games change over the years, bin year into year interval, order year in ascending order please."
"SELECT yearid , COUNT(yearid) FROM hall_of_fame  ORDER BY yearid ASC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'yearid', 'y_name': 'COUNT(yearid)', 'x_data': [['1936~1943', '1944~1951', '1952~1959', '1960~1967', '1968~1975', '1976~1983', '1984~1991', '1992~1999', '2000~2007', '2008~2015', '2016']], 'y_data': [[5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1]], 'classify': [], 'describe': 'BIN yearid BY YEAR'}",line,yearid,COUNT(yearid),"1936~1943, 1944~1951, 1952~1959, 1960~1967, 1968~1975, 1976~1983, 1984~1991, 1992~1999, 2000~2007, 2008~2015, 2016","5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1","I want to see trend of the number of yearid by yearid, and display from low to high by the X-axis."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, draw a line chart about the change of commission_pct over hire_date , list X-axis in asc order."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[206, 205, 204, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","206, 205, 204, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of employee_id over hire_date , could you order HIRE_DATE in descending order please?"
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[100, 103, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 121, 123, 127, 128, 131, 133, 137, 138, 140, 142, 143, 148, 151, 153, 159, 160, 161, 163, 165, 166, 168, 169, 173, 175, 179, 180, 183, 184, 185, 191, 192, 194, 198, 199, 203, 205]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","100, 103, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 121, 123, 127, 128, 131, 133, 137, 138, 140, 142, 143, 148, 151, 153, 159, 160, 161, 163, 165, 166, 168, 169, 173, 175, 179, 180, 183, 184, 185, 191, 192, 194, 198, 199, 203, 205","For all employees who have the letters D or S in their first name, return a line chart about the change of employee_id over hire_date , and order by the X in ascending."
"SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-09-30', '1987-08-24', '1987-07-01', '1987-08-04', '1987-08-25', '1987-08-07', '1987-08-19', '1987-06-20', '1987-06-26', '1987-08-31', '1987-07-08', '1987-08-09', '1987-08-15', '1987-06-29', '1987-06-28', '1987-08-16', '1987-08-17', '1987-06-30', '1987-08-21', '1987-07-10', '1987-09-28', '1987-08-22', '1987-09-04', '1987-08-29', '1987-06-22', '1987-06-24', '1987-09-09', '1987-09-10', '1987-09-17', '1987-07-24', '1987-07-20', '1987-07-25', '1987-09-05', '1987-09-19', '1987-07-02', '1987-07-29', '1987-07-03', '1987-07-04', '1987-09-08', '1987-07-30', '1987-09-23', '1987-09-24', '1987-07-18', '1987-07-27', '1987-09-16', '1987-07-14', '1987-07-15']], 'y_data': [[24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-09-30, 1987-08-24, 1987-07-01, 1987-08-04, 1987-08-25, 1987-08-07, 1987-08-19, 1987-06-20, 1987-06-26, 1987-08-31, 1987-07-08, 1987-08-09, 1987-08-15, 1987-06-29, 1987-06-28, 1987-08-16, 1987-08-17, 1987-06-30, 1987-08-21, 1987-07-10, 1987-09-28, 1987-08-22, 1987-09-04, 1987-08-29, 1987-06-22, 1987-06-24, 1987-09-09, 1987-09-10, 1987-09-17, 1987-07-24, 1987-07-20, 1987-07-25, 1987-09-05, 1987-09-19, 1987-07-02, 1987-07-29, 1987-07-03, 1987-07-04, 1987-09-08, 1987-07-30, 1987-09-23, 1987-09-24, 1987-07-18, 1987-07-27, 1987-09-16, 1987-07-14, 1987-07-15","24000, 12000, 11500, 11000, 11000, 10000, 9500, 9500, 9000, 9000, 8800, 8200, 8000, 8000, 7800, 7700, 7500, 7000, 6900, 6800, 6500, 6500, 6400, 6200, 6100, 4800, 4200, 4200, 4100, 4000, 3600, 3300, 3200, 3200, 3200, 3100, 3100, 2900, 2800, 2800, 2600, 2600, 2600, 2500, 2500, 2500, 2400, 2200","For all employees who have the letters D or S in their first name, show me the trend about  salary over  hire_date  with a line chart."
"SELECT year , count(*) FROM SECTION GROUP BY year",Line,Medium,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2001-01-01', '2002-01-01', '2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01']], 'y_data': [[5, 13, 12, 7, 8, 13, 12, 10, 9, 11]], 'classify': [], 'describe': 'GROUP BY year'}",line,year,count(*),"2001-01-01, 2002-01-01, 2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01","5, 13, 12, 7, 8, 13, 12, 10, 9, 11",Find the number of courses provided in each year with a line chart.
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, show me about the change of  department_id over  hire_date  in a line chart."
"SELECT year , count(*) FROM SECTION GROUP BY year",Line,Medium,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2001-01-01', '2002-01-01', '2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01']], 'y_data': [[5, 13, 12, 7, 8, 13, 12, 10, 9, 11]], 'classify': [], 'describe': 'GROUP BY year'}",line,year,count(*),"2001-01-01, 2002-01-01, 2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01","5, 13, 12, 7, 8, 13, 12, 10, 9, 11",How many courses are provided in each year? Visualize with a line chart.
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of employee_id over hire_date , and rank by the x axis in asc."
"SELECT yearid , COUNT(yearid) FROM hall_of_fame",Line,Easy,baseball_1,"{'chart': 'line', 'x_name': 'yearid', 'y_name': 'COUNT(yearid)', 'x_data': [['1936~1943', '1944~1951', '1952~1959', '1960~1967', '1968~1975', '1976~1983', '1984~1991', '1992~1999', '2000~2007', '2008~2015', '2016']], 'y_data': [[5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1]], 'classify': [], 'describe': 'BIN yearid BY YEAR'}",line,yearid,COUNT(yearid),"1936~1943, 1944~1951, 1952~1959, 1960~1967, 1968~1975, 1976~1983, 1984~1991, 1992~1999, 2000~2007, 2008~2015, 2016","5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1",count yearid for visualizing a line chart.
"SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled ORDER BY Date_Claim_Settled ASC",Line,Medium,insurance_policies,"{'chart': 'line', 'x_name': 'Date_Claim_Settled', 'y_name': 'COUNT(Date_Claim_Settled)', 'x_data': [['2017-10-06', '2017-11-04', '2017-11-15', '2017-11-30', '2017-12-24', '2018-01-16', '2018-01-27', '2018-02-04', '2018-02-11', '2018-02-14', '2018-02-15', '2018-02-20', '2018-03-02']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Date_Claim_Settled'}",line,Date_Claim_Settled,COUNT(Date_Claim_Settled),"2017-10-06, 2017-11-04, 2017-11-15, 2017-11-30, 2017-12-24, 2018-01-16, 2018-01-27, 2018-02-04, 2018-02-11, 2018-02-14, 2018-02-15, 2018-02-20, 2018-03-02","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1","Show the trend about the frequency of the claim dates, and list by the X from low to high."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY Document_Date ASC",Line,Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[4, 1, 3, 1, 0, 1, 0, 0, 2, 1, 2]], 'classify': [], 'describe': 'BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","4, 1, 3, 1, 0, 1, 0, 0, 2, 1, 2","How many documents are created in each day? Bin the document date by year interval with a line chart, and list x axis in ascending order."
"SELECT year , avg(attendance) FROM home_game ORDER BY year ASC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'avg(attendance)', 'x_data': [['1871~1884', '1885~1898', '1899~1912', '1913~1926', '1927~1940', '1941~1954', '1955~1968', '1969~1982', '1983~1996', '1997~2010', '2011~2014']], 'y_data': [[5450.428571428572, 16799.714285714286, 15462.57142857143, 248823.35714285713, 375723.85714285716, 898984.2857142857, 1102628.357142857, 1340008.2142857143, 1981904.7142857143, 2325929.285714286, 2387512.25]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,avg(attendance),"1871~1884, 1885~1898, 1899~1912, 1913~1926, 1927~1940, 1941~1954, 1955~1968, 1969~1982, 1983~1996, 1997~2010, 2011~2014","5450.428571428572, 16799.714285714286, 15462.57142857143, 248823.35714285713, 375723.85714285716, 898984.2857142857, 1102628.357142857, 1340008.2142857143, 1981904.7142857143, 2325929.285714286, 2387512.25","Show the trend about the average of the number of attendance at home games change over the years, bin year into year interval, list by the X-axis in asc please."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 90, 90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 10, 20, 20, 40, 70, 110, 110","For those employees who was hired before 2002-06-21, show me about the change of  department_id over  hire_date  in a line chart."
"SELECT Start_from , Shop_ID FROM hiring ORDER BY Start_from ASC",Line,Easy,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'Shop_ID', 'x_data': [['2003-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01']], 'y_data': [[1, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': ''}",line,Start_from,Shop_ID,"2003-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01","1, 6, 1, 2, 8, 4, 5","Can you draw the trend of shop_id over the start from?, sort in ascending by the x axis."
"SELECT HIRE_DATE , SALARY FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 17000, 17000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 11000, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 7900, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8600, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 4400, 13000, 6000, 6500, 10000, 12000, 8300","For those employees who was hired before 2002-06-21, return a line chart about the change of salary over hire_date , and could you rank by the X-axis from low to high?"
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21'",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.3, 0.3, 0.3, 0.2, 0.3, 0.25, 0.25, 0.2, 0.2, 0.15, 0.35, 0.35, 0.35, 0.3, 0.3, 0.25, 0.25, 0.15, 0.1, 0.1, 0.1, 0.1, 0.25, 0.2, 0.2, 0.15, 0.15, 0.1, 0.3, 0.25, 0.2, 0.2, 0.15, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who was hired before 2002-06-21, show me about the change of  commission_pct over  hire_date  in a line chart."
"SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled",Line,Easy,insurance_policies,"{'chart': 'line', 'x_name': 'Date_Claim_Settled', 'y_name': 'COUNT(Date_Claim_Settled)', 'x_data': [['2017-10-06', '2017-11-04', '2017-11-15', '2017-11-30', '2017-12-24', '2018-01-16', '2018-01-27', '2018-02-04', '2018-02-11', '2018-02-14', '2018-02-15', '2018-02-20', '2018-03-02']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY Date_Claim_Settled'}",line,Date_Claim_Settled,COUNT(Date_Claim_Settled),"2017-10-06, 2017-11-04, 2017-11-15, 2017-11-30, 2017-12-24, 2018-01-16, 2018-01-27, 2018-02-04, 2018-02-11, 2018-02-14, 2018-02-15, 2018-02-20, 2018-03-02","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1",Plot date claim settled by the number of date claim settled as a line chart
"SELECT date_order_placed , COUNT(date_order_placed) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""",Line,Hard,tracking_orders,"{'chart': 'line', 'x_name': 'date_order_placed', 'y_name': 'COUNT(date_order_placed)', 'x_data': [['1974~1976', '1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[2, 0, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_order_placed BY YEAR'}",line,date_order_placed,COUNT(date_order_placed),"1974~1976, 1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","2, 0, 0, 0, 0, 0, 0, 0, 0, 1","What are the number of the dates of the orders made by the customer named ""Jeramie""?"
"SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'avg(attendance)', 'x_data': [['2014-01-01', '2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01', '2003-01-01', '2002-01-01', '2001-01-01', '2000-01-01', '1999-01-01', '1998-01-01', '1997-01-01', '1996-01-01', '1995-01-01', '1994-01-01', '1993-01-01', '1992-01-01', '1991-01-01', '1990-01-01', '1989-01-01', '1988-01-01', '1987-01-01', '1986-01-01', '1985-01-01', '1984-01-01', '1983-01-01', '1982-01-01', '1981-01-01', '1980-01-01', '1979-01-01', '1978-01-01', '1977-01-01', '1976-01-01', '1975-01-01', '1974-01-01', '1973-01-01', '1972-01-01', '1971-01-01', '1970-01-01', '1969-01-01', '1968-01-01', '1967-01-01', '1966-01-01', '1965-01-01', '1964-01-01', '1963-01-01', '1962-01-01', '1961-01-01', '1960-01-01', '1959-01-01', '1958-01-01', '1957-01-01', '1956-01-01', '1955-01-01', '1954-01-01', '1953-01-01', '1952-01-01', '1951-01-01', '1950-01-01', '1949-01-01', '1948-01-01', '1947-01-01', '1946-01-01', '1945-01-01', '1944-01-01', '1943-01-01', '1942-01-01', '1941-01-01', '1940-01-01', '1939-01-01', '1938-01-01', '1937-01-01', '1936-01-01', '1935-01-01', '1934-01-01', '1933-01-01', '1932-01-01', '1931-01-01', '1930-01-01', '1929-01-01', '1928-01-01', '1927-01-01', '1926-01-01', '1925-01-01', '1924-01-01', '1923-01-01', '1922-01-01', '1921-01-01', '1920-01-01', '1919-01-01', '1918-01-01', '1917-01-01', '1916-01-01', '1915-01-01', '1914-01-01', '1913-01-01', '1912-01-01', '1911-01-01', '1910-01-01', '1909-01-01', '1908-01-01', '1907-01-01', '1906-01-01', '1905-01-01', '1904-01-01', '1903-01-01', '1902-01-01', '1901-01-01', '1900-01-01', '1899-01-01', '1898-01-01', '1897-01-01', '1896-01-01', '1895-01-01', '1894-01-01', '1893-01-01', '1892-01-01', '1891-01-01', '1890-01-01', '1889-01-01', '1888-01-01', '1887-01-01', '1886-01-01', '1885-01-01', '1884-01-01', '1883-01-01', '1882-01-01', '1881-01-01', '1880-01-01', '1879-01-01', '1878-01-01', '1877-01-01', '1876-01-01', '1875-01-01', '1874-01-01', '1873-01-01', '1872-01-01', '1871-01-01']], 'y_data': [[2378697.483870968, 2387968.935483871, 2414815.096774193, 2368569.903225806, 2283591.625, 2447339.6, 2382495.8484848486, 2484490, 2534515.833333333, 2497232.666666666, 2212707.484848485, 2182286.2258064514, 2264819.8666666667, 2341054.3870967743, 2275673.625, 2197934.625, 2278377.7741935486, 2180498, 2005524.2333333332, 1804337.8571428568, 1785157.5357142857, 2509234.0714285714, 2151571.1153846155, 2187885.346153846, 2114356.576923077, 2052794.9259259256, 2038187.4230769232, 2001087.1153846157, 1828231.7692307688, 1801622.3846153843, 1721233.730769231, 1745448.6538461538, 1717054.4230769232, 1023446.3461538459, 1656938.730769231, 1677201.4230769232, 1562493.230769231, 1510126.3461538462, 1304951.458333333, 1241784.458333333, 1249488.416666667, 1255066.875, 1145264.708333333, 1218456.666666667, 1103714, 1094134.84, 1093400.5238095238, 1199437.7, 1205586.5714285714, 1127733, 1064345.1, 1039067.8, 1074105.2, 1051839.388888889, 1248884.6875, 1203611.5625, 1087706.5625, 1007885.2941176472, 991736.7647058823, 1041463.875, 1033169.8125, 929984.5625, 912397.625, 1024580.3125, 1088765.5625, 1285012.375, 1319362, 1286085.625, 1019072.2777777779, 651439.2352941176, 524242.9411764706, 465679.41176470596, 485573.6470588236, 560421.8823529412, 628654.4705882353, 604727.8823529412, 476012.22222222225, 437536.11764705885, 436795.58823529404, 350890.6875, 189549, 295785.1875, 221597.8333333333, 285558.4117647059, 213375.82352941175, 336567.82352941175, 294843.25, 488246.4705882353, 238276.375, 470832.6875, 501204.8125, 435409.8125, 317164.375, 340739.625, 280158.1176470588, 213044.1875, 46148.75, 220268.875, 55500, 153360.2, 211425.64, 0, 0, 117353.38888888886, 0, 0, 5284.6875, 0, 46664.75, 0, 0, 0, 0, 7859, 36116.125, 3200, 350, 9875, 0, 9883.333333333334, 143202.375, 9379.07142857143, 4512.642857142857, 2324, 10271.057142857142, 6767.571428571428, 8186.380952380952, 18591.666666666668, 11856.35294117647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17329.391304347828, 27249.7, 0, 14603.333333333336, 17125]], 'classify': [], 'describe': ''}",line,year,avg(attendance),"2014-01-01, 2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01, 2003-01-01, 2002-01-01, 2001-01-01, 2000-01-01, 1999-01-01, 1998-01-01, 1997-01-01, 1996-01-01, 1995-01-01, 1994-01-01, 1993-01-01, 1992-01-01, 1991-01-01, 1990-01-01, 1989-01-01, 1988-01-01, 1987-01-01, 1986-01-01, 1985-01-01, 1984-01-01, 1983-01-01, 1982-01-01, 1981-01-01, 1980-01-01, 1979-01-01, 1978-01-01, 1977-01-01, 1976-01-01, 1975-01-01, 1974-01-01, 1973-01-01, 1972-01-01, 1971-01-01, 1970-01-01, 1969-01-01, 1968-01-01, 1967-01-01, 1966-01-01, 1965-01-01, 1964-01-01, 1963-01-01, 1962-01-01, 1961-01-01, 1960-01-01, 1959-01-01, 1958-01-01, 1957-01-01, 1956-01-01, 1955-01-01, 1954-01-01, 1953-01-01, 1952-01-01, 1951-01-01, 1950-01-01, 1949-01-01, 1948-01-01, 1947-01-01, 1946-01-01, 1945-01-01, 1944-01-01, 1943-01-01, 1942-01-01, 1941-01-01, 1940-01-01, 1939-01-01, 1938-01-01, 1937-01-01, 1936-01-01, 1935-01-01, 1934-01-01, 1933-01-01, 1932-01-01, 1931-01-01, 1930-01-01, 1929-01-01, 1928-01-01, 1927-01-01, 1926-01-01, 1925-01-01, 1924-01-01, 1923-01-01, 1922-01-01, 1921-01-01, 1920-01-01, 1919-01-01, 1918-01-01, 1917-01-01, 1916-01-01, 1915-01-01, 1914-01-01, 1913-01-01, 1912-01-01, 1911-01-01, 1910-01-01, 1909-01-01, 1908-01-01, 1907-01-01, 1906-01-01, 1905-01-01, 1904-01-01, 1903-01-01, 1902-01-01, 1901-01-01, 1900-01-01, 1899-01-01, 1898-01-01, 1897-01-01, 1896-01-01, 1895-01-01, 1894-01-01, 1893-01-01, 1892-01-01, 1891-01-01, 1890-01-01, 1889-01-01, 1888-01-01, 1887-01-01, 1886-01-01, 1885-01-01, 1884-01-01, 1883-01-01, 1882-01-01, 1881-01-01, 1880-01-01, 1879-01-01, 1878-01-01, 1877-01-01, 1876-01-01, 1875-01-01, 1874-01-01, 1873-01-01, 1872-01-01, 1871-01-01","2378697.483870968, 2387968.935483871, 2414815.096774193, 2368569.903225806, 2283591.625, 2447339.6, 2382495.8484848486, 2484490, 2534515.833333333, 2497232.666666666, 2212707.484848485, 2182286.2258064514, 2264819.8666666667, 2341054.3870967743, 2275673.625, 2197934.625, 2278377.7741935486, 2180498, 2005524.2333333332, 1804337.8571428568, 1785157.5357142857, 2509234.0714285714, 2151571.1153846155, 2187885.346153846, 2114356.576923077, 2052794.9259259256, 2038187.4230769232, 2001087.1153846157, 1828231.7692307688, 1801622.3846153843, 1721233.730769231, 1745448.6538461538, 1717054.4230769232, 1023446.3461538459, 1656938.730769231, 1677201.4230769232, 1562493.230769231, 1510126.3461538462, 1304951.458333333, 1241784.458333333, 1249488.416666667, 1255066.875, 1145264.708333333, 1218456.666666667, 1103714, 1094134.84, 1093400.5238095238, 1199437.7, 1205586.5714285714, 1127733, 1064345.1, 1039067.8, 1074105.2, 1051839.388888889, 1248884.6875, 1203611.5625, 1087706.5625, 1007885.2941176472, 991736.7647058823, 1041463.875, 1033169.8125, 929984.5625, 912397.625, 1024580.3125, 1088765.5625, 1285012.375, 1319362, 1286085.625, 1019072.2777777779, 651439.2352941176, 524242.9411764706, 465679.41176470596, 485573.6470588236, 560421.8823529412, 628654.4705882353, 604727.8823529412, 476012.22222222225, 437536.11764705885, 436795.58823529404, 350890.6875, 189549, 295785.1875, 221597.8333333333, 285558.4117647059, 213375.82352941175, 336567.82352941175, 294843.25, 488246.4705882353, 238276.375, 470832.6875, 501204.8125, 435409.8125, 317164.375, 340739.625, 280158.1176470588, 213044.1875, 46148.75, 220268.875, 55500, 153360.2, 211425.64, 0, 0, 117353.38888888886, 0, 0, 5284.6875, 0, 46664.75, 0, 0, 0, 0, 7859, 36116.125, 3200, 350, 9875, 0, 9883.333333333334, 143202.375, 9379.07142857143, 4512.642857142857, 2324, 10271.057142857142, 6767.571428571428, 8186.380952380952, 18591.666666666668, 11856.35294117647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17329.391304347828, 27249.7, 0, 14603.333333333336, 17125","What is the average number of attendance at home games for each year Plot them as line chart, and could you display year in desc order?"
"SELECT year , avg(attendance) FROM home_game GROUP BY YEAR ORDER BY year DESC",Line,Medium,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'avg(attendance)', 'x_data': [['2014-01-01', '2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01', '2003-01-01', '2002-01-01', '2001-01-01', '2000-01-01', '1999-01-01', '1998-01-01', '1997-01-01', '1996-01-01', '1995-01-01', '1994-01-01', '1993-01-01', '1992-01-01', '1991-01-01', '1990-01-01', '1989-01-01', '1988-01-01', '1987-01-01', '1986-01-01', '1985-01-01', '1984-01-01', '1983-01-01', '1982-01-01', '1981-01-01', '1980-01-01', '1979-01-01', '1978-01-01', '1977-01-01', '1976-01-01', '1975-01-01', '1974-01-01', '1973-01-01', '1972-01-01', '1971-01-01', '1970-01-01', '1969-01-01', '1968-01-01', '1967-01-01', '1966-01-01', '1965-01-01', '1964-01-01', '1963-01-01', '1962-01-01', '1961-01-01', '1960-01-01', '1959-01-01', '1958-01-01', '1957-01-01', '1956-01-01', '1955-01-01', '1954-01-01', '1953-01-01', '1952-01-01', '1951-01-01', '1950-01-01', '1949-01-01', '1948-01-01', '1947-01-01', '1946-01-01', '1945-01-01', '1944-01-01', '1943-01-01', '1942-01-01', '1941-01-01', '1940-01-01', '1939-01-01', '1938-01-01', '1937-01-01', '1936-01-01', '1935-01-01', '1934-01-01', '1933-01-01', '1932-01-01', '1931-01-01', '1930-01-01', '1929-01-01', '1928-01-01', '1927-01-01', '1926-01-01', '1925-01-01', '1924-01-01', '1923-01-01', '1922-01-01', '1921-01-01', '1920-01-01', '1919-01-01', '1918-01-01', '1917-01-01', '1916-01-01', '1915-01-01', '1914-01-01', '1913-01-01', '1912-01-01', '1911-01-01', '1910-01-01', '1909-01-01', '1908-01-01', '1907-01-01', '1906-01-01', '1905-01-01', '1904-01-01', '1903-01-01', '1902-01-01', '1901-01-01', '1900-01-01', '1899-01-01', '1898-01-01', '1897-01-01', '1896-01-01', '1895-01-01', '1894-01-01', '1893-01-01', '1892-01-01', '1891-01-01', '1890-01-01', '1889-01-01', '1888-01-01', '1887-01-01', '1886-01-01', '1885-01-01', '1884-01-01', '1883-01-01', '1882-01-01', '1881-01-01', '1880-01-01', '1879-01-01', '1878-01-01', '1877-01-01', '1876-01-01', '1875-01-01', '1874-01-01', '1873-01-01', '1872-01-01', '1871-01-01']], 'y_data': [[2378697.483870968, 2387968.935483871, 2414815.096774193, 2368569.903225806, 2283591.625, 2447339.6, 2382495.8484848486, 2484490, 2534515.833333333, 2497232.666666666, 2212707.484848485, 2182286.2258064514, 2264819.8666666667, 2341054.3870967743, 2275673.625, 2197934.625, 2278377.7741935486, 2180498, 2005524.2333333332, 1804337.8571428568, 1785157.5357142857, 2509234.0714285714, 2151571.1153846155, 2187885.346153846, 2114356.576923077, 2052794.9259259256, 2038187.4230769232, 2001087.1153846157, 1828231.7692307688, 1801622.3846153843, 1721233.730769231, 1745448.6538461538, 1717054.4230769232, 1023446.3461538459, 1656938.730769231, 1677201.4230769232, 1562493.230769231, 1510126.3461538462, 1304951.458333333, 1241784.458333333, 1249488.416666667, 1255066.875, 1145264.708333333, 1218456.666666667, 1103714, 1094134.84, 1093400.5238095238, 1199437.7, 1205586.5714285714, 1127733, 1064345.1, 1039067.8, 1074105.2, 1051839.388888889, 1248884.6875, 1203611.5625, 1087706.5625, 1007885.2941176472, 991736.7647058823, 1041463.875, 1033169.8125, 929984.5625, 912397.625, 1024580.3125, 1088765.5625, 1285012.375, 1319362, 1286085.625, 1019072.2777777779, 651439.2352941176, 524242.9411764706, 465679.41176470596, 485573.6470588236, 560421.8823529412, 628654.4705882353, 604727.8823529412, 476012.22222222225, 437536.11764705885, 436795.58823529404, 350890.6875, 189549, 295785.1875, 221597.8333333333, 285558.4117647059, 213375.82352941175, 336567.82352941175, 294843.25, 488246.4705882353, 238276.375, 470832.6875, 501204.8125, 435409.8125, 317164.375, 340739.625, 280158.1176470588, 213044.1875, 46148.75, 220268.875, 55500, 153360.2, 211425.64, 0, 0, 117353.38888888886, 0, 0, 5284.6875, 0, 46664.75, 0, 0, 0, 0, 7859, 36116.125, 3200, 350, 9875, 0, 9883.333333333334, 143202.375, 9379.07142857143, 4512.642857142857, 2324, 10271.057142857142, 6767.571428571428, 8186.380952380952, 18591.666666666668, 11856.35294117647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17329.391304347828, 27249.7, 0, 14603.333333333336, 17125]], 'classify': [], 'describe': ''}",line,year,avg(attendance),"2014-01-01, 2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01, 2003-01-01, 2002-01-01, 2001-01-01, 2000-01-01, 1999-01-01, 1998-01-01, 1997-01-01, 1996-01-01, 1995-01-01, 1994-01-01, 1993-01-01, 1992-01-01, 1991-01-01, 1990-01-01, 1989-01-01, 1988-01-01, 1987-01-01, 1986-01-01, 1985-01-01, 1984-01-01, 1983-01-01, 1982-01-01, 1981-01-01, 1980-01-01, 1979-01-01, 1978-01-01, 1977-01-01, 1976-01-01, 1975-01-01, 1974-01-01, 1973-01-01, 1972-01-01, 1971-01-01, 1970-01-01, 1969-01-01, 1968-01-01, 1967-01-01, 1966-01-01, 1965-01-01, 1964-01-01, 1963-01-01, 1962-01-01, 1961-01-01, 1960-01-01, 1959-01-01, 1958-01-01, 1957-01-01, 1956-01-01, 1955-01-01, 1954-01-01, 1953-01-01, 1952-01-01, 1951-01-01, 1950-01-01, 1949-01-01, 1948-01-01, 1947-01-01, 1946-01-01, 1945-01-01, 1944-01-01, 1943-01-01, 1942-01-01, 1941-01-01, 1940-01-01, 1939-01-01, 1938-01-01, 1937-01-01, 1936-01-01, 1935-01-01, 1934-01-01, 1933-01-01, 1932-01-01, 1931-01-01, 1930-01-01, 1929-01-01, 1928-01-01, 1927-01-01, 1926-01-01, 1925-01-01, 1924-01-01, 1923-01-01, 1922-01-01, 1921-01-01, 1920-01-01, 1919-01-01, 1918-01-01, 1917-01-01, 1916-01-01, 1915-01-01, 1914-01-01, 1913-01-01, 1912-01-01, 1911-01-01, 1910-01-01, 1909-01-01, 1908-01-01, 1907-01-01, 1906-01-01, 1905-01-01, 1904-01-01, 1903-01-01, 1902-01-01, 1901-01-01, 1900-01-01, 1899-01-01, 1898-01-01, 1897-01-01, 1896-01-01, 1895-01-01, 1894-01-01, 1893-01-01, 1892-01-01, 1891-01-01, 1890-01-01, 1889-01-01, 1888-01-01, 1887-01-01, 1886-01-01, 1885-01-01, 1884-01-01, 1883-01-01, 1882-01-01, 1881-01-01, 1880-01-01, 1879-01-01, 1878-01-01, 1877-01-01, 1876-01-01, 1875-01-01, 1874-01-01, 1873-01-01, 1872-01-01, 1871-01-01","2378697.483870968, 2387968.935483871, 2414815.096774193, 2368569.903225806, 2283591.625, 2447339.6, 2382495.8484848486, 2484490, 2534515.833333333, 2497232.666666666, 2212707.484848485, 2182286.2258064514, 2264819.8666666667, 2341054.3870967743, 2275673.625, 2197934.625, 2278377.7741935486, 2180498, 2005524.2333333332, 1804337.8571428568, 1785157.5357142857, 2509234.0714285714, 2151571.1153846155, 2187885.346153846, 2114356.576923077, 2052794.9259259256, 2038187.4230769232, 2001087.1153846157, 1828231.7692307688, 1801622.3846153843, 1721233.730769231, 1745448.6538461538, 1717054.4230769232, 1023446.3461538459, 1656938.730769231, 1677201.4230769232, 1562493.230769231, 1510126.3461538462, 1304951.458333333, 1241784.458333333, 1249488.416666667, 1255066.875, 1145264.708333333, 1218456.666666667, 1103714, 1094134.84, 1093400.5238095238, 1199437.7, 1205586.5714285714, 1127733, 1064345.1, 1039067.8, 1074105.2, 1051839.388888889, 1248884.6875, 1203611.5625, 1087706.5625, 1007885.2941176472, 991736.7647058823, 1041463.875, 1033169.8125, 929984.5625, 912397.625, 1024580.3125, 1088765.5625, 1285012.375, 1319362, 1286085.625, 1019072.2777777779, 651439.2352941176, 524242.9411764706, 465679.41176470596, 485573.6470588236, 560421.8823529412, 628654.4705882353, 604727.8823529412, 476012.22222222225, 437536.11764705885, 436795.58823529404, 350890.6875, 189549, 295785.1875, 221597.8333333333, 285558.4117647059, 213375.82352941175, 336567.82352941175, 294843.25, 488246.4705882353, 238276.375, 470832.6875, 501204.8125, 435409.8125, 317164.375, 340739.625, 280158.1176470588, 213044.1875, 46148.75, 220268.875, 55500, 153360.2, 211425.64, 0, 0, 117353.38888888886, 0, 0, 5284.6875, 0, 46664.75, 0, 0, 0, 0, 7859, 36116.125, 3200, 350, 9875, 0, 9883.333333333334, 143202.375, 9379.07142857143, 4512.642857142857, 2324, 10271.057142857142, 6767.571428571428, 8186.380952380952, 18591.666666666668, 11856.35294117647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17329.391304347828, 27249.7, 0, 14603.333333333336, 17125","Show the trend about the total average number of attendance at home games change over the years, bin year into year interval, and I want to list by the X in desc please."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[110, 110, 70, 40, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","110, 110, 70, 40, 20, 20, 10, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90, 90, 90","For those employees who was hired before 2002-06-21, give me the trend about department_id over hire_date , could you list in descending by the X-axis?"
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-17']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-17","0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.15, 0.2, 0.25, 0.3, 0.1, 0.15, 0.15, 0.2, 0.2, 0.25, 0.1, 0.1, 0.1, 0.1, 0.15, 0.25, 0.25, 0.3, 0.3, 0.35, 0.35, 0.35, 0.15, 0.2, 0.2, 0.25, 0.25, 0.3, 0.2, 0.3, 0.3, 0.3, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0","For those employees who did not have any job in the past, for commission_pct, hire_date, visualize the trend, and I want to rank from high to low by the X-axis."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE ASC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-29, 1987-09-30, 1987-10-01","100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of employee_id over hire_date , and rank by the X-axis in ascending."
"SELECT Start_from , SUM(Shop_ID) FROM hiring  ORDER BY Start_from ASC",Line,Medium,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5]], 'classify': [], 'describe': 'BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 6, 1, 2, 8, 4, 5","A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time, display x-axis in asc order."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-26', '1987-09-03']], 'y_data': [[205, 101, 101, 101, 201, 100, 149]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-26, 1987-09-03","205, 101, 101, 101, 201, 100, 149","For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of manager_id over hire_date, and could you show in desc by the x axis?"
"SELECT date_of_birth , COUNT(date_of_birth) FROM Guests WHERE gender_code = ""Male""",Line,Medium,apartment_rentals,"{'chart': 'line', 'x_name': 'date_of_birth', 'y_name': 'COUNT(date_of_birth)', 'x_data': [['1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004~2006', '2007~2009', '2010~2012', '2013~2015']], 'y_data': [[1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_birth BY YEAR'}",line,date_of_birth,COUNT(date_of_birth),"1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004~2006, 2007~2009, 2010~2012, 2013~2015","1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1","A line chart for returning the number of the date of birth for all the guests with gender code ""Male""."
"SELECT Planned_Delivery_Date , COUNT(Planned_Delivery_Date) FROM BOOKINGS  ORDER BY Planned_Delivery_Date ASC",Line,Medium,cre_Drama_Workshop_Groups,"{'chart': 'line', 'x_name': 'Planned_Delivery_Date', 'y_name': 'COUNT(Planned_Delivery_Date)', 'x_data': [['1971~1975', '1976~1980', '1981~1985', '1986~1990', '1991~1995', '1996~2000', '2001~2005', '2006~2010', '2011~2015', '2016~2017']], 'y_data': [[4, 2, 0, 1, 1, 1, 0, 2, 2, 2]], 'classify': [], 'describe': 'BIN Planned_Delivery_Date BY YEAR'}",line,Planned_Delivery_Date,COUNT(Planned_Delivery_Date),"1971~1975, 1976~1980, 1981~1985, 1986~1990, 1991~1995, 1996~2000, 2001~2005, 2006~2010, 2011~2015, 2016~2017","4, 2, 0, 1, 1, 1, 0, 2, 2, 2","Visualize the general trend of the number of planned delivery date over the planned delivery date, and list x-axis in ascending order."
"SELECT HIRE_DATE , MANAGER_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE DESC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'MANAGER_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-27', '1987-09-26', '1987-09-25', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-09-01', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-09', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-07-01', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-19', '1987-06-18', '1987-06-17']], 'y_data': [[205, 101, 101, 201, 100, 101, 124, 124, 124, 124, 123, 123, 123, 123, 122, 122, 122, 122, 121, 121, 121, 121, 120, 120, 120, 120, 149, 149, 149, 149, 149, 149, 148, 148, 148, 148, 148, 148, 147, 147, 147, 147, 147, 147, 146, 146, 146, 146, 146, 146, 145, 145, 145, 145, 145, 145, 100, 100, 100, 100, 100, 124, 124, 124, 124, 123, 123, 123, 123, 122, 122, 122, 122, 121, 121, 121, 121, 120, 120, 120, 120, 100, 100, 100, 100, 100, 114, 114, 114, 114, 114, 100, 108, 108, 108, 108, 108, 101, 103, 103, 103, 103, 102, 100, 100, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,MANAGER_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-27, 1987-09-26, 1987-09-25, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-09-01, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-09, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-07-01, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-19, 1987-06-18, 1987-06-17","205, 101, 101, 201, 100, 101, 124, 124, 124, 124, 123, 123, 123, 123, 122, 122, 122, 122, 121, 121, 121, 121, 120, 120, 120, 120, 149, 149, 149, 149, 149, 149, 148, 148, 148, 148, 148, 148, 147, 147, 147, 147, 147, 147, 146, 146, 146, 146, 146, 146, 145, 145, 145, 145, 145, 145, 100, 100, 100, 100, 100, 124, 124, 124, 124, 123, 123, 123, 123, 122, 122, 122, 122, 121, 121, 121, 121, 120, 120, 120, 120, 100, 100, 100, 100, 100, 114, 114, 114, 114, 114, 100, 108, 108, 108, 108, 108, 101, 103, 103, 103, 103, 102, 100, 100, 0","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of manager_id over hire_date , and could you display X-axis from high to low order?"
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about employee_id over hire_date with a line chart, I want to display in ascending by the HIRE_DATE."
"SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR ORDER BY Year DESC",Line,Medium,car_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Weight)', 'x_data': [['1982-01-01', '1981-01-01', '1980-01-01', '1979-01-01', '1978-01-01', '1977-01-01', '1976-01-01', '1975-01-01', '1974-01-01', '1973-01-01', '1972-01-01', '1971-01-01', '1970-01-01']], 'y_data': [[2453.548387096774, 2532.1666666666665, 2436.655172413793, 3055.3448275862074, 2861.805555555556, 2997.357142857143, 3078.7352941176473, 3176.8, 2877.925925925926, 3419.025, 3237.714285714286, 2960.3448275862074, 3441.3142857142852]], 'classify': [], 'describe': ''}",line,Year,avg(Weight),"1982-01-01, 1981-01-01, 1980-01-01, 1979-01-01, 1978-01-01, 1977-01-01, 1976-01-01, 1975-01-01, 1974-01-01, 1973-01-01, 1972-01-01, 1971-01-01, 1970-01-01","2453.548387096774, 2532.1666666666665, 2436.655172413793, 3055.3448275862074, 2861.805555555556, 2997.357142857143, 3078.7352941176473, 3176.8, 2877.925925925926, 3419.025, 3237.714285714286, 2960.3448275862074, 3441.3142857142852","Give me a tendency forwhat is the average weight of cars each year?, display in desc by the Year."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date ORDER BY payment_date DESC",Line,Extra Hard,sakila_1,"{'chart': 'line', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['2005-08-23', '2005-08-22', '2005-08-21', '2005-08-20', '2005-08-19', '2005-08-18', '2005-08-17', '2005-08-16', '2005-08-02', '2005-08-01', '2005-07-31', '2005-07-30', '2005-07-29', '2005-07-28', '2005-07-27', '2005-07-26', '2005-07-12', '2005-07-10', '2005-07-09', '2005-07-08', '2005-07-07', '2005-07-06', '2005-06-21', '2005-06-20', '2005-06-19', '2005-06-18', '2005-06-17', '2005-06-16', '2005-06-15', '2005-05-30', '2005-05-29', '2005-05-26', '2005-05-25']], 'y_data': [[5, 6, 6, 4, 4, 5, 2, 1, 8, 6, 8, 7, 6, 3, 4, 1, 1, 4, 3, 3, 2, 5, 3, 3, 2, 1, 3, 1, 2, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY payment_date'}",line,payment_date,COUNT(payment_date),"2005-08-23, 2005-08-22, 2005-08-21, 2005-08-20, 2005-08-19, 2005-08-18, 2005-08-17, 2005-08-16, 2005-08-02, 2005-08-01, 2005-07-31, 2005-07-30, 2005-07-29, 2005-07-28, 2005-07-27, 2005-07-26, 2005-07-12, 2005-07-10, 2005-07-09, 2005-07-08, 2005-07-07, 2005-07-06, 2005-06-21, 2005-06-20, 2005-06-19, 2005-06-18, 2005-06-17, 2005-06-16, 2005-06-15, 2005-05-30, 2005-05-29, 2005-05-26, 2005-05-25","5, 6, 6, 4, 4, 5, 2, 1, 8, 6, 8, 7, 6, 3, 4, 1, 1, 4, 3, 3, 2, 5, 3, 3, 2, 1, 3, 1, 2, 1, 1, 1, 2","Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart, rank from high to low by the payment_date please."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40 ORDER BY HIRE_DATE ASC",Line,Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-06-17', '1987-06-18', '1987-06-19', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-09', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-01', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-25', '1987-09-26', '1987-09-27', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-06-17, 1987-06-18, 1987-06-19, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-09, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-01, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-25, 1987-09-26, 1987-09-27, 1987-09-29, 1987-09-30, 1987-10-01","100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206","For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for employee_id, hire_date, visualize the trend, list in ascending by the X."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY HIRE_DATE ASC",Line,Extra Hard,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-22', '1987-06-24', '1987-06-26', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-01', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-08', '1987-07-10', '1987-07-14', '1987-07-15', '1987-07-18', '1987-07-20', '1987-07-24', '1987-07-25', '1987-07-27', '1987-07-29', '1987-07-30', '1987-08-04', '1987-08-07', '1987-08-09', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-19', '1987-08-21', '1987-08-22', '1987-08-24', '1987-08-25', '1987-08-29', '1987-08-31', '1987-09-04', '1987-09-05', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-16', '1987-09-17', '1987-09-19', '1987-09-23', '1987-09-24', '1987-09-28', '1987-09-30']], 'y_data': [[90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-22, 1987-06-24, 1987-06-26, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-01, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-08, 1987-07-10, 1987-07-14, 1987-07-15, 1987-07-18, 1987-07-20, 1987-07-24, 1987-07-25, 1987-07-27, 1987-07-29, 1987-07-30, 1987-08-04, 1987-08-07, 1987-08-09, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-19, 1987-08-21, 1987-08-22, 1987-08-24, 1987-08-25, 1987-08-29, 1987-08-31, 1987-09-04, 1987-09-05, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-16, 1987-09-17, 1987-09-19, 1987-09-23, 1987-09-24, 1987-09-28, 1987-09-30","90, 60, 60, 60, 100, 100, 100, 100, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 110","For all employees who have the letters D or S in their first name, a line chart shows the trend of department_id over hire_date , I want to show in asc by the HIRE_DATE."
"SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = ""Pass""  ORDER BY date_test_taken ASC",Line,Hard,e_learning,"{'chart': 'line', 'x_name': 'date_test_taken', 'y_name': 'COUNT(date_test_taken)', 'x_data': [['19th', '20th', '21th', '22th', '23th', '24th', '25th']], 'y_data': [[2, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_test_taken BY DAY'}",line,date_test_taken,COUNT(date_test_taken),"19th, 20th, 21th, 22th, 23th, 24th, 25th","2, 0, 1, 0, 1, 1, 3","Which tests have ""Pass"" results? Return the dates when the tests were taken, and count them by a line chart, and I want to display by the X-axis in asc."
"SELECT Openning_year , COUNT(Openning_year) FROM cinema  ORDER BY Openning_year DESC",Line,Medium,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'COUNT(Openning_year)', 'x_data': [['2015', '2014', '2013', '2012', '2011', '2010', '2009']], 'y_data': [[1, 0, 1, 1, 3, 3, 1]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,COUNT(Openning_year),"2015, 2014, 2013, 2012, 2011, 2010, 2009","1, 0, 1, 1, 3, 3, 1","Show how many cinemas open for each year in a line chart, and could you rank X from high to low order?"
"SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC",Line,Medium,apartment_rentals,"{'chart': 'line', 'x_name': 'booking_end_date', 'y_name': 'COUNT(booking_end_date)', 'x_data': [['2018-03-20', '2018-02-25', '2018-02-19', '2018-02-06', '2017-11-29', '2017-11-13', '2017-11-12', '2017-10-25', '2017-10-07', '2017-10-06', '2017-10-03', '2017-09-30', '2017-09-29', '2017-09-28']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY booking_end_date'}",line,booking_end_date,COUNT(booking_end_date),"2018-03-20, 2018-02-25, 2018-02-19, 2018-02-06, 2017-11-29, 2017-11-13, 2017-11-12, 2017-10-25, 2017-10-07, 2017-10-06, 2017-10-03, 2017-09-30, 2017-09-29, 2017-09-28","1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1","How many apartment bookings in each day? Show me a line chart grouping by booking end date, and show by the booking_end_date from high to low."
"SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""  ORDER BY year ASC",Line,Extra Hard,formula_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']], 'y_data': [[17, 18, 17, 19, 19, 20, 19, 19, 19, 21, 20]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017","17, 18, 17, 19, 19, 20, 19, 19, 19, 21, 20","How many races that had any driver whose forename is Lewis? Show me a line chart, display by the x axis in ascending."
"SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season DESC",Line,Medium,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2013-01-01', '2012-01-01', '2011-01-01', '2010-01-01', '2009-01-01', '2008-01-01', '2007-01-01']], 'y_data': [[2, 5, 2, 2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY Season'}",line,Season,COUNT(Season),"2013-01-01, 2012-01-01, 2011-01-01, 2010-01-01, 2009-01-01, 2008-01-01, 2007-01-01","2, 5, 2, 2, 3, 3, 3","I want to see trend of the number of season by season, and order in descending by the X."
"SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY receipt_date DESC",Line,Medium,cre_Doc_Control_Systems,"{'chart': 'line', 'x_name': 'receipt_date', 'y_name': 'COUNT(receipt_date)', 'x_data': [['2013~2017', '2008~2012', '2003~2007', '1998~2002', '1993~1997', '1988~1992', '1983~1987', '1978~1982', '1973~1977']], 'y_data': [[3, 1, 1, 1, 2, 0, 3, 1, 3]], 'classify': [], 'describe': 'BIN receipt_date BY YEAR'}",line,receipt_date,COUNT(receipt_date),"2013~2017, 2008~2012, 2003~2007, 1998~2002, 1993~1997, 1988~1992, 1983~1987, 1978~1982, 1973~1977","3, 1, 1, 1, 2, 0, 3, 1, 3","Show the number of documents for each receipt date and bin by year with a line chart, sort by the x-axis in desc please."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE DESC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-10-01', '1987-09-30', '1987-09-29', '1987-09-28', '1987-09-27', '1987-09-24', '1987-09-23', '1987-09-22', '1987-09-21', '1987-09-20', '1987-09-19', '1987-09-18', '1987-09-17', '1987-09-16', '1987-09-15', '1987-09-14', '1987-09-13', '1987-09-12', '1987-09-11', '1987-09-10', '1987-09-09', '1987-09-08', '1987-09-07', '1987-09-06', '1987-09-05', '1987-09-04', '1987-09-03', '1987-09-02', '1987-08-31', '1987-08-30', '1987-08-29', '1987-08-28', '1987-08-27', '1987-08-26', '1987-08-25', '1987-08-24', '1987-08-23', '1987-08-22', '1987-08-21', '1987-08-20', '1987-08-19', '1987-08-18', '1987-08-17', '1987-08-16', '1987-08-15', '1987-08-14', '1987-08-13', '1987-08-12', '1987-08-11', '1987-08-10', '1987-08-09', '1987-08-08', '1987-08-07', '1987-08-06', '1987-08-05', '1987-08-04', '1987-08-03', '1987-08-02', '1987-08-01', '1987-07-31', '1987-07-30', '1987-07-29', '1987-07-28', '1987-07-27', '1987-07-26', '1987-07-25', '1987-07-24', '1987-07-23', '1987-07-22', '1987-07-21', '1987-07-20', '1987-07-19', '1987-07-18', '1987-07-17', '1987-07-16', '1987-07-15', '1987-07-14', '1987-07-13', '1987-07-12', '1987-07-11', '1987-07-10', '1987-07-08', '1987-07-07', '1987-07-06', '1987-07-05', '1987-07-04', '1987-07-03', '1987-07-02', '1987-06-30', '1987-06-29', '1987-06-28', '1987-06-27', '1987-06-26', '1987-06-25', '1987-06-24', '1987-06-23', '1987-06-22', '1987-06-21', '1987-06-20', '1987-06-17']], 'y_data': [[110, 110, 70, 40, 20, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-10-01, 1987-09-30, 1987-09-29, 1987-09-28, 1987-09-27, 1987-09-24, 1987-09-23, 1987-09-22, 1987-09-21, 1987-09-20, 1987-09-19, 1987-09-18, 1987-09-17, 1987-09-16, 1987-09-15, 1987-09-14, 1987-09-13, 1987-09-12, 1987-09-11, 1987-09-10, 1987-09-09, 1987-09-08, 1987-09-07, 1987-09-06, 1987-09-05, 1987-09-04, 1987-09-03, 1987-09-02, 1987-08-31, 1987-08-30, 1987-08-29, 1987-08-28, 1987-08-27, 1987-08-26, 1987-08-25, 1987-08-24, 1987-08-23, 1987-08-22, 1987-08-21, 1987-08-20, 1987-08-19, 1987-08-18, 1987-08-17, 1987-08-16, 1987-08-15, 1987-08-14, 1987-08-13, 1987-08-12, 1987-08-11, 1987-08-10, 1987-08-09, 1987-08-08, 1987-08-07, 1987-08-06, 1987-08-05, 1987-08-04, 1987-08-03, 1987-08-02, 1987-08-01, 1987-07-31, 1987-07-30, 1987-07-29, 1987-07-28, 1987-07-27, 1987-07-26, 1987-07-25, 1987-07-24, 1987-07-23, 1987-07-22, 1987-07-21, 1987-07-20, 1987-07-19, 1987-07-18, 1987-07-17, 1987-07-16, 1987-07-15, 1987-07-14, 1987-07-13, 1987-07-12, 1987-07-11, 1987-07-10, 1987-07-08, 1987-07-07, 1987-07-06, 1987-07-05, 1987-07-04, 1987-07-03, 1987-07-02, 1987-06-30, 1987-06-29, 1987-06-28, 1987-06-27, 1987-06-26, 1987-06-25, 1987-06-24, 1987-06-23, 1987-06-22, 1987-06-21, 1987-06-20, 1987-06-17","110, 110, 70, 40, 20, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 60, 60, 90","For those employees who did not have any job in the past, give me the trend about department_id over hire_date , I want to order in desc by the X-axis."
"SELECT year , count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year ORDER BY year ASC",Line,Extra Hard,baseball_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['1903-01-01', '1912-01-01', '1915-01-01', '1916-01-01', '1918-01-01', '1975-01-01', '1986-01-01', '1999-01-01', '2003-01-01', '2004-01-01', '2007-01-01', '2008-01-01', '2013-01-01']], 'y_data': [[5, 5, 5, 5, 5, 5, 5, 5, 5, 15, 15, 5, 15]], 'classify': [], 'describe': ''}",line,year,count(*),"1903-01-01, 1912-01-01, 1915-01-01, 1916-01-01, 1918-01-01, 1975-01-01, 1986-01-01, 1999-01-01, 2003-01-01, 2004-01-01, 2007-01-01, 2008-01-01, 2013-01-01","5, 5, 5, 5, 5, 5, 5, 5, 5, 15, 15, 5, 15","What is the number of wins the team Boston Red Stockings got in the postseasons each year in history Show the tendency, and list from low to high by the X."
"SELECT payment_date , COUNT(payment_date) FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa' GROUP BY payment_date",Line,Extra Hard,sakila_1,"{'chart': 'line', 'x_name': 'payment_date', 'y_name': 'COUNT(payment_date)', 'x_data': [['2005-05-25', '2005-05-26', '2005-05-29', '2005-05-30', '2005-06-15', '2005-06-16', '2005-06-17', '2005-06-18', '2005-06-19', '2005-06-20', '2005-06-21', '2005-07-06', '2005-07-07', '2005-07-08', '2005-07-09', '2005-07-10', '2005-07-12', '2005-07-26', '2005-07-27', '2005-07-28', '2005-07-29', '2005-07-30', '2005-07-31', '2005-08-01', '2005-08-02', '2005-08-16', '2005-08-17', '2005-08-18', '2005-08-19', '2005-08-20', '2005-08-21', '2005-08-22', '2005-08-23']], 'y_data': [[2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5]], 'classify': [], 'describe': 'GROUP BY payment_date'}",line,payment_date,COUNT(payment_date),"2005-05-25, 2005-05-26, 2005-05-29, 2005-05-30, 2005-06-15, 2005-06-16, 2005-06-17, 2005-06-18, 2005-06-19, 2005-06-20, 2005-06-21, 2005-07-06, 2005-07-07, 2005-07-08, 2005-07-09, 2005-07-10, 2005-07-12, 2005-07-26, 2005-07-27, 2005-07-28, 2005-07-29, 2005-07-30, 2005-07-31, 2005-08-01, 2005-08-02, 2005-08-16, 2005-08-17, 2005-08-18, 2005-08-19, 2005-08-20, 2005-08-21, 2005-08-22, 2005-08-23","2, 1, 1, 1, 2, 1, 3, 1, 2, 3, 3, 5, 2, 3, 3, 4, 1, 1, 4, 3, 6, 7, 8, 6, 8, 1, 2, 5, 4, 4, 6, 6, 5","What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart"
"SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from ASC",Line,Hard,customers_and_products_contacts,"{'chart': 'line', 'x_name': 'date_from', 'y_name': 'COUNT(date_from)', 'x_data': [['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']], 'y_data': [[2, 2, 1, 4, 4, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'BIN date_from BY YEAR'}",line,date_from,COUNT(date_from),"2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017","2, 2, 1, 4, 4, 1, 1, 2, 2, 1","Show the number of customer address history in each year and bin date from by year interval with a line chart, and could you list by the x-axis from low to high please?"
"SELECT Openning_year , SUM(Capacity) FROM cinema  ORDER BY Openning_year ASC",Line,Medium,cinema,"{'chart': 'line', 'x_name': 'Openning_year', 'y_name': 'SUM(Capacity)', 'x_data': [['2009', '2010', '2011', '2012', '2013', '2014', '2015']], 'y_data': [[305, 1633, 1336, 368, 330, 0, 364]], 'classify': [], 'describe': 'BIN Openning_year BY YEAR'}",line,Openning_year,SUM(Capacity),"2009, 2010, 2011, 2012, 2013, 2014, 2015","305, 1633, 1336, 368, 330, 0, 364","Plot sum capacity over openning year in a line chart, and I want to rank by the x axis in ascending."
"SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'COMMISSION_PCT', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[0.15, 0, 0, 0, 0, 0, 0]], 'classify': [], 'describe': ''}",line,HIRE_DATE,COMMISSION_PCT,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","0.15, 0, 0, 0, 0, 0, 0","For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of commission_pct over hire_date, and sort X in asc order."
"SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'SALARY', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[24000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 6000, 6500, 10000, 12000, 8300]], 'classify': [], 'describe': ''}",line,HIRE_DATE,SALARY,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","24000, 9000, 6000, 4800, 4800, 4200, 12000, 9000, 8200, 7700, 7800, 6900, 3100, 2900, 2800, 2600, 2500, 8000, 8200, 6500, 5800, 3200, 2700, 2400, 2200, 3300, 2800, 2500, 2100, 3300, 2900, 2400, 2200, 3600, 3200, 2700, 2500, 3500, 3100, 2600, 2500, 14000, 13500, 12000, 11000, 10500, 10000, 9500, 9000, 8000, 7500, 7000, 10000, 9500, 9000, 8000, 7500, 7000, 10500, 9500, 7200, 6800, 6400, 6200, 11500, 10000, 9600, 7400, 7300, 6100, 11000, 8800, 8400, 7000, 6200, 3200, 3100, 2500, 2800, 4200, 4100, 3400, 3000, 3800, 3600, 2900, 2500, 4000, 3900, 3200, 2800, 3100, 3000, 2600, 2600, 6000, 6500, 10000, 12000, 8300","For those employees who did not have any job in the past, return a line chart about the change of salary over hire_date , and I want to sort by the X-axis in ascending."
"SELECT HIRE_DATE , EMPLOYEE_ID FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE ASC",Line,Medium,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'EMPLOYEE_ID', 'x_data': [['1987-09-03', '1987-09-26', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[178, 201, 202, 203, 204, 205, 206]], 'classify': [], 'describe': ''}",line,HIRE_DATE,EMPLOYEE_ID,"1987-09-03, 1987-09-26, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","178, 201, 202, 203, 204, 205, 206","For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about employee_id over hire_date , rank by the x axis in asc."
"SELECT HIRE_DATE , DEPARTMENT_ID FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",Line,Easy,hr_1,"{'chart': 'line', 'x_name': 'HIRE_DATE', 'y_name': 'DEPARTMENT_ID', 'x_data': [['1987-06-17', '1987-06-20', '1987-06-21', '1987-06-22', '1987-06-23', '1987-06-24', '1987-06-25', '1987-06-26', '1987-06-27', '1987-06-28', '1987-06-29', '1987-06-30', '1987-07-02', '1987-07-03', '1987-07-04', '1987-07-05', '1987-07-06', '1987-07-07', '1987-07-08', '1987-07-10', '1987-07-11', '1987-07-12', '1987-07-13', '1987-07-14', '1987-07-15', '1987-07-16', '1987-07-17', '1987-07-18', '1987-07-19', '1987-07-20', '1987-07-21', '1987-07-22', '1987-07-23', '1987-07-24', '1987-07-25', '1987-07-26', '1987-07-27', '1987-07-28', '1987-07-29', '1987-07-30', '1987-07-31', '1987-08-01', '1987-08-02', '1987-08-03', '1987-08-04', '1987-08-05', '1987-08-06', '1987-08-07', '1987-08-08', '1987-08-09', '1987-08-10', '1987-08-11', '1987-08-12', '1987-08-13', '1987-08-14', '1987-08-15', '1987-08-16', '1987-08-17', '1987-08-18', '1987-08-19', '1987-08-20', '1987-08-21', '1987-08-22', '1987-08-23', '1987-08-24', '1987-08-25', '1987-08-26', '1987-08-27', '1987-08-28', '1987-08-29', '1987-08-30', '1987-08-31', '1987-09-02', '1987-09-03', '1987-09-04', '1987-09-05', '1987-09-06', '1987-09-07', '1987-09-08', '1987-09-09', '1987-09-10', '1987-09-11', '1987-09-12', '1987-09-13', '1987-09-14', '1987-09-15', '1987-09-16', '1987-09-17', '1987-09-18', '1987-09-19', '1987-09-20', '1987-09-21', '1987-09-22', '1987-09-23', '1987-09-24', '1987-09-27', '1987-09-28', '1987-09-29', '1987-09-30', '1987-10-01']], 'y_data': [[90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110]], 'classify': [], 'describe': ''}",line,HIRE_DATE,DEPARTMENT_ID,"1987-06-17, 1987-06-20, 1987-06-21, 1987-06-22, 1987-06-23, 1987-06-24, 1987-06-25, 1987-06-26, 1987-06-27, 1987-06-28, 1987-06-29, 1987-06-30, 1987-07-02, 1987-07-03, 1987-07-04, 1987-07-05, 1987-07-06, 1987-07-07, 1987-07-08, 1987-07-10, 1987-07-11, 1987-07-12, 1987-07-13, 1987-07-14, 1987-07-15, 1987-07-16, 1987-07-17, 1987-07-18, 1987-07-19, 1987-07-20, 1987-07-21, 1987-07-22, 1987-07-23, 1987-07-24, 1987-07-25, 1987-07-26, 1987-07-27, 1987-07-28, 1987-07-29, 1987-07-30, 1987-07-31, 1987-08-01, 1987-08-02, 1987-08-03, 1987-08-04, 1987-08-05, 1987-08-06, 1987-08-07, 1987-08-08, 1987-08-09, 1987-08-10, 1987-08-11, 1987-08-12, 1987-08-13, 1987-08-14, 1987-08-15, 1987-08-16, 1987-08-17, 1987-08-18, 1987-08-19, 1987-08-20, 1987-08-21, 1987-08-22, 1987-08-23, 1987-08-24, 1987-08-25, 1987-08-26, 1987-08-27, 1987-08-28, 1987-08-29, 1987-08-30, 1987-08-31, 1987-09-02, 1987-09-03, 1987-09-04, 1987-09-05, 1987-09-06, 1987-09-07, 1987-09-08, 1987-09-09, 1987-09-10, 1987-09-11, 1987-09-12, 1987-09-13, 1987-09-14, 1987-09-15, 1987-09-16, 1987-09-17, 1987-09-18, 1987-09-19, 1987-09-20, 1987-09-21, 1987-09-22, 1987-09-23, 1987-09-24, 1987-09-27, 1987-09-28, 1987-09-29, 1987-09-30, 1987-10-01","90, 60, 60, 60, 60, 60, 100, 100, 100, 100, 100, 100, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 20, 40, 70, 110, 110","For those employees who did not have any job in the past, for  department_id,  hire_date, visualize the trend."
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,School_ID,ACC_Percent,5,0.563,"Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games."
"SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[90], [120], [66]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Price,Manufacturer,90,2,"For those products with a price between 60 and 120, return a scatter chart about the correlation between  price and  manufacturer , and group by attribute name."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.625, 0.875], [0.563], [0.813]], 'y_data': [[0.706, 0.946], [0.6], [0.8240000000000001]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home'}",scatter,ACC_Percent,All_Games_Percent,"0.625, 0.875","0.706, 0.946","Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home."
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[1], [5], [4], [2]], 'y_data': [[0.875], [0.563], [0.625], [0.813]], 'classify': ['13–0', '4–8', '6–5', '8–2'], 'describe': 'GROUP BY All_Road'}",scatter,School_ID,ACC_Percent,1,0.875,Show school id vs acc_percent as scatter plot use a different color for each All_Road
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.563], [0.625], [0.813], [0.875]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,ACC_Percent,All_Games_Percent,0.563,0.6,"Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral."
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[3], [2], [1], [4]], 'y_data': [[0.625], [0.813], [0.875], [0.563]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,Team_ID,ACC_Percent,3,0.625,"What is the relationship between  Team_ID and  ACC_Percent , and group by attribute Team_Name?"
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[4, 3], [2], [1]], 'y_data': [[0.563, 0.625], [0.813], [0.875]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road'}",scatter,Team_ID,ACC_Percent,"4, 3","0.563, 0.625",Show team id vs acc_percent as scatter plot use a different color for each ACC_Road
"SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Price', 'x_data': [[6, 7, 10], [1], [8, 9, 11], [3], [5], [2, 4]], 'y_data': [[180, 90, 180], [240], [270, 66, 150], [150], [240], [120, 5]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Code,Price,"6, 7, 10","180, 90, 180","For those records from the products and each product's manufacturer, a scatter chart shows the correlation between  code and  price , and group by attribute name."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.563], [0.625], [0.813], [0.875]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,ACC_Percent,All_Games_Percent,0.563,0.6,"A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.875], [0.563], [0.625], [0.813]], 'y_data': [[0.946], [0.6], [0.706], [0.8240000000000001]], 'classify': ['13–0', '4–8', '6–5', '8–2'], 'describe': 'GROUP BY All_Road'}",scatter,ACC_Percent,All_Games_Percent,0.875,0.946,Scatterplot of all_games_percent vs acc percent by All_Road
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[3], [2], [1], [4]], 'y_data': [[0.625], [0.813], [0.875], [0.563]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,Team_ID,ACC_Percent,3,0.625,"Visualize the relationship between  Team_ID and  ACC_Percent , and group by attribute Team_Name."
"SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[90], [120], [66]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Price,Manufacturer,90,2,"For those products with a price between 60 and 120, visualize a scatter chart about the correlation between  price and  manufacturer , and group by attribute name."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[5, 4], [2], [1]], 'y_data': [[0.6, 0.706], [0.8240000000000001], [0.946]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road'}",scatter,School_ID,All_Games_Percent,"5, 4","0.6, 0.706","Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is all games percent."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[1], [5], [4], [2]], 'y_data': [[0.946], [0.6], [0.706], [0.8240000000000001]], 'classify': ['13–0', '4–8', '6–5', '8–2'], 'describe': 'GROUP BY All_Road'}",scatter,School_ID,All_Games_Percent,1,0.946,"Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Road."
"SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Revenue', 'x_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'y_data': [[100, 100, 100], [200], [50, 50, 50], [30, 30], [130], [120]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Manufacturer,Revenue,"2, 2, 2","100, 100, 100","For those records from the products and each product's manufacturer, show me about the correlation between  manufacturer and  revenue , and group by attribute headquarter in a scatter chart."
"SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[90], [120], [66]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Price,Manufacturer,90,2,"For those products with a price between 60 and 120, what is the relationship between  price and  manufacturer , and group by attribute name?"
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.563], [0.625], [0.813], [0.875]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,ACC_Percent,All_Games_Percent,0.563,0.6,"What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Neutral?"
"SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Revenue', 'x_data': [[1], [3, 3, 3], [5], [4], [2, 2, 2], [6, 6]], 'y_data': [[120], [50, 50, 50], [130], [200], [100, 100, 100], [30, 30]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder'}",scatter,Manufacturer,Revenue,1,120,"For those records from the products and each product's manufacturer, visualize the relationship between  manufacturer and  revenue , and group by attribute founder."
"SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[7], [2], [9]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Code,Manufacturer,7,2,"For those products with a price between 60 and 120, visualize the relationship between  code and  manufacturer , and group by attribute name."
"SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Revenue', 'x_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'y_data': [[100, 100, 100], [200], [50, 50, 50], [30, 30], [130], [120]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Manufacturer,Revenue,"2, 2, 2","100, 100, 100","For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between  manufacturer and  revenue , and group by attribute headquarter."
"SELECT address_id , monthly_rental FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Grouping Scatter,Medium,behavior_monitoring,"{'chart': 'scatter', 'x_name': 'address_id', 'y_name': 'monthly_rental', 'x_data': [[16, 1, 13, 10, 1, 5, 19], [8, 2, 18, 13, 3, 8, 12, 3, 1, 12, 16, 9, 18]], 'y_data': [[1297.807, 1297.3186, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 644.9306], [1287.5604, 1132.742, 1113.0996, 1067.8383, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 620.2801]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details'}",scatter,address_id,monthly_rental,"16, 1, 13, 10, 1, 5, 19","1297.807, 1297.3186, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 644.9306","Show me about the correlation between  address_id and  monthly_rental , and group by attribute other_details in a scatter chart."
"SELECT Price , Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[240], [270, 66, 150], [240], [150], [180, 90, 180], [120, 5]], 'y_data': [[1], [3, 3, 3], [5], [4], [2, 2, 2], [6, 6]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder'}",scatter,Price,Manufacturer,240,1,"For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  price and  manufacturer , and group by attribute founder."
"SELECT T1.ContId , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY Continent",Grouping Scatter,Medium,car_1,"{'chart': 'scatter', 'x_name': 'ContId', 'y_name': 'count(*)', 'x_data': [[4], [1], [3], [5], [2]], 'y_data': [[2], [3], [2], [2], [6]], 'classify': ['africa', 'america', 'asia', 'australia', 'europe'], 'describe': 'GROUP BY Continent'}",scatter,ContId,count(*),4,2,"How many countries does each continent have? List the continent id, continent name and the number of countries in a scatter chart."
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,Team_ID,ACC_Percent,4,0.563,"Visualize a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Neutral."
"SELECT T1.Price , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Code', 'x_data': [[180, 90, 180], [240], [270, 66, 150], [150], [240], [120, 5]], 'y_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Price,Code,"180, 90, 180","2, 2, 2","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  price and  code , and group by attribute name."
"SELECT T1.Code , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Code', 'x_data': [[6, 7, 10], [3], [8, 9, 11], [2, 4], [1], [5]], 'y_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Code,Code,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, show me about the correlation between  code and  code , and group by attribute headquarter in a scatter chart."
"SELECT Code , Price FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Price', 'x_data': [[7], [2], [9]], 'y_data': [[90], [120], [66]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Code,Price,7,90,"For those products with a price between 60 and 120, return a scatter chart about the correlation between  code and  price , and group by attribute name."
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,Team_ID,All_Games_Percent,4,0.6,"What is the relationship between  Team_ID and  All_Games_Percent , and group by attribute All_Games?"
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,School_ID,ACC_Percent,5,0.563,"Draw a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Neutral."
"SELECT avg(age) , max(age) FROM student GROUP BY Sex",Grouping Scatter,Easy,dorm_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'max(age)', 'x_data': [[19.7], [19.5]], 'y_data': [[26], [27]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,avg(age),max(age),19.7,26,Scatterplot of maximal age vs avg(age) by Sex
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.563], [0.625], [0.813], [0.875]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,ACC_Percent,All_Games_Percent,0.563,0.6,"Return a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute All_Games."
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,Team_ID,All_Games_Percent,4,0.6,Draw a scatterplot of team id vs all_games_percent where team id is on the x-axis and points are colored by All_Games
"SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Revenue', 'x_data': [[240], [270, 66, 150], [240], [150], [180, 90, 180], [120, 5]], 'y_data': [[120], [50, 50, 50], [130], [200], [100, 100, 100], [30, 30]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder'}",scatter,Price,Revenue,240,120,"For those records from the products and each product's manufacturer, what is the relationship between  price and  revenue , and group by attribute founder?"
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,Team_ID,All_Games_Percent,4,0.6,"Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,School_ID,All_Games_Percent,5,0.6,"Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute All_Games."
"SELECT Code , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[7], [2], [9]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Code,Manufacturer,7,2,"For those products with a price between 60 and 120, show me about the correlation between  code and  manufacturer , and group by attribute name in a scatter chart."
"SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType",Grouping Scatter,Easy,pets_1,"{'chart': 'scatter', 'x_name': 'avg(pet_age)', 'y_name': 'max(pet_age)', 'x_data': [[3], [1.5]], 'y_data': [[3], [2]], 'classify': ['cat', 'dog'], 'describe': 'GROUP BY PetType'}",scatter,avg(pet_age),max(pet_age),3,3,Show the relation between avg(pet age) and maximal pet age for each PetType using a scatter chart
"SELECT T1.Price , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[180, 90, 180], [240], [270, 66, 150], [150], [240], [120, 5]], 'y_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Price,Manufacturer,"180, 90, 180","2, 2, 2","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  price and  manufacturer , and group by attribute name."
"SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE",Grouping Scatter,Easy,college_1,"{'chart': 'scatter', 'x_name': 'avg(stu_gpa)', 'y_name': 'min(stu_gpa)', 'x_data': [[2.776666666666667], [2.84], [3.18], [3.87], [2.11]], 'y_data': [[2.26], [2.84], [3.09], [3.87], [2.11]], 'classify': ['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL'], 'describe': 'GROUP BY DEPT_CODE'}",scatter,avg(stu_gpa),min(stu_gpa),2.776666666666667,2.26,Scatterplot of minimal stu gpa vs avg(stu gpa) by DEPT_CODE
"SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Regular_Season",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[3], [2], [1], [4]], 'y_data': [[4], [2], [1], [5]], 'classify': ['10–6', '13–3', '14–2', '9–7'], 'describe': 'GROUP BY ACC_Regular_Season'}",scatter,Team_ID,School_ID,3,4,"Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Regular_Season."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [2], [1], [5]], 'y_data': [[0.706], [0.8240000000000001], [0.946], [0.6]], 'classify': ['10–6', '13–3', '14–2', '9–7'], 'describe': 'GROUP BY ACC_Regular_Season'}",scatter,School_ID,All_Games_Percent,4,0.706,Show school id vs all_games_percent as scatter plot use a different color for each ACC_Regular_Season
"SELECT T1.Code , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Code', 'x_data': [[6, 7, 10], [3], [8, 9, 11], [2, 4], [1], [5]], 'y_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Code,Code,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, what is the relationship between  code and  code , and group by attribute headquarter?"
"SELECT Team_ID , School_ID FROM basketball_match GROUP BY ACC_Home",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[1, 4], [3, 2]], 'y_data': [[1, 5], [4, 2]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home'}",scatter,Team_ID,School_ID,"1, 4","1, 5","Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute ACC_Home."
"SELECT T1.Code , T1.Price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Price', 'x_data': [[6, 7, 10], [1], [8, 9, 11], [3], [5], [2, 4]], 'y_data': [[180, 90, 180], [240], [270, 66, 150], [150], [240], [120, 5]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Code,Price,"6, 7, 10","180, 90, 180","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  code and  price , and group by attribute name."
"SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Revenue', 'x_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'y_data': [[100, 100, 100], [200], [50, 50, 50], [30, 30], [130], [120]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Manufacturer,Revenue,"2, 2, 2","100, 100, 100","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  manufacturer and  revenue , and group by attribute headquarter."
"SELECT max(stu_gpa) , avg(stu_gpa) FROM student GROUP BY DEPT_CODE",Grouping Scatter,Easy,college_1,"{'chart': 'scatter', 'x_name': 'max(stu_gpa)', 'y_name': 'avg(stu_gpa)', 'x_data': [[3.15], [2.84], [3.27], [3.87], [2.11]], 'y_data': [[2.776666666666667], [2.84], [3.18], [3.87], [2.11]], 'classify': ['ACCT', 'BIOL', 'CIS', 'EDU', 'ENGL'], 'describe': 'GROUP BY DEPT_CODE'}",scatter,max(stu_gpa),avg(stu_gpa),3.15,2.776666666666667,What is the relationship between average and highest student GPA for every department? Give me a scatter chart grouping by department code.
"SELECT Manufacturer , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Revenue', 'x_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'y_data': [[100, 100, 100], [200], [50, 50, 50], [30, 30], [130], [120]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Manufacturer,Revenue,"2, 2, 2","100, 100, 100","For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between  manufacturer and  revenue , and group by attribute headquarter."
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,Team_ID,All_Games_Percent,4,0.6,"Draw a scatter chart about the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Games."
"SELECT Price , Manufacturer FROM products WHERE price BETWEEN 60 AND 120 GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[90], [120], [66]], 'y_data': [[2], [6], [3]], 'classify': ['CD drive', 'Memory', 'Toner cartridge'], 'describe': 'GROUP BY Name'}",scatter,Price,Manufacturer,90,2,"For those products with a price between 60 and 120, visualize the relationship between  price and  manufacturer , and group by attribute name."
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Home",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[1, 5], [4, 2]], 'y_data': [[0.875, 0.563], [0.625, 0.813]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home'}",scatter,School_ID,ACC_Percent,"1, 5","0.875, 0.563","A scatter chart shows the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Home."
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[1], [4], [3], [2]], 'y_data': [[0.875], [0.563], [0.625], [0.813]], 'classify': ['13–0', '4–8', '6–5', '8–2'], 'describe': 'GROUP BY All_Road'}",scatter,Team_ID,ACC_Percent,1,0.875,"Show me about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Road in a scatter chart."
"SELECT People_ID , Height FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Height', 'x_data': [[3, 5], [1, 2, 4, 6, 7, 8, 9]], 'y_data': [[200, 195], [188, 197, 202, 196, 193, 194, 196]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,People_ID,Height,"3, 5","200, 195","Draw a scatter chart about the correlation between  People_ID and  Height , and group by attribute Sex."
"SELECT Team_ID , School_ID FROM basketball_match GROUP BY All_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[1], [4], [3], [2]], 'y_data': [[1], [5], [4], [2]], 'classify': ['13–0', '4–8', '6–5', '8–2'], 'describe': 'GROUP BY All_Road'}",scatter,Team_ID,School_ID,1,1,"Draw a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute All_Road."
"SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[6, 7, 10], [3], [8, 9, 11], [2, 4], [1], [5]], 'y_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Code,Manufacturer,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, visualize the relationship between  code and  manufacturer , and group by attribute headquarter."
"SELECT student_id , monthly_rental FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",Grouping Scatter,Medium,behavior_monitoring,"{'chart': 'scatter', 'x_name': 'student_id', 'y_name': 'monthly_rental', 'x_data': [[13, 8, 5, 12, 15, 1, 13], [2, 4, 3, 7, 7, 2, 6, 2, 4, 11, 8, 9, 10]], 'y_data': [[1297.807, 1297.3186, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 644.9306], [1287.5604, 1132.742, 1113.0996, 1067.8383, 894.0958, 865.2615, 826.4319, 800.1214, 756.6745, 747.5312, 683.0735, 679.2988, 620.2801]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details'}",scatter,student_id,monthly_rental,"13, 8, 5, 12, 15, 1, 13","1297.807, 1297.3186, 1036.8462, 1032.9782, 1032.8717, 1007.2597, 644.9306","Visualize a scatter chart about the correlation between  student_id and  monthly_rental , and group by attribute other_details."
"SELECT People_ID , Weight FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Weight', 'x_data': [[3, 5], [1, 2, 4, 6, 7, 8, 9]], 'y_data': [[94, 90], [83, 85, 92, 88, 89, 88, 82]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,People_ID,Weight,"3, 5","94, 90","What is the relationship between  People_ID and  Weight , and group by attribute Sex?"
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.625, 0.875], [0.563], [0.813]], 'y_data': [[0.706, 0.946], [0.6], [0.8240000000000001]], 'classify': ['14–2', '14–3', '15–1'], 'describe': 'GROUP BY All_Home'}",scatter,ACC_Percent,All_Games_Percent,"0.625, 0.875","0.706, 0.946","What is the relationship between  ACC_Percent and  All_Games_Percent , and group by attribute All_Home?"
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[3], [2], [1], [4]], 'y_data': [[0.625], [0.813], [0.875], [0.563]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,Team_ID,ACC_Percent,3,0.625,"A scatter chart shows the correlation between  Team_ID and  ACC_Percent , and group by attribute Team_Name."
"SELECT T1.subject_id , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY subject_name",Grouping Scatter,Medium,e_learning,"{'chart': 'scatter', 'x_name': 'subject_id', 'y_name': 'COUNT(*)', 'x_data': [[2], [1], [3]], 'y_data': [[4], [6], [5]], 'classify': ['Arts', 'Computer Science', 'Language'], 'describe': 'GROUP BY subject_name'}",scatter,subject_id,COUNT(*),2,4,Show the relationship between the subject ID and the corresponding number of courses for each subject in a group scatter chart.
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Road",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4, 3], [2], [1]], 'y_data': [[0.6, 0.706], [0.8240000000000001], [0.946]], 'classify': ['3–5', '6–2', '8–0'], 'describe': 'GROUP BY ACC_Road'}",scatter,Team_ID,All_Games_Percent,"4, 3","0.6, 0.706","Group by all acc road, show the team id and All_Games_Percent in a scatter plot."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.625], [0.813], [0.875], [0.563]], 'y_data': [[0.706], [0.8240000000000001], [0.946], [0.6]], 'classify': ['10–6', '13–3', '14–2', '9–7'], 'describe': 'GROUP BY ACC_Regular_Season'}",scatter,ACC_Percent,All_Games_Percent,0.625,0.706,"Visualize a scatter chart about the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute ACC_Regular_Season."
"SELECT T1.Code , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Code', 'x_data': [[6, 7, 10], [1], [8, 9, 11], [3], [5], [2, 4]], 'y_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Code,Code,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, what is the relationship between  code and  code , and group by attribute name?"
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY ACC_Regular_Season",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[4], [2], [1], [5]], 'y_data': [[0.625], [0.813], [0.875], [0.563]], 'classify': ['10–6', '13–3', '14–2', '9–7'], 'describe': 'GROUP BY ACC_Regular_Season'}",scatter,School_ID,ACC_Percent,4,0.625,"Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute ACC_Regular_Season in a scatter chart."
"SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[3], [2], [1], [4]], 'y_data': [[4], [2], [1], [5]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,Team_ID,School_ID,3,4,"Visualize a scatter chart about the correlation between  Team_ID and  School_ID , and group by attribute Team_Name."
"SELECT Team_ID , School_ID FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'School_ID', 'x_data': [[3], [2], [1], [4]], 'y_data': [[4], [2], [1], [5]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,Team_ID,School_ID,3,4,"Show me about the correlation between  Team_ID and  School_ID , and group by attribute Team_Name in a scatter chart."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,School_ID,All_Games_Percent,5,0.6,Show the relation between school id and all_games_percent for each All_Games using a scatter chart
"SELECT Height , Weight FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'Height', 'y_name': 'Weight', 'x_data': [[200, 195], [188, 197, 202, 196, 193, 194, 196]], 'y_data': [[94, 90], [83, 85, 92, 88, 89, 88, 82]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,Height,Weight,"200, 195","94, 90","Draw a scatter chart about the correlation between  Height and  Weight , and group by attribute Sex."
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Games",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['21–14', '24–10', '28–6', '35–2'], 'describe': 'GROUP BY All_Games'}",scatter,School_ID,ACC_Percent,5,0.563,"Show me about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Games in a scatter chart."
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.6], [0.706], [0.8240000000000001], [0.946]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,Team_ID,All_Games_Percent,4,0.6,"A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute All_Neutral."
"SELECT T1.Price , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Revenue', 'x_data': [[180, 90, 180], [240], [270, 66, 150], [150], [240], [120, 5]], 'y_data': [[100, 100, 100], [130], [50, 50, 50], [200], [120], [30, 30]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Price,Revenue,"180, 90, 180","100, 100, 100","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  price and  revenue , and group by attribute name."
"SELECT account_id , account_name FROM Accounts GROUP BY other_account_details",Grouping Scatter,Easy,customers_and_invoices,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 3, 5, 6, 8, 9, 12, 13], [2, 4, 7, 10, 11, 14, 15]], 'y_data': [[900, 323, 935, 371, 710, 337, 601, 272], [520, 390, 398, 429, 191, 861, 662]], 'classify': ['Regular', 'VIP'], 'describe': 'GROUP BY other_account_details'}",scatter,account_id,account_name,"1, 3, 5, 6, 8, 9, 12, 13","900, 323, 935, 371, 710, 337, 601, 272",Show the relationship between account id and name for all accounts in a scatter chart.
"SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[5], [8, 9, 11], [1], [3], [6, 7, 10], [2, 4]], 'y_data': [[1], [3, 3, 3], [5], [4], [2, 2, 2], [6, 6]], 'classify': ['Andy', 'James', 'John', 'Mary', 'Owen', 'Robert'], 'describe': 'GROUP BY Founder'}",scatter,Code,Manufacturer,5,1,"For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between  code and  manufacturer , and group by attribute founder."
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,Team_ID,ACC_Percent,4,0.563,Scatterplot of acc_percent vs team id by All_Neutral
"SELECT Team_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'ACC_Percent', 'x_data': [[4], [3], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,Team_ID,ACC_Percent,4,0.563,"Return a scatter chart about the correlation between  Team_ID and  ACC_Percent , and group by attribute All_Neutral."
"SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'ACC_Percent', 'y_name': 'All_Games_Percent', 'x_data': [[0.625], [0.813], [0.875], [0.563]], 'y_data': [[0.706], [0.8240000000000001], [0.946], [0.6]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,ACC_Percent,All_Games_Percent,0.625,0.706,"A scatter chart shows the correlation between  ACC_Percent and  All_Games_Percent , and group by attribute Team_Name."
"SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[6, 7, 10], [3], [8, 9, 11], [2, 4], [1], [5]], 'y_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Code,Manufacturer,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between  code and  manufacturer , and group by attribute headquarter."
"SELECT School_ID , All_Games_Percent FROM basketball_match GROUP BY Team_Name",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'All_Games_Percent', 'x_data': [[4], [2], [1], [5]], 'y_data': [[0.706], [0.8240000000000001], [0.946], [0.6]], 'classify': ['Clemson', 'Duke', 'North Carolina', 'Virginia Tech'], 'describe': 'GROUP BY Team_Name'}",scatter,School_ID,All_Games_Percent,4,0.706,"Return a scatter chart about the correlation between  School_ID and  All_Games_Percent , and group by attribute Team_Name."
"SELECT People_ID , Weight FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Weight', 'x_data': [[3, 5], [1, 2, 4, 6, 7, 8, 9]], 'y_data': [[94, 90], [83, 85, 92, 88, 89, 88, 82]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,People_ID,Weight,"3, 5","94, 90","Visualize the relationship between  People_ID and  Weight , and group by attribute Sex."
"SELECT max(product_price) , min(product_price) , product_type_code FROM products GROUP BY product_type_code",Grouping Scatter,Medium,department_store,"{'chart': 'scatter', 'x_name': 'max(product_price)', 'y_name': 'min(product_price)', 'x_data': [[939.57], [971.44]], 'y_data': [[408.82], [612.46]], 'classify': ['Clothes', 'Hardware'], 'describe': 'GROUP BY product_type_code'}",scatter,max(product_price),min(product_price),939.57,408.82,Create a scatter chart to show the correlation between relationship between minimum product price and maximum product price by each product type.
"SELECT T1.Code , T1.Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Code', 'y_name': 'Manufacturer', 'x_data': [[6, 7, 10], [1], [8, 9, 11], [3], [5], [2, 4]], 'y_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Code,Manufacturer,"6, 7, 10","2, 2, 2","For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between  code and  manufacturer , and group by attribute name."
"SELECT Team_ID , All_Games_Percent FROM basketball_match GROUP BY ACC_Home",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'Team_ID', 'y_name': 'All_Games_Percent', 'x_data': [[1, 4], [3, 2]], 'y_data': [[0.946, 0.6], [0.706, 0.8240000000000001]], 'classify': ['6–2', '7–1'], 'describe': 'GROUP BY ACC_Home'}",scatter,Team_ID,All_Games_Percent,"1, 4","0.946, 0.6","A scatter chart shows the correlation between  Team_ID and  All_Games_Percent , and group by attribute ACC_Home."
"SELECT T1.Manufacturer , T1.Code FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Manufacturer', 'y_name': 'Code', 'x_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'y_data': [[2, 2, 2], [5], [3, 3, 3], [4], [1], [6, 6]], 'classify': ['Creative Labs', 'Fujits', 'Hewlett-Packard', 'Iomega', 'Sony', 'Winchester'], 'describe': 'GROUP BY Name'}",scatter,Manufacturer,Code,"2, 2, 2","2, 2, 2","For those records from the products and each product's manufacturer, return a scatter chart about the correlation between  manufacturer and  code , and group by attribute name."
"SELECT School_ID , ACC_Percent FROM basketball_match GROUP BY All_Neutral",Grouping Scatter,Easy,university_basketball,"{'chart': 'scatter', 'x_name': 'School_ID', 'y_name': 'ACC_Percent', 'x_data': [[5], [4], [2], [1]], 'y_data': [[0.563], [0.625], [0.813], [0.875]], 'classify': ['3–3', '4–3', '5–3', '9–1'], 'describe': 'GROUP BY All_Neutral'}",scatter,School_ID,ACC_Percent,5,0.563,"Visualize a scatter chart about the correlation between  School_ID and  ACC_Percent , and group by attribute All_Neutral."
"SELECT Shop_ID , Employee_ID FROM hiring GROUP BY Is_full_time",Grouping Scatter,Easy,employee_hire_evaluation,"{'chart': 'scatter', 'x_name': 'Shop_ID', 'y_name': 'Employee_ID', 'x_data': [[8, 2], [1, 1, 4, 5, 6]], 'y_data': [[3, 6], [1, 2, 4, 5, 7]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time'}",scatter,Shop_ID,Employee_ID,"8, 2","3, 6","What is the relationship between  Shop_ID and  Employee_ID , and group by attribute Is_full_time?"
"SELECT Price , Manufacturer FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",Grouping Scatter,Medium,manufactory_1,"{'chart': 'scatter', 'x_name': 'Price', 'y_name': 'Manufacturer', 'x_data': [[180, 90, 180], [150], [270, 66, 150], [120, 5], [240], [240]], 'y_data': [[2, 2, 2], [4], [3, 3, 3], [6, 6], [5], [1]], 'classify': ['Austin', 'Beijing', 'Los Angeles', 'Paris', 'Taiwan', 'Tokyo'], 'describe': 'GROUP BY Headquarter'}",scatter,Price,Manufacturer,"180, 90, 180","2, 2, 2","For those records from the products and each product's manufacturer, what is the relationship between  price and  manufacturer , and group by attribute headquarter?"
"SELECT Height , Weight FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'Height', 'y_name': 'Weight', 'x_data': [[200, 195], [188, 197, 202, 196, 193, 194, 196]], 'y_data': [[94, 90], [83, 85, 92, 88, 89, 88, 82]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,Height,Weight,"200, 195","94, 90","Visualize the relationship between  Height and  Weight , and group by attribute Sex."
"SELECT People_ID , Height FROM people GROUP BY Sex",Grouping Scatter,Easy,candidate_poll,"{'chart': 'scatter', 'x_name': 'People_ID', 'y_name': 'Height', 'x_data': [[3, 5], [1, 2, 4, 6, 7, 8, 9]], 'y_data': [[200, 195], [188, 197, 202, 196, 193, 194, 196]], 'classify': ['F', 'M'], 'describe': 'GROUP BY Sex'}",scatter,People_ID,Height,"3, 5","200, 195","What is the relationship between  People_ID and  Height , and group by attribute Sex?"
"SELECT T1.Participant_ID , count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY Participant_Type_Code",Grouping Scatter,Medium,local_govt_in_alabama,"{'chart': 'scatter', 'x_name': 'Participant_ID', 'y_name': 'count(*)', 'x_data': [[26, 36, 86, 96], [37, 60, 63, 64, 66, 90]], 'y_data': [[2, 1, 2, 1], [2, 1, 1, 1, 4, 3]], 'classify': ['Organizer', 'Participant'], 'describe': 'GROUP BY Participant_Type_Code'}",scatter,Participant_ID,count(*),"26, 36, 86, 96","2, 1, 2, 1","How many events have each participants attended? List the participant id and the number, and group by participants type with a scatter chart."
"SELECT year , count(*) FROM SECTION GROUP BY semester ,  year",Grouping Line,Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2001-01-01', '2002-01-01', '2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01']], 'y_data': [[2, 9, 6, 3, 4, 8, 6, 1, 7, 5], [3, 4, 6, 4, 4, 5, 6, 9, 2, 6]], 'classify': ['Fall', 'Spring'], 'describe': 'GROUP BY semester, GROUP BY year'}",line,year,count(*),"2001-01-01, 2002-01-01, 2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01","2, 9, 6, 3, 4, 8, 6, 1, 7, 5",Find the number of courses provided in each year with a group line chart that groups by semester.
"SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time",Grouping Line,Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0], [0.5, 0, 0, 0, 0, 3, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0","Show me about the change of the average of Shop_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart."
"SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0], [5, 4, 0, 0, 1, 6, 0, 0, 0, 0, 1]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0","Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the x-axis in descending."
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details",Grouping Line,Hard,customers_and_invoices,"{'chart': 'line', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']], 'y_data': [[1, 2, 4, 1, 3, 0, 5, 3, 3, 1], [2, 2, 4, 2, 4, 0, 6, 4, 4, 2]], 'classify': ['Regular', 'VIP'], 'describe': 'GROUP BY other_account_details, BIN date_account_opened BY YEAR'}",line,date_account_opened,COUNT(date_account_opened),"2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017","1, 2, 4, 1, 3, 0, 5, 3, 3, 1",Give me line charts of worldwide gross how many date account opened over year date account opened by major genres other_account_details
"SELECT Season , COUNT(Season) FROM game GROUP BY Away_team",Grouping Line,Hard,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[6, 6, 8, 5, 5, 12, 5], [7, 8, 9, 6, 6, 15, 6], [9, 9, 9, 6, 6, 15, 6]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Away_team, BIN Season BY YEAR'}",line,Season,COUNT(Season),"2007, 2008, 2009, 2010, 2011, 2012, 2013","6, 6, 8, 5, 5, 12, 5",Show the number of games in each season and group by away team in a group line chart. The x-axis is season.
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ,  year ORDER BY T1.title",Grouping Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003-01-01', '2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01']], 'y_data': [[1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 2, 2, 2, 1]], 'classify': ['Fall', 'Spring'], 'describe': 'GROUP BY semester, GROUP BY year'}",line,year,COUNT(year),"2003-01-01, 2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01","1, 1, 1, 0, 0, 0, 0",Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date ASC",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5], [10, 2, 9, 3, 0, 3, 0, 0, 5, 3, 5], [12, 3, 9, 3, 0, 3, 0, 0, 6, 3, 6]], 'classify': ['excellent', 'fun', 'good'], 'describe': 'GROUP BY Document_Type_Description, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5","Show the number of documents created in each day and bin document date by year interval and group by document type description with a group line chart, sort by the Document_Date in ascending."
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[0, 0, 1.5, 3, 0, 0, 0, 0, 0, 0, 0], [2.5, 2, 0, 0, 0.5, 3.5, 0, 0, 0, 0, 1]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","0, 0, 1.5, 3, 0, 0, 0, 0, 0, 0, 0","A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the x-axis from high to low please."
"SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year DESC",Grouping Line,Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2010-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01', '2003-01-01', '2002-01-01', '2001-01-01']], 'y_data': [[5, 7, 1, 6, 8, 4, 3, 6, 9, 2], [6, 2, 9, 6, 5, 4, 4, 6, 4, 3]], 'classify': ['Fall', 'Spring'], 'describe': 'GROUP BY semester, GROUP BY year'}",line,year,count(*),"2010-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01, 2003-01-01, 2002-01-01, 2001-01-01","5, 7, 1, 6, 8, 4, 3, 6, 9, 2","Find the number of courses provided in each year with a group line chart that groups by semester, and order from high to low by the X-axis."
"SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0], [5, 4, 0, 0, 1, 6, 0, 0, 0, 0, 1]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0","Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to order by the x-axis from high to low."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 2, 3], [8, 2, 6, 2, 0, 2, 0, 0, 4, 2, 4]], 'classify': ['Book', 'CV', 'Film', 'Paper'], 'describe': 'GROUP BY Document_Type_Name, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3",How many documents are created in each day? Bin the document date by year interval and group by document type with a group line chart.
"SELECT Start_from , SUM(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 0], [2, 0, 0, 0, 0, 7, 1, 0, 0, 4, 5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,SUM(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 0","Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and I want to list x axis from low to high order."
"SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time",Grouping Line,Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0], [1, 0, 0, 0, 0, 6, 1, 0, 0, 4, 5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0","A line chart shows the change of the sum of Shop_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time"
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date ASC",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5], [10, 2, 9, 3, 0, 3, 0, 0, 5, 3, 5], [12, 3, 9, 3, 0, 3, 0, 0, 6, 3, 6]], 'classify': ['excellent', 'fun', 'good'], 'describe': 'GROUP BY Document_Type_Description, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5","Show the number of documents created in each day and bin document date by year interval and group by document type description with a group line chart, and order by the x axis from low to high."
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ,  date_address_to ORDER BY monthly_rental DESC",Grouping Line,Hard,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['2018-02-25', '2018-02-27', '2018-03-02', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-12', '2018-03-14', '2018-03-15', '2018-03-18', '2018-03-20', '2018-03-22', '2018-03-23']], 'y_data': [[1297, 0, 0, 644, 1032, 0, 0, 1297, 2043, 1032, 0, 0, 0, 0], [0, 747, 1113, 2571, 0, 800, 865, 679, 0, 826, 620, 1287, 1067, 894]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, GROUP BY date_address_to'}",line,date_address_to,SUM(monthly_rental),"2018-02-25, 2018-02-27, 2018-03-02, 2018-03-04, 2018-03-05, 2018-03-06, 2018-03-07, 2018-03-12, 2018-03-14, 2018-03-15, 2018-03-18, 2018-03-20, 2018-03-22, 2018-03-23","1297, 0, 0, 644, 1032, 0, 0, 1297, 2043, 1032, 0, 0, 0, 0","A line chart shows the trend of the sum of monthly_rental over  date_address_to , and group by attribute other_details."
"SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC",Grouping Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'count(*)', 'x_data': [['2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010']], 'y_data': [[2, 9, 6, 3, 4, 8, 6, 1, 7, 5], [3, 4, 6, 4, 4, 5, 6, 9, 2, 6]], 'classify': ['Fall', 'Spring'], 'describe': 'GROUP BY semester, BIN year BY YEAR'}",line,year,count(*),"2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010","2, 9, 6, 3, 4, 8, 6, 1, 7, 5","How many courses are provided in each year? binning by year and create a line chart grouping by semester, and sort in ascending by the X-axis."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name ORDER BY Document_Date ASC",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 2, 3], [8, 2, 6, 2, 0, 2, 0, 0, 4, 2, 4]], 'classify': ['Book', 'CV', 'Film', 'Paper'], 'describe': 'GROUP BY Document_Type_Name, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3","How many documents are created in each day? Bin the document date by year interval and group by document type with a group line chart, and I want to sort Document_Date in asc order."
"SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ,  Season ORDER BY Season ASC",Grouping Line,Hard,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2007-01-01', '2008-01-01', '2009-01-01', '2010-01-01', '2011-01-01', '2012-01-01', '2013-01-01']], 'y_data': [[0, 0, 2, 1, 1, 2, 1], [1, 2, 1, 1, 1, 3, 1], [2, 1, 0, 0, 0, 0, 0]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Away_team, GROUP BY Season'}",line,Season,COUNT(Season),"2007-01-01, 2008-01-01, 2009-01-01, 2010-01-01, 2011-01-01, 2012-01-01, 2013-01-01","0, 0, 2, 1, 1, 2, 1","List the number of games in each season and group by away team in a group line chart, could you list x axis from low to high order?"
"SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details ,  date_address_to ORDER BY monthly_rental DESC",Grouping Line,Hard,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_address_to', 'y_name': 'COUNT(date_address_to)', 'x_data': [['2018-02-25', '2018-02-27', '2018-03-02', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-12', '2018-03-14', '2018-03-15', '2018-03-18', '2018-03-20', '2018-03-22', '2018-03-23']], 'y_data': [[1, 0, 0, 1, 1, 0, 0, 1, 2, 1, 0, 0, 0, 0], [0, 1, 1, 3, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, GROUP BY date_address_to'}",line,date_address_to,COUNT(date_address_to),"2018-02-25, 2018-02-27, 2018-03-02, 2018-03-04, 2018-03-05, 2018-03-06, 2018-03-07, 2018-03-12, 2018-03-14, 2018-03-15, 2018-03-18, 2018-03-20, 2018-03-22, 2018-03-23","1, 0, 0, 1, 1, 0, 0, 1, 2, 1, 0, 0, 0, 0","Show me about the change of the amount of date_address_to over  date_address_to , and group by attribute other_details in a line chart."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Name ORDER BY Document_Date ASC",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 1, 3], [6, 1, 6, 2, 0, 2, 0, 0, 3, 2, 3], [8, 2, 6, 2, 0, 2, 0, 0, 4, 2, 4]], 'classify': ['Book', 'CV', 'Film', 'Paper'], 'describe': 'GROUP BY Document_Type_Name, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","6, 1, 5, 1, 0, 2, 0, 0, 2, 1, 3","Show the number of documents created in each day and bin document date by year interval and group by document type with a group line chart, and I want to order by the x-axis in asc."
"SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title",Grouping Line,Extra Hard,college_2,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[3, 2, 3, 2, 2, 2, 1], [4, 2, 4, 4, 4, 4, 2]], 'classify': ['Fall', 'Spring'], 'describe': 'GROUP BY semester, BIN year BY YEAR'}",line,year,COUNT(year),"2003, 2004, 2005, 2006, 2007, 2008, 2009","3, 2, 3, 2, 2, 2, 1",How many courses are in the Psychology department in each year? Show a group line chart grouping by semester.
"SELECT Season , COUNT(Season) FROM game GROUP BY Home_team",Grouping Line,Hard,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[3, 5, 4, 3, 3, 8, 3], [5, 6, 6, 4, 4, 10, 4], [6, 6, 6, 4, 4, 10, 4]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Home_team, BIN Season BY YEAR'}",line,Season,COUNT(Season),"2007, 2008, 2009, 2010, 2011, 2012, 2013","3, 5, 4, 3, 3, 8, 3",The trend about the the number of season of different Home_team over the season
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time",Grouping Line,Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0], [1, 0, 0, 0, 0, 3.5, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0",I want to see trend mean employee id over start from by Is_full_time
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0], [1, 0, 0, 0, 0, 3.5, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0","I want to see trend mean employee id over start from by Is_full_time, I want to show by the x-axis in asc please."
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0], [1, 0, 0, 0, 0, 3.5, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0","Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and display in ascending by the X."
"SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from DESC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003']], 'y_data': [[0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0], [2.5, 2, 0, 0, 0.5, 3, 0, 0, 0, 0, 0.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Shop_ID),"2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003","0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0","Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to list Start_from in desc order please."
"SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY Document_Date ASC",Grouping Line,Extra Hard,cre_Docs_and_Epenses,"{'chart': 'line', 'x_name': 'Document_Date', 'y_name': 'COUNT(Document_Date)', 'x_data': [['1970~1973', '1974~1977', '1978~1981', '1982~1985', '1986~1989', '1990~1993', '1994~1997', '1998~2001', '2002~2005', '2006~2009', '2010~2013']], 'y_data': [[10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5], [10, 2, 9, 3, 0, 3, 0, 0, 5, 3, 5], [12, 3, 9, 3, 0, 3, 0, 0, 6, 3, 6]], 'classify': ['excellent', 'fun', 'good'], 'describe': 'GROUP BY Document_Type_Description, BIN Document_Date BY YEAR'}",line,Document_Date,COUNT(Document_Date),"1970~1973, 1974~1977, 1978~1981, 1982~1985, 1986~1989, 1990~1993, 1994~1997, 1998~2001, 2002~2005, 2006~2009, 2010~2013","10, 2, 9, 3, 0, 3, 0, 0, 5, 2, 5","How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and I want to show in ascending by the X-axis."
"SELECT Season , COUNT(Season) FROM game GROUP BY Home_team",Grouping Line,Hard,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[3, 5, 4, 3, 3, 8, 3], [5, 6, 6, 4, 4, 10, 4], [6, 6, 6, 4, 4, 10, 4]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Home_team, BIN Season BY YEAR'}",line,Season,COUNT(Season),"2007, 2008, 2009, 2010, 2011, 2012, 2013","3, 5, 4, 3, 3, 8, 3",Show the number of games in each season and group by home team in a group line chart. The x-axis is season.
"SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ORDER BY Season DESC",Grouping Line,Extra Hard,game_injury,"{'chart': 'line', 'x_name': 'Season', 'y_name': 'COUNT(Season)', 'x_data': [['2013', '2012', '2011', '2010', '2009', '2008', '2007']], 'y_data': [[3, 8, 3, 3, 4, 5, 3], [4, 10, 4, 4, 6, 6, 5], [4, 10, 4, 4, 6, 6, 6]], 'classify': ['Bunyodkor', 'Pakhtakor', 'Quruvchi'], 'describe': 'GROUP BY Home_team, BIN Season BY YEAR'}",line,Season,COUNT(Season),"2013, 2012, 2011, 2010, 2009, 2008, 2007","3, 8, 3, 3, 4, 5, 3","Show the number of games in each season and group by home team in a group line chart The x-axis is season, and display in desc by the X."
"SELECT Start_from , AVG(Employee_ID) FROM hiring GROUP BY Is_full_time",Grouping Line,Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Employee_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0], [1, 0, 0, 0, 0, 3.5, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Employee_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 3, 1.5, 0, 0","A line chart shows the change of the average of Employee_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time"
"SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details",Grouping Line,Hard,customers_and_invoices,"{'chart': 'line', 'x_name': 'date_account_opened', 'y_name': 'COUNT(date_account_opened)', 'x_data': [['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']], 'y_data': [[1, 2, 4, 1, 3, 0, 5, 3, 3, 1], [2, 2, 4, 2, 4, 0, 6, 4, 4, 2]], 'classify': ['Regular', 'VIP'], 'describe': 'GROUP BY other_account_details, BIN date_account_opened BY YEAR'}",line,date_account_opened,COUNT(date_account_opened),"2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017","1, 2, 4, 1, 3, 0, 5, 3, 3, 1",Show the number of accounts opened in each year for all accounts and group by other account details in a group line chart.
"SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'COUNT(Start_from)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 0, 0, 0, 0, 1, 1, 2, 2, 1, 1], [2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,COUNT(Start_from),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","1, 0, 0, 0, 0, 1, 1, 2, 2, 1, 1","The trend about the the number of start from of different Is_full_time over the start from, list in asc by the x axis please."
"SELECT Start_from , AVG(Shop_ID) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",Grouping Line,Extra Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'AVG(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0], [0.5, 0, 0, 0, 0, 3, 0.5, 0, 0, 2, 2.5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,AVG(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0","Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the Start_from from low to high."
"SELECT date_of_treatment , COUNT(date_of_treatment) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) name",Grouping Line,Extra Hard,dog_kennels,"{'chart': 'line', 'x_name': 'date_of_treatment', 'y_name': 'COUNT(date_of_treatment)', 'x_data': [['8th', '9th', '10th', '11th', '12th', '13th', '14th', '15th', '16th', '17th', '18th', '19th']], 'y_data': [[1, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 1], [2, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 2]], 'classify': ['Houston', 'Kacey', 'Lyric'], 'describe': 'GROUP BY name, BIN date_of_treatment BY DAY'}",line,date_of_treatment,COUNT(date_of_treatment),"8th, 9th, 10th, 11th, 12th, 13th, 14th, 15th, 16th, 17th, 18th, 19th","1, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 1",List the number of dogs of the rarest breed in each treatment day with group a line chart that bins date of treatment by day and groups by dog's name.
"SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ,  date_address_to ORDER BY monthly_rental DESC",Grouping Line,Hard,behavior_monitoring,"{'chart': 'line', 'x_name': 'date_address_to', 'y_name': 'SUM(monthly_rental)', 'x_data': [['2018-02-25', '2018-02-27', '2018-03-02', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-12', '2018-03-14', '2018-03-15', '2018-03-18', '2018-03-20', '2018-03-22', '2018-03-23']], 'y_data': [[1297, 0, 0, 644, 1032, 0, 0, 1297, 2043, 1032, 0, 0, 0, 0], [0, 747, 1113, 2571, 0, 800, 865, 679, 0, 826, 620, 1287, 1067, 894]], 'classify': ['apartment', 'house'], 'describe': 'GROUP BY other_details, GROUP BY date_address_to'}",line,date_address_to,SUM(monthly_rental),"2018-02-25, 2018-02-27, 2018-03-02, 2018-03-04, 2018-03-05, 2018-03-06, 2018-03-07, 2018-03-12, 2018-03-14, 2018-03-15, 2018-03-18, 2018-03-20, 2018-03-22, 2018-03-23","1297, 0, 0, 644, 1032, 0, 0, 1297, 2043, 1032, 0, 0, 0, 0","Draw a line chart about the change of the sum of monthly_rental over  date_address_to , and group by attribute other_details."
"SELECT Start_from , SUM(Shop_ID) FROM hiring GROUP BY Is_full_time",Grouping Line,Hard,employee_hire_evaluation,"{'chart': 'line', 'x_name': 'Start_from', 'y_name': 'SUM(Shop_ID)', 'x_data': [['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013']], 'y_data': [[0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0], [1, 0, 0, 0, 0, 6, 1, 0, 0, 4, 5]], 'classify': ['F', 'T'], 'describe': 'GROUP BY Is_full_time, BIN Start_from BY YEAR'}",line,Start_from,SUM(Shop_ID),"2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013","0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0","Visualize a line chart about the change of the sum of Shop_ID over  Start_from , and group by attribute Is_full_time and bin start_from by time."
