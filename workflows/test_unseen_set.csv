sql_query,chart,hardness,db_id,vis_obj,vis_obj_chart,vis_obj_x_name,vis_obj_y_name,vis_obj_x_data,vis_obj_y_data,NL_queries
"SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[1, 0, 2]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,COUNT(date),"Aug, Sept, Oct","1, 0, 2",Visualize a bar chart to show the dates that have the top 3 days with the largest max gust speeds in the month level.
"SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[1, 0, 2]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,COUNT(date),"Aug, Sept, Oct","1, 0, 2","For the days with the 3 largest maximum gust speeds, show me the frequency of their corresponding date in the month level using a bar chart."
"SELECT date , mean_temperature_f FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'mean_temperature_f', 'x_data': [['2013-10-14', '2013-10-31', '2013-08-31']], 'y_data': [[64, 59, 68]], 'classify': [], 'describe': ''}",bar,date,mean_temperature_f,"2013-10-14, 2013-10-31, 2013-08-31","64, 59, 68","For the top 3 days with the largest max gust speeds, show the date and average temperature with a bar chart."
"SELECT date , mean_temperature_f FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'mean_temperature_f', 'x_data': [['2013-10-14', '2013-10-31', '2013-08-31']], 'y_data': [[64, 59, 68]], 'classify': [], 'describe': ''}",bar,date,mean_temperature_f,"2013-10-14, 2013-10-31, 2013-08-31","64, 59, 68","What is the date, average temperature for the days with the 3 largest maximum gust speeds? Just give me a histogram, please."
"SELECT date , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'mean_humidity', 'x_data': [['2013-10-14', '2013-10-31', '2013-08-31']], 'y_data': [[49, 54, 72]], 'classify': [], 'describe': ''}",bar,date,mean_humidity,"2013-10-14, 2013-10-31, 2013-08-31","49, 54, 72",What are the date and mean humidity for the top 3 days with the largest max gust speeds? Return me a bar chart.
"SELECT date , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'mean_humidity', 'x_data': [['2013-10-14', '2013-10-31', '2013-08-31']], 'y_data': [[49, 54, 72]], 'classify': [], 'describe': ''}",bar,date,mean_humidity,"2013-10-14, 2013-10-31, 2013-08-31","49, 54, 72",Visualize a bar chart for the date and mean humidity for the days with the 3 largest maximum gust speeds.
"SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_temperature_f)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[68, 0, 123]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,SUM(mean_temperature_f),"Aug, Sept, Oct","68, 0, 123","For the days with the 3 largest maximum gust speeds, calculate the total average temperature of each month (bin date into month level)."
"SELECT date , AVG(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(mean_temperature_f)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[68, 0, 61.5]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,AVG(mean_temperature_f),"Aug, Sept, Oct","68, 0, 61.5","For the days with the 3 largest maximum gust speeds, calculate the mean of the average temperature of each month (bin date into month level)."
"SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_humidity)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[72, 0, 103]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,SUM(mean_humidity),"Aug, Sept, Oct","72, 0, 103","For the days with the 3 largest maximum gust speeds, calculate the total mean humidity of each month (bin date into month level)."
"SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(mean_humidity)', 'x_data': [['Aug', 'Sept', 'Oct']], 'y_data': [[72, 0, 51.5]], 'classify': [], 'describe': 'BIN date BY MONTH'}",bar,date,AVG(mean_humidity),"Aug, Sept, Oct","72, 0, 51.5","For the days with the 3 largest maximum gust speeds, calculate the average mean humidity of each month (bin date into month level)."
"SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 1, 0, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 1, 0, 1, 0",Visualize a bar chart to show the dates that have the top 3 days with the largest max gust speeds at the day of the week level.
"SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 1, 0, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 1, 0, 1, 0","For the days with the 3 largest maximum gust speeds, show me the frequency of their corresponding date in the weekdays level using a bar chart."
"SELECT mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'mean_temperature_f', 'y_name': 'mean_humidity', 'x_data': [[64, 59, 68]], 'y_data': [[49, 54, 72]], 'classify': [], 'describe': ''}",scatter,mean_temperature_f,mean_humidity,"64, 59, 68","49, 54, 72","For the top 3 days with the largest max gust speeds, just show the average temperature and mean humidity using a scatter chart."
"SELECT mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'mean_temperature_f', 'y_name': 'mean_humidity', 'x_data': [[64, 59, 68]], 'y_data': [[49, 54, 72]], 'classify': [], 'describe': ''}",scatter,mean_temperature_f,mean_humidity,"64, 59, 68","49, 54, 72",Give me a scatter chart with average temperature and mean humidity for the days with the 3 largest maximum gust speeds?
"SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_temperature_f)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[64, 0, 0, 59, 0, 68, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(mean_temperature_f),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","64, 0, 0, 59, 0, 68, 0","For the top 3 days with the largest max gust speeds, please bin the date into the day of the week and then sum the mean temperature for a bar chart."
"SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_temperature_f)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[64, 0, 0, 59, 0, 68, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(mean_temperature_f),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","64, 0, 0, 59, 0, 68, 0","For those days with the 3 largest maximum gust speeds, can you plot a bar chart to compare the total mean temperature of each day of the weeks?"
"SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_humidity)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 0, 0, 54, 0, 72, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(mean_humidity),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 0, 0, 54, 0, 72, 0","For the top 3 days with the largest max gust speeds, please bin the date into day of the week and then sum the mean humidity to visualize a bar chart."
"SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(mean_humidity)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 0, 0, 54, 0, 72, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(mean_humidity),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 0, 0, 54, 0, 72, 0","For those days with the 3 largest maximum gust speeds, can you plot a bar chart to compare the total mean humidity of each day of the weeks? "
"SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(mean_humidity)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 0, 0, 54, 0, 72, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(mean_humidity),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 0, 0, 54, 0, 72, 0","For the top 3 days with the largest max gust speeds, please bin the date into the of the week and then compute the average of mean humidity to visualize a bar chart."
"SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(mean_humidity)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 0, 0, 54, 0, 72, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(mean_humidity),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 0, 0, 54, 0, 72, 0","For those days with the 3 largest maximum gust speeds, can you plot a bar chart to compare the average of mean humidity of each day of the weeks?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[87, 260, 155]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","87, 260, 155",Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[87, 260, 155]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","87, 260, 155","For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[92, 51, 81, 89, 60, 63, 66]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","92, 51, 81, 89, 60, 63, 66",Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[92, 51, 81, 89, 60, 63, 66]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","92, 51, 81, 89, 60, 63, 66","For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4",Please show the trend about the number of days with max temperature reaches 80 change over dates.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4","For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency."
"SELECT city , max(lat) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",pie,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, return the highest latitude among its stations. Show a pie chart."
"SELECT city , max(lat) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",pie,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, what is the highest latitude for its stations. Visualize by pie chart."
"SELECT city , max(lat) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",pie,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601",Create a pie chart showing maximal lat across city.
"SELECT city , max(lat) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, return the highest latitude among its stations. Show bar chart."
"SELECT city , max(lat) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, what is the highest latitude for its stations. Visualize by bar chart."
"SELECT city , max(lat) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601",Show maximal lat from each city
"SELECT lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY lat",Scatter,Easy,bike_1,"{'chart': 'scatter', 'x_name': 'lat', 'y_name': 'min(T2.duration)', 'x_data': [[37.329732, 37.330698, 37.333988, 37.331415, 37.336721, 37.333798, 37.330165, 37.348742, 37.337391, 37.335885, 37.332808, 37.339301, 37.332692, 37.333955, 37.481758, 37.486078000000006, 37.487616, 37.484219, 37.48537, 37.487682, 37.389218, 37.394358, 37.40694000000001, 37.39027700000001, 37.400443, 37.385956, 37.400241, 37.443988, 37.444521, 37.429082, 37.448598, 37.4256839, 37.78387100000001, 37.795001, 37.79728, 37.794231, 37.795425, 37.788975, 37.799953, 37.790302, 37.795392, 37.79146400000001, 37.787152, 37.789756, 37.792251, 37.781752, 37.77865, 37.781332, 37.80477, 37.780526, 37.785299, 37.78697800000001, 37.782259, 37.771058, 37.774814, 37.776619, 37.784878000000006, 37.7766, 37.776617, 37.788446, 37.781039, 37.798522, 37.794139, 37.7913, 37.786305, 37.789625, 37.352601, 37.798541, 37.491269, 37.342725]], 'y_data': [[195, 211, 169, 237, 182, 147, 161, 259, 219, 209, 205, 101, 165, 258, 198, 206, 126, 1193, 651, 225, 145, 189, 153, 191, 198, 166, 320, 80, 631, 151, 145, 166, 104, 92, 84, 76, 175, 73, 111, 139, 114, 63, 136, 86, 72, 73, 120, 107, 62, 68, 111, 62, 71, 138, 70, 101, 126, 77, 61, 209, 106, 143, 64, 87, 140, 104, 409, 105, 225, 269]], 'classify': [], 'describe': ''}",scatter,lat,min(T2.duration),"37.329732, 37.330698, 37.333988, 37.331415, 37.336721, 37.333798, 37.330165, 37.348742, 37.337391, 37.335885, 37.332808, 37.339301, 37.332692, 37.333955, 37.481758, 37.486078000000006, 37.487616, 37.484219, 37.48537, 37.487682, 37.389218, 37.394358, 37.40694000000001, 37.39027700000001, 37.400443, 37.385956, 37.400241, 37.443988, 37.444521, 37.429082, 37.448598, 37.4256839, 37.78387100000001, 37.795001, 37.79728, 37.794231, 37.795425, 37.788975, 37.799953, 37.790302, 37.795392, 37.79146400000001, 37.787152, 37.789756, 37.792251, 37.781752, 37.77865, 37.781332, 37.80477, 37.780526, 37.785299, 37.78697800000001, 37.782259, 37.771058, 37.774814, 37.776619, 37.784878000000006, 37.7766, 37.776617, 37.788446, 37.781039, 37.798522, 37.794139, 37.7913, 37.786305, 37.789625, 37.352601, 37.798541, 37.491269, 37.342725","195, 211, 169, 237, 182, 147, 161, 259, 219, 209, 205, 101, 165, 258, 198, 206, 126, 1193, 651, 225, 145, 189, 153, 191, 198, 166, 320, 80, 631, 151, 145, 166, 104, 92, 84, 76, 175, 73, 111, 139, 114, 63, 136, 86, 72, 73, 120, 107, 62, 68, 111, 62, 71, 138, 70, 101, 126, 77, 61, 209, 106, 143, 64, 87, 140, 104, 409, 105, 225, 269","For each station, just show its latitude and the minimum duration of trips that ended at the station using a scatter chart."
"SELECT lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY lat",Scatter,Easy,bike_1,"{'chart': 'scatter', 'x_name': 'lat', 'y_name': 'min(T2.duration)', 'x_data': [[37.329732, 37.330698, 37.333988, 37.331415, 37.336721, 37.333798, 37.330165, 37.348742, 37.337391, 37.335885, 37.332808, 37.339301, 37.332692, 37.333955, 37.481758, 37.486078000000006, 37.487616, 37.484219, 37.48537, 37.487682, 37.389218, 37.394358, 37.40694000000001, 37.39027700000001, 37.400443, 37.385956, 37.400241, 37.443988, 37.444521, 37.429082, 37.448598, 37.4256839, 37.78387100000001, 37.795001, 37.79728, 37.794231, 37.795425, 37.788975, 37.799953, 37.790302, 37.795392, 37.79146400000001, 37.787152, 37.789756, 37.792251, 37.781752, 37.77865, 37.781332, 37.80477, 37.780526, 37.785299, 37.78697800000001, 37.782259, 37.771058, 37.774814, 37.776619, 37.784878000000006, 37.7766, 37.776617, 37.788446, 37.781039, 37.798522, 37.794139, 37.7913, 37.786305, 37.789625, 37.352601, 37.798541, 37.491269, 37.342725]], 'y_data': [[195, 211, 169, 237, 182, 147, 161, 259, 219, 209, 205, 101, 165, 258, 198, 206, 126, 1193, 651, 225, 145, 189, 153, 191, 198, 166, 320, 80, 631, 151, 145, 166, 104, 92, 84, 76, 175, 73, 111, 139, 114, 63, 136, 86, 72, 73, 120, 107, 62, 68, 111, 62, 71, 138, 70, 101, 126, 77, 61, 209, 106, 143, 64, 87, 140, 104, 409, 105, 225, 269]], 'classify': [], 'describe': ''}",scatter,lat,min(T2.duration),"37.329732, 37.330698, 37.333988, 37.331415, 37.336721, 37.333798, 37.330165, 37.348742, 37.337391, 37.335885, 37.332808, 37.339301, 37.332692, 37.333955, 37.481758, 37.486078000000006, 37.487616, 37.484219, 37.48537, 37.487682, 37.389218, 37.394358, 37.40694000000001, 37.39027700000001, 37.400443, 37.385956, 37.400241, 37.443988, 37.444521, 37.429082, 37.448598, 37.4256839, 37.78387100000001, 37.795001, 37.79728, 37.794231, 37.795425, 37.788975, 37.799953, 37.790302, 37.795392, 37.79146400000001, 37.787152, 37.789756, 37.792251, 37.781752, 37.77865, 37.781332, 37.80477, 37.780526, 37.785299, 37.78697800000001, 37.782259, 37.771058, 37.774814, 37.776619, 37.784878000000006, 37.7766, 37.776617, 37.788446, 37.781039, 37.798522, 37.794139, 37.7913, 37.786305, 37.789625, 37.352601, 37.798541, 37.491269, 37.342725","195, 211, 169, 237, 182, 147, 161, 259, 219, 209, 205, 101, 165, 258, 198, 206, 126, 1193, 651, 225, 145, 189, 153, 191, 198, 166, 320, 80, 631, 151, 145, 166, 104, 92, 84, 76, 175, 73, 111, 139, 114, 63, 136, 86, 72, 73, 120, 107, 62, 68, 111, 62, 71, 138, 70, 101, 126, 77, 61, 209, 106, 143, 64, 87, 140, 104, 409, 105, 225, 269",Can you give me each end station's latitude and minimum duration for trips ended there with a scatter chart?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",Visualize a scatter chart on what are the ids and durations of the trips with the top 3 durations?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",Draw a scatter chart for what are the ids and durations of the trips with the top 3 durations?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",What are the ids and durations of the trips with the top 3 durations. Visualize by scatter chart.
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",Show me the correlation about what are the ids of the trips that lasted the longest and how long did they last?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",Show me a scatter chart for what are the ids of the trips that lasted the longest and how long did they last?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'id', 'y_name': 'duration', 'x_data': [[911017, 902480, 902481]], 'y_data': [[154368, 83921, 83888]], 'classify': [], 'describe': ''}",scatter,id,duration,"911017, 902480, 902481","154368, 83921, 83888",What are the ids of the trips that lasted the longest and how long did they last. Plot them as scatter chart.
"SELECT start_station_name , start_station_id FROM trip",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65",Find the ids and names of stations from which at least 200 trips started. 
"SELECT start_station_name , start_station_id FROM trip",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65",Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?
"SELECT start_station_name , start_station_id FROM trip",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65",what are the ids and names of all start stations that were the beginning of at least 200 trips?
"SELECT start_station_name , start_station_id FROM trip",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65",What are the ids and names of all start stations that were the beginning of at least 200 trips. Show bar chart.
"SELECT start_station_name , start_station_id FROM trip",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65",Show me start_station_id by start station name in a histogram
"SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'zip_code', 'y_name': 'count(*)', 'x_data': [[94041, 94063, 94107, 94301, 95113]], 'y_data': [[27, 18, 88, 17, 21]], 'classify': [], 'describe': ''}",scatter,zip_code,count(*),"94041, 94063, 94107, 94301, 95113","27, 18, 88, 17, 21","For each zip code, return how many times max wind speed reached 25. "
"SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'zip_code', 'y_name': 'count(*)', 'x_data': [[94041, 94063, 94107, 94301, 95113]], 'y_data': [[27, 18, 88, 17, 21]], 'classify': [], 'describe': ''}",scatter,zip_code,count(*),"94041, 94063, 94107, 94301, 95113","27, 18, 88, 17, 21","For each zip code, how many times has the maximum wind speed reached 25 mph. Visualize by scatter chart."
"SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",Pie,Hard,bike_1,"{'chart': 'pie', 'x_name': 'end_station_name', 'y_name': 'COUNT(end_station_name)', 'x_data': [['Harry Bridges Plaza (Ferry Building)', 'San Francisco Caltrain 2 (330 Townsend)']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY end_station_name'}",pie,end_station_name,COUNT(end_station_name),"Harry Bridges Plaza (Ferry Building), San Francisco Caltrain 2 (330 Townsend)","1, 2",Give me the proportion of end stations for the trips with the three oldest id using a pie chart.
"SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",Pie,Hard,bike_1,"{'chart': 'pie', 'x_name': 'end_station_name', 'y_name': 'COUNT(end_station_name)', 'x_data': [['Harry Bridges Plaza (Ferry Building)', 'San Francisco Caltrain 2 (330 Townsend)']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY end_station_name'}",pie,end_station_name,COUNT(end_station_name),"Harry Bridges Plaza (Ferry Building), San Francisco Caltrain 2 (330 Townsend)","1, 2",Please give me a pie chart to show the proportion of end stations for the trips with the three smallest ids?
"SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'end_station_name', 'y_name': 'COUNT(end_station_name)', 'x_data': [['Harry Bridges Plaza (Ferry Building)', 'San Francisco Caltrain 2 (330 Townsend)']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY end_station_name'}",bar,end_station_name,COUNT(end_station_name),"Harry Bridges Plaza (Ferry Building), San Francisco Caltrain 2 (330 Townsend)","1, 2",Compare the total number of end stations for the trips with the three oldest id.
"SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'end_station_name', 'y_name': 'COUNT(end_station_name)', 'x_data': [['Harry Bridges Plaza (Ferry Building)', 'San Francisco Caltrain 2 (330 Townsend)']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY end_station_name'}",bar,end_station_name,COUNT(end_station_name),"Harry Bridges Plaza (Ferry Building), San Francisco Caltrain 2 (330 Townsend)","1, 2",What is the number of end stations for the trips with the three smallest ids? Show a bar chart.
"SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'end_station_name', 'y_name': 'COUNT(end_station_name)', 'x_data': [['Harry Bridges Plaza (Ferry Building)', 'San Francisco Caltrain 2 (330 Townsend)']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY end_station_name'}",bar,end_station_name,COUNT(end_station_name),"Harry Bridges Plaza (Ferry Building), San Francisco Caltrain 2 (330 Townsend)","1, 2",Plot a bar chart to show the frequency of end stations for the trips with the three oldest id.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62",What are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62",A bar chart for giveing me the number of the dates when the max temperature was higher than 85.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62","What are the dates with a maximum temperature higher than 85, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62",Give me the number of the dates when the max temperature was higher than 85.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62",A bar chart for what are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[18, 99, 62]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","18, 99, 62","Give me the dates when the max temperature was higher than 85, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28",What are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28",A bar chart for giveing me the number of the dates when the max temperature was higher than 85.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28","What are the dates with a maximum temperature higher than 85, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28",Give me the number of the dates when the max temperature was higher than 85.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28",A bar chart for what are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[32, 20, 21, 31, 24, 23, 28]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","32, 20, 21, 31, 24, 23, 28","Give me the dates when the max temperature was higher than 85, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4",What are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4",A line chart for giveing me the number of the dates when the max temperature was higher than 85.
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","Give me the dates when the max temperature was higher than 85, and count them by a line chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4",A line chart for what are the number of the dates with a maximum temperature higher than 85?
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","What are the dates with a maximum temperature higher than 85, and count them by a line chart"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4",Give me the number of the dates when the max temperature was higher than 85.
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163","Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year."
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163","Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis, and count for showing how many stations are installed each year."
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163",Bar graph to show how many installation date from different installation date
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[964, 1957, 1369, 1694, 2506, 0, 1469]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","964, 1957, 1369, 1694, 2506, 0, 1469","Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year."
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[964, 1957, 1369, 1694, 2506, 0, 1469]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","964, 1957, 1369, 1694, 2506, 0, 1469","Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year."
"SELECT installation_date , COUNT(installation_date) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[964, 1957, 1369, 1694, 2506, 0, 1469]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","964, 1957, 1369, 1694, 2506, 0, 1469",Show how many installation date from each installation date
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date",Line,Easy,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21",Show the number of stations installed change over the installation date of in station table using a line chart.
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date",Line,Easy,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21",Tell me the trend using a line chart to show the total number of the station over the installation date.
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date",Line,Easy,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21",Show me a line chart of how how many installation date change over the installation date
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77",Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available.
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77",What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart.
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77",Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77",Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77",What are the different ids and names of the stations that have had more than 12 bikes available. Plot them as bar chart.
"SELECT long , COUNT(long) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['>0', '<=0']], 'y_data': [[0, 69]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),">0, <=0","0, 69","For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket."
"SELECT long , COUNT(long) FROM station",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['>0', '<=0']], 'y_data': [[0, 69]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),">0, <=0","0, 69",Show me how many long by long in a histogram
"SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'long', 'y_name': 'avg(T2.duration)', 'x_data': [[-121.901782, -121.888979, -121.894902, -121.8932, -121.894074, -121.886943, -121.885831, -121.894715, -121.886995, -121.88566000000002, -121.883891, -121.88993700000002, -121.900084, -121.877349, -122.226904, -122.232089, -122.227424, -122.203288, -122.223492, -122.081896, -122.07671299999998, -122.106758, -122.066553, -122.108338, -122.083678, -122.099076, -122.164759, -122.163093, -122.142805, -122.159504, -122.13777749999998, -122.408433, -122.39997, -122.398436, -122.402923, -122.404767, -122.403452, -122.398525, -122.390637, -122.394203, -122.391034, -122.388013, -122.394643, -122.39708600000002, -122.405127, -122.418235, -122.418603, -122.403234, -122.39028799999998, -122.39623600000002, -122.398108, -122.392738, -122.402717, -122.418954, -122.417385, -122.401014, -122.39547, -122.39526, -122.408499, -122.411748, -122.407245, -122.394434, -122.399051, -122.404966, -122.400811, -121.905733, -122.40086200000002, -122.236234, -121.895617]], 'y_data': [[544.7611940298508, 885, 378.28, 980.0714285714287, 840.225, 529.0909090909091, 682.3333333333334, 1230.655172413793, 1123.4, 810.5416666666665, 711.7777777777777, 616.4, 608.8333333333334, 3597.095238095238, 3909, 2643.871794871795, 741, 979.0666666666667, 555.4, 563.0333333333333, 714.8062015503875, 380.4090909090909, 918.1315789473683, 667.5925925925926, 1082.7142857142858, 699.7, 1653.3255813953488, 2643.6, 1423.842105263158, 1164.1153846153845, 872.2222222222223, 1245.5836909871246, 906.0827586206897, 1067.6629213483143, 524.774834437086, 1497.7671232876712, 825.1928571428572, 1817.221649484536, 655.7166666666667, 1802.6721991701245, 938.7894736842104, 766.0746268656717, 535.0488372093023, 752.6637554585153, 551.4051282051282, 1774.6315789473686, 734.3861386138614, 1630.002267573696, 905.3340611353713, 399.6787330316742, 414.5117370892018, 512.8461538461538, 568.9297752808989, 912.8475609756098, 1139.6389891696754, 561.7394957983194, 725.3219284603423, 801.9405320813771, 765.4458598726114, 1276.7208121827412, 1423.375, 890.9441964285713, 655.2933333333333, 1664.8505338078294, 786.4408284023668, 862.4666666666667, 1044.7237569060774, 253.33333333333331, 556]], 'classify': [], 'describe': ''}",scatter,long,avg(T2.duration),"-121.901782, -121.888979, -121.894902, -121.8932, -121.894074, -121.886943, -121.885831, -121.894715, -121.886995, -121.88566000000002, -121.883891, -121.88993700000002, -121.900084, -121.877349, -122.226904, -122.232089, -122.227424, -122.203288, -122.223492, -122.081896, -122.07671299999998, -122.106758, -122.066553, -122.108338, -122.083678, -122.099076, -122.164759, -122.163093, -122.142805, -122.159504, -122.13777749999998, -122.408433, -122.39997, -122.398436, -122.402923, -122.404767, -122.403452, -122.398525, -122.390637, -122.394203, -122.391034, -122.388013, -122.394643, -122.39708600000002, -122.405127, -122.418235, -122.418603, -122.403234, -122.39028799999998, -122.39623600000002, -122.398108, -122.392738, -122.402717, -122.418954, -122.417385, -122.401014, -122.39547, -122.39526, -122.408499, -122.411748, -122.407245, -122.394434, -122.399051, -122.404966, -122.400811, -121.905733, -122.40086200000002, -122.236234, -121.895617","544.7611940298508, 885, 378.28, 980.0714285714287, 840.225, 529.0909090909091, 682.3333333333334, 1230.655172413793, 1123.4, 810.5416666666665, 711.7777777777777, 616.4, 608.8333333333334, 3597.095238095238, 3909, 2643.871794871795, 741, 979.0666666666667, 555.4, 563.0333333333333, 714.8062015503875, 380.4090909090909, 918.1315789473683, 667.5925925925926, 1082.7142857142858, 699.7, 1653.3255813953488, 2643.6, 1423.842105263158, 1164.1153846153845, 872.2222222222223, 1245.5836909871246, 906.0827586206897, 1067.6629213483143, 524.774834437086, 1497.7671232876712, 825.1928571428572, 1817.221649484536, 655.7166666666667, 1802.6721991701245, 938.7894736842104, 766.0746268656717, 535.0488372093023, 752.6637554585153, 551.4051282051282, 1774.6315789473686, 734.3861386138614, 1630.002267573696, 905.3340611353713, 399.6787330316742, 414.5117370892018, 512.8461538461538, 568.9297752808989, 912.8475609756098, 1139.6389891696754, 561.7394957983194, 725.3219284603423, 801.9405320813771, 765.4458598726114, 1276.7208121827412, 1423.375, 890.9441964285713, 655.2933333333333, 1664.8505338078294, 786.4408284023668, 862.4666666666667, 1044.7237569060774, 253.33333333333331, 556","For each station, just simply show its longitude and the average duration of trips that started from the station using a scatter chart."
"SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",Scatter,Medium,bike_1,"{'chart': 'scatter', 'x_name': 'long', 'y_name': 'avg(T2.duration)', 'x_data': [[-121.901782, -121.888979, -121.894902, -121.8932, -121.894074, -121.886943, -121.885831, -121.894715, -121.886995, -121.88566000000002, -121.883891, -121.88993700000002, -121.900084, -121.877349, -122.226904, -122.232089, -122.227424, -122.203288, -122.223492, -122.081896, -122.07671299999998, -122.106758, -122.066553, -122.108338, -122.083678, -122.099076, -122.164759, -122.163093, -122.142805, -122.159504, -122.13777749999998, -122.408433, -122.39997, -122.398436, -122.402923, -122.404767, -122.403452, -122.398525, -122.390637, -122.394203, -122.391034, -122.388013, -122.394643, -122.39708600000002, -122.405127, -122.418235, -122.418603, -122.403234, -122.39028799999998, -122.39623600000002, -122.398108, -122.392738, -122.402717, -122.418954, -122.417385, -122.401014, -122.39547, -122.39526, -122.408499, -122.411748, -122.407245, -122.394434, -122.399051, -122.404966, -122.400811, -121.905733, -122.40086200000002, -122.236234, -121.895617]], 'y_data': [[544.7611940298508, 885, 378.28, 980.0714285714287, 840.225, 529.0909090909091, 682.3333333333334, 1230.655172413793, 1123.4, 810.5416666666665, 711.7777777777777, 616.4, 608.8333333333334, 3597.095238095238, 3909, 2643.871794871795, 741, 979.0666666666667, 555.4, 563.0333333333333, 714.8062015503875, 380.4090909090909, 918.1315789473683, 667.5925925925926, 1082.7142857142858, 699.7, 1653.3255813953488, 2643.6, 1423.842105263158, 1164.1153846153845, 872.2222222222223, 1245.5836909871246, 906.0827586206897, 1067.6629213483143, 524.774834437086, 1497.7671232876712, 825.1928571428572, 1817.221649484536, 655.7166666666667, 1802.6721991701245, 938.7894736842104, 766.0746268656717, 535.0488372093023, 752.6637554585153, 551.4051282051282, 1774.6315789473686, 734.3861386138614, 1630.002267573696, 905.3340611353713, 399.6787330316742, 414.5117370892018, 512.8461538461538, 568.9297752808989, 912.8475609756098, 1139.6389891696754, 561.7394957983194, 725.3219284603423, 801.9405320813771, 765.4458598726114, 1276.7208121827412, 1423.375, 890.9441964285713, 655.2933333333333, 1664.8505338078294, 786.4408284023668, 862.4666666666667, 1044.7237569060774, 253.33333333333331, 556]], 'classify': [], 'describe': ''}",scatter,long,avg(T2.duration),"-121.901782, -121.888979, -121.894902, -121.8932, -121.894074, -121.886943, -121.885831, -121.894715, -121.886995, -121.88566000000002, -121.883891, -121.88993700000002, -121.900084, -121.877349, -122.226904, -122.232089, -122.227424, -122.203288, -122.223492, -122.081896, -122.07671299999998, -122.106758, -122.066553, -122.108338, -122.083678, -122.099076, -122.164759, -122.163093, -122.142805, -122.159504, -122.13777749999998, -122.408433, -122.39997, -122.398436, -122.402923, -122.404767, -122.403452, -122.398525, -122.390637, -122.394203, -122.391034, -122.388013, -122.394643, -122.39708600000002, -122.405127, -122.418235, -122.418603, -122.403234, -122.39028799999998, -122.39623600000002, -122.398108, -122.392738, -122.402717, -122.418954, -122.417385, -122.401014, -122.39547, -122.39526, -122.408499, -122.411748, -122.407245, -122.394434, -122.399051, -122.404966, -122.400811, -121.905733, -122.40086200000002, -122.236234, -121.895617","544.7611940298508, 885, 378.28, 980.0714285714287, 840.225, 529.0909090909091, 682.3333333333334, 1230.655172413793, 1123.4, 810.5416666666665, 711.7777777777777, 616.4, 608.8333333333334, 3597.095238095238, 3909, 2643.871794871795, 741, 979.0666666666667, 555.4, 563.0333333333333, 714.8062015503875, 380.4090909090909, 918.1315789473683, 667.5925925925926, 1082.7142857142858, 699.7, 1653.3255813953488, 2643.6, 1423.842105263158, 1164.1153846153845, 872.2222222222223, 1245.5836909871246, 906.0827586206897, 1067.6629213483143, 524.774834437086, 1497.7671232876712, 825.1928571428572, 1817.221649484536, 655.7166666666667, 1802.6721991701245, 938.7894736842104, 766.0746268656717, 535.0488372093023, 752.6637554585153, 551.4051282051282, 1774.6315789473686, 734.3861386138614, 1630.002267573696, 905.3340611353713, 399.6787330316742, 414.5117370892018, 512.8461538461538, 568.9297752808989, 912.8475609756098, 1139.6389891696754, 561.7394957983194, 725.3219284603423, 801.9405320813771, 765.4458598726114, 1276.7208121827412, 1423.375, 890.9441964285713, 655.2933333333333, 1664.8505338078294, 786.4408284023668, 862.4666666666667, 1044.7237569060774, 253.33333333333331, 556",Please return a scatter chart to show each start station's longitude and the corresponding average duration of trips started there.
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1",Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1","For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014","2, 1",Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014","2, 1","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 0, 2, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 0, 2, 0, 0",Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 0, 2, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 0, 2, 0, 0","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart."
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",List the name and the number of stations for all the cities that have at least 15 stations with a pie chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",List the name and the number of stations for all the cities that have at least 15 stations. Visualize by pie chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",Visualize a pie chart with what is the name of every city that has at least 15 stations and how many stations does it have?
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",Give the proportion of what is the name of every city that has at least 15 stations and how many stations does it have?
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",What is the name of every city that has at least 15 stations and how many stations does it have. Show the proportion.
"SELECT city , COUNT(*) FROM station GROUP BY city",Pie,Easy,bike_1,"{'chart': 'pie', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",pie,city,COUNT(*),"San Francisco, San Jose","35, 16",Compute the total the total number across city as a pie chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",List the name and the number of stations for all the cities that have at least 15 stations with a bar chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",List the name and the number of stations for all the cities that have at least 15 stations. Show bar chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",What is the name of every city that has at least 15 stations and how many stations does it have. Visualize by bar chart.
"SELECT city , COUNT(*) FROM station GROUP BY city",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16",Create a bar chart showing the total number across city
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22","What are the dates in which the mean sea level pressure was between 30.3 and 31, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22","What are the dates that have an average sea level pressure between 30.3 and 31, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22",What are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22",A bar chart for what are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22",What are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[27, 38, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","27, 38, 22",A bar chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23","What are the dates in which the mean sea level pressure was between 30.3 and 31, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23","What are the dates that have an average sea level pressure between 30.3 and 31, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23",What are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23",A bar chart for what are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23",What are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[25, 21, 0, 1, 7, 10, 23]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","25, 21, 0, 1, 7, 10, 23",A bar chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1",What are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the dates in which the mean sea level pressure was between 30.3 and 31, and count them by a line chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1",A line chart for what are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1",What are the number of the dates in which the mean sea level pressure was between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the dates that have an average sea level pressure between 30.3 and 31, and count them by a line chart"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1",A line chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1",What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency."
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1",I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year.
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1",Draw a bar chart of date versus how many date
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0",What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover."
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0",I  want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year.
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0",Bar chart x axis date y axis total number of cloud cover
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0",What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their average cloud cover."
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0",I  want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year.
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0",Show me mean cloud cover by date in a histogram
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 1, 1, 2, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 1, 1, 2, 0",I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day.
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 1, 1, 2, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 1, 1, 2, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into the day of week interval and count their frequency."
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 1, 1, 2, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 1, 1, 2, 0",What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.
"SELECT date , COUNT(date) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 1, 1, 2, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 1, 1, 2, 0",Bar chart x axis date y axis the number of date
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 8, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 8, 0",What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates? You can show me a bar chart.
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 8, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 8, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into weekdays interval and compute their total cloud cover."
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 8, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 8, 0", I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day.
"SELECT date , SUM(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 8, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 8, 0",Bar graph to show total number of cloud cover from different date
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 4, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 4, 0",What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 4, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 4, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover."
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 4, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 4, 0",I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day.
"SELECT date , AVG(cloud_cover) FROM weather",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 8, 8, 8, 4, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 8, 8, 8, 4, 0",Show the average of cloud cover from each date
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[106, 275, 206]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","106, 275, 206","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014', '2015']], 'y_data': [[106, 275, 206]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014, 2015","106, 275, 206","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[90, 79, 81, 82, 87, 82, 86]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","90, 79, 81, 82, 87, 82, 86","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart"
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[90, 79, 81, 82, 87, 82, 86]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","90, 79, 81, 82, 87, 82, 86","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart"
"SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC",Bar,Hard,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Firefox', 'Internet Explorer', 'Opera', 'Safari']], 'y_data': [[2, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Firefox, Internet Explorer, Opera, Safari","2, 3, 2, 2",A bar chart showing the number of accelerators for each browser in the descending order of compatible year.
"SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC",Pie,Hard,browser_web,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Firefox', 'Internet Explorer', 'Opera', 'Safari']], 'y_data': [[2, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Firefox, Internet Explorer, Opera, Safari","2, 3, 2, 2",A pie chart showing the proportion of the number of accelerators for each browser.
"SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name",Pie,Medium,browser_web,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox', 'Nitro', 'fasTun']], 'y_data': [[2, 2, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"CACHEbox, CProxy, Fasterfox, Nitro, fasTun","2, 2, 3, 1, 1",A pie chart showing the proportion of the number of browsers for each accelerator.
"SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name ORDER BY T1.compatible_since_year DESC",Bar,Hard,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox', 'Nitro', 'fasTun']], 'y_data': [[2, 2, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"CACHEbox, CProxy, Fasterfox, Nitro, fasTun","2, 2, 3, 1, 1",A pie chart showing the number of browsers for each accelerator in the descending order of compatible year.
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system",Bar,Easy,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95","1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1",Find the number of web accelerators used for each Operating system. 
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system",Bar,Easy,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95","1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1",Draw a bar chart of operating system versus the total number 
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Pie,Easy,browser_web,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",pie,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",Draw a pie chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Pie,Easy,browser_web,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",pie,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",Return a pie on what are the ids and names of the web accelerators that are compatible with two or more browsers?
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Pie,Easy,browser_web,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",pie,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",What are the ids and names of the web accelerators that are compatible with two or more browsers. 
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Bar,Easy,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Bar,Easy,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id",Bar,Easy,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3",What are the ids and names of the web accelerators that are compatible with two or more browsers. Visualize by bar chart.
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1",A bar chart for listing the number of the phone numbers of all employees.
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1",What are the number of the phone numbers for each employee?
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1",A bar chart for what are the number of the phone numbers for each employee?
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1",List the number of the phone numbers of all employees.
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","What are the phone numbers for each employee, and count them by a bar chart"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","List the phone numbers of all employees, and count them by a bar chart"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1",Plot the number of phone by grouped by phone as a bar graph
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Pie,Easy,chinook_1,"{'chart': 'pie', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",pie,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",Return a pie on what are the first names and support rep ids for employees serving 10 or more customers?
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Pie,Easy,chinook_1,"{'chart': 'pie', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",pie,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",Draw a pie chart for what are the first names and support rep ids for employees serving 10 or more customers?
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Pie,Easy,chinook_1,"{'chart': 'pie', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",pie,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",What are the first names and support rep ids for employees serving 10 or more customers. Visualize by pie chart.
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId",Bar,Easy,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5",What are the first names and support rep ids for employees serving 10 or more customers. 
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261",Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart.
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261",Show the album names and ids for albums that contain tracks with unit price bigger than 1. Visualize by bar chart.
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261",Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261",Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261",What are the titles and ids for albums containing tracks with unit price greater than 1. 
"SELECT T1.AlbumId , COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID",Scatter,Medium,chinook_1,"{'chart': 'scatter', 'x_name': 'AlbumId', 'y_name': 'COUNT(*)', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347]], 'y_data': [[10, 1, 3, 8, 15, 13, 12, 14, 8, 14, 12, 12, 8, 13, 5, 7, 10, 17, 11, 11, 18, 3, 34, 23, 13, 17, 14, 10, 14, 14, 9, 14, 17, 17, 11, 17, 20, 12, 21, 12, 14, 14, 7, 6, 14, 13, 14, 13, 10, 4, 22, 15, 14, 20, 20, 15, 15, 9, 7, 7, 11, 7, 12, 9, 9, 10, 16, 9, 13, 13, 14, 18, 30, 12, 14, 15, 11, 14, 10, 10, 11, 13, 24, 16, 14, 15, 3, 12, 13, 12, 16, 14, 13, 11, 12, 11, 10, 11, 12, 9, 10, 18, 10, 10, 10, 9, 8, 10, 9, 8, 8, 8, 11, 8, 20, 10, 11, 11, 13, 17, 10, 14, 12, 14, 16, 15, 10, 8, 8, 7, 8, 9, 9, 10, 9, 7, 5, 4, 15, 16, 57, 14, 14, 10, 18, 18, 10, 12, 16, 10, 14, 8, 13, 8, 11, 9, 14, 13, 13, 15, 12, 17, 17, 12, 15, 14, 21, 12, 16, 1, 2, 1, 2, 14, 12, 14, 10, 16, 13, 15, 11, 12, 9, 16, 17, 11, 11, 11, 14, 16, 10, 14, 17, 16, 15, 14, 8, 6, 12, 11, 16, 18, 17, 9, 10, 12, 11, 7, 10, 9, 18, 12, 18, 11, 14, 12, 14, 15, 15, 11, 20, 15, 15, 22, 16, 1, 19, 23, 26, 25, 24, 12, 11, 15, 11, 12, 17, 14, 10, 10, 14, 12, 17, 11, 12, 13, 15, 19, 6, 22, 25, 1, 24, 1, 23, 12, 12, 19, 17, 1, 17, 2, 2, 2, 2, 1, 1, 1, 10, 14, 14, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 12, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,AlbumId,COUNT(*),"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347","10, 1, 3, 8, 15, 13, 12, 14, 8, 14, 12, 12, 8, 13, 5, 7, 10, 17, 11, 11, 18, 3, 34, 23, 13, 17, 14, 10, 14, 14, 9, 14, 17, 17, 11, 17, 20, 12, 21, 12, 14, 14, 7, 6, 14, 13, 14, 13, 10, 4, 22, 15, 14, 20, 20, 15, 15, 9, 7, 7, 11, 7, 12, 9, 9, 10, 16, 9, 13, 13, 14, 18, 30, 12, 14, 15, 11, 14, 10, 10, 11, 13, 24, 16, 14, 15, 3, 12, 13, 12, 16, 14, 13, 11, 12, 11, 10, 11, 12, 9, 10, 18, 10, 10, 10, 9, 8, 10, 9, 8, 8, 8, 11, 8, 20, 10, 11, 11, 13, 17, 10, 14, 12, 14, 16, 15, 10, 8, 8, 7, 8, 9, 9, 10, 9, 7, 5, 4, 15, 16, 57, 14, 14, 10, 18, 18, 10, 12, 16, 10, 14, 8, 13, 8, 11, 9, 14, 13, 13, 15, 12, 17, 17, 12, 15, 14, 21, 12, 16, 1, 2, 1, 2, 14, 12, 14, 10, 16, 13, 15, 11, 12, 9, 16, 17, 11, 11, 11, 14, 16, 10, 14, 17, 16, 15, 14, 8, 6, 12, 11, 16, 18, 17, 9, 10, 12, 11, 7, 10, 9, 18, 12, 18, 11, 14, 12, 14, 15, 15, 11, 20, 15, 15, 22, 16, 1, 19, 23, 26, 25, 24, 12, 11, 15, 11, 12, 17, 14, 10, 10, 14, 12, 17, 11, 12, 13, 15, 19, 6, 22, 25, 1, 24, 1, 23, 12, 12, 19, 17, 1, 17, 2, 2, 2, 2, 1, 1, 1, 10, 14, 14, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 12, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",A scatter chart showing the album ids and the number of tracks for each album.
"SELECT T1.AlbumId , COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID",Scatter,Medium,chinook_1,"{'chart': 'scatter', 'x_name': 'AlbumId', 'y_name': 'COUNT(*)', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347]], 'y_data': [[10, 1, 3, 8, 15, 13, 12, 14, 8, 14, 12, 12, 8, 13, 5, 7, 10, 17, 11, 11, 18, 3, 34, 23, 13, 17, 14, 10, 14, 14, 9, 14, 17, 17, 11, 17, 20, 12, 21, 12, 14, 14, 7, 6, 14, 13, 14, 13, 10, 4, 22, 15, 14, 20, 20, 15, 15, 9, 7, 7, 11, 7, 12, 9, 9, 10, 16, 9, 13, 13, 14, 18, 30, 12, 14, 15, 11, 14, 10, 10, 11, 13, 24, 16, 14, 15, 3, 12, 13, 12, 16, 14, 13, 11, 12, 11, 10, 11, 12, 9, 10, 18, 10, 10, 10, 9, 8, 10, 9, 8, 8, 8, 11, 8, 20, 10, 11, 11, 13, 17, 10, 14, 12, 14, 16, 15, 10, 8, 8, 7, 8, 9, 9, 10, 9, 7, 5, 4, 15, 16, 57, 14, 14, 10, 18, 18, 10, 12, 16, 10, 14, 8, 13, 8, 11, 9, 14, 13, 13, 15, 12, 17, 17, 12, 15, 14, 21, 12, 16, 1, 2, 1, 2, 14, 12, 14, 10, 16, 13, 15, 11, 12, 9, 16, 17, 11, 11, 11, 14, 16, 10, 14, 17, 16, 15, 14, 8, 6, 12, 11, 16, 18, 17, 9, 10, 12, 11, 7, 10, 9, 18, 12, 18, 11, 14, 12, 14, 15, 15, 11, 20, 15, 15, 22, 16, 1, 19, 23, 26, 25, 24, 12, 11, 15, 11, 12, 17, 14, 10, 10, 14, 12, 17, 11, 12, 13, 15, 19, 6, 22, 25, 1, 24, 1, 23, 12, 12, 19, 17, 1, 17, 2, 2, 2, 2, 1, 1, 1, 10, 14, 14, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 12, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,AlbumId,COUNT(*),"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347","10, 1, 3, 8, 15, 13, 12, 14, 8, 14, 12, 12, 8, 13, 5, 7, 10, 17, 11, 11, 18, 3, 34, 23, 13, 17, 14, 10, 14, 14, 9, 14, 17, 17, 11, 17, 20, 12, 21, 12, 14, 14, 7, 6, 14, 13, 14, 13, 10, 4, 22, 15, 14, 20, 20, 15, 15, 9, 7, 7, 11, 7, 12, 9, 9, 10, 16, 9, 13, 13, 14, 18, 30, 12, 14, 15, 11, 14, 10, 10, 11, 13, 24, 16, 14, 15, 3, 12, 13, 12, 16, 14, 13, 11, 12, 11, 10, 11, 12, 9, 10, 18, 10, 10, 10, 9, 8, 10, 9, 8, 8, 8, 11, 8, 20, 10, 11, 11, 13, 17, 10, 14, 12, 14, 16, 15, 10, 8, 8, 7, 8, 9, 9, 10, 9, 7, 5, 4, 15, 16, 57, 14, 14, 10, 18, 18, 10, 12, 16, 10, 14, 8, 13, 8, 11, 9, 14, 13, 13, 15, 12, 17, 17, 12, 15, 14, 21, 12, 16, 1, 2, 1, 2, 14, 12, 14, 10, 16, 13, 15, 11, 12, 9, 16, 17, 11, 11, 11, 14, 16, 10, 14, 17, 16, 15, 14, 8, 6, 12, 11, 16, 18, 17, 9, 10, 12, 11, 7, 10, 9, 18, 12, 18, 11, 14, 12, 14, 15, 15, 11, 20, 15, 15, 22, 16, 1, 19, 23, 26, 25, 24, 12, 11, 15, 11, 12, 17, 14, 10, 10, 14, 12, 17, 11, 12, 13, 15, 19, 6, 22, 25, 1, 24, 1, 23, 12, 12, 19, 17, 1, 17, 2, 2, 2, 2, 1, 1, 1, 10, 14, 14, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 12, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What are the names and ids of the different albums, and how many tracks are on each? Return a scatter chart."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 2, 0, 3, 1]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2009, 2010, 2011, 2012, 2013","1, 2, 0, 3, 1","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart"
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 2, 0, 3, 1]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2009, 2010, 2011, 2012, 2013","1, 2, 0, 3, 1","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart"
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 2, 0, 3, 1]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2009, 2010, 2011, 2012, 2013","1, 2, 0, 3, 1",What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2009', '2010', '2011', '2012', '2013']], 'y_data': [[1, 2, 0, 3, 1]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2009, 2010, 2011, 2012, 2013","1, 2, 0, 3, 1",A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 2, 1, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 2, 1, 0, 1, 1, 0","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart"
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 2, 1, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 2, 1, 0, 1, 1, 0","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart"
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 2, 1, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 2, 1, 0, 1, 1, 0",What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 2, 1, 0, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 2, 1, 0, 1, 1, 0",A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Pie,Easy,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Draw a pie chart for how many climbers are from each country?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Pie,Easy,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Display a pie chart for how many climbers are from each country?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Pie,Easy,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",How many climbers are from each country. Visualize by pie chart.
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Pie,Easy,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",pie,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Give me a pie to show the total number from different country.
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Display a bar chart for how many climbers are from each country?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Give me a histogram for how many climbers are from each country?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",How many climbers are from each country. 
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6",Bar chart of the total number from each country
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Klaus Enders', 'Siegfried Schauz', 'Hans Luthringhauser', 'Jean Claude Castella', 'Horst Owesle', 'Georg Auerbacher', 'Arseneus Butscher', 'Charlie Freedman', 'L Currie', 'Mick Horsepole']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Klaus Enders, Siegfried Schauz, Hans Luthringhauser, Jean Claude Castella, Horst Owesle, Georg Auerbacher, Arseneus Butscher, Charlie Freedman, L Currie, Mick Horsepole","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890",Show the names of climbers and the heights of mountains they climb by a bar chart.
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Klaus Enders', 'Siegfried Schauz', 'Hans Luthringhauser', 'Jean Claude Castella', 'Horst Owesle', 'Georg Auerbacher', 'Arseneus Butscher', 'Charlie Freedman', 'L Currie', 'Mick Horsepole']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Klaus Enders, Siegfried Schauz, Hans Luthringhauser, Jean Claude Castella, Horst Owesle, Georg Auerbacher, Arseneus Butscher, Charlie Freedman, L Currie, Mick Horsepole","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890",Show the names of climbers and the heights of mountains they climb. Show bar chart.
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Klaus Enders', 'Siegfried Schauz', 'Hans Luthringhauser', 'Jean Claude Castella', 'Horst Owesle', 'Georg Auerbacher', 'Arseneus Butscher', 'Charlie Freedman', 'L Currie', 'Mick Horsepole']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Klaus Enders, Siegfried Schauz, Hans Luthringhauser, Jean Claude Castella, Horst Owesle, Georg Auerbacher, Arseneus Butscher, Charlie Freedman, L Currie, Mick Horsepole","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890",Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Klaus Enders', 'Siegfried Schauz', 'Hans Luthringhauser', 'Jean Claude Castella', 'Horst Owesle', 'Georg Auerbacher', 'Arseneus Butscher', 'Charlie Freedman', 'L Currie', 'Mick Horsepole']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Klaus Enders, Siegfried Schauz, Hans Luthringhauser, Jean Claude Castella, Horst Owesle, Georg Auerbacher, Arseneus Butscher, Charlie Freedman, L Currie, Mick Horsepole","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890",A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Bar,Easy,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Klaus Enders', 'Siegfried Schauz', 'Hans Luthringhauser', 'Jean Claude Castella', 'Horst Owesle', 'Georg Auerbacher', 'Arseneus Butscher', 'Charlie Freedman', 'L Currie', 'Mick Horsepole']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Klaus Enders, Siegfried Schauz, Hans Luthringhauser, Jean Claude Castella, Horst Owesle, Georg Auerbacher, Arseneus Butscher, Charlie Freedman, L Currie, Mick Horsepole","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890",What are the names of climbers and the corresponding heights of the mountains that they climb. Show bar chart.
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2",Show the number of climbers for each mountain in a pie chart.
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2",What is the number of climbers for each mountain? Show me a pie chart.
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2",Show the number of climbers for each mountain in a bar chart.
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2",What is the number of climbers for each mountain? Show me a bar chart.
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",A pie chart for returning the number of the countries of the mountains that have a height larger than 5000.
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",A pie chart for what are the number of the countries of mountains with height bigger than 5000?
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the countries of the mountains that have a height larger than 5000, and count them by a pie chart"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the countries of mountains with height bigger than 5000, and count them by a pie chart"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",Return the number of the countries of the mountains that have a height larger than 5000.
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Pie,Medium,climbing,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",What are the number of the countries of mountains with height bigger than 5000?
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",A bar chart for returning the number of the countries of the mountains that have a height larger than 5000.
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the countries of mountains with height bigger than 5000, and count them by a bar chart"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",Return the number of the countries of the mountains that have a height larger than 5000.
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",What are the number of the countries of mountains with height bigger than 5000?
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2",A bar chart for what are the number of the countries of mountains with height bigger than 5000?
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",Pie,Easy,coffee_shop,"{'chart': 'pie', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['909 Walnut Street', '1201 Walnut Street', '2345 McGee Street', '909 Main Street', '1100 Main Street']], 'y_data': [[27, 34, 425, 28, 23]], 'classify': [], 'describe': ''}",pie,Address,Num_of_staff,"909 Walnut Street, 1201 Walnut Street, 2345 McGee Street, 909 Main Street, 1100 Main Street","27, 34, 425, 28, 23",Find the address and staff number of the shops that do not have any happy hour. Plot them as pie chart.
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",Bar,Easy,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['909 Walnut Street', '1201 Walnut Street', '2345 McGee Street', '909 Main Street', '1100 Main Street']], 'y_data': [[27, 34, 425, 28, 23]], 'classify': [], 'describe': ''}",bar,Address,Num_of_staff,"909 Walnut Street, 1201 Walnut Street, 2345 McGee Street, 909 Main Street, 1100 Main Street","27, 34, 425, 28, 23",Find the address and staff number of the shops that do not have any happy hour. Visualize by bar chart.
"SELECT Address , count(*) FROM member GROUP BY address",Pie,Easy,coffee_shop,"{'chart': 'pie', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",Find the number of members living in each address. Plot them as pie chart.
"SELECT Address , count(*) FROM member GROUP BY address",Pie,Easy,coffee_shop,"{'chart': 'pie', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",pie,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",I want to know the proportion of the number of members for each address.
"SELECT Address , count(*) FROM member GROUP BY address",Bar,Easy,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",Find the number of members living in each address. Show bar chart.
"SELECT Address , count(*) FROM member GROUP BY address",Bar,Easy,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",Bar graph to show the total number from different address
"SELECT Address , COUNT(Address) FROM member GROUP BY Address ORDER BY Time_of_purchase",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'COUNT(Address)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': 'GROUP BY Address'}",bar,Address,COUNT(Address),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",Show the number of purchases for each coffee shop address in a bar chart.
"SELECT Address , AVG(Time_of_purchase) FROM member GROUP BY Address ORDER BY Time_of_purchase",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'AVG(Time_of_purchase)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[26, 35, 21.666666666666668, 27.5]], 'classify': [], 'describe': 'GROUP BY Address'}",bar,Address,AVG(Time_of_purchase),"Bridgeport, Cheshire, Hartford, Waterbury","26, 35, 21.666666666666668, 27.5",A bar chart showing the average purchase time for each coffee shop address.
"SELECT Address , AVG(Age) FROM member GROUP BY Address ORDER BY Time_of_purchase",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'AVG(Age)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[42, 41.5, 38, 49.5]], 'classify': [], 'describe': 'GROUP BY Address'}",bar,Address,AVG(Age),"Bridgeport, Cheshire, Hartford, Waterbury","42, 41.5, 38, 49.5",Show the average age of members for each coffee shop address in a bar chart.
"SELECT Address , COUNT(Address) FROM member GROUP BY Address ORDER BY Time_of_purchase",Pie,Medium,coffee_shop,"{'chart': 'pie', 'x_name': 'Address', 'y_name': 'COUNT(Address)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': 'GROUP BY Address'}",pie,Address,COUNT(Address),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4",Show the number of purchases for each coffee shop address in a pie chart.
"SELECT Time_of_purchase , Age FROM member",Scatter,Easy,coffee_shop,"{'chart': 'scatter', 'x_name': 'Time_of_purchase', 'y_name': 'Age', 'x_data': [[18, 18, 20, 24, 26, 26, 27, 27, 41, 44]], 'y_data': [[29, 35, 34, 45, 33, 42, 51, 51, 67, 50]], 'classify': [], 'describe': ''}",scatter,Time_of_purchase,Age,"18, 18, 20, 24, 26, 26, 27, 27, 41, 44","29, 35, 34, 45, 33, 42, 51, 51, 67, 50",A scatter chart showing the correlation between age and purchase time.
"SELECT Time_of_purchase , Age FROM member",Scatter,Easy,coffee_shop,"{'chart': 'scatter', 'x_name': 'Time_of_purchase', 'y_name': 'Age', 'x_data': [[18, 18, 20, 24, 26, 26, 27, 27, 41, 44]], 'y_data': [[29, 35, 34, 45, 33, 42, 51, 51, 67, 50]], 'classify': [], 'describe': ''}",scatter,Time_of_purchase,Age,"18, 18, 20, 24, 26, 26, 27, 27, 41, 44","29, 35, 34, 45, 33, 42, 51, 51, 67, 50",Show me a scatter plot of time of purchase and age for .
"SELECT Time_of_purchase , Age FROM member GROUP BY Address ORDER BY Time_of_purchase",Grouping Scatter,Medium,coffee_shop,"{'chart': 'scatter', 'x_name': 'Time_of_purchase', 'y_name': 'Age', 'x_data': [[26], [26, 44], [18, 20, 27], [18, 24, 27, 41]], 'y_data': [[42], [33, 50], [29, 34, 51], [35, 45, 51, 67]], 'classify': ['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury'], 'describe': 'GROUP BY Address'}",scatter,Time_of_purchase,Age,26,42,A scatter chart showing the correlation between age and purchase time for each coffee shop.
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",Show all countries and the number of singers in each country by a pie chart.
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",Show all countries and the number of singers in each country. Show the proportion.
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",Display a pie chart for how many singers are from each country?
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",Pie chart. how many singers are from each country?
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",How many singers are from each country. Visualize by pie chart.
"SELECT Country , count(*) FROM singer GROUP BY country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",pie,Country,count(*),"France, Netherlands, United States","4, 1, 1",Compute the total the total number across country as a pie chart.
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",Show all countries and the number of singers in each country in a bar chart.
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",Show all countries and the number of singers in each country. Show bar chart.
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",Return a bar chart on how many singers are from each country?
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",Give me a histogram for how many singers are from each country?
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",How many singers are from each country. 
"SELECT Country , count(*) FROM singer GROUP BY country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1",Draw a bar chart of country versus the total number 
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Pie,Hard,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","What are the names of the singers who performed in a concert in 2014, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Pie,Hard,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","List all singer names in concerts in year 2014, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Pie,Hard,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1",A pie chart for what are the number of the names of the singers who performed in a concert in 2014?
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Pie,Hard,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1",What are the number of the names of the singers who performed in a concert in 2014?
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1",A bar chart for what are the number of the names of the singers who performed in a concert in 2014?
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","What are the names of the singers who performed in a concert in 2014, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1",What are the number of the names of the singers who performed in a concert in 2014?
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","List all singer names in concerts in year 2014, and count them by a bar chart"
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",Show the number of singers in each country with a bar chart.
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",What is the number of singers for each country? Show a bar chart.
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",Give me a bar chart for the number of country of each country
"SELECT Country , AVG(Age) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32",Show the average age of singers for each country with a bar chart.
"SELECT Country , AVG(Age) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32",What is the average age of singers for each country? Visualize with a bar chart.
"SELECT Country , AVG(Age) FROM singer GROUP BY Country",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32",Show the average of age from each country
"SELECT Name , Age FROM singer ORDER BY age DESC",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Joe Sharp', 'John Nizinik', 'Rose White', 'Timbaland', 'Justin Brown', 'Tribal King']], 'y_data': [[52, 43, 41, 32, 29, 25]], 'classify': [], 'describe': ''}",bar,Name,Age,"Joe Sharp, John Nizinik, Rose White, Timbaland, Justin Brown, Tribal King","52, 43, 41, 32, 29, 25",Show the age of each singer in a bar chart from the oldest to the youngest.
"SELECT Name , Age FROM singer ORDER BY age DESC",Bar,Easy,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Joe Sharp', 'John Nizinik', 'Rose White', 'Timbaland', 'Justin Brown', 'Tribal King']], 'y_data': [[52, 43, 41, 32, 29, 25]], 'classify': [], 'describe': ''}",bar,Name,Age,"Joe Sharp, John Nizinik, Rose White, Timbaland, Justin Brown, Tribal King","52, 43, 41, 32, 29, 25",What is the age of every singer? Return a bar chart in descending order of age?
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",Show the number of singers in each country with a pie chart.
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",What is the number of singers for each country? Return a pie chart.
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country",Pie,Easy,concert_singer,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1",Compute the total how many country across country as a pie chart.
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Pie,Medium,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",List singer names and number of concerts for each singer by a pie chart.
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Pie,Medium,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",List singer names and number of concerts for each singer. Show the proportion.
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Pie,Medium,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",Give the proportion of what are the names of the singers and number of concerts for each person?
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Pie,Medium,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",Display a pie chart for what are the names of the singers and number of concerts for each person?
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Pie,Medium,concert_singer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",What are the names of the singers and number of concerts for each person. Show the proportion.
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",List singer names and number of concerts for each singer with a bar chart.
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",List singer names and number of concerts for each singer. 
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",A bar chart about what are the names of the singers and number of concerts for each person?
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",Give me a histogram for what are the names of the singers and number of concerts for each person?
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Timbaland', 'Justin Brown', 'Rose White', 'John Nizinik', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Timbaland, Justin Brown, Rose White, John Nizinik, Tribal King","2, 3, 1, 2, 2",What are the names of the singers and number of concerts for each person. Show bar chart.
"SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'count(*)', 'x_data': [['Free choice', 'Free choice 2', 'Bleeding Love', 'Wide Awake', 'Happy Tonight', 'Party All Night']], 'y_data': [[3, 2, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Theme,count(*),"Free choice, Free choice 2, Bleeding Love, Wide Awake, Happy Tonight, Party All Night","3, 2, 1, 1, 2, 1",What is the number of each theme? Plot as a bar chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Return a bar chart showing the number of templates for each template type code.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",How many templates for each template type code? Show a bar chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show the number of template type code from each template type code
"SELECT Template_ID , Version_Number FROM Templates GROUP BY Template_Type_Code",Grouping Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[14, 19, 21], [4, 8, 9, 11, 20, 23], [15, 16], [0, 1, 18, 22, 24, 25], [6, 7, 10]], 'y_data': [[7, 7, 9], [4, 3, 2, 6, 6, 2], [9, 5], [5, 9, 5, 0, 8, 5], [2, 8, 1]], 'classify': ['AD', 'BK', 'CV', 'PP', 'PPT'], 'describe': 'GROUP BY Template_Type_Code'}",scatter,Template_ID,Version_Number,"14, 19, 21","7, 7, 9",Show me the relationship between version number and template id for all templates in a scatter chart.
"SELECT Template_ID , Version_Number FROM Templates GROUP BY Template_Type_Code",Grouping Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[14, 19, 21], [4, 8, 9, 11, 20, 23], [15, 16], [0, 1, 18, 22, 24, 25], [6, 7, 10]], 'y_data': [[7, 7, 9], [4, 3, 2, 6, 6, 2], [9, 5], [5, 9, 5, 0, 8, 5], [2, 8, 1]], 'classify': ['AD', 'BK', 'CV', 'PP', 'PPT'], 'describe': 'GROUP BY Template_Type_Code'}",scatter,Template_ID,Version_Number,"14, 19, 21","7, 7, 9",What is the relationship between version number and template id for each template? Visualize by a scatter chart.
"SELECT Template_ID , Version_Number FROM Templates GROUP BY Template_Type_Code",Grouping Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[14, 19, 21], [4, 8, 9, 11, 20, 23], [15, 16], [0, 1, 18, 22, 24, 25], [6, 7, 10]], 'y_data': [[7, 7, 9], [4, 3, 2, 6, 6, 2], [9, 5], [5, 9, 5, 0, 8, 5], [2, 8, 1]], 'classify': ['AD', 'BK', 'CV', 'PP', 'PPT'], 'describe': 'GROUP BY Template_Type_Code'}",scatter,Template_ID,Version_Number,"14, 19, 21","7, 7, 9",Show the relation between template id and version_number for each Template_Type_Code using a scatter chart
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",pie,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",How many templates for each template type code? Show me a pie chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",pie,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Tell me the number of templates for each template type code with a pie chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",pie,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",I want to know the proportion of the number of templates for each template type code.
"SELECT Template_ID , Version_Number FROM Templates",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25]], 'y_data': [[5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5]], 'classify': [], 'describe': ''}",scatter,Template_ID,Version_Number,"0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25","5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5",Show the relationship between version number and template id in a scatter chart.
"SELECT Template_ID , Version_Number FROM Templates",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25]], 'y_data': [[5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5]], 'classify': [], 'describe': ''}",scatter,Template_ID,Version_Number,"0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25","5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5",What is the relationship between version number and template id? Give me a scatter chart.
"SELECT Template_ID , Version_Number FROM Templates",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'Version_Number', 'x_data': [[0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25]], 'y_data': [[5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5]], 'classify': [], 'describe': ''}",scatter,Template_ID,Version_Number,"0, 1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25","5, 9, 4, 2, 8, 3, 2, 1, 6, 7, 9, 5, 5, 7, 6, 9, 0, 2, 8, 5",Scatter plot to show template id on x axis and version_number on y axis.
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3",Show all template type codes and the number of documents using each type in a pie chart.
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3",Show all template type codes and the number of documents using each type. 
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","Give the proportion of what are the different template type codes, and how many documents use each type?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","Show me the proportion on what are the different template type codes, and how many documents use each type?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","What are the different template type codes, and how many documents use each type. Plot them as pie chart."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3",Show all template type codes and the number of documents using each type with a bar chart.
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3",Show all template type codes and the number of documents using each type. Visualize by bar chart.
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","what are the different template type codes, and how many documents use each type?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","A bar chart about what are the different template type codes, and how many documents use each type?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","What are the different template type codes, and how many documents use each type. Plot them as bar chart."
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2",Show all template ids and number of documents using each template with a scatter chart.
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2",Show all template ids and number of documents using each template. Show the correlation.
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2","Visualize a scatter chart on what are all different template ids used for documents, and how many times were each of them used?"
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2","Scatter chart. what are all different template ids used for documents, and how many times were each of them used?"
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2","What are all different template ids used for documents, and how many times were each of them used. Visualize by scatter chart."
"SELECT Template_ID , count(*) FROM Documents GROUP BY template_id",Scatter,Easy,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Template_ID', 'y_name': 'count(*)', 'x_data': [[1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25]], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,Template_ID,count(*),"1, 4, 6, 7, 8, 10, 11, 14, 20, 21, 22, 25","1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2",Scatter plot to show template id on x axis and the total number on y axis.
"SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",Show all document ids and the number of paragraphs in each document. Order by document id in a scatter chart
"SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",Show all document ids and the number of paragraphs in each document. Order by document id. Visualize by scatter chart.
"SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1","Return the different document ids along with the number of paragraphs corresponding to each, ordered by id with a scatter chart."
"SELECT Document_ID , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1","Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. Plot them as scatter chart."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Pie,Hard,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",pie,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a pie chart"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Pie,Hard,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",pie,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","Show all paragraph texts for the document ""Customer reviews"", and count them by a pie chart"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Pie,Hard,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",pie,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1",A pie chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Pie,Hard,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",pie,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1",What are the number of the paragraph texts for the document with the name 'Customer reviews'?
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1",A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","Show all paragraph texts for the document ""Customer reviews"", and count them by a bar chart"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1",What are the number of the paragraph texts for the document with the name 'Customer reviews'?
"SELECT T1.Document_ID , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",Show the relationship between document id and the number of paragraphs in each document with a scatter chart.
"SELECT T1.Document_ID , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",Scatter,Medium,cre_Doc_Template_Mgt,"{'chart': 'scatter', 'x_name': 'Document_ID', 'y_name': 'count(*)', 'x_data': [[3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526]], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",scatter,Document_ID,count(*),"3, 80, 2394, 3830, 33930, 50123, 651512, 3540024, 16514113, 385906526","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",What is the relationship between document id and the number of paragraphs in each document? Visualize with a scatter chart.
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Summer Show', 'Welcome to NY', 'Customer reviews', 'Do not panic', 'How Google people work', 'Learning French', 'How to write a CV', 'Palm reading', 'A history of Arts', 'About Korea']], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Summer Show, Welcome to NY, Customer reviews, Do not panic, How Google people work, Learning French, How to write a CV, Palm reading, A history of Arts, About Korea","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",Show the number of documents for each document name in a bar chart.
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Summer Show', 'Welcome to NY', 'Customer reviews', 'Do not panic', 'How Google people work', 'Learning French', 'How to write a CV', 'Palm reading', 'A history of Arts', 'About Korea']], 'y_data': [[1, 2, 3, 1, 1, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Summer Show, Welcome to NY, Customer reviews, Do not panic, How Google people work, Learning French, How to write a CV, Palm reading, A history of Arts, About Korea","1, 2, 3, 1, 1, 1, 2, 1, 2, 1",What is the number of documents for each document name? Return a bar chart.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show all template type codes and number of templates for each in a pie chart.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show all template type codes and number of templates for each. Visualize by pie chart.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Return a pie chart on what are the different template type codes, and how many templates correspond to each?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Show me the proportion on what are the different template type codes, and how many templates correspond to each?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","What are the different template type codes, and how many templates correspond to each. "
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Pie,Easy,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",pie,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",I want to know the proportion of toatal number of templates for each template type code.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show all template type codes and number of templates for each with a bar chart.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show all template type codes and number of templates for each. Visualize by bar chart.
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Return a bar chart on what are the different template type codes, and how many templates correspond to each?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","What are the different template type codes, and how many templates correspond to each. Plot them as bar chart."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3",Show me the total number by template type code in a histogram
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1",How many templates with version number later than 5 for each template type code? Show me a bar chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1",Return a bar chart showing the number of templates with a version number greater than 5 for each template type code.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",pie,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1",How many templates with version number later than 5 for each template type code? Give me a pie chart.
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code",Pie,Medium,cre_Doc_Template_Mgt,"{'chart': 'pie', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",pie,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1",Return a pie chart showing the number of templates with a version number greater than 5 for each template type code.
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['b', 'f', 'h', 'k', 'n', 'r', '', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"b, f, h, k, n, r, , w, y, z","1, 1, 2, 1, 1, 1, 1, 2, 4, 1",List the number of documents for each document description in a bar chart.
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['b', 'f', 'h', 'k', 'n', 'r', '', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"b, f, h, k, n, r, , w, y, z","1, 1, 2, 1, 1, 1, 1, 2, 4, 1",How many documents for each document description? Show me a bar chart.
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description",Bar,Easy,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['b', 'f', 'h', 'k', 'n', 'r', '', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"b, f, h, k, n, r, , w, y, z","1, 1, 2, 1, 1, 1, 1, 2, 4, 1",Bar chart x axis document description y axis how many document description
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",Show the id of each employee and the number of document destruction authorised by that employee by a scatter chart.
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",Show the id of each employee and the number of document destruction authorised by that employee. Show scatter chart.
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",plot scatter on what are the id of each employee and the number of document destruction authorised by that employee?
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",Return a scatter chart on what are the id of each employee and the number of document destruction authorised by that employee?
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",What are the id of each employee and the number of document destruction authorised by that employee. Visualize by scatter chart.
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destruction_Authorised_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[30, 38, 55, 123, 156, 183]], 'y_data': [[1, 1, 3, 1, 2, 3]], 'classify': [], 'describe': ''}",scatter,Destruction_Authorised_by_Employee_ID,count(*),"30, 38, 55, 123, 156, 183","1, 1, 3, 1, 2, 3",Scatter plot to show destruction authorised by employee id on x axis and the total number on y axis.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",pie,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",Show the number of documents for each location code in a pie chart.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",pie,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",How many documents for different location code? Plot a pie chart to show the proportion.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",pie,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",Compute the total the number of location code across location code as a pie chart.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",Show the number of documents for each location code in a bar chart.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",How many documents for different location code? Plot a bar chart to show the proportion.
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5",Bar chart x axis location code y axis how many location code
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5",Show the number of documents in different starting date and group by starting date with a line chart.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5",How many documents in different starting date? Return a line chart grouping by starting date.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5",Plot how many date in location from over date in location from in a line chart
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5",Show the number of documents in different starting date and bin starting date by year interval with a line chart.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5",How many documents in different starting date? Return a line chart binning starting date by year interval.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5",Can you draw the trend of how many date in location from over the date in location from?
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 3, 0, 0, 9, 0, 1]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 3, 0, 0, 9, 0, 1",Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 3, 0, 0, 9, 0, 1]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 3, 0, 0, 9, 0, 1",How many documents in different starting date? Return a bar chart binning starting date by weekday interval.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[2, 3, 0, 0, 9, 0, 1]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","2, 3, 0, 0, 9, 0, 1",Bar chart x axis date in location from y axis the number of date in location from
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1",Show the number of documents in different ending date and group by ending date with a line chart.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1",How many documents in different ending date? Return a line chart grouping by ending date.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1",Can you draw the trend of how many date in locaton to over the date in locaton to?
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1",Show the number of documents in different ending date and bin ending date by year interval with a line chart.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1",How many documents in different ending date? Return a line chart binning ending date by year interval.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1",I want to see trend of the number of date in locaton to by date in locaton to
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 6, 0, 2, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 6, 0, 2, 4, 0, 2",Show the number of documents in different ending date and bin ending date by weekday with a bar chart.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 6, 0, 2, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 6, 0, 2, 4, 0, 2",How many documents in different ending date? Return a bar chart binning ending date by weekday.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 6, 0, 2, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 6, 0, 2, 4, 0, 2",Create a bar chart showing the number of date in locaton to across date in locaton to
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6",Show the number of documents in different starting date. Bin starting date by year interval and group by location code with a group line chart.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6",Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",Stacked Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 2, 0, 0], [0, 1, 0, 0, 3, 0, 0], [0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 2, 0, 1]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 0, 1, 0, 0",Show the number of documents in different starting date. Bin starting date by weekday and group by location code with a stacked bar chart.
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code",Stacked Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 2, 0, 0], [0, 1, 0, 0, 3, 0, 0], [0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 2, 0, 1]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 0, 1, 0, 0",Stacked bar chart of how many date in location from for with each Location_Code in each date in location from
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0",Give me a group line chart showing the number of documents in different ending date. The x-axis is ending date and group by location code.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0",I want to see trend the number of date in locaton to over date in locaton to by Location_Code
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1",Show the number of documents in different ending date. Bin ending date by year interval and group by location code with a group line chart.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1",Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",Stacked Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 1, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 0, 0, 1, 0, 1",Show the number of documents in different ending date. Bin ending date by weekday and group by location code with a stacked bar chart.
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code",Stacked Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 1, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 0, 0, 1, 0, 1",Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",pie,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Show all role codes and the number of employees in each role with a pie chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",pie,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Show all role codes and the number of employees in each role. Show a pie chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",pie,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",A pie chart about what is the code of each role and the number of employees in each role?
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",pie,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",What is the code of each role and the number of employees in each role. Plot them as pie chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",pie,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",I want to know the proportion of employees for each role code.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Show all role codes and the number of employees in each role by a bar chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Show all role codes and the number of employees in each role. Show bar chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Give me a histogram for what is the code of each role and the number of employees in each role?
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Return a histogram on what is the code of each role and the number of employees in each role?
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",What is the code of each role and the number of employees in each role. Show bar chart.
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1",Bar chart x axis role code y axis the total number 
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 5, 0, 1, 3, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 5, 0, 1, 3, 0, 2",Show all calendar dates and bin by weekday in a bar chart.
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 5, 0, 1, 3, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 5, 0, 1, 3, 0, 2",What are all the calendar dates? Show a bar chart binning calendar date by weekday.
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[4, 5, 0, 1, 3, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","4, 5, 0, 1, 3, 0, 2",Bar chart x axis calendar date y axis the number of calendar date
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1",Show all calendar dates and bin by year in a line chart.
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1",What are all the calendar dates? Give me a line chart binning calendar dates by year.
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1",Plot calendar date by how many calendar date as a line chart
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",Show all calendar dates and day Numbers in a line chart.
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",Show all calendar dates and day Numbers. Plot them as line chart.
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",Return a line on what are all the calendar dates and day Numbers?
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",Show me the trend about what are all the calendar dates and day Numbers?
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",What are all the calendar dates and day Numbers. Show the trend.
"SELECT Calendar_Date , Day_Number FROM Ref_calendar",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8",I want to see trend of day_number by calendar date
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Show the location codes and the number of documents in each location with a pie chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Show the location codes and the number of documents in each location. Show a pie chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Show me the proportion on what is the code of each location and the number of documents in that location?
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Pie. what is the code of each location and the number of documents in that location?
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",What is the code of each location and the number of documents in that location. Visualize by pie chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Pie,Easy,cre_Doc_Tracking_DB,"{'chart': 'pie', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",pie,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Give me a pie to show the total number from different location code.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Show the location codes and the number of documents in each location in a bar chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Show the location codes and the number of documents in each location. Visualize by bar chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",what is the code of each location and the number of documents in that location?
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Display a bar chart for what is the code of each location and the number of documents in that location?
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",What is the code of each location and the number of documents in that location. Show bar chart.
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",Bar,Easy,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5",Create a bar chart showing the total number across location code
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",Show the employee ids and the number of documents destroyed by each employee by a scatter chart.
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",Show the employee ids and the number of documents destroyed by each employee. Show the correlation.
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",Draw a scatter chart for what are the id of each employee and the number of document destroyed by that employee?
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",A scatter chart about what are the id of each employee and the number of document destroyed by that employee?
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",What are the id of each employee and the number of document destroyed by that employee. Visualize by scatter chart.
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Scatter,Easy,cre_Doc_Tracking_DB,"{'chart': 'scatter', 'x_name': 'Destroyed_by_Employee_ID', 'y_name': 'count(*)', 'x_data': [[38, 55, 99, 136, 138, 156, 173]], 'y_data': [[1, 1, 2, 2, 1, 1, 3]], 'classify': [], 'describe': ''}",scatter,Destroyed_by_Employee_ID,count(*),"38, 55, 99, 136, 138, 156, 173","1, 1, 2, 2, 1, 1, 3",Show me a scatter plot of destroyed by employee id and the total number for .
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[3, 7, 0, 1, 0, 0, 4]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","3, 7, 0, 1, 0, 0, 4",How many documents are stored? Bin the store date by weekday in a bar chart.
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[3, 7, 0, 1, 0, 0, 4]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","3, 7, 0, 1, 0, 0, 4",Return a bar chart showing the number of documents stored in each weekday.
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012']], 'y_data': [[3, 0, 2, 0, 1, 3, 0, 0, 4, 2]], 'classify': [], 'describe': 'BIN Date_Stored BY YEAR'}",line,Date_Stored,COUNT(Date_Stored),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012","3, 0, 2, 0, 1, 3, 0, 0, 4, 2",Show how many documents are stored and bin by year in a line chart.
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Pie,Easy,customer_complaints,"{'chart': 'pie', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",pie,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Return a pie chart on what is the average price of the products for each category?
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Pie,Easy,customer_complaints,"{'chart': 'pie', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",pie,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Visualize a pie chart with what is the average price of the products for each category?
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Pie,Easy,customer_complaints,"{'chart': 'pie', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",pie,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","What is the average price of the products for each category, Show a pie chart."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Pie,Easy,customer_complaints,"{'chart': 'pie', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",pie,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Return the average price of products that have each category code in a pie chart.
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Pie,Easy,customer_complaints,"{'chart': 'pie', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",pie,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",A pie chart about the average price of products that have each category code.
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",A bar chart about what is the average price of the products for each category?
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Show me a bar chart for what is the average price of the products for each category?
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",What is the average price of the products for each category. 
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Return the average price of products that have each category code in a bar chart.
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Return the average price of products that have each category code. 
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",Bar,Easy,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67",Bar graph to show the average of product price from different product category code
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Pie,Medium,customer_complaints,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4",List the name of all products along with the number of complaints that they have received in a pie chart.
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Pie,Medium,customer_complaints,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4",List the name of all products along with the number of complaints that they have received. Show a pie chart.
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Pie,Medium,customer_complaints,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","Return a pie chart on what are all the different product names, and how many complains has each received?"
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Pie,Medium,customer_complaints,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","Display a pie chart for what are all the different product names, and how many complains has each received?"
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Pie,Medium,customer_complaints,"{'chart': 'pie', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","What are all the different product names, and how many complains has each received. Show the proportion."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4",List the name of all products along with the number of complaints that they have received with a bar chart.
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4",List the name of all products along with the number of complaints that they have received. 
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","Draw a bar chart for what are all the different product names, and how many complains has each received?"
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","what are all the different product names, and how many complains has each received?"
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","What are all the different product names, and how many complains has each received. Show bar chart."
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2",Show the account id and the number of transactions for each accoun in a scatter chart
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2",Show the account id and the number of transactions for each accoun. Show scatter chart.
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2","Scatter chart. what are the different account ids that have made financial transactions, as well as how many transactions correspond to each?"
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2","Visualize a scatter chart on what are the different account ids that have made financial transactions, as well as how many transactions correspond to each?"
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2","What are the different account ids that have made financial transactions, as well as how many transactions correspond to each. Show the correlation."
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'count(*)', 'x_data': [[1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",scatter,account_id,count(*),"1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15","1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2",Show me a scatter plot of account id and the total number for .
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id GROUP BY customer_last_name",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Turcotte', 'Wiza']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Huels, Langworth, Lind, Rath, Schinner, Turcotte, Wiza","2, 1, 1, 1, 1, 1, 1, 1",Give me a bar chart showing the number of customers who has an account for each customer last name.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",pie,transaction_type,count(*),"Payment, Refund","6, 9",Show the transaction type and the number of transactions by a pie chart.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",pie,transaction_type,count(*),"Payment, Refund","6, 9",Show the transaction type and the number of transactions. Show the proportion.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",pie,transaction_type,count(*),"Payment, Refund","6, 9","Pie chart. what are the different transaction types, and how many transactions of each have taken place?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",pie,transaction_type,count(*),"Payment, Refund","6, 9","What are the different transaction types, and how many transactions of each have taken place. Plot them as pie chart."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",pie,transaction_type,count(*),"Payment, Refund","6, 9",I want to know the proportion of the total number for each transaction type.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9",Show the transaction type and the number of transactions by a bar chart.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9",Show the transaction type and the number of transactions. Plot them as bar chart.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Return a histogram on what are the different transaction types, and how many transactions of each have taken place?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","What are the different transaction types, and how many transactions of each have taken place. Show bar chart."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9",Draw a bar chart of transaction type versus the total number 
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",Show the number of customers for different customer last name in a bar chart.
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",How many customers for different customer last name? Draw a bar chart.
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",Bar chart x axis customer last name y axis how many customer last name
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",pie,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",Show the number of cards in different card type code in a pie chart.
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",pie,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",How many cards in different card type code? Plot a pie chart.
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",pie,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",Create a pie chart showing how many card type code across card type code.
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",Show the number of cards in different card type code in a bar chart.
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",How many cards in different card type code? Plot a bar chart.
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8",Show me the number of card type code by card type code in a histogram
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200",卡号求和无意义
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","What are card ids, customer ids, card types, and card numbers for each customer card?"
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200",Bar graph to show sum card number from different card type code
"SELECT card_id , customer_id FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 4, 5, 7, 8, 13], [3, 6, 9, 10, 11, 12, 14, 15]], 'y_data': [[14, 9, 15, 13, 9, 12, 2], [6, 10, 3, 10, 8, 3, 5, 2]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,card_id,customer_id,"1, 2, 4, 5, 7, 8, 13","14, 9, 15, 13, 9, 12, 2",Show the relationship between card id and customer id and group by card type code in a group scatter chart.
"SELECT card_id , customer_id FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 4, 5, 7, 8, 13], [3, 6, 9, 10, 11, 12, 14, 15]], 'y_data': [[14, 9, 15, 13, 9, 12, 2], [6, 10, 3, 10, 8, 3, 5, 2]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,card_id,customer_id,"1, 2, 4, 5, 7, 8, 13","14, 9, 15, 13, 9, 12, 2",Scatterplot of customer_id vs card id by card_type_code
"SELECT card_id , card_number FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 4, 5, 7, 8, 13], [3, 6, 9, 10, 11, 12, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483], [348237249146948, 5102229294602335, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 4929384762825, 345475370003028]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,card_id,card_number,"1, 2, 4, 5, 7, 8, 13","4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483",Show the relationship between card id and card number and group by card type code in a group scatter chart.
"SELECT card_id , card_number FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 4, 5, 7, 8, 13], [3, 6, 9, 10, 11, 12, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483], [348237249146948, 5102229294602335, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 4929384762825, 345475370003028]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,card_id,card_number,"1, 2, 4, 5, 7, 8, 13","4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483","What are card ids, customer ids, card types, and card numbers for each customer card?"
"SELECT card_id , card_number FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 4, 5, 7, 8, 13], [3, 6, 9, 10, 11, 12, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483], [348237249146948, 5102229294602335, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 4929384762825, 345475370003028]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,card_id,card_number,"1, 2, 4, 5, 7, 8, 13","4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483",Scatterplot of card_number vs card id by card_type_code
"SELECT customer_id , card_number FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'card_number', 'x_data': [[14, 9, 15, 13, 9, 12, 2], [6, 10, 3, 10, 8, 3, 5, 2]], 'y_data': [[4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483], [348237249146948, 5102229294602335, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 4929384762825, 345475370003028]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,customer_id,card_number,"14, 9, 15, 13, 9, 12, 2","4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483",Show the relationship between card number and customer id and group by card type code in a group scatter chart.
"SELECT customer_id , card_number FROM Customers_cards GROUP BY card_type_code",Grouping Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'card_number', 'x_data': [[14, 9, 15, 13, 9, 12, 2], [6, 10, 3, 10, 8, 3, 5, 2]], 'y_data': [[4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483], [348237249146948, 5102229294602335, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 4929384762825, 345475370003028]], 'classify': ['Credit', 'Debit'], 'describe': 'GROUP BY card_type_code'}",scatter,customer_id,card_number,"14, 9, 15, 13, 9, 12, 2","4560596484842, 4859448397570735, 4485460762694, 5122249720639438, 4716674779726, 6011225247353230, 5484846021884483",Scatterplot of card_number vs customer id by card_type_code
"SELECT card_id , customer_id FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'classify': [], 'describe': ''}",scatter,card_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2",Show the relationship between customer id and card id with a scatter chart.
"SELECT card_id , customer_id FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'classify': [], 'describe': ''}",scatter,card_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2",What is the relationship between customer id and card id? Return a scatter chart.
"SELECT card_id , customer_id FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'classify': [], 'describe': ''}",scatter,card_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2",Scatter plot to show card id on x axis and customer_id on y axis.
"SELECT card_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,card_id,card_number,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028",Show the relationship between card number and card id with a scatter chart.
"SELECT card_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,card_id,card_number,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028",What is the relationship between card number and card id? Return a scatter chart.
"SELECT card_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'card_id', 'y_name': 'card_number', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,card_id,card_number,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028",Show me a scatter plot of card id and card_number for .
"SELECT customer_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'card_number', 'x_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,customer_id,card_number,"14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028",Show the relationship between customer id and card number with a scatter chart.
"SELECT customer_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'card_number', 'x_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,customer_id,card_number,"14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028",What is the relationship between customer id and card number? Return a scatter chart.
"SELECT customer_id , card_number FROM Customers_cards",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'card_number', 'x_data': [[14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2]], 'y_data': [[4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028]], 'classify': [], 'describe': ''}",scatter,customer_id,card_number,"14, 9, 6, 15, 13, 10, 9, 12, 3, 10, 8, 3, 2, 5, 2","4560596484842, 4859448397570735, 348237249146948, 4485460762694, 5122249720639438, 5102229294602335, 4716674779726, 6011225247353230, 4929590358481, 4532488235104, 4707949584519, 4929896676202959, 5484846021884483, 4929384762825, 345475370003028","Plot a scatter chart, customer id by card_number."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Pie,Medium,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8",Show the card type codes and the number of transactions in a pie chart.
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Pie,Medium,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8",Show the card type codes and the number of transactions. Visualize by pie chart.
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Pie,Medium,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","Show me a pie chart for what are the different card types, and how many transactions have been made with each?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Pie,Medium,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","what are the different card types, and how many transactions have been made with each?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Pie,Medium,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many transactions have been made with each. Show a pie chart."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8",Show the card type codes and the number of transactions with a bar chart.
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8",Show the card type codes and the number of transactions. Visualize by bar chart.
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","what are the different card types, and how many transactions have been made with each?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a bar chart on what are the different card types, and how many transactions have been made with each?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many transactions have been made with each. Visualize by bar chart."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8",Show all card type codes and the number of cards in each type in a pie chart.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8",Show all card type codes and the number of cards in each type. 
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","Visualize a pie chart with what are the different card types, and how many cards are there of each?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","Pie. what are the different card types, and how many cards are there of each?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many cards are there of each. Show a pie chart."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Pie,Easy,customers_card_transactions,"{'chart': 'pie', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",pie,card_type_code,count(*),"Credit, Debit","7, 8",Give me a pie to show the total number from different card type code.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8",Show all card type codes and the number of cards in each type by a bar chart.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8",Show all card type codes and the number of cards in each type. Plot them as bar chart.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Display a bar chart for what are the different card types, and how many cards are there of each?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a histogram on what are the different card types, and how many cards are there of each?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many cards are there of each. "
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Bar,Easy,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8",Bar chart x axis card type code y axis the total number 
"SELECT account_id , customer_id FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'classify': [], 'describe': ''}",scatter,account_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4",Show the relationship between customer id and account id in a scatter chart.
"SELECT account_id , customer_id FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'classify': [], 'describe': ''}",scatter,account_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4",What is the relationship between customer id and account id? Show me a scatter chart.
"SELECT account_id , customer_id FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'customer_id', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'classify': [], 'describe': ''}",scatter,account_id,customer_id,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4",Scatter plot to show account id on x axis and customer_id on y axis.
"SELECT account_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,account_id,account_name,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725",Show the relationship between account name and account id in a scatter chart.
"SELECT account_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,account_id,account_name,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725",What is the relationship between account name and account id? Show me a scatter chart.
"SELECT account_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'account_id', 'y_name': 'account_name', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,account_id,account_name,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725","Plot a scatter chart, account id by account_name."
"SELECT customer_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'account_name', 'x_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,customer_id,account_name,"6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725",What is the relationship between customer id and account name? Show me a scatter chart.
"SELECT customer_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'account_name', 'x_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,customer_id,account_name,"6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725",Show the relationship between customer id and account name in a scatter chart.
"SELECT customer_id , account_name FROM Accounts",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'account_name', 'x_data': [[6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4]], 'y_data': [[338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725]], 'classify': [], 'describe': ''}",scatter,customer_id,account_name,"6, 14, 9, 12, 13, 12, 9, 8, 9, 4, 4, 2, 10, 9, 4","338, 562, 162, 38, 858, 262, 621, 381, 546, 767, 22, 866, 234, 557, 725","Plot a scatter chart, customer id by account_name."
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",Show all customer ids and the number of accounts for each customer with a scatter chart.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",Show all customer ids and the number of accounts for each customer. Show the correlation.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",Draw a scatter chart for how many accounts are there for each customer id?
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",Visualize a scatter chart on how many accounts are there for each customer id?
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",How many accounts are there for each customer id. Plot them as scatter chart.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 4, 6, 8, 9, 10, 12, 13, 14]], 'y_data': [[1, 3, 1, 1, 4, 1, 2, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 4, 6, 8, 9, 10, 12, 13, 14","1, 3, 1, 1, 4, 1, 2, 1, 1",Show me a scatter plot of customer id and the total number for .
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1",Show all customer ids and the number of cards owned by each customer with a scatter chart.
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1",Show all customer ids and the number of cards owned by each customer. Show the correlation.
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1","Show me a scatter chart for what are the different customer ids, and how many cards does each one hold?"
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1","Draw a scatter chart for what are the different customer ids, and how many cards does each one hold?"
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1","What are the different customer ids, and how many cards does each one hold. Plot them as scatter chart."
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Scatter,Easy,customers_card_transactions,"{'chart': 'scatter', 'x_name': 'customer_id', 'y_name': 'count(*)', 'x_data': [[2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15]], 'y_data': [[2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,customer_id,count(*),"2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15","2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1","Plot a scatter chart, customer id by the total number ."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",Pie,Extra Hard,entertainment_awards,"{'chart': 'pie', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",pie,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5",Show the ids and names of festivals that have at least two nominations for artworks with a pie chart.
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",Pie,Extra Hard,entertainment_awards,"{'chart': 'pie', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",pie,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5",Show the ids and names of festivals that have at least two nominations for artworks. Show a pie chart.
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",Bar,Extra Hard,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5",Show the ids and names of festivals that have at least two nominations for artworks by a bar chart.
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",Bar,Extra Hard,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5",Show the ids and names of festivals that have at least two nominations for artworks. Plot them as bar chart.
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE",Pie,Easy,entertainment_awards,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",pie,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2",
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE",Pie,Easy,entertainment_awards,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",pie,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2",Create a pie chart showing the total number across type.
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE",Bar,Easy,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2",
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE",Bar,Easy,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2",Show the total number from each type
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title",Stacked Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'ET the Extra-Terrestrial', 'Rocky III', 'Tootsie']], 'y_data': [[1, 0, 0, 0], [0, 2, 3, 1], [0, 1, 1, 0]], 'classify': ['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder'], 'describe': 'GROUP BY Type, GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, ET the Extra-Terrestrial, Rocky III, Tootsie","1, 0, 0, 0",Use a stacked bar chart to show how many films for each title and each type. The x-axis is title.
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2",Please show the number of films for each type in a bar chart.
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2",How many films for each type? Return a bar chart.
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title",Pie,Medium,film_rank,"{'chart': 'pie', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'ET the Extra-Terrestrial', 'Rocky III', 'Tootsie']], 'y_data': [[1, 3, 4, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",pie,Title,COUNT(Title),"An Officer and a Gentleman, ET the Extra-Terrestrial, Rocky III, Tootsie","1, 3, 4, 1","For each title, show the number of films in a pie chart."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'ET the Extra-Terrestrial', 'Rocky III', 'Tootsie']], 'y_data': [[1, 3, 4, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, ET the Extra-Terrestrial, Rocky III, Tootsie","1, 3, 4, 1","For each title, use a bar chart to show the number of films."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",Pie,Medium,film_rank,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",pie,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2",Show the number of films for each type in a pie chart.
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",Pie,Medium,film_rank,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",pie,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2",How many films in each type? Show me a pie chart.
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 0, 0, 2, 1","What are the number of the years of film market estimation for the market of Japan, ordered by year descending?"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 0, 0, 2, 1","A bar chart for what are the number of the years of film market estimation for the market of Japan, ordered by year descending?"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 0, 0, 2, 1","Please list the years of film market estimations when the market is in country ""Japan"" in descending order, and count them by a bar chart"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 0, 0, 0, 2, 1","What are the years of film market estimation for the market of Japan, ordered by year descending, and count them by a bar chart"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Line,Extra Hard,film_rank,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['1945~1950', '1951~1956', '1957~1962', '1963~1968', '1969~1974', '1975~1980', '1981~1986', '1987~1992', '1993~1998', '1999~2000']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"1945~1950, 1951~1956, 1957~1962, 1963~1968, 1969~1974, 1975~1980, 1981~1986, 1987~1992, 1993~1998, 1999~2000","1, 0, 0, 0, 0, 1, 0, 0, 1, 1","What are the number of the years of film market estimation for the market of Japan, ordered by year descending?"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Line,Extra Hard,film_rank,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['1945~1950', '1951~1956', '1957~1962', '1963~1968', '1969~1974', '1975~1980', '1981~1986', '1987~1992', '1993~1998', '1999~2000']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"1945~1950, 1951~1956, 1957~1962, 1963~1968, 1969~1974, 1975~1980, 1981~1986, 1987~1992, 1993~1998, 1999~2000","1, 0, 0, 0, 0, 1, 0, 0, 1, 1","What are the years of film market estimation for the market of Japan, ordered by year descending, and count them by a line chart"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Line,Extra Hard,film_rank,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['1945~1950', '1951~1956', '1957~1962', '1963~1968', '1969~1974', '1975~1980', '1981~1986', '1987~1992', '1993~1998', '1999~2000']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"1945~1950, 1951~1956, 1957~1962, 1963~1968, 1969~1974, 1975~1980, 1981~1986, 1987~1992, 1993~1998, 1999~2000","1, 0, 0, 0, 0, 1, 0, 0, 1, 1","Please list the years of film market estimations when the market is in country ""Japan"" in descending order, and count them by a line chart"
"SELECT Year , COUNT(Year) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan""  ORDER BY T1.Year DESC",Line,Extra Hard,film_rank,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['1945~1950', '1951~1956', '1957~1962', '1963~1968', '1969~1974', '1975~1980', '1981~1986', '1987~1992', '1993~1998', '1999~2000']], 'y_data': [[1, 0, 0, 0, 0, 1, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY YEAR'}",line,Year,COUNT(Year),"1945~1950, 1951~1956, 1957~1962, 1963~1968, 1969~1974, 1975~1980, 1981~1986, 1987~1992, 1993~1998, 1999~2000","1, 0, 0, 0, 0, 1, 0, 0, 1, 1","A line chart for what are the number of the years of film market estimation for the market of Japan, ordered by year descending?"
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16",Draw a scatter chart for what are the low and high estimates of film markets?
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16",Return a scatter on what are the low and high estimates of film markets?
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16",What are the low and high estimates of film markets. Visualize by scatter chart.
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16",Return the low and high estimates for all film markets in a scatter chart
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16",Return the low and high estimates for all film markets. Show scatter chart.
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Scatter,Easy,film_rank,"{'chart': 'scatter', 'x_name': 'Low_Estimate', 'y_name': 'High_Estimate', 'x_data': [[80000, 8000, 3000, 960, 913, 300, 53, 39, 16]], 'y_data': [[80400, 8000, 80400, 960, 913, 1000, 53, 39, 16]], 'classify': [], 'describe': ''}",scatter,Low_Estimate,High_Estimate,"80000, 8000, 3000, 960, 913, 300, 53, 39, 16","80400, 8000, 80400, 960, 913, 1000, 53, 39, 16","Plot a scatter chart, low estimate by high_estimate."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",List the studios of each film and the number of films produced by that studio by a bar chart.
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",List the studios of each film and the number of films produced by that studio. Show bar chart.
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",Visualize a bar chart for how films are produced by each studio?
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",A bar chart about how films are produced by each studio?
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",How films are produced by each studio. Show bar chart.
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Bar,Easy,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1",Show me the total number by studio in a histogram
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",Show all sport name and the number of students in a bar chart.
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",Show all sport name and the number of students. Show bar chart.
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",Give me a histogram for how many students play each sport?
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",Visualize a bar chart for how many students play each sport?
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",How many students play each sport. Show bar chart.
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname",Bar,Easy,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2",Bar chart x axis sportname y axis the total number 
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337",Show all game ids and the number of hours played by a scatter chart.
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337",Show all game ids and the number of hours played. Visualize by scatter chart.
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337",A scatter chart about what are ids and total number of hours played for each game?
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337",Scatter. what are ids and total number of hours played for each game?
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337",What are ids and total number of hours played for each game. 
"SELECT GameID , sum(hours_played) FROM Plays_games GROUP BY gameid",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'GameID', 'y_name': 'sum(hours_played)', 'x_data': [[1, 2, 3, 4, 5, 6]], 'y_data': [[82, 25, 150, 1000, 51, 1337]], 'classify': [], 'describe': ''}",scatter,GameID,sum(hours_played),"1, 2, 3, 4, 5, 6","82, 25, 150, 1000, 51, 1337","Plot a scatter chart, gameid by sum hours played."
"SELECT avg(age) , max(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'max(age)', 'x_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'y_data': [[26, 17, 22, 18, 21, 27]], 'classify': [], 'describe': ''}",scatter,avg(age),max(age),"22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668","26, 17, 22, 18, 21, 27",Show the relationship between average age and maximum age in a scatter chart.
"SELECT avg(age) , max(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'max(age)', 'x_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'y_data': [[26, 17, 22, 18, 21, 27]], 'classify': [], 'describe': ''}",scatter,avg(age),max(age),"22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668","26, 17, 22, 18, 21, 27","Plot a scatter chart, avg(age) by maximal age."
"SELECT avg(age) , min(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'min(age)', 'x_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'y_data': [[18, 17, 18, 17, 18, 16]], 'classify': [], 'describe': ''}",scatter,avg(age),min(age),"22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668","18, 17, 18, 17, 18, 16",Show the relationship between average age and minimum age in a scatter chart.
"SELECT avg(age) , min(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'avg(age)', 'y_name': 'min(age)', 'x_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'y_data': [[18, 17, 18, 17, 18, 16]], 'classify': [], 'describe': ''}",scatter,avg(age),min(age),"22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668","18, 17, 18, 17, 18, 16",Scatter plot to show avg(age) on x axis and minimal age on y axis.
"SELECT Major , min(age) FROM Student GROUP BY Major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'min(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[18, 17, 18, 17, 18, 16]], 'classify': [], 'describe': ''}",scatter,Major,min(age),"50, 100, 520, 540, 550, 600","18, 17, 18, 17, 18, 16",Return a scatter chart showing the relationship between major id and minimum age.
"SELECT Major , min(age) FROM Student GROUP BY Major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'min(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[18, 17, 18, 17, 18, 16]], 'classify': [], 'describe': ''}",scatter,Major,min(age),"50, 100, 520, 540, 550, 600","18, 17, 18, 17, 18, 16",Scatter plot to show major on x axis and minimal age on y axis.
"SELECT Major , avg(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'avg(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'classify': [], 'describe': ''}",scatter,Major,avg(age),"50, 100, 520, 540, 550, 600","22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668",Return a scatter chart showing the relationship between major id and average age.
"SELECT Major , avg(age) FROM Student GROUP BY major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'avg(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668]], 'classify': [], 'describe': ''}",scatter,Major,avg(age),"50, 100, 520, 540, 550, 600","22, 17, 19.33333333333333, 17.5, 19.8, 19.666666666666668",Show me a scatter plot of major and the average of age for .
"SELECT min(age) , max(age) , major FROM Student GROUP BY major",Grouping Scatter,Medium,game_1,"{'chart': 'scatter', 'x_name': 'min(age)', 'y_name': 'max(age)', 'x_data': [[18], [17], [18], [17], [18], [16]], 'y_data': [[26], [17], [22], [18], [21], [27]], 'classify': [50, 100, 520, 540, 550, 600], 'describe': 'GROUP BY major'}",scatter,min(age),max(age),18,26,Show the relationship between maximum age and minimum age for different majors in a scatter chart.
"SELECT min(age) , max(age) , major FROM Student GROUP BY major",Grouping Scatter,Medium,game_1,"{'chart': 'scatter', 'x_name': 'min(age)', 'y_name': 'max(age)', 'x_data': [[18], [17], [18], [17], [18], [16]], 'y_data': [[26], [17], [22], [18], [21], [27]], 'classify': [50, 100, 520, 540, 550, 600], 'describe': 'GROUP BY major'}",scatter,min(age),max(age),18,26,Scatter plot to show min(age) on x axis and maximal age on y axis for different majors.
"SELECT Major , max(age) FROM Student GROUP BY Major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'max(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[26, 17, 22, 18, 21, 27]], 'classify': [], 'describe': ''}",scatter,Major,max(age),"50, 100, 520, 540, 550, 600","26, 17, 22, 18, 21, 27",Return a scatter chart showing the relationship between major id and maximum age.
"SELECT Major , max(age) FROM Student GROUP BY Major",Scatter,Easy,game_1,"{'chart': 'scatter', 'x_name': 'Major', 'y_name': 'max(age)', 'x_data': [[50, 100, 520, 540, 550, 600]], 'y_data': [[26, 17, 22, 18, 21, 27]], 'classify': [], 'describe': ''}",scatter,Major,max(age),"50, 100, 520, 540, 550, 600","26, 17, 22, 18, 21, 27","Plot a scatter chart, major by maximal age."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName",Bar,Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1",A bar chart for what are the number of the last names for all scholarship students?
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName",Bar,Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","Show last names for all student who are on scholarship, and count them by a bar chart"
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName",Bar,Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1",What are the number of the last names for all scholarship students?
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName",Bar,Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","What are the last names for all scholarship students, and count them by a bar chart"
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",pie,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",List all headquarters and the number of companies in each headquarter in a pie chart.
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",pie,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",List all headquarters and the number of companies in each headquarter. Show a pie chart.
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",pie,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","For each headquarter, what are the headquarter and how many companies are centered there. Show the proportion."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",pie,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Give me a pie to show the total number from different headquarters.
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",List all headquarters and the number of companies in each headquarter with a bar chart.
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",List all headquarters and the number of companies in each headquarter. 
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","For each headquarter, what are the headquarter and how many companies are centered there. Visualize by bar chart."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Bar chart of the total number from each headquarters
"SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[5, 9, 6]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","5, 9, 6",Find the rank of the companies in the banking industry order by their sales and profits in billion with a bar chart.
"SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[5, 9, 6]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","5, 9, 6",What is the rank every company in the banking industry ordered by sales and profits? Show a bar chart.
"SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Company', 'y_name': 'Market_Value', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[237.4, 178.7, 164.3]], 'classify': [], 'describe': ''}",pie,Company,Market_Value,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","237.4, 178.7, 164.3",Find the market values of the companies in the banking industry with a pie chart.
"SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Company', 'y_name': 'Market_Value', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[237.4, 178.7, 164.3]], 'classify': [], 'describe': ''}",pie,Company,Market_Value,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","237.4, 178.7, 164.3",What is the market value of every comapny in the banking industry? Return a pie chart.
"SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Market_Value', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[237.4, 178.7, 164.3]], 'classify': [], 'describe': ''}",bar,Company,Market_Value,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","237.4, 178.7, 164.3",Find the market values of the companies in the banking industry order by their sales and profits in billion with a bar chart.
"SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Market_Value', 'x_data': [['Industrial and Commercial Bank of China', 'Wells Fargo', 'HSBC']], 'y_data': [[237.4, 178.7, 164.3]], 'classify': [], 'describe': ''}",bar,Company,Market_Value,"Industrial and Commercial Bank of China, Wells Fargo, HSBC","237.4, 178.7, 164.3",What is the market value of every comapny in the banking industry ordered by sales and profits? Return a bar chart.
"SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking'",Scatter,Easy,gas_company,"{'chart': 'scatter', 'x_name': 'Rank', 'y_name': 'Market_Value', 'x_data': [[5, 9, 6]], 'y_data': [[237.4, 178.7, 164.3]], 'classify': [], 'describe': ''}",scatter,Rank,Market_Value,"5, 9, 6","237.4, 178.7, 164.3",Show the relationship between the rank and market values of the companies in the banking industry with a scatter chart.
"SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company",Grouping Scatter,Medium,gas_company,"{'chart': 'scatter', 'x_name': 'Rank', 'y_name': 'Market_Value', 'x_data': [[6], [5], [9]], 'y_data': [[164.3], [237.4], [178.7]], 'classify': ['HSBC', 'Industrial and Commercial Bank of China', 'Wells Fargo'], 'describe': 'GROUP BY Company'}",scatter,Rank,Market_Value,6,164.3,Show the relationship between the rank and market values of the companies in the banking industry and group by company with a group scatter chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",pie,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4",Show the number of companies whose headquarters are not from USA fpr each main industry in a pie chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",pie,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4",How many companies that are not headquartered in the United States for each main industry? Show me a pie chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4",Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4",How many companies that are not headquartered in the United States for each main industry? Show me a bar chart.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",pie,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Show all main industry and total market value in each industry in a pie chart.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",pie,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Draw a pie chart to show all main industry and total market value in each industry.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",pie,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Show me a pie chart for what are the main indstries and total market value for each industry?
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",pie,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",What are the main indstries and total market value for each industry. Plot them as pie chart.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",pie,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",I want to know the proportion of the sum market value for each main industry.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Show all main industry and total market value in each industry by a bar chart.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Show all main industry and total market value in each industry. 
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",what are the main indstries and total market value for each industry?
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",A bar chart about what are the main indstries and total market value for each industry?
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",What are the main indstries and total market value for each industry. Visualize by bar chart.
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1",Draw a bar chart of main industry versus total number of market value
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",pie,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2",Show the number of companies without a gas station in each main industry with a pie chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",pie,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2",How many companies without a gas station in each main industry? Draw a pie chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2",Show the number of companies without a gas station in each main industry with a bar chart.
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2",How many companies without a gas station in each main industry? Draw a bar chart.
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1",Show the number of gas stations for each manager in a bar chart.
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1",How many gas stations dors each manager have? Plot a bar chart.
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1",Draw a bar chart of manager name versus how many manager name
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1",Show the company name with the number of gas station in a pie chart.
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1",Show the company name with the number of gas station. 
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Pie,Medium,gas_company,"{'chart': 'pie', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1","For each company id, what are the companies and how many gas stations does each one operate. Show the proportion."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1",Show the company name with the number of gas station by a bar chart.
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1",Show the company name with the number of gas station. Show bar chart.
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'PetroChina', 'Petrobras', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, PetroChina, Petrobras, BP","2, 1, 1, 1, 1","For each company id, what are the companies and how many gas stations does each one operate. Plot them as bar chart."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",pie,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Show the number of companies in each headquarter with a pie chart.
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",pie,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",How many companies in each headquarter? Plot a pie chart.
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Pie,Easy,gas_company,"{'chart': 'pie', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",pie,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Create a pie chart showing how many headquarters across headquarters.
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Show the number of companies in each headquarter with a bar chart.
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",How many companies in each headquarter? Plot a bar chart.
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4",Bar chart of how many headquarters from each headquarters
"SELECT Company , Rank FROM company ORDER BY Sales_billion DESC",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Royal Dutch Shell', 'ExxonMobil', 'BP', 'PetroChina', 'General Electric', 'Petrobras', 'Berkshire Hathaway', 'HSBC', 'Wells Fargo', 'Industrial and Commercial Bank of China']], 'y_data': [[4, 1, 11, 7, 3, 10, 8, 6, 9, 5]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Royal Dutch Shell, ExxonMobil, BP, PetroChina, General Electric, Petrobras, Berkshire Hathaway, HSBC, Wells Fargo, Industrial and Commercial Bank of China","4, 1, 11, 7, 3, 10, 8, 6, 9, 5",List the company name and rank for all companies in the decreasing order of their sales in a bar chart.
"SELECT Company , Rank FROM company ORDER BY Sales_billion DESC",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Royal Dutch Shell', 'ExxonMobil', 'BP', 'PetroChina', 'General Electric', 'Petrobras', 'Berkshire Hathaway', 'HSBC', 'Wells Fargo', 'Industrial and Commercial Bank of China']], 'y_data': [[4, 1, 11, 7, 3, 10, 8, 6, 9, 5]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Royal Dutch Shell, ExxonMobil, BP, PetroChina, General Electric, Petrobras, Berkshire Hathaway, HSBC, Wells Fargo, Industrial and Commercial Bank of China","4, 1, 11, 7, 3, 10, 8, 6, 9, 5",List the company name and rank for all companies in the decreasing order of their sales. Visualize by bar chart.
"SELECT Company , Rank FROM company ORDER BY Sales_billion DESC",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Royal Dutch Shell', 'ExxonMobil', 'BP', 'PetroChina', 'General Electric', 'Petrobras', 'Berkshire Hathaway', 'HSBC', 'Wells Fargo', 'Industrial and Commercial Bank of China']], 'y_data': [[4, 1, 11, 7, 3, 10, 8, 6, 9, 5]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Royal Dutch Shell, ExxonMobil, BP, PetroChina, General Electric, Petrobras, Berkshire Hathaway, HSBC, Wells Fargo, Industrial and Commercial Bank of China","4, 1, 11, 7, 3, 10, 8, 6, 9, 5",Visualize a bar chart for what is the name and rank of every company ordered by descending number of sales?
"SELECT Company , Rank FROM company ORDER BY Sales_billion DESC",Bar,Easy,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'Rank', 'x_data': [['Royal Dutch Shell', 'ExxonMobil', 'BP', 'PetroChina', 'General Electric', 'Petrobras', 'Berkshire Hathaway', 'HSBC', 'Wells Fargo', 'Industrial and Commercial Bank of China']], 'y_data': [[4, 1, 11, 7, 3, 10, 8, 6, 9, 5]], 'classify': [], 'describe': ''}",bar,Company,Rank,"Royal Dutch Shell, ExxonMobil, BP, PetroChina, General Electric, Petrobras, Berkshire Hathaway, HSBC, Wells Fargo, Industrial and Commercial Bank of China","4, 1, 11, 7, 3, 10, 8, 6, 9, 5",What is the name and rank of every company ordered by descending number of sales. Show bar chart.
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Visualize a pie chart with what are the hometowns of gymnasts and the corresponding number of gymnasts?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Show me a pie chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",What are the hometowns of gymnasts and the corresponding number of gymnasts. Show a pie chart.
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Display a pie chart for how many gymnasts are from each hometown?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Visualize a pie chart with how many gymnasts are from each hometown?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Pie,Medium,gymnast,"{'chart': 'pie', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",pie,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",How many gymnasts are from each hometown. Show the proportion.
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",What are the hometowns of gymnasts and the corresponding number of gymnasts. 
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Return a bar chart on how many gymnasts are from each hometown?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",Show me a bar chart for how many gymnasts are from each hometown?
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Bar,Medium,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4",How many gymnasts are from each hometown. Plot them as bar chart.
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name",Pie,Hard,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Psychiatry', 'Surgery']], 'y_data': [[5, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"General Medicine, Psychiatry, Surgery","5, 1, 3",Show how many physicians for each department name they primarily affiliated in a pie chart.
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Psychiatry', 'Surgery']], 'y_data': [[5, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Psychiatry, Surgery","5, 1, 3",Give me a bar chart showing how many physicians for each department name they primarily affiliated in.
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Psychiatry', 'Surgery']], 'y_data': [[5, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Psychiatry, Surgery","5, 1, 3",What are the name and primarily affiliated department name of each physician?
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","What are the names of all the physicians who took appointments, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2",List the number of the name of physicians who took some appointment.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","List the name of physicians who took some appointment, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2",A pie chart for listing the number of the name of physicians who took some appointment.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","List the name of physicians who took some appointment, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","What are the names of all the physicians who took appointments, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2",List the number of the name of physicians who took some appointment.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2",A bar chart for listing the number of the name of physicians who took some appointment.
"SELECT Name , Cost FROM procedures ORDER BY cost DESC",Bar,Easy,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Cost', 'x_data': [['Complete Walletectomy', 'Reversible Pancreomyoplasty', 'Obfuscated Dermogastrotomy', 'Folded Demiophtalmectomy', 'Obtuse Pyloric Recombobulation', 'Reverse Rhinopodoplasty', 'Follicular Demiectomy']], 'y_data': [[10000, 5600, 4899, 4500, 3750, 1500, 25]], 'classify': [], 'describe': ''}",bar,Name,Cost,"Complete Walletectomy, Reversible Pancreomyoplasty, Obfuscated Dermogastrotomy, Folded Demiophtalmectomy, Obtuse Pyloric Recombobulation, Reverse Rhinopodoplasty, Follicular Demiectomy","10000, 5600, 4899, 4500, 3750, 1500, 25",List the name and cost of all procedures sorted by the cost from the highest to the lowest by a bar chart.
"SELECT Name , Cost FROM procedures ORDER BY cost DESC",Bar,Easy,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Cost', 'x_data': [['Complete Walletectomy', 'Reversible Pancreomyoplasty', 'Obfuscated Dermogastrotomy', 'Folded Demiophtalmectomy', 'Obtuse Pyloric Recombobulation', 'Reverse Rhinopodoplasty', 'Follicular Demiectomy']], 'y_data': [[10000, 5600, 4899, 4500, 3750, 1500, 25]], 'classify': [], 'describe': ''}",bar,Name,Cost,"Complete Walletectomy, Reversible Pancreomyoplasty, Obfuscated Dermogastrotomy, Folded Demiophtalmectomy, Obtuse Pyloric Recombobulation, Reverse Rhinopodoplasty, Follicular Demiectomy","10000, 5600, 4899, 4500, 3750, 1500, 25",List the name and cost of all procedures sorted by the cost from the highest to the lowest. Plot them as bar chart.
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Pie,Hard,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a pie chart"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Pie,Hard,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1",A pie chart for finding the number of the physicians who are trained in a procedure that costs more than 5000.
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Pie,Hard,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Which physicians are trained in procedures that are more expensive than 5000, and count them by a pie chart"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Pie,Hard,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1",Find the number of the physicians who are trained in a procedure that costs more than 5000.
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1",A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000.
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1",Find the number of the physicians who are trained in a procedure that costs more than 5000.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","List the names of patients who have made appointments, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",A pie chart for listing the number of the names of patients who have made appointments.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",What are the number of names of patients who made an appointment?
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","What are names of patients who made an appointment, and count them by a pie chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",pie,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",List the number of the names of patients who have made appointments.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",A bar chart for listing the number of the names of patients who have made appointments.
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",What are the number of names of patients who made an appointment?
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","List the names of patients who have made appointments, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","What are names of patients who made an appointment, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1",List the number of the names of patients who have made appointments.
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Thesisin, Procrastin-X","2, 1",Find the number of medications prescribed for each brand. 
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Thesisin, Procrastin-X","2, 1",Pie. how many medications are prescribed for each brand?
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Thesisin, Procrastin-X","2, 1",Return a pie chart on how many medications are prescribed for each brand?
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Thesisin, Procrastin-X","2, 1",How many medications are prescribed for each brand. Plot them as pie chart.
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1",Find the number of medications prescribed for each brand. Plot them as bar chart.
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1",Display a bar chart for how many medications are prescribed for each brand?
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1",Draw a bar chart for how many medications are prescribed for each brand?
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1",How many medications are prescribed for each brand. Visualize by bar chart.
"SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1",Scatter,Easy,hospital_1,"{'chart': 'scatter', 'x_name': 'Physician', 'y_name': 'Department', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 3]], 'classify': [], 'describe': ''}",scatter,Physician,Department,"1, 2, 3, 4, 5, 6, 7, 8, 9","1, 1, 2, 1, 1, 2, 2, 1, 3",List the physicians' employee ids together with their primary affiliation departments' ids with a scatter chart.
"SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1",Scatter,Easy,hospital_1,"{'chart': 'scatter', 'x_name': 'Physician', 'y_name': 'Department', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 3]], 'classify': [], 'describe': ''}",scatter,Physician,Department,"1, 2, 3, 4, 5, 6, 7, 8, 9","1, 1, 2, 1, 1, 2, 2, 1, 3",List the physicians' employee ids together with their primary affiliation departments' ids. Plot them as scatter chart.
"SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1",Scatter,Easy,hospital_1,"{'chart': 'scatter', 'x_name': 'Physician', 'y_name': 'Department', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 3]], 'classify': [], 'describe': ''}",scatter,Physician,Department,"1, 2, 3, 4, 5, 6, 7, 8, 9","1, 1, 2, 1, 1, 2, 2, 1, 3",Scatter. what are each physician's employee id and department id primarily affiliated.
"SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1",Scatter,Easy,hospital_1,"{'chart': 'scatter', 'x_name': 'Physician', 'y_name': 'Department', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 3]], 'classify': [], 'describe': ''}",scatter,Physician,Department,"1, 2, 3, 4, 5, 6, 7, 8, 9","1, 1, 2, 1, 1, 2, 2, 1, 3",Visualize a scatter chart on what are each physician's employee id and department id primarily affiliated.
"SELECT Physician , Department FROM affiliated_with WHERE primaryaffiliation = 1",Scatter,Easy,hospital_1,"{'chart': 'scatter', 'x_name': 'Physician', 'y_name': 'Department', 'x_data': [[1, 2, 3, 4, 5, 6, 7, 8, 9]], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 3]], 'classify': [], 'describe': ''}",scatter,Physician,Department,"1, 2, 3, 4, 5, 6, 7, 8, 9","1, 1, 2, 1, 1, 2, 2, 1, 3",What are each physician's employee id and department id primarily affiliated. Plot them as scatter chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return a pie on how many patients do each physician take care of? List their names and number of patients they take care of.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Draw a pie chart for how many patients do each physician take care of? List their names and number of patients they take care of.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",How many patients do each physician take care of? List their names and number of patients they take care of in a pie chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",How many patients do each physician take care of? List their names and number of patients they take care of. Visualize by pie chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return the name of each physician and the number of patients he or she treats by a pie chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Pie,Medium,hospital_1,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return the name of each physician and the number of patients he or she treats. Show a pie chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",How many patients do each physician take care of? List their names and number of patients they take care of. Show bar chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return the name of each physician and the number of patients he or she treats in a bar chart.
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Bar,Medium,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1",Return the name of each physician and the number of patients he or she treats. 
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",pie,Name,Num_of_Component,"Billiard table, Dining set","14, 12",Find the component amounts and names of all furnitures that have more than 10 components. Show me the proportion of component amounts using a pie chart.
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",pie,Name,Num_of_Component,"Billiard table, Dining set","14, 12",Visualize the name and their component amounts all furnitures that have more than 10 components. 
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12",Find the component amounts and names of all furnitures that have more than 10 components. 
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12",Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components.
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id",Pie,Medium,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Chevrolet House', 'Jiaj', 'Chevrolet', 'Tomorrow']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Chevrolet House, Jiaj, Chevrolet, Tomorrow","1, 1, 1, 2",Find the number of funiture types produced by each manufacturer as well as the company names. Visualize by pie chart.
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Chevrolet House', 'Jiaj', 'Chevrolet', 'Tomorrow']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Chevrolet House, Jiaj, Chevrolet, Tomorrow","1, 1, 1, 2",Find the number of funiture types produced by each manufacturer as well as the company names. Show bar chart.
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",pie,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2",Visualize names and market shares of furnitures which no any company is producing in our records by a pie chart.
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",pie,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Please give me a pie chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2",Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart.
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Chabudai', 'Dining set', 'Billiard table', 'Hatstand']], 'y_data': [[239, 450, 2124, 443, 1234]], 'classify': [], 'describe': ''}",pie,Name,Price_in_Dollar,"Bookcase, Chabudai, Dining set, Billiard table, Hatstand","239, 450, 2124, 443, 1234",Give me the names and prices of furnitures which some companies are manufacturing with a pie chart.
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID",Pie,Easy,manufacturer,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Chabudai', 'Dining set', 'Billiard table', 'Hatstand']], 'y_data': [[239, 450, 2124, 443, 1234]], 'classify': [], 'describe': ''}",pie,Name,Price_in_Dollar,"Bookcase, Chabudai, Dining set, Billiard table, Hatstand","239, 450, 2124, 443, 1234",Please draw a pie chart to visualize the names and prices of furnitures which some companies are manufacturing.
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Chabudai', 'Dining set', 'Billiard table', 'Hatstand']], 'y_data': [[239, 450, 2124, 443, 1234]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Bookcase, Chabudai, Dining set, Billiard table, Hatstand","239, 450, 2124, 443, 1234",Give me the names and prices of furnitures which some companies are manufacturing with a bar chart.
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Chabudai', 'Dining set', 'Billiard table', 'Hatstand']], 'y_data': [[239, 450, 2124, 443, 1234]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Bookcase, Chabudai, Dining set, Billiard table, Hatstand","239, 450, 2124, 443, 1234",Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart.
"SELECT Name , Manufacturer_ID FROM manufacturer ORDER BY open_year",Bar,Easy,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Manufacturer_ID', 'x_data': [['Chevrolet House', 'IKEA', 'Ford Make', 'Jiaj', 'Chevrolet', 'Dodge', 'Tomorrow']], 'y_data': [[1, 2, 3, 4, 5, 6, 7]], 'classify': [], 'describe': ''}",bar,Name,Manufacturer_ID,"Chevrolet House, IKEA, Ford Make, Jiaj, Chevrolet, Dodge, Tomorrow","1, 2, 3, 4, 5, 6, 7","Show all manufacturer names and ids with a bar chart, note that let manufacturer id as Y-axis."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",pie,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",Pie. what are the id and name of the mountains that have at least 2 photos?
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",pie,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",Draw a pie chart for what are the id and name of the mountains that have at least 2 photos?
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",pie,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",What are the id and name of the mountains that have at least 2 photos. Plot them as pie chart.
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",Return a bar chart on what are the id and name of the mountains that have at least 2 photos?
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20",What are the id and name of the mountains that have at least 2 photos. Show bar chart.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Pie,Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",pie,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",Show me a pie chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Pie,Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",pie,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",Visualize a pie chart with what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Pie,Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",pie,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Plot them as pie chart.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Bar,Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",Draw a bar chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Bar,Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",Display a bar chart for what is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Bar,Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'count(*)', 'x_data': [['Panasonic Leica DG Nocticron 42.5mm f /1.2', 'Panasonic Lumix G 150mm f /2.8', 'Olympus 15mm f/8.0 Body Cap', 'Schneider Kreuznach Super Angulon 14mm f /2.0', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,name,count(*),"Panasonic Leica DG Nocticron 42.5mm f /1.2, Panasonic Lumix G 150mm f /2.8, Olympus 15mm f/8.0 Body Cap, Schneider Kreuznach Super Angulon 14mm f /2.0, Sigma 19mm f2.8 EX DN","1, 1, 2, 2, 4",What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Show bar chart.
"SELECT Height , Prominence FROM mountain WHERE range != 'Aberdare Range'",Scatter,Easy,mountain_photos,"{'chart': 'scatter', 'x_name': 'Height', 'y_name': 'Prominence', 'x_data': [[4260, 4220, 4195, 4193, 4167, 4127, 4125, 4120, 4100, 4088, 4071, 4070, 4070, 4068, 4030, 3996, 3950, 3941, 3912, 3903, 3900]], 'y_data': [[1909, 350, 1605, 1215, 3755, 1530, 660, 1510, 2225, 420, 610, 3931, 500, 1904, 420, 910, 500, 1540, 460, 450, 590]], 'classify': [], 'describe': ''}",scatter,Height,Prominence,"4260, 4220, 4195, 4193, 4167, 4127, 4125, 4120, 4100, 4088, 4071, 4070, 4070, 4068, 4030, 3996, 3950, 3941, 3912, 3903, 3900","1909, 350, 1605, 1215, 3755, 1530, 660, 1510, 2225, 420, 610, 3931, 500, 1904, 420, 910, 500, 1540, 460, 450, 590",What are the correlation between the height and prominence of mountains which do not belong to the range 'Aberdare Range'? Plot the result by a scatter chart.
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Pie,Extra Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4",What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Pie,Extra Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4",A pie chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Pie,Extra Hard,mountain_photos,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a pie chart"
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4",What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart"
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4",A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",pie,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3",Count the brand of each camera lens with a pie chart.
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",pie,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3",Compute the total how many brand across brand as a pie chart.
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3",Group and count brand for each camera lens using a bar chart.
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3",Show the number of brand from each brand
"SELECT color , COUNT(color) FROM photos GROUP BY color",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",pie,color,COUNT(color),"Black/White, RBG","2, 8",Group and count the color scheme for all the photos using a pie chart.
"SELECT color , COUNT(color) FROM photos GROUP BY color",Pie,Easy,mountain_photos,"{'chart': 'pie', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",pie,color,COUNT(color),"Black/White, RBG","2, 8",I want to know the proportion of the total number for each color.
"SELECT color , COUNT(color) FROM photos GROUP BY color",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8",Compare the number of items in each color scheme using a bar chart.
"SELECT color , COUNT(color) FROM photos GROUP BY color",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8",Please draw a bar chart to show the total number of different color.
"SELECT color , COUNT(color) FROM photos GROUP BY color",Bar,Easy,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8",Bar chart x axis color y axis the number of color
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",pie,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",Return a pie chart on how many movie reviews does each director get?
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",pie,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",Give the proportion of how many movie reviews does each director get?
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",pie,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",How many movie reviews does each director get. Visualize by pie chart.
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",pie,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","For each director, how many reviews have they received. Visualize by pie chart."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",Show me a bar chart for how many movie reviews does each director get?
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",Return a bar chart on how many movie reviews does each director get?
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3",How many movie reviews does each director get. Show bar chart.
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","For each director, how many reviews have they received. Visualize by bar chart."
"SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Grouping Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'stars', 'x_data': [[206, 207], [205, 208], [201, 204], [202], [203]], 'y_data': [[3, 5], [2, 3], [2, 3], [4], [2]], 'classify': ['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music'], 'describe': 'GROUP BY title'}",scatter,rID,stars,"206, 207","3, 5","Give me a scatter chart to show the star rating of the movie and reviewer id, group the title."
"SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Grouping Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'min(T1.stars)', 'x_data': [[206, 207], [205, 208], [201, 204], [202], [203]], 'y_data': [[3, 5], [2, 3], [2, 3], [4], [2]], 'classify': ['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music'], 'describe': 'GROUP BY title'}",scatter,rID,min(T1.stars),"206, 207","3, 5","Give me a scatter chart to show the least rating star of the movie and reviewer id, group the title."
"SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Grouping Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'min(T1.stars)', 'x_data': [[3, 5], [2, 3], [2, 3], [4], [2]], 'y_data': [[3, 5], [2, 3], [2, 3], [4], [2]], 'classify': ['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music'], 'describe': 'GROUP BY title'}",scatter,stars,min(T1.stars),"3, 5","3, 5","Give me a scatter chart to show the least rating star of the movie and the star rating of the movie, group the title."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the title and and the total star rating of the movie using a bar chart.
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Please tell me the total star ratings of each movie title using a bar chart.
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",Visualize the title and and the average star rating of the movie using a bar chart.
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",Please tell me the average star ratings of each movie title using a bar chart.
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",What are the average star ratings of each movie title? Could you return me a bar chart?
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the title and their total smallest ratings of the movie using a bar chart.
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Please return me a bar chart show what are the total smallest rating of different movie title? 
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the total smallest rating of different movie title using a bar chart.
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",Visualize the title and their average smallest ratings of the movie using a bar chart.
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",Please return me a bar chart show what are the average smallest rating of different movie title?
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2",Visualize the average smallest rating of different movie title using a bar chart.
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",pie,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Please tell me the total star ratings of each movie title using a pie chart.
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",pie,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the title and and the total star rating of the movie using a pie chart.
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",pie,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Please return me a pie chart show what are the total smallest rating of different movie title?
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",pie,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the title and their total smallest ratings of the movie using a pie chart.
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",pie,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2",Visualize the total smallest rating of different movie title using a pie chart.
"SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'min(T1.stars)', 'x_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'y_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'classify': [], 'describe': ''}",scatter,stars,min(T1.stars),"2, 4, 2, 3, 2, 3, 5, 3","2, 4, 2, 3, 2, 3, 5, 3",Draw a scatter chart to show the star rating of the movie and the smallest rating of movie.
"SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'stars', 'x_data': [[201, 202, 203, 204, 205, 206, 207, 208]], 'y_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'classify': [], 'describe': ''}",scatter,rID,stars,"201, 202, 203, 204, 205, 206, 207, 208","2, 4, 2, 3, 2, 3, 5, 3",Return me a scatter chart to show the star rating of the movie for each reviewer.
"SELECT rID , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'stars', 'x_data': [[201, 202, 203, 204, 205, 206, 207, 208]], 'y_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'classify': [], 'describe': ''}",scatter,rID,stars,"201, 202, 203, 204, 205, 206, 207, 208","2, 4, 2, 3, 2, 3, 5, 3","For each reviewer id, show their corresponding rating for the movie in a scatter chart."
"SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY rID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'min(T1.stars)', 'x_data': [[201, 202, 203, 204, 205, 206, 207, 208]], 'y_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'classify': [], 'describe': ''}",scatter,rID,min(T1.stars),"201, 202, 203, 204, 205, 206, 207, 208","2, 4, 2, 3, 2, 3, 5, 3","For each reviewer id, show their corresponding the smallest rating for the movie in a scatter chart."
"SELECT rID , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY rID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'rID', 'y_name': 'min(T1.stars)', 'x_data': [[201, 202, 203, 204, 205, 206, 207, 208]], 'y_data': [[2, 4, 2, 3, 2, 3, 5, 3]], 'classify': [], 'describe': ''}",scatter,rID,min(T1.stars),"201, 202, 203, 204, 205, 206, 207, 208","2, 4, 2, 3, 2, 3, 5, 3",Return me a scatter chart to show the smallest rating of the movie for each reviewer.
"SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris"") GROUP BY mID",Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 104, 106, 107]], 'y_data': [[3, 2.5, 4.5, 4]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 104, 106, 107","3, 2.5, 4.5, 4",Find the average rating star for each movie that are not reviewed by Brittany Harris. Plot them as scatter chart.
"SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris"") GROUP BY mID",Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 104, 106, 107]], 'y_data': [[3, 2.5, 4.5, 4]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 104, 106, 107","3, 2.5, 4.5, 4",Show me the correlation about what is the average rating for each movie that has never been reviewed by Brittany Harris?
"SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris"") GROUP BY mID",Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 104, 106, 107]], 'y_data': [[3, 2.5, 4.5, 4]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 104, 106, 107","3, 2.5, 4.5, 4",What is the average rating for each movie that has never been reviewed by Brittany Harris. 
"SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY stars",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'min(T1.stars)', 'x_data': [[4, 3, 2, 2, 2]], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",scatter,stars,min(T1.stars),"4, 3, 2, 2, 2","4, 3, 2, 2, 2",Show score of the movie with the lowest rating among all movies directed with a scatter chart.
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Pie,Easy,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,title,stars,"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Show the title and score of the movie with a pie chart.
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Show the title and score of the movie with a bar chart.
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Draw a bar chart to compare the stars of each movie by title.
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Pie,Easy,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,title,min(T1.stars),"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Show the title and the lowest rating among all movies in a pie chart.
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Show the title and the lowest rating among all movies in a bar chart.
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2",Compare the lowest rating among all movies by each title using a histogram.
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Pie,Easy,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,director,stars,", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Show the stars of each director by a pie chart.
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Show the stars of each director by a bar chart.
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Please give me a bar chart to compare the stars by directors.
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",Pie,Easy,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",pie,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Show the director and their lowest rating among all movies in a pie chart.
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Show the director and their lowest rating among all movies in a bar chart.
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2",Compare the lowest rating among all movies by each director using a bar chart.
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",Bar,Easy,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies. "
"SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title",Grouping Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'min(T1.stars)', 'x_data': [[3], [2], [2], [4], [2]], 'y_data': [[3], [2], [2], [4], [2]], 'classify': ['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music'], 'describe': 'GROUP BY title'}",scatter,stars,min(T1.stars),3,3,Show the score of the movie with the lowest rating among all movies directed by each title with a scatter chart.
"SELECT stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",Grouping Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'min(T1.stars)', 'x_data': [[4], [3], [2], [2], [2]], 'y_data': [[4], [3], [2], [2], [2]], 'classify': ['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming'], 'describe': 'GROUP BY director'}",scatter,stars,min(T1.stars),4,4,Show the score of the movie with the lowest rating among all movies directed by each director with a scatter chart.
"SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY stars",Scatter,Medium,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'max(T1.stars)', 'x_data': [[5, 3, 4, 4]], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",scatter,stars,max(T1.stars),"5, 3, 4, 4","5, 3, 4, 4","For each director, return the highest rating among all of movies and the value of that rating by a scatter chart. Ignore movies whose director is NULL."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null""",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",pie,title,stars,"Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","5, 3, 4, 4","Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a pie chart."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null""",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,title,stars,"Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","5, 3, 4, 4"," Ignore movies whose director is NULL. For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",pie,title,max(T1.stars),"Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","5, 3, 4, 4","Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a pie chart."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,title,max(T1.stars),"Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","5, 3, 4, 4","Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null""",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",pie,director,stars,"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a pie chart?"
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null""",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director",Pie,Medium,movie_1,"{'chart': 'pie', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",pie,director,max(T1.stars),"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with  the highest rating among all of their movies and ignore movies whose director is NULL. Could you plot the result with a pie chart?"
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,director,max(T1.stars),"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL. Could you plot the result with a bar chart?"
"SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title",Grouping Scatter,Hard,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'max(T1.stars)', 'x_data': [[5], [4], [4], [3]], 'y_data': [[5], [4], [4], [3]], 'classify': ['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music'], 'describe': 'GROUP BY title'}",scatter,stars,max(T1.stars),5,5,"For each director, return the highest rating among all of their movies and the value of that rating, group by title in a scatter, and Ignore movies whose director is NULL."
"SELECT stars , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director",Grouping Scatter,Hard,movie_1,"{'chart': 'scatter', 'x_name': 'stars', 'y_name': 'max(T1.stars)', 'x_data': [[5], [3], [4], [4]], 'y_data': [[5], [3], [4], [4]], 'classify': ['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming'], 'describe': 'GROUP BY director'}",scatter,stars,max(T1.stars),5,5,"For each director, return the highest rating among all of their movies and the value of that rating, group by director in a scatter, and Ignore movies whose director is NULL."
"SELECT mID , avg(stars) FROM Rating GROUP BY mID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 103, 104, 106, 107, 108]], 'y_data': [[3, 2.5, 2.5, 4.5, 4, 3.333333333333333]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 103, 104, 106, 107, 108","3, 2.5, 2.5, 4.5, 4, 3.333333333333333",Find the average rating star for each movie that received at least 2 ratings. 
"SELECT mID , avg(stars) FROM Rating GROUP BY mID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 103, 104, 106, 107, 108]], 'y_data': [[3, 2.5, 2.5, 4.5, 4, 3.333333333333333]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 103, 104, 106, 107, 108","3, 2.5, 2.5, 4.5, 4, 3.333333333333333","For each movie that received more than 3 reviews, what is the average rating. Show scatter chart."
"SELECT mID , avg(stars) FROM Rating GROUP BY mID",Scatter,Easy,movie_1,"{'chart': 'scatter', 'x_name': 'mID', 'y_name': 'avg(stars)', 'x_data': [[101, 103, 104, 106, 107, 108]], 'y_data': [[3, 2.5, 2.5, 4.5, 4, 3.333333333333333]], 'classify': [], 'describe': ''}",scatter,mID,avg(stars),"101, 103, 104, 106, 107, 108","3, 2.5, 2.5, 4.5, 4, 3.333333333333333",Show me a scatter plot of mid and mean stars for .
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",Draw a bar chart for what is the average rating star for each reviewer?
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",A bar chart about what is the average rating star for each reviewer?
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",What is the average rating star for each reviewer. 
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",Return a histogram on what is the average number of stars that each reviewer awards for a movie?
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3",What is the average number of stars that each reviewer awards for a movie. Show bar chart.
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 1, 0, 1]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,COUNT(year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 1, 0, 1","Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year, and count them by a bar chart"
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 2, 1, 0, 1]], 'classify': [], 'describe': 'BIN year BY WEEKDAY'}",bar,year,COUNT(year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 2, 1, 0, 1","In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently, and count them by a bar chart"
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1937~1943', '1944~1950', '1951~1957', '1958~1964', '1965~1971', '1972~1978', '1979~1985', '1986~1992', '1993~1999', '2000~2006', '2007~2009']], 'y_data': [[2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1937~1943, 1944~1950, 1951~1957, 1958~1964, 1965~1971, 1972~1978, 1979~1985, 1986~1992, 1993~1999, 2000~2006, 2007~2009","2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1","Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year, and count them by a line chart"
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1937~1943', '1944~1950', '1951~1957', '1958~1964', '1965~1971', '1972~1978', '1979~1985', '1986~1992', '1993~1999', '2000~2006', '2007~2009']], 'y_data': [[2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1937~1943, 1944~1950, 1951~1957, 1958~1964, 1965~1971, 1972~1978, 1979~1985, 1986~1992, 1993~1999, 2000~2006, 2007~2009","2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1","In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently, and count them by a line chart"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1",A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1",What are the number of the titles of all movies that have between 3 and 5 stars?
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1",A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1",What are the number of the titles of all movies that have rating star is between 3 and 5?
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart"
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title. The result can be drawn as a trend line."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title",Line,Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 1","For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket. Show me the result using a line chart."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Show party names and the number of events for each party by a pie chart.
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Show party names and the number of events for each party. Visualize by pie chart.
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Visualize a pie chart with how many events are there for each party?
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Return a pie chart on how many events are there for each party?
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",How many events are there for each party. Show a pie chart.
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Show party names and the number of events for each party in a bar chart.
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Show party names and the number of events for each party. 
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Return a bar chart on how many events are there for each party?
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",Give me a histogram for how many events are there for each party?
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[3, 2, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","3, 2, 3",How many events are there for each party. 
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Show all party names and the number of members in each party by a pie chart.
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Show all party names and the number of members in each party. Show the proportion.
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Return a pie on how many members are in each party?
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",pie,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",How many members are in each party. Visualize by pie chart.
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Show all party names and the number of members in each party with a bar chart.
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Show all party names and the number of members in each party. Show bar chart.
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Return a bar chart on how many members are in each party?
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",Give me a histogram for how many members are in each party?
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9",How many members are in each party. Show bar chart.
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Which ministers are not a part of the Progress Party, and count them by a pie chart"
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister",Pie,Medium,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Show all ministers who do not belong to Progress Party, and count them by a pie chart"
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Which ministers are not a part of the Progress Party, and count them by a bar chart"
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Show all ministers who do not belong to Progress Party, and count them by a bar chart"
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Pie,Easy,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Please tell me the repeat times of each ministers using a pie chart.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Pie,Easy,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",I want to know the proportion of the total number for each minister.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Give me a bar chart showing the total number of each minister.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Plot how many minister by grouped by minister as a bar graph
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1957', '1958', '1959', '1960', '1961']], 'y_data': [[2, 1, 1, 1, 1], [2, 1, 2, 1, 2], [2, 1, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1957, 1958, 1959, 1960, 1961","2, 1, 1, 1, 1","How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1957', '1958', '1959', '1960', '1961']], 'y_data': [[2, 1, 1, 1, 1], [2, 1, 2, 1, 2], [2, 1, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1957, 1958, 1959, 1960, 1961","2, 1, 1, 1, 1",Stack bar chart of how many took office vs Minister based on took office
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1958', '1959', '1960', '1961', '1962']], 'y_data': [[2, 1, 1, 1, 1], [2, 1, 2, 1, 2], [2, 1, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1958, 1959, 1960, 1961, 1962","2, 1, 1, 1, 1","How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1958', '1959', '1960', '1961', '1962']], 'y_data': [[2, 1, 1, 1, 1], [2, 1, 2, 1, 2], [2, 1, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1958, 1959, 1960, 1961, 1962","2, 1, 1, 1, 1",Stacked bar chart of the number of left office for with each Minister in each left office
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 0, 0, 0, 0, 0","How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 0, 0, 0, 0, 0",Stacked bar of took office and how many took office colored by Minister
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 0, 0, 0, 0","How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister",Stacked Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 1, 0, 0, 0, 0",Stacked bar chart of the number of left office for with each Minister in each left office
"SELECT Took_office , COUNT(Took_office) FROM party",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 1, 1, 1, 0, 1]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 1, 1, 1, 0, 1","How many parties of the time they took office, binning the took office into WEEKDAY interval"
"SELECT Took_office , COUNT(Took_office) FROM party",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 1, 1, 1, 1, 0, 1]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 1, 1, 1, 1, 0, 1",Bar graph to show the number of took office from different took office
"SELECT Left_office , COUNT(Left_office) FROM party",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 1, 1, 1, 0, 1]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 1, 1, 1, 0, 1","How many parties of the time they leave office, binning the leave office into WEEKDAY interval"
"SELECT Left_office , COUNT(Left_office) FROM party",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 0, 1, 1, 1, 0, 1]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 0, 1, 1, 1, 0, 1",Bar chart x axis left office y axis the number of left office
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Pie,Easy,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Show the proportion of all ministers using a pie chart.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Pie,Easy,party_people,"{'chart': 'pie', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",pie,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Compute the total how many minister across minister as a pie chart.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Compare the total number of each minister using a bar graph.
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",Bar,Easy,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1",Bar chart x axis minister y axis how many minister
"SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'Floridan Hotel', 'Franklin Exchange Building', 'Park Tower', 'One Tampa City Center', '100 North Tampa']], 'y_data': [[2, 2, 1, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Citizens Bank Building, Tampa City Hall, Floridan Hotel, Franklin Exchange Building, Park Tower, One Tampa City Center, 100 North Tampa","2, 2, 1, 2, 1, 2, 1","For each building, show the name of the building and the number of institutions in it. Plot them as bar chart."
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Please give me a bar chart showing institution types, along with the number of institutions for each type."
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart."
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1",Draw a bar chart of type versus the total number 
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",pie,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please give me a pie chart showing institution types, along with the total enrollment for each type."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",pie,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000",Please tell me the proportion of total enrollment for each type using a pie chart.
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",pie,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000",Give me a pie to show sum enrollment from different type.
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please give me a bar chart showing institution types, along with the total enrollment for each type."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000",Please compare the total enrollment for each type using a bar chart.
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000",Bar chart x axis type y axis total number of enrollment
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",pie,Type,count(*),"Private, Public, Tribal","7, 3, 1",Please tell me the proportion of the number of institutions for each type using a pie chart.
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",pie,Type,count(*),"Private, Public, Tribal","7, 3, 1","Please give me a pie chart showing institution types, along with the number of institutions for each type."
"SELECT Type , count(*) FROM institution GROUP BY TYPE",Pie,Easy,protein_institute,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",pie,Type,count(*),"Private, Public, Tribal","7, 3, 1",Compute the total the total number across type as a pie chart.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE",Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7, 3, 1]], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",scatter,count(*),sum(enrollment),"7, 3, 1","7868, 5267, 1000",Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE",Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7, 3, 1]], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",scatter,count(*),sum(enrollment),"7, 3, 1","7868, 5267, 1000",Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE",Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7, 3, 1]], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",scatter,count(*),sum(enrollment),"7, 3, 1","7868, 5267, 1000",Scatter plot to show count(*) on x axis and total number of enrollment on y axis.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type",Grouping Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7], [3], [1]], 'y_data': [[7868], [5267], [1000]], 'classify': ['Private', 'Public', 'Tribal'], 'describe': 'GROUP BY Type'}",scatter,count(*),sum(enrollment),7,7868,Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type",Grouping Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7], [3], [1]], 'y_data': [[7868], [5267], [1000]], 'classify': ['Private', 'Public', 'Tribal'], 'describe': 'GROUP BY Type'}",scatter,count(*),sum(enrollment),7,7868,Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.
"SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type",Grouping Scatter,Medium,protein_institute,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'sum(enrollment)', 'x_data': [[7], [3], [1]], 'y_data': [[7868], [5267], [1000]], 'classify': ['Private', 'Public', 'Tribal'], 'describe': 'GROUP BY Type'}",scatter,count(*),sum(enrollment),7,7868,Show count(*) vs sum enrollment as scatter plot use a different color for each Type
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",Pie,Medium,protein_institute,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",pie,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537",Show the names and heights of buildings with at least two institutions founded after 1880 in a pie chart.
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",Pie,Medium,protein_institute,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",pie,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537",Show the names and heights of buildings with at least two institutions founded after 1880. Show the proportion.
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537",Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart.
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537",Show the names and heights of buildings with at least two institutions founded after 1880. Plot them as bar chart.
"SELECT Name , Floors FROM building ORDER BY floors",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Floors', 'x_data': [['Tampa City Hall', 'Citizens Bank Building', 'Floridan Hotel', 'Franklin Exchange Building', 'Park Tower', 'One Tampa City Center', 'Bank of America Tower', '100 North Tampa']], 'y_data': [[10, 12, 17, 22, 36, 39, 42, 42]], 'classify': [], 'describe': ''}",bar,Name,Floors,"Tampa City Hall, Citizens Bank Building, Floridan Hotel, Franklin Exchange Building, Park Tower, One Tampa City Center, Bank of America Tower, 100 North Tampa","10, 12, 17, 22, 36, 39, 42, 42","Return a bar chart that the name as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors."
"SELECT Name , Floors FROM building ORDER BY floors",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Floors', 'x_data': [['Tampa City Hall', 'Citizens Bank Building', 'Floridan Hotel', 'Franklin Exchange Building', 'Park Tower', 'One Tampa City Center', 'Bank of America Tower', '100 North Tampa']], 'y_data': [[10, 12, 17, 22, 36, 39, 42, 42]], 'classify': [], 'describe': ''}",bar,Name,Floors,"Tampa City Hall, Citizens Bank Building, Floridan Hotel, Franklin Exchange Building, Park Tower, One Tampa City Center, Bank of America Tower, 100 North Tampa","10, 12, 17, 22, 36, 39, 42, 42","Please compare the number of floors for all building names using a bar chart, and order by the number of floors."
"SELECT Street_address , Floors FROM building ORDER BY floors",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Street_address', 'y_name': 'Floors', 'x_data': [['315 John F. Kennedy Boulevard', '701 North Franklin Street', '905 Franklin Street', '655 North Franklin Street', '400 North Tampa Street', '201 North Franklin Street', '101 East Kennedy Boulevard', '100 North Tampa Street']], 'y_data': [[10, 12, 17, 22, 36, 39, 42, 42]], 'classify': [], 'describe': ''}",bar,Street_address,Floors,"315 John F. Kennedy Boulevard, 701 North Franklin Street, 905 Franklin Street, 655 North Franklin Street, 400 North Tampa Street, 201 North Franklin Street, 101 East Kennedy Boulevard, 100 North Tampa Street","10, 12, 17, 22, 36, 39, 42, 42","Please compare the number of floors for all street address using a bar chart, and order by the number of floors."
"SELECT Street_address , Floors FROM building ORDER BY floors",Bar,Easy,protein_institute,"{'chart': 'bar', 'x_name': 'Street_address', 'y_name': 'Floors', 'x_data': [['315 John F. Kennedy Boulevard', '701 North Franklin Street', '905 Franklin Street', '655 North Franklin Street', '400 North Tampa Street', '201 North Franklin Street', '101 East Kennedy Boulevard', '100 North Tampa Street']], 'y_data': [[10, 12, 17, 22, 36, 39, 42, 42]], 'classify': [], 'describe': ''}",bar,Street_address,Floors,"315 John F. Kennedy Boulevard, 701 North Franklin Street, 905 Franklin Street, 655 North Franklin Street, 400 North Tampa Street, 201 North Franklin Street, 101 East Kennedy Boulevard, 100 North Tampa Street","10, 12, 17, 22, 36, 39, 42, 42","Return a bar chart that the street address as the X-axis, and the number of floors for all buildings as Y-axis, and ordered by the number of floors."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",Pie,Medium,protein_institute,"{'chart': 'pie', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",pie,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1",Show institution names along with the number of proteins for each institution by a pie chart.
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",Pie,Medium,protein_institute,"{'chart': 'pie', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",pie,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1",Show institution names along with the number of proteins for each institution. Plot them as pie chart.
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1",Show institution names along with the number of proteins for each institution in a bar chart.
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1",Show institution names along with the number of proteins for each institution. 
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence",Pie,Medium,riding_club,"{'chart': 'pie', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Birtle', 'Brandon', 'Oakbank', 'Selkirk', 'Winnipeg']], 'y_data': [[1, 1, 1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Residence'}",pie,Residence,COUNT(Residence),"Birtle, Brandon, Oakbank, Selkirk, Winnipeg","1, 1, 1, 1, 9","For players whose occupation is not ""Researcher"", tell me the proportion of their residences with a pie chart."
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Birtle', 'Brandon', 'Oakbank', 'Selkirk', 'Winnipeg']], 'y_data': [[1, 1, 1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Residence'}",bar,Residence,COUNT(Residence),"Birtle, Brandon, Oakbank, Selkirk, Winnipeg","1, 1, 1, 1, 9","For players whose occupation is not ""Researcher"", tell me the distribution of their residences with a bar chart."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Pie,Easy,riding_club,"{'chart': 'pie', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",pie,Gender,COUNT(Gender),"F, M","5, 9",What is the proportion of the gender of players?
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Pie,Easy,riding_club,"{'chart': 'pie', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",pie,Gender,COUNT(Gender),"F, M","5, 9",Please give me a pie chart to show the proportion of all players' genders.
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Pie,Easy,riding_club,"{'chart': 'pie', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",pie,Gender,COUNT(Gender),"F, M","5, 9",I want to know the proportion of the total number for each gender.
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9",Compare the distribution of the players' gender using a bar chart.
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9",Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis.
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9",Draw a bar chart of gender versus the number of gender
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Compare the number of players of different occupations using a bar chart.
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Visualize a bar chart to show how many players in each occupation.
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Bar chart x axis occupation y axis how many occupation
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Show different occupations along with the number of players in each occupation with a bar chart.
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Show different occupations along with the number of players in each occupation. Show bar chart.
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation",Bar,Easy,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2",Bar chart x axis occupation y axis the total number 
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",Pie,Medium,roller_coaster,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",pie,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67",Show the names of countries and the average speed of roller coasters from each country by a pie chart.
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",Pie,Medium,roller_coaster,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",pie,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67",Show the names of countries and the average speed of roller coasters from each country. Show a pie chart.
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",Bar,Medium,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67",Show the names of countries and the average speed of roller coasters from each country with a bar chart.
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",Bar,Medium,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67",Show the names of countries and the average speed of roller coasters from each country. Plot them as bar chart.
"SELECT Length , Height FROM roller_coaster",Scatter,Easy,roller_coaster,"{'chart': 'scatter', 'x_name': 'Length', 'y_name': 'Height', 'x_data': [[3236, 3914, 4726, 2900, 1574, 6442]], 'y_data': [[96, 105, 136, 120, 50, 163]], 'classify': [], 'describe': ''}",scatter,Length,Height,"3236, 3914, 4726, 2900, 1574, 6442","96, 105, 136, 120, 50, 163",Return a scatter on what are the lengths and heights of roller coasters?
"SELECT Length , Height FROM roller_coaster",Scatter,Easy,roller_coaster,"{'chart': 'scatter', 'x_name': 'Length', 'y_name': 'Height', 'x_data': [[3236, 3914, 4726, 2900, 1574, 6442]], 'y_data': [[96, 105, 136, 120, 50, 163]], 'classify': [], 'describe': ''}",scatter,Length,Height,"3236, 3914, 4726, 2900, 1574, 6442","96, 105, 136, 120, 50, 163", what are the lengths and heights of roller coasters?
"SELECT Length , Height FROM roller_coaster",Scatter,Easy,roller_coaster,"{'chart': 'scatter', 'x_name': 'Length', 'y_name': 'Height', 'x_data': [[3236, 3914, 4726, 2900, 1574, 6442]], 'y_data': [[96, 105, 136, 120, 50, 163]], 'classify': [], 'describe': ''}",scatter,Length,Height,"3236, 3914, 4726, 2900, 1574, 6442","96, 105, 136, 120, 50, 163",What are the lengths and heights of roller coasters. Show scatter chart.
"SELECT Length , Height FROM roller_coaster",Scatter,Easy,roller_coaster,"{'chart': 'scatter', 'x_name': 'Length', 'y_name': 'Height', 'x_data': [[3236, 3914, 4726, 2900, 1574, 6442]], 'y_data': [[96, 105, 136, 120, 50, 163]], 'classify': [], 'describe': ''}",scatter,Length,Height,"3236, 3914, 4726, 2900, 1574, 6442","96, 105, 136, 120, 50, 163",Scatter plot to show length on x axis and height on y axis.
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",Pie,Medium,school_bus,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",pie,Type,count(*),"Private, Public","3, 2",Show the type of school and the number of buses for each type by a pie chart.
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",Pie,Medium,school_bus,"{'chart': 'pie', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",pie,Type,count(*),"Private, Public","3, 2",Show the type of school and the number of buses for each type. Visualize by pie chart.
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2",Show the type of school and the number of buses for each type in a bar chart.
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2",Show the type of school and the number of buses for each type. 
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",pie,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Show the proportion of the home city of all drivers with a pie chart.
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",pie,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Please give me a pie chart to show the proportion of the home city of all drivers 
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",pie,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Give me a pie to show how many home city from different home city.
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Show the comparison of the total number of the home city of all drivers with a bar chart.
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Please give me a pie chart to show the number of home cities of all drivers
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1",Plot the number of home city by grouped by home city as a bar graph
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52",Show the average age of drivers from the same home city using a bar graph.
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52",Compare the average age of drivers from the same home city with a bar chart.
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52",Plot the average of age by grouped by home city as a bar graph
"SELECT Name , Age FROM driver",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Matthew Ritter', 'Dan Carter', 'Minnie Gonzalez', 'Angel Acre', 'Brandon McGee', 'Edwin Vargas', 'Douglas McCrory', 'Timothy Ackert', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Geoff Luxenberg']], 'y_data': [[40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Matthew Ritter, Dan Carter, Minnie Gonzalez, Angel Acre, Brandon McGee, Edwin Vargas, Douglas McCrory, Timothy Ackert, Jason Rojas, Henry Genga, Tim Larson, Geoff Luxenberg","40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52",Show the name and age for all drivers with a bar chart.
"SELECT Name , Age FROM driver",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Matthew Ritter', 'Dan Carter', 'Minnie Gonzalez', 'Angel Acre', 'Brandon McGee', 'Edwin Vargas', 'Douglas McCrory', 'Timothy Ackert', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Geoff Luxenberg']], 'y_data': [[40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Matthew Ritter, Dan Carter, Minnie Gonzalez, Angel Acre, Brandon McGee, Edwin Vargas, Douglas McCrory, Timothy Ackert, Jason Rojas, Henry Genga, Tim Larson, Geoff Luxenberg","40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52",Give me a bar chart to show the name and age for all drivers.
"SELECT Name , Age FROM driver",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Matthew Ritter', 'Dan Carter', 'Minnie Gonzalez', 'Angel Acre', 'Brandon McGee', 'Edwin Vargas', 'Douglas McCrory', 'Timothy Ackert', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Geoff Luxenberg']], 'y_data': [[40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Matthew Ritter, Dan Carter, Minnie Gonzalez, Angel Acre, Brandon McGee, Edwin Vargas, Douglas McCrory, Timothy Ackert, Jason Rojas, Henry Genga, Tim Larson, Geoff Luxenberg","40, 30, 46, 42, 45, 52, 36, 35, 38, 37, 36, 52",Bar graph to show age from different name
"SELECT Party , count(*) FROM driver GROUP BY party",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",pie,Party,count(*),"Dem, Rep","10, 2",Show the party and the number of drivers in each party by a pie chart.
"SELECT Party , count(*) FROM driver GROUP BY party",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",pie,Party,count(*),"Dem, Rep","10, 2",Show the party and the number of drivers in each party. Visualize by pie chart.
"SELECT Party , count(*) FROM driver GROUP BY party",Pie,Easy,school_bus,"{'chart': 'pie', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",pie,Party,count(*),"Dem, Rep","10, 2",Give me a pie to show the total number from different party.
"SELECT Party , count(*) FROM driver GROUP BY party",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2",Show the party and the number of drivers in each party with a bar chart.
"SELECT Party , count(*) FROM driver GROUP BY party",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2",Show the party and the number of drivers in each party. Plot them as bar chart.
"SELECT Party , count(*) FROM driver GROUP BY party",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2",Create a bar chart showing the total number across party
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",pie,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",Show the proportion of different competition types.
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",pie,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",What is the proportion of types of every competition?
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",pie,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",A pie chart showing the proportion of different competition types.
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",pie,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",Give me a pie to show how many competition type from different competition type.
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",Show the number of different competition types with a bar graph.
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",What is the number of types of competition?
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",A bar chart showing the number of different competition types.
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3",Give me a bar chart for how many competition type of each competition type
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1",How many competitions in each competition type? And split them by country.
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","Compute the total number in each competition type, and then split by country."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","A stacked bar chart about the total number in each competition type, and then split by country."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1",Stacked bar chart of the number of country for with each Competition_type in each country
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1",How many competitions for each country?
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1",A bar chart for how many competitions for each country.
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1",Compare the total number of competitions for each country.
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1",Show me the number of country by country in a histogram
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Pie,Medium,sports_competition,"{'chart': 'pie', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",pie,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",what is the number of players who have points less than 30 for each position?
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Pie,Medium,sports_competition,"{'chart': 'pie', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",pie,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",Show me the proportion on what is the number of players who have points less than 30 for each position?
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Pie,Medium,sports_competition,"{'chart': 'pie', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",pie,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",What is the number of players who have points less than 30 for each position. 
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",Give me a histogram for what is the number of players who have points less than 30 for each position?
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",what is the number of players who have points less than 30 for each position?
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3",What is the number of players who have points less than 30 for each position. Plot them as bar chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",List the types of competition and the number of competitions of each type by a pie chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",List the types of competition and the number of competitions of each type. Plot them as pie chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",Return a pie chart on what are the types of competition and number of competitions for that type?
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",Show me a pie chart for what are the types of competition and number of competitions for that type?
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",What are the types of competition and number of competitions for that type. Show the proportion.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Pie,Easy,sports_competition,"{'chart': 'pie', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",pie,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",I want to know the proportion of the total number for each competition type.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",List the types of competition and the number of competitions of each type in a bar chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",List the types of competition and the number of competitions of each type. Visualize by bar chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",Give me a histogram for what are the types of competition and number of competitions for that type?
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",Return a histogram on what are the types of competition and number of competitions for that type?
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",What are the types of competition and number of competitions for that type. Show bar chart.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3",Plot the total number by grouped by competition type as a bar graph
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1","List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1","List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1",Bar chart x axis position y axis how many position
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name",Pie,Medium,sports_competition,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For all players, show the proportion of the club name they come from."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name",Pie,Medium,sports_competition,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For all players, give me the proportion of the club name they come from."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For all players, show the number of different club names they come from."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For the names and the players of clubs, count the names by names in a bar chart."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110",List the position of players and the average number of points of players of each position by a bar chart.
"SELECT Position , avg(Points) FROM player GROUP BY POSITION",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110",List the position of players and the average number of points of players of each position. Visualize by bar chart.
"SELECT Position , avg(Points) FROM player GROUP BY POSITION",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110","For each position, what is the average number of points for players in that position. Plot them as bar chart."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION",Bar,Easy,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110",Give me a bar chart for mean points of each position
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Pie,Extra Hard,store_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",pie,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",List the top 5 genres by number of tracks. List genres name and total tracks by a pie chart.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Pie,Extra Hard,store_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",pie,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",List the top 5 genres by number of tracks. List genres name and total tracks. Visualize by pie chart.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Pie,Extra Hard,store_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",pie,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",how many tracks does each genre have and what are the names of the top 5?
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Pie,Extra Hard,store_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",pie,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",Return a pie chart on how many tracks does each genre have and what are the names of the top 5?
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Pie,Extra Hard,store_1,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",pie,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",How many tracks does each genre have and what are the names of the top 5. Show a pie chart.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",bar,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",List the top 5 genres by number of tracks. List genres name and total tracks with a bar chart.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",bar,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",List the top 5 genres by number of tracks. List genres name and total tracks. Plot them as bar chart.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",bar,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",Visualize a bar chart for how many tracks does each genre have and what are the names of the top 5?
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",bar,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",Show me a bar chart for how many tracks does each genre have and what are the names of the top 5?
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(*)', 'x_data': [['Rock', 'Latin', 'Metal', 'Alternative & Punk', 'Jazz']], 'y_data': [[1297, 579, 374, 332, 130]], 'classify': [], 'describe': ''}",bar,name,COUNT(*),"Rock, Latin, Metal, Alternative & Punk, Jazz","1297, 579, 374, 332, 130",How many tracks does each genre have and what are the names of the top 5. Show bar chart.
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Pie,Hard,store_1,"{'chart': 'pie', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",pie,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",A pie chart about what are the top 5 countries by number of invoices and how many do they have?
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Pie,Hard,store_1,"{'chart': 'pie', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",pie,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",Visualize a pie chart with what are the top 5 countries by number of invoices and how many do they have?
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Pie,Hard,store_1,"{'chart': 'pie', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",pie,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",What are the top 5 countries by number of invoices and how many do they have. 
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",bar,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",Return a histogram on what are the top 5 countries by number of invoices and how many do they have?
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",bar,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",what are the top 5 countries by number of invoices and how many do they have?
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'COUNT(*)', 'x_data': [['USA', 'Canada', 'Brazil', 'France', 'Germany']], 'y_data': [[91, 56, 35, 35, 28]], 'classify': [], 'describe': ''}",bar,billing_country,COUNT(*),"USA, Canada, Brazil, France, Germany","91, 56, 35, 35, 28",What are the top 5 countries by number of invoices and how many do they have. Plot them as bar chart.
"SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'AVG(total)', 'x_data': [['Chile', 'Hungary', 'Ireland', 'Czech Republic', 'Austria', 'Finland', 'Netherlands', 'India', 'USA', 'Norway']], 'y_data': [[6.659999999999998, 6.517142857142857, 6.517142857142857, 6.445714285714287, 6.088571428571428, 5.945714285714287, 5.802857142857143, 5.789230769230769, 5.747912087912091, 5.659999999999998]], 'classify': [], 'describe': ''}",bar,billing_country,AVG(total),"Chile, Hungary, Ireland, Czech Republic, Austria, Finland, Netherlands, India, USA, Norway","6.659999999999998, 6.517142857142857, 6.517142857142857, 6.445714285714287, 6.088571428571428, 5.945714285714287, 5.802857142857143, 5.789230769230769, 5.747912087912091, 5.659999999999998",Show me a bar chart for what are the names of the countries and average invoice size of the top countries by size?
"SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'AVG(total)', 'x_data': [['Chile', 'Hungary', 'Ireland', 'Czech Republic', 'Austria', 'Finland', 'Netherlands', 'India', 'USA', 'Norway']], 'y_data': [[6.659999999999998, 6.517142857142857, 6.517142857142857, 6.445714285714287, 6.088571428571428, 5.945714285714287, 5.802857142857143, 5.789230769230769, 5.747912087912091, 5.659999999999998]], 'classify': [], 'describe': ''}",bar,billing_country,AVG(total),"Chile, Hungary, Ireland, Czech Republic, Austria, Finland, Netherlands, India, USA, Norway","6.659999999999998, 6.517142857142857, 6.517142857142857, 6.445714285714287, 6.088571428571428, 5.945714285714287, 5.802857142857143, 5.789230769230769, 5.747912087912091, 5.659999999999998",What are the names of the countries and average invoice size of the top countries by size. 
"SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'SUM(T2.total)', 'x_data': [['Helena', 'Richard', 'Luis', 'Ladislav', 'Hugh', 'Julia', 'Frank', 'Fynn', 'Astrid', 'Victor']], 'y_data': [[49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62]], 'classify': [], 'describe': ''}",bar,first_name,SUM(T2.total),"Helena, Richard, Luis, Ladislav, Hugh, Julia, Frank, Fynn, Astrid, Victor","49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62",List the top 10 customers by total gross sales. Compare the total gross sales of customers by their first name.
"SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'SUM(T2.total)', 'x_data': [['Helena', 'Richard', 'Luis', 'Ladislav', 'Hugh', 'Julia', 'Frank', 'Fynn', 'Astrid', 'Victor']], 'y_data': [[49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62]], 'classify': [], 'describe': ''}",bar,first_name,SUM(T2.total),"Helena, Richard, Luis, Ladislav, Hugh, Julia, Frank, Fynn, Astrid, Victor","49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62","What are the top 10 customers' first names with the highest gross sales, and also what are the sales?"
"SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10",Bar,Extra Hard,store_1,"{'chart': 'bar', 'x_name': 'first_name', 'y_name': 'SUM(T2.total)', 'x_data': [['Helena', 'Richard', 'Luis', 'Ladislav', 'Hugh', 'Julia', 'Frank', 'Fynn', 'Astrid', 'Victor']], 'y_data': [[49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62]], 'classify': [], 'describe': ''}",bar,first_name,SUM(T2.total),"Helena, Richard, Luis, Ladislav, Hugh, Julia, Frank, Fynn, Astrid, Victor","49.62000000000001, 47.62000000000001, 46.62, 45.62, 45.62, 43.62000000000001, 43.62, 43.62, 42.62, 42.62","What are the top 10 customers' first names with the highest gross sales, and also what are the sales? Visualize the result with a bar chart."
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","List the name of all playlist, and count them by a bar chart"
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2",What are the number of the names of all the playlists?
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","What are the names of all the playlists, and count them by a bar chart"
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2",A bar chart for listing the number of the name of all playlist.
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2",A bar chart for what are the number of the names of all the playlists?
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2",List the number of the name of all playlist.
"SELECT name , COUNT(name) FROM playlists GROUP BY name",Bar,Easy,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2",Bar chart x axis name y axis how many name
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state by a bar chart."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state. Visualize by bar chart."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7",Show me a bar chart for how many invoices were billed from each state?
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7",Return a histogram on how many invoices were billed from each state?
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7",How many invoices were billed from each state. Plot them as bar chart.
"SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'SUM(total)', 'x_data': [['USA', 'Canada', 'France', 'Brazil', 'Germany', 'United Kingdom', 'Czech Republic', 'Portugal']], 'y_data': [[523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998]], 'classify': [], 'describe': ''}",bar,billing_country,SUM(total),"USA, Canada, France, Brazil, Germany, United Kingdom, Czech Republic, Portugal","523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998",Draw a bar chart for what are the names of the top 8 countries by total invoice size and what are those sizes?
"SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'SUM(total)', 'x_data': [['USA', 'Canada', 'France', 'Brazil', 'Germany', 'United Kingdom', 'Czech Republic', 'Portugal']], 'y_data': [[523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998]], 'classify': [], 'describe': ''}",bar,billing_country,SUM(total),"USA, Canada, France, Brazil, Germany, United Kingdom, Czech Republic, Portugal","523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998",Give me a histogram for what are the names of the top 8 countries by total invoice size and what are those sizes?
"SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_country', 'y_name': 'SUM(total)', 'x_data': [['USA', 'Canada', 'France', 'Brazil', 'Germany', 'United Kingdom', 'Czech Republic', 'Portugal']], 'y_data': [[523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998]], 'classify': [], 'describe': ''}",bar,billing_country,SUM(total),"USA, Canada, France, Brazil, Germany, United Kingdom, Czech Republic, Portugal","523.0600000000003, 303.95999999999987, 195.09999999999997, 190.1, 156.48, 112.86, 90.24, 77.23999999999998",What are the names of the top 8 countries by total invoice size and what are those sizes. Plot them as bar chart.
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","A bar chart for finding the number of the names of swimmers who has a result of ""win""."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","Find the names of swimmers who has a result of ""win"", and count them by a bar chart"
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","Find the number of the names of swimmers who has a result of ""win""."
"SELECT Country , count(*) FROM stadium GROUP BY country",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2",Show me a bar chart for how many stadiums does each country have?
"SELECT Country , count(*) FROM stadium GROUP BY country",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2",Draw a bar chart for how many stadiums does each country have?
"SELECT Country , count(*) FROM stadium GROUP BY country",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2",How many stadiums does each country have. Show bar chart.
"SELECT Country , count(*) FROM stadium GROUP BY country",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2",Show me the total number by country in a histogram
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me about the correlation between  ID and  meter_100  in a scatter chart.
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Draw a scatter chart about the correlation between  ID and  meter_100 .
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",What is the relationship between  ID and  meter_100 ?
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Return a scatter chart about the correlation between  ID and  meter_100 .
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize the relationship between  ID and  meter_100 .
"SELECT ID , meter_100 FROM swimmer",Scatter,Easy,swimming,"{'chart': 'scatter', 'x_name': 'ID', 'y_name': 'meter_100', 'x_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",scatter,ID,meter_100,"7, 4, 5, 8, 1, 2, 6, 3","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me a scatter plot of id and meter_100 for .
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Return a bar chart about the distribution of  Nationality and the sum of ID , and group by attribute Nationality."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Give me the comparison about the sum of ID over the  Nationality , and group by attribute Nationality."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Show me about the distribution of  Nationality and the sum of ID , and group by attribute Nationality in a bar chart."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Draw a bar chart about the distribution of  Nationality and the sum of ID , and group by attribute Nationality."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Give me the comparison about the sum of ID over the  Nationality , and group by attribute Nationality by a bar chart."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1",Show total number of id from each nationality
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Give me the comparison about the average of ID over the  Nationality , and group by attribute Nationality by a bar chart."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","A bar chart shows the distribution of  Nationality and the average of ID , and group by attribute Nationality."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Return a bar chart about the distribution of  Nationality and the average of ID , and group by attribute Nationality."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Find  Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Draw a bar chart about the distribution of  Nationality and the average of ID , and group by attribute Nationality."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1",Show the average of id from each nationality
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Return a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Give me the comparison about the sum of meter_100 over the  Nationality , and group by attribute Nationality."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Draw a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Find  Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Visualize a bar chart about the distribution of  Nationality and the sum of meter_100 , and group by attribute Nationality."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57",Bar chart x axis nationality y axis sum meter 100
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Draw a bar chart about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Visualize a bar chart about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Show me about the distribution of  Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Find  Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the  Nationality , and group by attribute Nationality by a bar chart."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57",Bar chart x axis nationality y axis mean meter 100
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Find  meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Give me the comparison about the sum of ID over the  meter_200 , and group by attribute meter_200 by a bar chart."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","A bar chart shows the distribution of  meter_200 and the sum of ID , and group by attribute meter_200."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Draw a bar chart about the distribution of  meter_200 and the sum of ID , and group by attribute meter_200."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Return a bar chart about the distribution of  meter_200 and the sum of ID , and group by attribute meter_200."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7",Show total number of id from each meter 200
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Show me about the distribution of  meter_200 and the average of ID , and group by attribute meter_200 in a bar chart."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Visualize a bar chart about the distribution of  meter_200 and the average of ID , and group by attribute meter_200."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","A bar chart shows the distribution of  meter_200 and the average of ID , and group by attribute meter_200."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Return a bar chart about the distribution of  meter_200 and the average of ID , and group by attribute meter_200."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Find  meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5",Draw a bar chart of meter 200 versus the average of id
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the  meter_200 , and group by attribute meter_200 by a bar chart."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the  meter_200 , and group by attribute meter_200."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Show me about the distribution of  meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Find  meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Return a bar chart about the distribution of  meter_200 and the sum of meter_100 , and group by attribute meter_200."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114",Create a bar chart showing total number of meter 100 across meter 200
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the  meter_200 , and group by attribute meter_200."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Draw a bar chart about the distribution of  meter_200 and the average of meter_100 , and group by attribute meter_200."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the  meter_200 , and group by attribute meter_200 by a bar chart."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Find  meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Show me about the distribution of  meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57",Plot mean meter 100 by grouped by meter 200 as a bar graph
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",Draw a bar chart about the distribution of  name and  ID .
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",A bar chart shows the distribution of  name and  ID .
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  name and  ID .
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",Visualize a bar chart about the distribution of  name and  ID .
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  name .
"SELECT name , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,name,ID,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","7, 4, 5, 8, 1, 2, 6, 3",Plot id by grouped by name as a bar graph
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  name and  meter_100 .
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Return a bar chart about the distribution of  name and  meter_100 .
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me about the distribution of  name and  meter_100  in a bar chart.
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Draw a bar chart about the distribution of  name and  meter_100 .
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  name  by a bar chart.
"SELECT name , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Przemysław Stańczyk', 'Craig Stevens', 'Federico Colbertaldo', 'Sébastien Rouault', 'Sergiy Fesenko', 'Grant Hackett', 'Ryan Cochrane', 'Oussama Mellouli']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Przemysław Stańczyk, Craig Stevens, Federico Colbertaldo, Sébastien Rouault, Sergiy Fesenko, Grant Hackett, Ryan Cochrane, Oussama Mellouli","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Draw a bar chart of name versus meter_100
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3","Find  meter_300 and  ID , and visualize them by a bar chart."
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  meter_300 .
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3",Show me about the distribution of  meter_300 and  ID  in a bar chart.
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3",Draw a bar chart about the distribution of  meter_300 and  ID .
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  meter_300 and  ID .
"SELECT meter_300 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","7, 4, 5, 8, 1, 2, 6, 3",Show id from each meter 300
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me about the distribution of  meter_300 and  meter_100  in a bar chart.
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  meter_300 and  meter_100 .
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31","Find  meter_300 and  meter_100 , and visualize them by a bar chart."
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_300  by a bar chart.
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_300 .
"SELECT meter_300 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.02', '2:55.90', '2:56.04', '2:53.46', '2:57.10', '2:56.95', '2:56.64', '2:55.94']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.02, 2:55.90, 2:56.04, 2:53.46, 2:57.10, 2:56.95, 2:56.64, 2:55.94","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Plot meter_100 by grouped by meter 300 as a bar graph
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3","Find  meter_400 and  ID , and visualize them by a bar chart."
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3",A bar chart shows the distribution of  meter_400 and  ID .
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3",Show me about the distribution of  meter_400 and  ID  in a bar chart.
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  meter_400  by a bar chart.
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3",Visualize a bar chart about the distribution of  meter_400 and  ID .
"SELECT meter_400 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","7, 4, 5, 8, 1, 2, 6, 3",Show id from each meter 400
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31","Find  meter_400 and  meter_100 , and visualize them by a bar chart."
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",A bar chart shows the distribution of  meter_400 and  meter_100 .
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  meter_400 and  meter_100 .
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Return a bar chart about the distribution of  meter_400 and  meter_100 .
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_400 .
"SELECT meter_400 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:55.36', '3:55.72', '3:55.37', '3:52.93', '3:57.12', '3:57.00', '3:56.34', '3:55.49']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:55.36, 3:55.72, 3:55.37, 3:52.93, 3:57.12, 3:57.00, 3:56.34, 3:55.49","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Bar graph to show meter_100 from different meter 400
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  meter_500 and  ID .
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",Show me about the distribution of  meter_500 and  ID  in a bar chart.
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  meter_500 .
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",A bar chart shows the distribution of  meter_500 and  ID .
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",Draw a bar chart about the distribution of  meter_500 and  ID .
"SELECT meter_500 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","7, 4, 5, 8, 1, 2, 6, 3",Show id from each meter 500
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_500  by a bar chart.
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_500 .
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31","Find  meter_500 and  meter_100 , and visualize them by a bar chart."
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",A bar chart shows the distribution of  meter_500 and  meter_100 .
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me about the distribution of  meter_500 and  meter_100  in a bar chart.
"SELECT meter_500 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:54.21', '4:55.08', '4:54.48', '4:52.85', '4:57.03', '4:56.96', '4:56.15', '4:54.19']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:54.21, 4:55.08, 4:54.48, 4:52.85, 4:57.03, 4:56.96, 4:56.15, 4:54.19","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Bar chart x axis meter 500 y axis meter_100
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3",Show me about the distribution of  meter_600 and  ID  in a bar chart.
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3",Visualize a bar chart about the distribution of  meter_600 and  ID .
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3","Find  meter_600 and  ID , and visualize them by a bar chart."
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3",A bar chart shows the distribution of  meter_600 and  ID .
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  meter_600 and  ID .
"SELECT meter_600 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","7, 4, 5, 8, 1, 2, 6, 3",Bar chart x axis meter 600 y axis id
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_600 .
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  meter_600 and  meter_100 .
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Draw a bar chart about the distribution of  meter_600 and  meter_100 .
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Return a bar chart about the distribution of  meter_600 and  meter_100 .
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_600  by a bar chart.
"SELECT meter_600 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:54.45', '5:53.53', '5:53.03', '5:56.31', '5:57.10', '5:56.99', '5:52.92']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:54.45, 5:53.53, 5:53.03, 5:56.31, 5:57.10, 5:56.99, 5:52.92","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Create a bar chart showing meter_100 across meter 600
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",A bar chart shows the distribution of  meter_700 and  ID .
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  meter_700 and  ID .
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  meter_700 .
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  meter_700  by a bar chart.
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",Draw a bar chart about the distribution of  meter_700 and  ID .
"SELECT meter_700 , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","7, 4, 5, 8, 1, 2, 6, 3",Bar chart x axis meter 700 y axis id
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  meter_700 .
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",A bar chart shows the distribution of  meter_700 and  meter_100 .
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Show me about the distribution of  meter_700 and  meter_100  in a bar chart.
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31","Find  meter_700 and  meter_100 , and visualize them by a bar chart."
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  meter_700 and  meter_100 .
"SELECT meter_700 , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.91', '6:52.69', '6:52.58', '6:53.34', '6:55.07', '6:57.44', '6:57.69', '6:50.80']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.91, 6:52.69, 6:52.58, 6:53.34, 6:55.07, 6:57.44, 6:57.69, 6:50.80","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Bar graph to show meter_100 from different meter 700
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3",Show me about the distribution of  Time and  ID  in a bar chart.
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3",Draw a bar chart about the distribution of  Time and  ID .
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3",Give me the comparison about  ID over the  Time  by a bar chart.
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3",Return a bar chart about the distribution of  Time and  ID .
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3","Find  Time and  ID , and visualize them by a bar chart."
"SELECT Time , ID FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[7, 4, 5, 8, 1, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","7, 4, 5, 8, 1, 2, 6, 3",Bar chart x axis time y axis id
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Visualize a bar chart about the distribution of  Time and  meter_100 .
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Give me the comparison about  meter_100 over the  Time  by a bar chart.
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31","Find  Time and  meter_100 , and visualize them by a bar chart."
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Draw a bar chart about the distribution of  Time and  meter_100 .
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Return a bar chart about the distribution of  Time and  meter_100 .
"SELECT Time , meter_100 FROM swimmer",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56', '7:46.95']], 'y_data': [[57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56, 7:46.95","57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84, 57.31",Bar chart x axis time y axis meter_100
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Draw a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Return a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Find  Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Visualize a bar chart about the distribution of  Nationality and the amount of Nationality , and group by attribute Nationality."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Give me the comparison about the amount of Nationality over the  Nationality , and group by attribute Nationality."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1",Bar chart x axis nationality y axis how many nationality
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Draw a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Give me the comparison about the amount of meter_200 over the  meter_200 , and group by attribute meter_200."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Find  meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Show me about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Return a bar chart about the distribution of  meter_200 and the amount of meter_200 , and group by attribute meter_200."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2",Create a bar chart showing the number of meter 200 across meter 200
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Pie,Hard,swimming,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1",Find the number of the names of stadiums that some Australian swimmers have been to.
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Pie,Hard,swimming,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1","Find the names of stadiums that some Australian swimmers have been to, and count them by a pie chart"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Pie,Hard,swimming,"{'chart': 'pie', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",pie,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1",A pie chart for finding the number of the names of stadiums that some Australian swimmers have been to.
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1",Find the number of the names of stadiums that some Australian swimmers have been to.
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1","Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",Bar,Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1",A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to.
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Show all artist names and the number of exhibitions for each artist in a pie chart.
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Show all artist names and the number of exhibitions for each artist. 
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",how many exhibitions has each artist had?
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Display a pie chart for how many exhibitions has each artist had?
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",pie,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",How many exhibitions has each artist had. Show the proportion.
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Show all artist names and the number of exhibitions for each artist in a bar chart.
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Show all artist names and the number of exhibitions for each artist. Show bar chart.
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",how many exhibitions has each artist had?
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",Return a histogram on how many exhibitions has each artist had?
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Jeff Sluman', 'Nick Price']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, John Daly, Paul Azinger, Jeff Sluman, Nick Price","2, 1, 1, 1, 1",How many exhibitions has each artist had. Plot them as bar chart.
"SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",Pie,Medium,theme_gallery,"{'chart': 'pie', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",pie,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the proportion of attendance by date."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1995', '1996', '1997', '1998']], 'y_data': [[2, 0, 0, 0, 1], [2, 0, 0, 0, 2]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1995, 1996, 1997, 1998","2, 0, 0, 0, 1","For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1995', '1996', '1997', '1998']], 'y_data': [[2, 0, 0, 0, 1], [2, 0, 0, 0, 2]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1995, 1996, 1997, 1998","2, 0, 0, 0, 1","For artist names who are not from the United States, how many names in each year?"
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1995', '1996', '1997', '1998']], 'y_data': [[1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1995, 1996, 1997, 1998","1, 0, 0, 0, 1","For all artist names who are not from the United States, show the total number of each year."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1995', '1996', '1997', '1998']], 'y_data': [[1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1995, 1996, 1997, 1998","1, 0, 0, 0, 1","For all artist names who are not from the United States, show the total number of each year with a bar chart."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Pie,Easy,theme_gallery,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Show all countries with a pie chart.
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Pie,Easy,theme_gallery,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",What is the proportion of the number of countries in the artist table?
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Pie,Easy,theme_gallery,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Give me a pie chart about the proportion of the number of countries in the artist table
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Pie,Easy,theme_gallery,"{'chart': 'pie', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",pie,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Create a pie chart showing how many country across country.
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Compare all countries with a bar chart.
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",What is the number of countries in the artist table?
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Give me a bar chart about the number of countries in the artist table
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1",Show how many country from each country
"SELECT Country , AVG(Age) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48",Show the average of artists' age by country.
"SELECT Country , AVG(Age) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48",What are the average ages of artists by countries? Visualize the result with a histogram.
"SELECT Country , AVG(Age) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48",Compare the average of artists' age by country in a bar graph.
"SELECT Country , AVG(Age) FROM artist GROUP BY Country",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48",Bar chart x axis country y axis the average of age
"SELECT Name , Age FROM artist",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Larry Nelson', 'Jeff Sluman', 'John Daly', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Vijay Singh']], 'y_data': [[50, 57, 46, 47, 48, 48, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Larry Nelson, Jeff Sluman, John Daly, Paul Azinger, Nick Price, Mark Brooks, Vijay Singh","50, 57, 46, 47, 48, 48, 45",Show all artist names and ages in a histogram.
"SELECT Name , Age FROM artist",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Larry Nelson', 'Jeff Sluman', 'John Daly', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Vijay Singh']], 'y_data': [[50, 57, 46, 47, 48, 48, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Larry Nelson, Jeff Sluman, John Daly, Paul Azinger, Nick Price, Mark Brooks, Vijay Singh","50, 57, 46, 47, 48, 48, 45",What are the names and ages of artists? Show the result in a bar graph.
"SELECT Name , Age FROM artist",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Larry Nelson', 'Jeff Sluman', 'John Daly', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Vijay Singh']], 'y_data': [[50, 57, 46, 47, 48, 48, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Larry Nelson, Jeff Sluman, John Daly, Paul Azinger, Nick Price, Mark Brooks, Vijay Singh","50, 57, 46, 47, 48, 48, 45",A bar chart compares the ages of all artists.
"SELECT Name , Age FROM artist",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Larry Nelson', 'Jeff Sluman', 'John Daly', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Vijay Singh']], 'y_data': [[50, 57, 46, 47, 48, 48, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Larry Nelson, Jeff Sluman, John Daly, Paul Azinger, Nick Price, Mark Brooks, Vijay Singh","50, 57, 46, 47, 48, 48, 45",Bar chart x axis name y axis age
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme",Stacked Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[1, 1, 1, 2, 1, 1], [1, 2, 1, 2, 1, 1], [2, 2, 1, 2, 1, 1], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2004, 2005, 2006, 2007, 2008, 2009","1, 1, 1, 2, 1, 1",Group by the theme and count the year with a stacked bar chart.
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme",Stacked Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2004', '2005', '2006', '2007', '2008', '2009']], 'y_data': [[1, 1, 1, 2, 1, 1], [1, 2, 1, 2, 1, 1], [2, 2, 1, 2, 1, 1], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2004, 2005, 2006, 2007, 2008, 2009","1, 1, 1, 2, 1, 1",Stacked bar of year and the number of year colored by Theme
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 0, 1, 1]], 'classify': [], 'describe': ''}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 0, 1, 1","Bin the Year into weekday interval, then group and count by Year."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 0, 1, 1]], 'classify': [], 'describe': ''}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 0, 1, 1","Give a bar chart that bins year into weekday interval, group by year and count them."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Year",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 0, 1, 1]], 'classify': [], 'describe': ''}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 0, 1, 1",Show me how many year by year in a histogram
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008', '2009']], 'y_data': [[2, 0, 0, 1], [2, 0, 0, 2]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008, 2009","2, 0, 0, 1","Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008', '2009']], 'y_data': [[2, 0, 0, 1], [2, 0, 0, 2]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008, 2009","2, 0, 0, 1","Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008', '2009']], 'y_data': [[1, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008, 2009","1, 0, 0, 1","Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008', '2009']], 'y_data': [[1, 0, 0, 1]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008, 2009","1, 0, 0, 1","Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years."
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(share_count)', 'x_data': [[20, 18, 8, 7, 14, 19, 17, 2, 6, 3]], 'y_data': [[0, 298, 930, 1522, 8040, 47971, 96178, 831668, 8718572, 225053304.3333333]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(share_count),"20, 18, 8, 7, 14, 19, 17, 2, 6, 3","0, 298, 930, 1522, 8040, 47971, 96178, 831668, 8718572, 225053304.3333333","Show the average share count of transactions each each investor, ordered by average share count in a scatter chart"
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(share_count)', 'x_data': [[20, 18, 8, 7, 14, 19, 17, 2, 6, 3]], 'y_data': [[0, 298, 930, 1522, 8040, 47971, 96178, 831668, 8718572, 225053304.3333333]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(share_count),"20, 18, 8, 7, 14, 19, 17, 2, 6, 3","0, 298, 930, 1522, 8040, 47971, 96178, 831668, 8718572, 225053304.3333333","Show the average share count of transactions each each investor, ordered by average share count. Visualize by scatter chart."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description",Stacked Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 0, 1, 0","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description",Grouping Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[2, 0, 0, 0, 0, 0, 0, 0, 1], [2, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","2, 0, 0, 0, 0, 0, 0, 0, 1","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval. Show the result with a grouping line chart."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 0, 0, 0, 0, 0, 0, 0, 1","For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 1, 0, 2, 0, 2]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 1, 0, 2, 0, 2","Show all dates of transactions whose type code is ""SALE"", and count them by a bar chart"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1979~1981', '1982~1984', '1985~1987', '1988~1990', '1991~1993', '1994~1996', '1997~1999', '2000~2002', '2003~2004']], 'y_data': [[2, 1, 0, 1, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1979~1981, 1982~1984, 1985~1987, 1988~1990, 1991~1993, 1994~1996, 1997~1999, 2000~2002, 2003~2004","2, 1, 0, 1, 0, 0, 0, 2, 1","Show all dates of transactions whose type code is ""SALE"", and count them by a line chart"
"SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'lot_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[1, 3, 4, 8, 9, 10, 11, 14, 15]], 'y_data': [[101119.2532, 207484122.2796, 48777.969000000005, 48777.969000000005, 0, 13.084466666666666, 24402.613, 175642.8343, 1]], 'classify': [], 'describe': ''}",scatter,lot_id,avg(amount_of_transaction),"1, 3, 4, 8, 9, 10, 11, 14, 15","101119.2532, 207484122.2796, 48777.969000000005, 48777.969000000005, 0, 13.084466666666666, 24402.613, 175642.8343, 1",Show the average amount of transactions for different lots in a scatter chart
"SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'lot_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[1, 3, 4, 8, 9, 10, 11, 14, 15]], 'y_data': [[101119.2532, 207484122.2796, 48777.969000000005, 48777.969000000005, 0, 13.084466666666666, 24402.613, 175642.8343, 1]], 'classify': [], 'describe': ''}",scatter,lot_id,avg(amount_of_transaction),"1, 3, 4, 8, 9, 10, 11, 14, 15","101119.2532, 207484122.2796, 48777.969000000005, 48777.969000000005, 0, 13.084466666666666, 24402.613, 175642.8343, 1",Show the average amount of transactions for different lots. Show the correlation.
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(share_count)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(share_count),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0",Show the average share count of transactions for different investors with a scatter chart.
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(share_count)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(share_count),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0",Show the average share count of transactions for different investors. Plot them as scatter chart.
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(share_count)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(share_count),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","831668, 225053304.3333333, 8718572, 1522, 930, 8040, 96178, 298, 47971, 0",Show me a scatter plot of investor id and mean share count for .
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3","Return the lot details, group the lot details, and compute the number of each lot details."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3","A bar chart groups the lot details, and computes the number of each lot details."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3",Bar chart x axis lot details y axis the number of lot details
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE""",Pie,Medium,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",pie,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" with a pie chart."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE""",Pie,Medium,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",pie,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"". Show a pie chart."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE""",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" by a bar chart."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE""",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"". Plot them as bar chart."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 4",A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 4",What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 4","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1",What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1",A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",pie,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the number of the lot details of lots that belong to investors with details ""l""?"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",pie,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","A pie chart for returning the number of the lot details of lots that belong to investors with details ""l""?"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",pie,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the lot details of lots that belong to investors with details ""l"", and count them by a pie chart"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","A bar chart for returning the number of the lot details of lots that belong to investors with details ""l""?"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the number of the lot details of lots that belong to investors with details ""l""?"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the lot details of lots that belong to investors with details ""l"", and count them by a bar chart"
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'd', 'i', 'j', 'k', 'l', 'o', 'q', 'r', 't', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, d, i, j, k, l, o, q, r, t, w, y, z","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2","Show all investor details, and count them by a bar chart"
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'd', 'i', 'j', 'k', 'l', 'o', 'q', 'r', 't', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, d, i, j, k, l, o, q, r, t, w, y, z","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2",Plot the number of investor details by grouped by investor details as a bar graph
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[2, 3, 1, 1, 1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': ''}",scatter,investor_id,COUNT(*),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","2, 3, 1, 1, 1, 1, 1, 2, 2, 1",Show the number of transactions for different investors with a scatter chart.
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[2, 3, 1, 1, 1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': ''}",scatter,investor_id,COUNT(*),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","2, 3, 1, 1, 1, 1, 1, 2, 2, 1",Show the number of transactions for different investors. Plot them as scatter chart.
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[2, 3, 1, 1, 1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': ''}",scatter,investor_id,COUNT(*),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","2, 3, 1, 1, 1, 1, 1, 2, 2, 1",Show me a scatter plot of investor id and the total number for .
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Pie,Easy,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",pie,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Show the average transaction amount for different transaction types with a pie chart.
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Pie,Easy,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",pie,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Show the average transaction amount for different transaction types. Visualize by pie chart.
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Pie,Easy,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",pie,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Compute the total the average of amount of transaction across transaction type code as a pie chart.
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Show the average transaction amount for different transaction types with a bar chart.
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Show the average transaction amount for different transaction types. 
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427",Create a bar chart showing mean amount of transaction across transaction type code
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['d', 'k', 'l', 't', 'w', 'z']], 'y_data': [[2, 2, 3, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"d, k, l, t, w, z","2, 2, 3, 1, 3, 2","Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 4",Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number.
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 4",Give me a bar chart for how many date of transaction of each date of transaction
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1",Plot how many date of transaction over date of transaction in a line chart
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[674529892, 96529, 1663726, 0, 9357173, 0, 97709]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","674529892, 96529, 1663726, 0, 9357173, 0, 97709","Bin all date of transactions into the weekday interval, and sum the share count of each bin. Return the result using a bar chart."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[674529892, 96529, 1663726, 0, 9357173, 0, 97709]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","674529892, 96529, 1663726, 0, 9357173, 0, 97709",Bar graph to show sum share count from different date of transaction
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[674529892, 32176.333333333332, 554575.3333333334, 0, 3119057.6666666665, 0, 24427.25]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","674529892, 32176.333333333332, 554575.3333333334, 0, 3119057.6666666665, 0, 24427.25","Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin. Return the result using a bar chart."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS",Bar,Easy,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[674529892, 32176.333333333332, 554575.3333333334, 0, 3119057.6666666665, 0, 24427.25]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","674529892, 32176.333333333332, 554575.3333333334, 0, 3119057.6666666665, 0, 24427.25",Bar chart x axis date of transaction y axis mean share count
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178","Bin all date of transactions into the YEAR interval, and sum the share count of each bin. Return the result using a line chart."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178","Bin all date of transactions into the YEAR interval, and sum the share count of each bin. What is the trend?"
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178",Visualize the general trend of sum share count over the date of transaction.
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178","Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin. Visualize the result using a trend line."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178","Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin. What is the trend?"
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS",Line,Easy,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178",Plot date of transaction by mean share count as a trend line
"SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(amount_of_transaction),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207",Show the average amount of transactions for different investors with a scatter chart.
"SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(amount_of_transaction),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207",Show the average amount of transactions for different investors. Plot them as scatter chart.
"SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id",Scatter,Easy,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[2, 3, 6, 7, 8, 14, 17, 18, 19, 20]], 'y_data': [[24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207]], 'classify': [], 'describe': ''}",scatter,investor_id,avg(amount_of_transaction),"2, 3, 6, 7, 8, 14, 17, 18, 19, 20","24403.6612, 61.06666666666666, 302507.6996, 822.803, 0, 4.5263, 78035671.4424, 14.1285, 103742065.5898, 82057.207","Plot a scatter chart, investor id by mean amount of transaction."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 2, 3, 0, 1, 0, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 2, 3, 0, 1, 0, 3",Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart.
"SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'sales_details', 'y_name': 'COUNT(sales_details)', 'x_data': [['e', 'f', 'n', 'o', 'p', 's', 't', 'y']], 'y_data': [[1, 1, 1, 1, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY sales_details'}",bar,sales_details,COUNT(sales_details),"e, f, n, o, p, s, t, y","1, 1, 1, 1, 2, 2, 1, 1","For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 2, 1, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 2, 1, 0, 1, 0, 1, 1, 3","For the dates of transactions with amount smaller than 3000, bin the date into year interval,  and draw a line chart to show the trend of the number of records in each bin."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 3","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 3",A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 3, 3, 0, 3, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 3, 3, 0, 3, 1, 3",Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1",A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1",Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart"
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z', 'w']], 'y_data': [[3, 2, 18]], 'classify': [], 'describe': ''}",pie,Investor_details,investor_id,"d, z, w","3, 2, 18",Show the id and details for the investors who have the top 3 number of transactions in a pie chart.
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z', 'w']], 'y_data': [[3, 2, 18]], 'classify': [], 'describe': ''}",pie,Investor_details,investor_id,"d, z, w","3, 2, 18",Show the id and details for the investors who have the top 3 number of transactions. Show the proportion.
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z', 'w']], 'y_data': [[3, 2, 18]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z, w","3, 2, 18",Show the id and details for the investors who have the top 3 number of transactions by a bar chart.
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z', 'w']], 'y_data': [[3, 2, 18]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z, w","3, 2, 18",Show the id and details for the investors who have the top 3 number of transactions. Show bar chart.
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",pie,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1","What are the purchase details of transactions with amount bigger than 10000, and count them by a pie chart"
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",pie,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1",A pie chart for what are the number of the purchase details of transactions with amount bigger than 10000?
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Pie,Hard,tracking_share_transactions,"{'chart': 'pie', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",pie,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1",What are the number of the purchase details of transactions with amount bigger than 10000?
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1",A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1",What are the number of the purchase details of transactions with amount bigger than 10000?
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1","What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart"
"SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)",Scatter,Hard,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'lot_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[9, 15, 10, 11, 4, 8, 1, 14, 3]], 'y_data': [[0, 1, 13.084466666666666, 24402.613, 48777.969000000005, 48777.969000000005, 101119.2532, 175642.8343, 207484122.2796]], 'classify': [], 'describe': ''}",scatter,lot_id,avg(amount_of_transaction),"9, 15, 10, 11, 4, 8, 1, 14, 3","0, 1, 13.084466666666666, 24402.613, 48777.969000000005, 48777.969000000005, 101119.2532, 175642.8343, 207484122.2796","Show the average amount of transactions for different lots, ordered by average amount of transactions by a scatter chart."
"SELECT lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)",Scatter,Hard,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'lot_id', 'y_name': 'avg(amount_of_transaction)', 'x_data': [[9, 15, 10, 11, 4, 8, 1, 14, 3]], 'y_data': [[0, 1, 13.084466666666666, 24402.613, 48777.969000000005, 48777.969000000005, 101119.2532, 175642.8343, 207484122.2796]], 'classify': [], 'describe': ''}",scatter,lot_id,avg(amount_of_transaction),"9, 15, 10, 11, 4, 8, 1, 14, 3","0, 1, 13.084466666666666, 24402.613, 48777.969000000005, 48777.969000000005, 101119.2532, 175642.8343, 207484122.2796","Show the average amount of transactions for different lots, ordered by average amount of transactions. Show scatter chart."
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE"" GROUP BY investor_id",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 6, 17, 18]], 'y_data': [[2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,investor_id,COUNT(*),"2, 3, 6, 17, 18","2, 2, 1, 1, 1","Show the number of transactions with transaction type code ""SALE"" for different investors if it is larger than 0 in a scatter chart"
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE"" GROUP BY investor_id",Scatter,Medium,tracking_share_transactions,"{'chart': 'scatter', 'x_name': 'investor_id', 'y_name': 'COUNT(*)', 'x_data': [[2, 3, 6, 17, 18]], 'y_data': [[2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",scatter,investor_id,COUNT(*),"2, 3, 6, 17, 18","2, 2, 1, 1, 1","Show the number of transactions with transaction type code ""SALE"" for different investors if it is larger than 0. Show the correlation."
"SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10",Bar,Easy,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'problem_log_id', 'x_data': [['1997-08-31', '2009-04-10']], 'y_data': [[12, 13]], 'classify': [], 'describe': ''}",bar,log_entry_date,problem_log_id,"1997-08-31, 2009-04-10","12, 13",Find all the ids and dates of the logs for the problem whose id is 10. Plot them as bar chart.
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 0, 1]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 0, 1","Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates."
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 1, 0, 1]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","0, 0, 0, 0, 1, 0, 1","For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart."
"SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""",Scatter,Medium,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'problem_id', 'y_name': 'problem_log_id', 'x_data': [[11, 8]], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",scatter,problem_id,problem_log_id,"11, 8","1, 2",Show the correlation between the problem id and log id which are assigned to the staff named Rylan Homenick with a scatter chart.
"SELECT problem_id , problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""",Scatter,Medium,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'problem_id', 'y_name': 'problem_log_id', 'x_data': [[11, 8]], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",scatter,problem_id,problem_log_id,"11, 8","1, 2",List the problem id and log id which are assigned to the staff named Rylan Homenick. Plot them as scatter chart.
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description",Bar,Easy,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",List all the log entry descriptions and count them using a bar chart.
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description",Bar,Easy,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",What is the number of entry descriptions of each problem?
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description",Bar,Easy,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",Draw a bar chart for what is the number of entry descriptions of each problem?
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description",Bar,Easy,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1",Bar chart x axis log entry description y axis the number of log entry description
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",Scatter,Medium,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[4, 2, 3, 1, 1, 1, 1, 1, 1]], 'y_data': [[1, 2, 4, 5, 6, 7, 8, 13, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"4, 2, 3, 1, 1, 1, 1, 1, 1","1, 2, 4, 5, 6, 7, 8, 13, 15","For each product which has problems, what are the number of problems and the product id. Visualize by scatter chart."
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",Scatter,Medium,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[4, 2, 3, 1, 1, 1, 1, 1, 1]], 'y_data': [[1, 2, 4, 5, 6, 7, 8, 13, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"4, 2, 3, 1, 1, 1, 1, 1, 1","1, 2, 4, 5, 6, 7, 8, 13, 15","For each product with some problems, list the count of problems and the product id. Show the correlation."
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id",Scatter,Hard,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[2, 1, 2, 1, 1]], 'y_data': [[1, 2, 4, 8, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"2, 1, 2, 1, 1","1, 2, 4, 8, 15","For each product that has problems, find the number of problems reported after 1986-11-13 and the product id. Visualize by scatter chart."
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id",Scatter,Hard,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[2, 1, 2, 1, 1]], 'y_data': [[1, 2, 4, 8, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"2, 1, 2, 1, 1","1, 2, 4, 8, 15",Show me a scatter chart for what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id",Scatter,Hard,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[2, 1, 2, 1, 1]], 'y_data': [[1, 2, 4, 8, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"2, 1, 2, 1, 1","1, 2, 4, 8, 15",Return a scatter on what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.
"SELECT count(*) , T1.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id",Scatter,Hard,tracking_software_problems,"{'chart': 'scatter', 'x_name': 'count(*)', 'y_name': 'product_id', 'x_data': [[2, 1, 2, 1, 1]], 'y_data': [[1, 2, 4, 8, 15]], 'classify': [], 'describe': ''}",scatter,count(*),product_id,"2, 1, 2, 1, 1","1, 2, 4, 8, 15",What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13. Visualize by scatter chart.
"SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)",Scatter,Medium,wine_1,"{'chart': 'scatter', 'x_name': 'avg(Price)', 'y_name': 'avg(Score)', 'x_data': [[29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90]], 'y_data': [[88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90]], 'classify': [], 'describe': ''}",scatter,avg(Price),avg(Score),"29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90","88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90",What is the correlation between the average price and the score of wines of each appellation?
"SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)",Scatter,Medium,wine_1,"{'chart': 'scatter', 'x_name': 'avg(Price)', 'y_name': 'avg(Score)', 'x_data': [[29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90]], 'y_data': [[88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90]], 'classify': [], 'describe': ''}",scatter,avg(Price),avg(Score),"29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90","88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90",What are the average price and score of wines for each appellation? Show me a scatter plot.
"SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)",Scatter,Medium,wine_1,"{'chart': 'scatter', 'x_name': 'avg(Price)', 'y_name': 'avg(Score)', 'x_data': [[29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90]], 'y_data': [[88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90]], 'classify': [], 'describe': ''}",scatter,avg(Price),avg(Score),"29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90","88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90",Give me a scatter chart about the correlation between the average price and the score of wines grouped by appellation?
"SELECT avg(Price) , avg(Score) FROM WINE GROUP BY avg(Price)",Scatter,Medium,wine_1,"{'chart': 'scatter', 'x_name': 'avg(Price)', 'y_name': 'avg(Score)', 'x_data': [[29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90]], 'y_data': [[88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90]], 'classify': [], 'describe': ''}",scatter,avg(Price),avg(Score),"29.142857142857146, 31.5, 18, 53.33333333333334, 31, 125, 46.5, 20, 39.48275862068965, 36.16666666666666, 13, 52.5, 25, 27.8, 27.653846153846153, 29.5, 25, 40, 20, 21, 29, 37.5, 26, 40, 21.5, 15.333333333333336, 22.5, 38.333333333333336, 53.33333333333334, 59.13541666666666, 18, 12, 95, 32.285714285714285, 49, 38, 49.60377358490565, 45.714285714285715, 31.5, 28, 40, 46.28571428571429, 41.5, 29.33333333333333, 25, 10, 35, 49.02564102564103, 43.481481481481474, 42.68421052631579, 15, 70.66666666666667, 77.5, 60.352941176470594, 84.5, 25, 90","88.14285714285714, 90, 87, 92.33333333333331, 92, 88, 91, 84, 87.82758620689656, 90, 87, 92, 92, 87.2, 89.30769230769229, 89, 78, 91, 87, 88, 93, 89.5, 87, 89, 87.5, 86.33333333333331, 89, 90.66666666666669, 90.66666666666669, 90.47916666666669, 86, 85, 90.5, 88.42857142857143, 90.5, 90, 91.7924528301887, 89.42857142857143, 89.5, 89.41666666666669, 93, 91.23809523809523, 91.25, 88.73333333333332, 86, 82, 89, 90.8205128205128, 90.4074074074074, 89.7894736842105, 86, 89.33333333333331, 91.5, 90.88235294117645, 92.25, 91, 90",Show me a scatter plot of avg(price) and the average of score for .
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",Please give me a bar chart that counts the number of grape of wine.
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",What is the number of different grapes of each wine? Show me a bar chart.
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",Give me a bar chart for how many grape of each grape
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Pinot Noir', 'Syrah', 'Zinfandel']], 'y_data': [[15, 13, 1, 19, 7, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Cabernet Sauvingnon, Chardonnay, Grenache, Pinot Noir, Syrah, Zinfandel","15, 13, 1, 19, 7, 2","A bar chart for listing the number of grapes, whose score is higher than 93 ordered by Name."
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Score > 93 GROUP BY Grape ORDER BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Pinot Noir', 'Syrah', 'Zinfandel']], 'y_data': [[15, 13, 1, 19, 7, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Cabernet Sauvingnon, Chardonnay, Grenache, Pinot Noir, Syrah, Zinfandel","15, 13, 1, 19, 7, 2","What is the number of grapes with scores above 93, sorted by Name? Visualize by a bar chart."
"SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Appelation', 'y_name': 'COUNT(Appelation)', 'x_data': [['Amador County', 'Anderson Valley', 'Bennett Valley', 'Carneros', 'Chalk Hill', 'Dry Creek Valley', 'Napa Valley', 'Paso Robles', 'Russian River Valley', 'Rutherford', 'Santa Lucia Highlands', 'Santa Maria Valley', 'Sonoma Coast', 'Sonoma County', 'Sonoma Valley', 'St. Helena', 'Sta. Rita Hills']], 'y_data': [[1, 1, 1, 1, 1, 1, 14, 2, 11, 1, 6, 1, 5, 6, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Appelation'}",bar,Appelation,COUNT(Appelation),"Amador County, Anderson Valley, Bennett Valley, Carneros, Chalk Hill, Dry Creek Valley, Napa Valley, Paso Robles, Russian River Valley, Rutherford, Santa Lucia Highlands, Santa Maria Valley, Sonoma Coast, Sonoma County, Sonoma Valley, St. Helena, Sta. Rita Hills","1, 1, 1, 1, 1, 1, 14, 2, 11, 1, 6, 1, 5, 6, 2, 1, 2","A bar chart shows the number of appellations whose score is higher than 93, and ordered by Name."
"SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Grape ,  Appelation ORDER BY Name",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Appelation', 'y_name': 'COUNT(Appelation)', 'x_data': [['Amador County', 'Anderson Valley', 'Bennett Valley', 'Carneros', 'Chalk Hill', 'Dry Creek Valley', 'Napa Valley', 'Paso Robles', 'Russian River Valley', 'Rutherford', 'Santa Lucia Highlands', 'Santa Maria Valley', 'Sonoma Coast', 'Sonoma County', 'Sonoma Valley', 'St. Helena', 'Sta. Rita Hills']], 'y_data': [[0, 0, 0, 0, 0, 0, 13, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 2, 6, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 8, 0, 4, 1, 3, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Pinot Noir', 'Syrah', 'Zinfandel'], 'describe': 'GROUP BY Grape, GROUP BY Appelation'}",bar,Appelation,COUNT(Appelation),"Amador County, Anderson Valley, Bennett Valley, Carneros, Chalk Hill, Dry Creek Valley, Napa Valley, Paso Robles, Russian River Valley, Rutherford, Santa Lucia Highlands, Santa Maria Valley, Sonoma Coast, Sonoma County, Sonoma Valley, St. Helena, Sta. Rita Hills","0, 0, 0, 0, 0, 0, 13, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0","For those appellations whose score is higher than 93, return a stacked to group them by appellation, count appellation, and ordered by Name"
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5",List the number of areas of all appellations in the bar chart.
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5",Return a bar chart for what is the number of areas for all appellations?
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5",Show me a bar chart about the number of areas for all appellations.
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5",Give me a bar chart for the number of area of each area
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1",List the number of counties of all appellations in a bar chart.
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1",What is the number of counties for all appellations?
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1",Return a bar chart about the number of counties for all appellations?
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1",Plot the number of county by grouped by county as a bar graph
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1",What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart"
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1",A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart"
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006-01-01', '2007-01-01', '2008-01-01']], 'y_data': [[4, 11, 2], [1, 1, 0], [1, 1, 0]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Year'}",bar,Year,COUNT(Year),"2006-01-01, 2007-01-01, 2008-01-01","4, 11, 2","For those wines whose price is bigger than 100, count their total number of each year and sort by year in a bar chart."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Stacked Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008']], 'y_data': [[10, 24, 4], [11, 25, 4], [12, 26, 4]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008","10, 24, 4","List the number of wines whose price is bigger than 100 ordered by year, group by grape, and visualize with a bar chart."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Stacked Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008']], 'y_data': [[10, 24, 4], [11, 25, 4], [12, 26, 4]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008","10, 24, 4","What is the number of wines with price higher than 100, sorted by year, group by grape and show by bar chart."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006-01-01', '2007-01-01', '2008-01-01']], 'y_data': [[6, 13, 2]], 'classify': [], 'describe': 'GROUP BY Year'}",bar,Year,COUNT(Year),"2006-01-01, 2007-01-01, 2008-01-01","6, 13, 2",A bar chart listing the number of wines whose price is bigger than 100 ordered by year.
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006-01-01', '2007-01-01', '2008-01-01']], 'y_data': [[6, 13, 2]], 'classify': [], 'describe': 'GROUP BY Year'}",bar,Year,COUNT(Year),"2006-01-01, 2007-01-01, 2008-01-01","6, 13, 2","What is the number of wines with price higher than 100, sorted by year? Visualize them by a bar chart."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006-01-01', '2007-01-01', '2008-01-01']], 'y_data': [[6, 13, 2]], 'classify': [], 'describe': 'GROUP BY Year'}",bar,Year,COUNT(Year),"2006-01-01, 2007-01-01, 2008-01-01","6, 13, 2",A bar chart for how many wines whose price is bigger than 100 ordered by year.
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008']], 'y_data': [[6, 13, 2]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008","6, 13, 2","For those wines with a price is bigger than 100, count then and group by year, order by year. Visualize the result with a bar chart."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2007', '2008']], 'y_data': [[6, 13, 2]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2007, 2008","6, 13, 2",A bar chart showing the number of those wines with a price is bigger than 100 and order by year.
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[11, 2, 0, 0, 0, 0, 4], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","11, 2, 0, 0, 0, 0, 4","A stacked bar chart that computes the total number of wines with a price is bigger than 100 of each year, and group by grape. Next, Bin the year into the weekday interval. "
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[13, 2, 0, 0, 0, 0, 6]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","13, 2, 0, 0, 0, 0, 6","A bar chart that computes the total number of wines with a price is bigger than 100. Next, Bin the year into the weekday interval."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[13, 2, 0, 0, 0, 0, 6]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","13, 2, 0, 0, 0, 0, 6",How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval.
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape",Pie,Medium,wine_1,"{'chart': 'pie', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",pie,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2",Show the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape",Pie,Medium,wine_1,"{'chart': 'pie', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",pie,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2",Give me a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape",Pie,Medium,wine_1,"{'chart': 'pie', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",pie,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2",Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2","Visualize the number of grape of the wines whose price is bigger than 100 with a bar chart, ordered the x-axis by year."
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2",Give me a bar chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.
"SELECT Grape , COUNT(Grape) FROM WINE WHERE Price > 100 GROUP BY Grape ORDER BY YEAR",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Cabernet Sauvingnon', 'Grenache', 'Syrah']], 'y_data': [[17, 2, 2]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Cabernet Sauvingnon, Grenache, Syrah","17, 2, 2",Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery",Stacked Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0","List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery",Stacked Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0","List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4",List the number of winery of the wines whose price is bigger than 100 in a bar chart.
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4",Visualize a bar chart about the number of winery of the wines whose price is bigger than 100.
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4",Compare the number of winery of the wines whose price is bigger than 100.
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1","Find the country of all appellations who have at most three wines, and visualize them in a bar chart"
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1",What are the countries for applications with at most 3 wines? Return the result in a bar chart.
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1",Give me a bar chart for those countries of all appellations who have at most three wines
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",what are the numbers of wines for different grapes?
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",Display a bar chart for what are the numbers of wines for different grapes?
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",What are the numbers of wines for different grapes. Plot them as bar chart.
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",A bar chart about how many wines are there for each grape?
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",Return a bar chart on how many wines are there for each grape?
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",How many wines are there for each grape. 
"SELECT Grape , count(*) FROM WINE GROUP BY Grape",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78",Show me the total number by grape in a histogram
"SELECT Year , COUNT(Year) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 1, 1, 1",Bin the year attribute into the Year interval and count them for a bar chart.
"SELECT Year , COUNT(Year) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 1, 1, 1",Give me a bar chart for the number of year of each year
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",Give me a tendency forwhat are the average prices of wines for different years?
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",What are the average prices of wines for different years. Show the trend.
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",Display a line chart for what is the average prices of wines for each each?
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",Draw a line chart for what is the average prices of wines for each each?
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",What is the average prices of wines for each each. Visualize by line chart.
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32",Plot year by mean price as a line chart
"SELECT Year , SUM(avg(Price)) FROM WINE",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 39, 0, 90, 32, 52, 52]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 39, 0, 90, 32, 52, 52","Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart."
"SELECT Year , SUM(avg(Price)) FROM WINE",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[49, 39, 0, 90, 32, 52, 52]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","49, 39, 0, 90, 32, 52, 52",Bar chart x axis year y axis total number of avg(price)
"SELECT Year , COUNT(Year) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 1, 1, 1","A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval."
"SELECT Year , COUNT(Year) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 1, 1, 1","Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval."
"SELECT Year , COUNT(Year) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[1, 1, 0, 2, 1, 1, 1]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","1, 1, 0, 2, 1, 1, 1",Bar graph to show how many year from different year
"SELECT Year , max(Score) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88",What are the maximum score of wines in each year?
"SELECT Year , max(Score) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88",Show me the trend aboutthe maximum score of wines for each year.
"SELECT Year , max(Score) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88",Give me a line chart about each year's maximum score .
"SELECT Year , max(Score) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88",Can you draw the trend of maximal score over the year?
"SELECT Year , AVG(max(Price)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[225, 130, 0, 76.5, 32, 100, 200]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","225, 130, 0, 76.5, 32, 100, 200","A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval.


"
"SELECT Year , AVG(max(Price)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[225, 130, 0, 76.5, 32, 100, 200]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","225, 130, 0, 76.5, 32, 100, 200","Compare the average of maximum price of wines each year, bin the year into the weekday interval."
"SELECT Year , AVG(max(Price)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[225, 130, 0, 76.5, 32, 100, 200]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","225, 130, 0, 76.5, 32, 100, 200","Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart."
"SELECT Year , AVG(max(Price)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[225, 130, 0, 76.5, 32, 100, 200]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","225, 130, 0, 76.5, 32, 100, 200",Show mean max(price) from each year
"SELECT Year , AVG(max(Score)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[98, 95, 0, 93.5, 88, 95, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","98, 95, 0, 93.5, 88, 95, 98","A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval."
"SELECT Year , AVG(max(Score)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[98, 95, 0, 93.5, 88, 95, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","98, 95, 0, 93.5, 88, 95, 98","Compare the average of maximum score of wines each year, bin the year into the weekday interval."
"SELECT Year , AVG(max(Score)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[98, 95, 0, 93.5, 88, 95, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","98, 95, 0, 93.5, 88, 95, 98","Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart."
"SELECT Year , AVG(max(Score)) FROM WINE",Bar,Easy,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']], 'y_data': [[98, 95, 0, 93.5, 88, 95, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Mon, Tue, Wed, Thur, Fri, Sat, Sun","98, 95, 0, 93.5, 88, 95, 98",Give me a bar chart for mean max(score) of each year
"SELECT Year , max(Price) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32",What is the maximum price of wines in each year?
"SELECT Year , max(Price) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32",Show me the trend about  the maximum price of wines for each year.
"SELECT Year , max(Price) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32",Given a line chart about the maximum price of wines for each year.
"SELECT Year , max(Price) FROM WINE GROUP BY Year",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32",Visualize the general trend of maximal price over the year.
"SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)",Scatter,Easy,wine_1,"{'chart': 'scatter', 'x_name': 'max(Price)', 'y_name': 'max(Score)', 'x_data': [[75, 100, 200, 225, 130, 78, 32]], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",scatter,max(Price),max(Score),"75, 100, 200, 225, 130, 78, 32","92, 95, 98, 98, 95, 95, 88",What is the correlation between the maximum price and the score of wines each year?
"SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)",Scatter,Easy,wine_1,"{'chart': 'scatter', 'x_name': 'max(Price)', 'y_name': 'max(Score)', 'x_data': [[75, 100, 200, 225, 130, 78, 32]], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",scatter,max(Price),max(Score),"75, 100, 200, 225, 130, 78, 32","92, 95, 98, 98, 95, 95, 88",Show me the correlation between the maximum price and the score of wines for each year.
"SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)",Scatter,Easy,wine_1,"{'chart': 'scatter', 'x_name': 'max(Price)', 'y_name': 'max(Score)', 'x_data': [[75, 100, 200, 225, 130, 78, 32]], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",scatter,max(Price),max(Score),"75, 100, 200, 225, 130, 78, 32","92, 95, 98, 98, 95, 95, 88","A scatter, shows the correlation between the maximum price and the score of wines for each year."
"SELECT max(Price) , max(Score) FROM WINE GROUP BY max(Price)",Scatter,Easy,wine_1,"{'chart': 'scatter', 'x_name': 'max(Price)', 'y_name': 'max(Score)', 'x_data': [[75, 100, 200, 225, 130, 78, 32]], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",scatter,max(Price),max(Score),"75, 100, 200, 225, 130, 78, 32","92, 95, 98, 98, 95, 95, 88",Scatter plot to show max(price) on x axis and maximal score on y axis.
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95","1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1","Draw a bar chart of operating system versus the total number, list from low to high by the X-axis."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95","1, 1, 1, 1, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1","Find the number of web accelerators used for each Operating system, I want to display in ascending by the X."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Windows, except NT and 95', 'Windows, Mac, Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac and Mobile devices', 'Windows, Mac', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows (2000 onwards)', 'Windows', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Unix (Linux, *BSD, Mac OS X, others)', 'Appliance (Linux)', 'Any system with Java 1.6 VM available', 'Any', 'Android, Linux, Mac and Windows devices']], 'y_data': [[1, 1, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Windows, except NT and 95, Windows, Mac, Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac and Mobile devices, Windows, Mac, Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows (2000 onwards), Windows, Unix (Linux, *BSD, Mac OS X, others), Windows, Unix (Linux, *BSD, Mac OS X, others), Appliance (Linux), Any system with Java 1.6 VM available, Any, Android, Linux, Mac and Windows devices","1, 1, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 1, 1","Draw a bar chart of operating system versus the total number, display from high to low by the names please."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY Operating_system DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Windows, except NT and 95', 'Windows, Mac, Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac and Mobile devices', 'Windows, Mac', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows (2000 onwards)', 'Windows', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Unix (Linux, *BSD, Mac OS X, others)', 'Appliance (Linux)', 'Any system with Java 1.6 VM available', 'Any', 'Android, Linux, Mac and Windows devices']], 'y_data': [[1, 1, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Windows, except NT and 95, Windows, Mac, Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac and Mobile devices, Windows, Mac, Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows (2000 onwards), Windows, Unix (Linux, *BSD, Mac OS X, others), Windows, Unix (Linux, *BSD, Mac OS X, others), Appliance (Linux), Any system with Java 1.6 VM available, Any, Android, Linux, Mac and Windows devices","1, 1, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 1, 1","Find the number of web accelerators used for each Operating system, and I want to rank x-axis from high to low order."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows, Mac']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95, Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows, Mac","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3","Find the number of web accelerators used for each Operating system, I want to display by the y-axis in ascending."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Android, Linux, Mac and Windows devices', 'Any', 'Any system with Java 1.6 VM available', 'Appliance (Linux)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Windows (2000 onwards)', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows, Mac and Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac, Mobile devices', 'Windows, except NT and 95', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows', 'Windows, Mac']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Android, Linux, Mac and Windows devices, Any, Any system with Java 1.6 VM available, Appliance (Linux), Unix (Linux, *BSD, Mac OS X, others), Windows (2000 onwards), Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows, Mac and Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac, Mobile devices, Windows, except NT and 95, Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, Windows, Mac","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3","Draw a bar chart of operating system versus the total number, order in asc by the Y."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Windows, Mac', 'Windows', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows, except NT and 95', 'Windows, Mac, Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac and Mobile devices', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows (2000 onwards)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Appliance (Linux)', 'Any system with Java 1.6 VM available', 'Any', 'Android, Linux, Mac and Windows devices']], 'y_data': [[3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Windows, Mac, Windows, Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, except NT and 95, Windows, Mac, Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac and Mobile devices, Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows (2000 onwards), Unix (Linux, *BSD, Mac OS X, others), Appliance (Linux), Any system with Java 1.6 VM available, Any, Android, Linux, Mac and Windows devices","3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Find the number of web accelerators used for each Operating system, show from high to low by the total number."
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'Operating_system', 'y_name': 'count(*)', 'x_data': [['Windows, Mac', 'Windows', 'Unix (Linux, *BSD, Mac OS X, others), Windows', 'Windows, except NT and 95', 'Windows, Mac, Mobile devices', 'Windows, Mac, Linux and Mobile devices', 'Windows, Mac and Mobile devices', 'Windows, Linux, Mac OS, Symbian, WindowsMobile', 'Windows (2000 onwards)', 'Unix (Linux, *BSD, Mac OS X, others)', 'Appliance (Linux)', 'Any system with Java 1.6 VM available', 'Any', 'Android, Linux, Mac and Windows devices']], 'y_data': [[3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Operating_system,count(*),"Windows, Mac, Windows, Unix (Linux, *BSD, Mac OS X, others), Windows, Windows, except NT and 95, Windows, Mac, Mobile devices, Windows, Mac, Linux and Mobile devices, Windows, Mac and Mobile devices, Windows, Linux, Mac OS, Symbian, WindowsMobile, Windows (2000 onwards), Unix (Linux, *BSD, Mac OS X, others), Appliance (Linux), Any system with Java 1.6 VM available, Any, Android, Linux, Mac and Windows devices","3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Draw a bar chart of operating system versus the total number, and list by the Y in desc please."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display from low to high by the x-axis please."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, could you rank bars in ascending order please?"
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and rank in ascending by the names."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and could you rank by the bars in desc please?"
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to rank in desc by the bar."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY name DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show by the X-axis from high to low."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to sort y-axis from low to high order."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and order by the y axis in asc."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id ASC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['CACHEbox', 'CProxy', 'Fasterfox']], 'y_data': [[1, 2, 3]], 'classify': [], 'describe': ''}",bar,name,id,"CACHEbox, CProxy, Fasterfox","1, 2, 3","Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display Y-axis from low to high order."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show in desc by the id."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, rank by the id from high to low."
"SELECT name , id FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id ORDER BY id DESC",Bar,Medium,browser_web,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Fasterfox', 'CProxy', 'CACHEbox']], 'y_data': [[3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,id,"Fasterfox, CProxy, CACHEbox","3, 2, 1","Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, I want to list total number in desc order."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Psychiatry', 'Surgery']], 'y_data': [[5, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Psychiatry, Surgery","5, 1, 3","What are the name and primarily affiliated department name of each physician?, and I want to display in ascending by the x-axis please."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Psychiatry', 'Surgery']], 'y_data': [[5, 1, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Psychiatry, Surgery","5, 1, 3","Give me a bar chart showing how many physicians for each department name they primarily affiliated in, and list by the Name in ascending."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Surgery', 'Psychiatry', 'General Medicine']], 'y_data': [[3, 1, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Surgery, Psychiatry, General Medicine","3, 1, 5","What are the name and primarily affiliated department name of each physician?, and I want to show in descending by the Name."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Surgery', 'Psychiatry', 'General Medicine']], 'y_data': [[3, 1, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Surgery, Psychiatry, General Medicine","3, 1, 5","Give me a bar chart showing how many physicians for each department name they primarily affiliated in, display in desc by the names."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Psychiatry', 'Surgery', 'General Medicine']], 'y_data': [[1, 3, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Psychiatry, Surgery, General Medicine","1, 3, 5","What are the name and primarily affiliated department name of each physician?, and list y axis from low to high order."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Psychiatry', 'Surgery', 'General Medicine']], 'y_data': [[1, 3, 5]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Psychiatry, Surgery, General Medicine","1, 3, 5","Give me a bar chart showing how many physicians for each department name they primarily affiliated in, list Y from low to high order."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Surgery', 'Psychiatry']], 'y_data': [[5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Surgery, Psychiatry","5, 3, 1","Give me a bar chart showing how many physicians for each department name they primarily affiliated in, list Y-axis from high to low order."
"SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY COUNT(T3.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['General Medicine', 'Surgery', 'Psychiatry']], 'y_data': [[5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"General Medicine, Surgery, Psychiatry","5, 3, 1","What are the name and primarily affiliated department name of each physician?, sort in descending by the y-axis please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","List the number of the name of physicians who took some appointment, and display by the X-axis from low to high please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","List the name of physicians who took some appointment, and count them by a bar chart, could you sort from low to high by the names?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","What are the names of all the physicians who took appointments, and count them by a bar chart, and show X-axis in ascending order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian', 'Molly Clock', 'Percival Cox']], 'y_data': [[1, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Elliot Reid, John Dorian, Molly Clock, Percival Cox","1, 3, 2, 1, 2","A bar chart for listing the number of the name of physicians who took some appointment, list from low to high by the bars please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Percival Cox', 'Molly Clock', 'John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[2, 1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Percival Cox, Molly Clock, John Dorian, Elliot Reid, Christopher Turk","2, 1, 2, 3, 1","List the name of physicians who took some appointment, and count them by a bar chart, and I want to list from high to low by the bars."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Percival Cox', 'Molly Clock', 'John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[2, 1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Percival Cox, Molly Clock, John Dorian, Elliot Reid, Christopher Turk","2, 1, 2, 3, 1","What are the names of all the physicians who took appointments, and count them by a bar chart, and could you order by the names in desc please?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Percival Cox', 'Molly Clock', 'John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[2, 1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Percival Cox, Molly Clock, John Dorian, Elliot Reid, Christopher Turk","2, 1, 2, 3, 1","List the number of the name of physicians who took some appointment, could you display X-axis in desc order please?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Percival Cox', 'Molly Clock', 'John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[2, 1, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Percival Cox, Molly Clock, John Dorian, Elliot Reid, Christopher Turk","2, 1, 2, 3, 1","A bar chart for listing the number of the name of physicians who took some appointment, and I want to display by the bar in descending."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Molly Clock', 'John Dorian', 'Percival Cox', 'Elliot Reid']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Molly Clock, John Dorian, Percival Cox, Elliot Reid","1, 1, 2, 2, 3","List the name of physicians who took some appointment, and count them by a bar chart, sort Y-axis in ascending order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Molly Clock', 'John Dorian', 'Percival Cox', 'Elliot Reid']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Molly Clock, John Dorian, Percival Cox, Elliot Reid","1, 1, 2, 2, 3","List the number of the name of physicians who took some appointment, and rank by the the number of name from low to high please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Molly Clock', 'John Dorian', 'Percival Cox', 'Elliot Reid']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Molly Clock, John Dorian, Percival Cox, Elliot Reid","1, 1, 2, 2, 3","What are the names of all the physicians who took appointments, and count them by a bar chart, and rank from low to high by the y-axis please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Molly Clock', 'John Dorian', 'Percival Cox', 'Elliot Reid']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Molly Clock, John Dorian, Percival Cox, Elliot Reid","1, 1, 2, 2, 3","A bar chart for listing the number of the name of physicians who took some appointment, rank by the the number of name from low to high please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Elliot Reid', 'Percival Cox', 'John Dorian', 'Molly Clock', 'Christopher Turk']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Elliot Reid, Percival Cox, John Dorian, Molly Clock, Christopher Turk","3, 2, 2, 1, 1","A bar chart for listing the number of the name of physicians who took some appointment, order by the y axis from high to low."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Elliot Reid', 'Percival Cox', 'John Dorian', 'Molly Clock', 'Christopher Turk']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Elliot Reid, Percival Cox, John Dorian, Molly Clock, Christopher Turk","3, 2, 2, 1, 1","List the name of physicians who took some appointment, and count them by a bar chart, and sort Y-axis from high to low order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Elliot Reid', 'Percival Cox', 'John Dorian', 'Molly Clock', 'Christopher Turk']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Elliot Reid, Percival Cox, John Dorian, Molly Clock, Christopher Turk","3, 2, 2, 1, 1","What are the names of all the physicians who took appointments, and count them by a bar chart, and I want to show in desc by the the number of name."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Elliot Reid', 'Percival Cox', 'John Dorian', 'Molly Clock', 'Christopher Turk']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Elliot Reid, Percival Cox, John Dorian, Molly Clock, Christopher Turk","3, 2, 2, 1, 1","List the number of the name of physicians who took some appointment, list in desc by the Y-axis."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, and list x axis from low to high order please."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, and could you show by the x axis from low to high?"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, could you show in asc by the x axis?"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'John Wen', 'Todd Quinlan']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, John Wen, Todd Quinlan","1, 2, 1","Find the number of the physicians who are trained in a procedure that costs more than 5000, could you show by the x axis from low to high?"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Todd Quinlan', 'John Wen', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Todd Quinlan, John Wen, Christopher Turk","1, 2, 1","Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, and list Name from high to low order please."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Todd Quinlan', 'John Wen', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Todd Quinlan, John Wen, Christopher Turk","1, 2, 1","Find the number of the physicians who are trained in a procedure that costs more than 5000, and list by the x axis in descending."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Todd Quinlan', 'John Wen', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Todd Quinlan, John Wen, Christopher Turk","1, 2, 1","A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, could you rank x axis in desc order please?"
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Todd Quinlan', 'John Wen', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Todd Quinlan, John Wen, Christopher Turk","1, 2, 1","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, list by the x axis in descending."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Todd Quinlan', 'John Wen']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Todd Quinlan, John Wen","1, 1, 2","Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, display by the how many name from low to high."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Todd Quinlan', 'John Wen']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Todd Quinlan, John Wen","1, 1, 2","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, display by the how many name from low to high."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Todd Quinlan', 'John Wen']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Todd Quinlan, John Wen","1, 1, 2","Find the number of the physicians who are trained in a procedure that costs more than 5000, and sort how many name from low to high order."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) ASC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Christopher Turk', 'Todd Quinlan', 'John Wen']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Christopher Turk, Todd Quinlan, John Wen","1, 1, 2","A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, and order by the how many name in ascending."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Wen', 'Todd Quinlan', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Wen, Todd Quinlan, Christopher Turk","2, 1, 1","Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, and display by the total number in descending."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Wen', 'Todd Quinlan', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Wen, Todd Quinlan, Christopher Turk","2, 1, 1","A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, and order in descending by the y-axis."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Wen', 'Todd Quinlan', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Wen, Todd Quinlan, Christopher Turk","2, 1, 1","Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, and sort total number in desc order."
"SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC",Bar,Extra Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Wen', 'Todd Quinlan', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Wen, Todd Quinlan, Christopher Turk","2, 1, 1","Find the number of the physicians who are trained in a procedure that costs more than 5000, order by the Y from high to low."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","What are the number of names of patients who made an appointment?, could you display bars in ascending order please?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","List the number of the names of patients who have made appointments, list by the bars in asc."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","List the names of patients who have made appointments, and count them by a bar chart, display names from low to high order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","What are names of patients who made an appointment, and count them by a bar chart, and could you sort in asc by the X-axis?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Dennis Doe', 'Grace Ritchie', 'John Smith', 'Random J. Patient']], 'y_data': [[3, 2, 3, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Dennis Doe, Grace Ritchie, John Smith, Random J. Patient","3, 2, 3, 1","A bar chart for listing the number of the names of patients who have made appointments, and could you order from low to high by the X-axis?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'John Smith', 'Grace Ritchie', 'Dennis Doe']], 'y_data': [[1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, John Smith, Grace Ritchie, Dennis Doe","1, 3, 2, 3","What are the number of names of patients who made an appointment?, and I want to display x-axis in desc order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'John Smith', 'Grace Ritchie', 'Dennis Doe']], 'y_data': [[1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, John Smith, Grace Ritchie, Dennis Doe","1, 3, 2, 3","What are names of patients who made an appointment, and count them by a bar chart, and display by the X-axis in desc."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'John Smith', 'Grace Ritchie', 'Dennis Doe']], 'y_data': [[1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, John Smith, Grace Ritchie, Dennis Doe","1, 3, 2, 3","List the names of patients who have made appointments, and count them by a bar chart, I want to list x-axis in desc order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'John Smith', 'Grace Ritchie', 'Dennis Doe']], 'y_data': [[1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, John Smith, Grace Ritchie, Dennis Doe","1, 3, 2, 3","A bar chart for listing the number of the names of patients who have made appointments, I want to display x-axis in desc order."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'John Smith', 'Grace Ritchie', 'Dennis Doe']], 'y_data': [[1, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, John Smith, Grace Ritchie, Dennis Doe","1, 3, 2, 3","List the number of the names of patients who have made appointments, sort in descending by the names."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'Grace Ritchie', 'Dennis Doe', 'John Smith']], 'y_data': [[1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, Grace Ritchie, Dennis Doe, John Smith","1, 2, 3, 3","List the number of the names of patients who have made appointments, and order from low to high by the y axis."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'Grace Ritchie', 'Dennis Doe', 'John Smith']], 'y_data': [[1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, Grace Ritchie, Dennis Doe, John Smith","1, 2, 3, 3","A bar chart for listing the number of the names of patients who have made appointments, and order from low to high by the y axis."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'Grace Ritchie', 'Dennis Doe', 'John Smith']], 'y_data': [[1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, Grace Ritchie, Dennis Doe, John Smith","1, 2, 3, 3","List the names of patients who have made appointments, and count them by a bar chart, display Y from low to high order please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'Grace Ritchie', 'Dennis Doe', 'John Smith']], 'y_data': [[1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, Grace Ritchie, Dennis Doe, John Smith","1, 2, 3, 3","What are the number of names of patients who made an appointment?, and could you order by the y axis from low to high?"
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Random J. Patient', 'Grace Ritchie', 'Dennis Doe', 'John Smith']], 'y_data': [[1, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Random J. Patient, Grace Ritchie, Dennis Doe, John Smith","1, 2, 3, 3","What are names of patients who made an appointment, and count them by a bar chart, and I want to display from low to high by the Y-axis please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Smith', 'Dennis Doe', 'Grace Ritchie', 'Random J. Patient']], 'y_data': [[3, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Smith, Dennis Doe, Grace Ritchie, Random J. Patient","3, 3, 2, 1","List the number of the names of patients who have made appointments, and I want to display in desc by the y-axis please."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Smith', 'Dennis Doe', 'Grace Ritchie', 'Random J. Patient']], 'y_data': [[3, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Smith, Dennis Doe, Grace Ritchie, Random J. Patient","3, 3, 2, 1","A bar chart for listing the number of the names of patients who have made appointments, I want to sort by the y axis from high to low."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Smith', 'Dennis Doe', 'Grace Ritchie', 'Random J. Patient']], 'y_data': [[3, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Smith, Dennis Doe, Grace Ritchie, Random J. Patient","3, 3, 2, 1","What are names of patients who made an appointment, and count them by a bar chart, I want to rank by the Y in desc."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Smith', 'Dennis Doe', 'Grace Ritchie', 'Random J. Patient']], 'y_data': [[3, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Smith, Dennis Doe, Grace Ritchie, Random J. Patient","3, 3, 2, 1","What are the number of names of patients who made an appointment?, I want to sort by the y axis from high to low."
"SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Smith', 'Dennis Doe', 'Grace Ritchie', 'Random J. Patient']], 'y_data': [[3, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Smith, Dennis Doe, Grace Ritchie, Random J. Patient","3, 3, 2, 1","List the names of patients who have made appointments, and count them by a bar chart, and I want to rank by the Y in desc."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Find the number of medications prescribed for each brand Plot them as bar chart, order from low to high by the X-axis please."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","How many medications are prescribed for each brand Visualize by bar chart, list from low to high by the bars."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Draw a bar chart for how many medications are prescribed for each brand?, order from low to high by the X-axis please."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Display a bar chart for how many medications are prescribed for each brand?, display from low to high by the x-axis please."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Draw a bar chart for how many medications are prescribed for each brand?, and could you list by the bars from high to low?"
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Find the number of medications prescribed for each brand Plot them as bar chart, and I want to rank by the X-axis in desc please."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","How many medications are prescribed for each brand Visualize by bar chart, I want to display in desc by the x axis."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Display a bar chart for how many medications are prescribed for each brand?, and I want to display in desc by the x axis."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Draw a bar chart for how many medications are prescribed for each brand?, and display in asc by the total number."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Find the number of medications prescribed for each brand Plot them as bar chart, sort in ascending by the y axis."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","How many medications are prescribed for each brand Visualize by bar chart, and could you list Y-axis in asc order?"
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Procrastin-X', 'Thesisin']], 'y_data': [[1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Procrastin-X, Thesisin","1, 2","Display a bar chart for how many medications are prescribed for each brand?, sort in ascending by the y axis."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Draw a bar chart for how many medications are prescribed for each brand?, rank in descending by the y axis."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Find the number of medications prescribed for each brand Plot them as bar chart, and I want to order y axis from high to low order."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","Display a bar chart for how many medications are prescribed for each brand?, and show Y-axis in desc order."
"SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Thesisin', 'Procrastin-X']], 'y_data': [[2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Thesisin, Procrastin-X","2, 1","How many medications are prescribed for each brand Visualize by bar chart, list Y in descending order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and show X-axis in asc order please."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, sort in asc by the x axis."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, and I want to display in asc by the X."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","Return the name of each physician and the number of patients he or she treats in a bar chart, and I want to sort in ascending by the bars."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","Return the name of each physician and the number of patients he or she treats, I want to sort by the bars in ascending."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'Elliot Reid', 'John Dorian']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, Elliot Reid, John Dorian","1, 2, 1","Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, and I want to sort by the bars in ascending."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and could you rank in descending by the bar?"
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and could you show by the Name in descending?"
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","Return the name of each physician and the number of patients he or she treats in a bar chart, and list Name from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, show bars from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, sort in desc by the x-axis."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY T1.Name DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Dorian', 'Elliot Reid', 'Christopher Turk']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Dorian, Elliot Reid, Christopher Turk","1, 2, 1","Return the name of each physician and the number of patients he or she treats, and show bars from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and order Y in asc order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and order in ascending by the y-axis."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","Return the name of each physician and the number of patients he or she treats, could you order by the Y-axis in ascending?"
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, I want to show Y in ascending order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","Return the name of each physician and the number of patients he or she treats in a bar chart, list by the total number from low to high."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) ASC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Christopher Turk', 'John Dorian', 'Elliot Reid']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Christopher Turk, John Dorian, Elliot Reid","1, 1, 2","Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, order by the Y-axis in ascending."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and list by the y-axis in desc."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, sort total number from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, sort total number from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, and show by the Y-axis in desc."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","Return the name of each physician and the number of patients he or she treats in a bar chart, and sort total number from high to low order."
"SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid ORDER BY count(*) DESC",Bar,Hard,hospital_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Elliot Reid', 'John Dorian', 'Christopher Turk']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Elliot Reid, John Dorian, Christopher Turk","2, 1, 1","Return the name of each physician and the number of patients he or she treats, and show by the Y-axis in desc."
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12","Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, could you order by the bar in ascending?"
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12","Find the component amounts and names of all furnitures that have more than 10 components, and could you order by the bar in asc?"
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Dining set', 'Billiard table']], 'y_data': [[12, 14]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Dining set, Billiard table","12, 14","Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, order by the X in desc please."
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Dining set', 'Billiard table']], 'y_data': [[12, 14]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Dining set, Billiard table","12, 14","Find the component amounts and names of all furnitures that have more than 10 components, and sort X from high to low order."
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Dining set', 'Billiard table']], 'y_data': [[12, 14]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Dining set, Billiard table","12, 14","Find the component amounts and names of all furnitures that have more than 10 components, and could you order by the y axis from low to high?"
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Dining set', 'Billiard table']], 'y_data': [[12, 14]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Dining set, Billiard table","12, 14","Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, show Y in asc order."
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12","Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, sort from high to low by the total number please."
"SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Num_of_Component', 'x_data': [['Billiard table', 'Dining set']], 'y_data': [[14, 12]], 'classify': [], 'describe': ''}",bar,Name,Num_of_Component,"Billiard table, Dining set","14, 12","Find the component amounts and names of all furnitures that have more than 10 components, order by the Num_of_Component in descending."
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY Name ASC",Bar,Hard,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Chevrolet', 'Chevrolet House', 'Jiaj', 'Tomorrow']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Chevrolet, Chevrolet House, Jiaj, Tomorrow","1, 1, 1, 2","Find the number of funiture types produced by each manufacturer as well as the company names Show bar chart, and list in ascending by the names please."
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY Name DESC",Bar,Hard,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tomorrow', 'Jiaj', 'Chevrolet House', 'Chevrolet']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tomorrow, Jiaj, Chevrolet House, Chevrolet","2, 1, 1, 1","Find the number of funiture types produced by each manufacturer as well as the company names Show bar chart, and could you display by the x-axis in desc please?"
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY count(*) ASC",Bar,Hard,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Chevrolet', 'Chevrolet House', 'Jiaj', 'Tomorrow']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Chevrolet, Chevrolet House, Jiaj, Tomorrow","1, 1, 1, 2","Find the number of funiture types produced by each manufacturer as well as the company names Show bar chart, and show by the Y-axis in ascending."
"SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY count(*) DESC",Bar,Hard,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tomorrow', 'Jiaj', 'Chevrolet House', 'Chevrolet']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tomorrow, Jiaj, Chevrolet House, Chevrolet","2, 1, 1, 1","Find the number of funiture types produced by each manufacturer as well as the company names Show bar chart, and sort in descending by the Y-axis."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, show in ascending by the bars."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, list in ascending by the bar."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Four-poster bed', 'Bench']], 'y_data': [[2, 3.5]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Four-poster bed, Bench","2, 3.5","Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, and order in desc by the names please."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Four-poster bed', 'Bench']], 'y_data': [[2, 3.5]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Four-poster bed, Bench","2, 3.5","Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, show in desc by the bars please."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Market_Rate ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Four-poster bed', 'Bench']], 'y_data': [[2, 3.5]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Four-poster bed, Bench","2, 3.5","Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, order by the y-axis in asc."
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Market_Rate ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Four-poster bed', 'Bench']], 'y_data': [[2, 3.5]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Four-poster bed, Bench","2, 3.5","Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, and could you rank in ascending by the Market_Rate?"
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Market_Rate DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, and could you sort y axis in desc order please?"
"SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte) ORDER BY Market_Rate DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Market_Rate', 'x_data': [['Bench', 'Four-poster bed']], 'y_data': [[3.5, 2]], 'classify': [], 'describe': ''}",bar,Name,Market_Rate,"Bench, Four-poster bed","3.5, 2","Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, and order Y-axis in desc order."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Billiard table', 'Bookcase', 'Chabudai', 'Dining set', 'Hatstand']], 'y_data': [[443, 239, 450, 2124, 1234]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Billiard table, Bookcase, Chabudai, Dining set, Hatstand","443, 239, 450, 2124, 1234","Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, show from low to high by the Name."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Billiard table', 'Bookcase', 'Chabudai', 'Dining set', 'Hatstand']], 'y_data': [[443, 239, 450, 2124, 1234]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Billiard table, Bookcase, Chabudai, Dining set, Hatstand","443, 239, 450, 2124, 1234","Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, and I want to list x-axis in ascending order."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Hatstand', 'Dining set', 'Chabudai', 'Bookcase', 'Billiard table']], 'y_data': [[1234, 2124, 450, 239, 443]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Hatstand, Dining set, Chabudai, Bookcase, Billiard table","1234, 2124, 450, 239, 443","Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, display in desc by the Name."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Hatstand', 'Dining set', 'Chabudai', 'Bookcase', 'Billiard table']], 'y_data': [[1234, 2124, 450, 239, 443]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Hatstand, Dining set, Chabudai, Bookcase, Billiard table","1234, 2124, 450, 239, 443","Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, and I want to display by the names in descending."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Price_in_Dollar ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Billiard table', 'Chabudai', 'Hatstand', 'Dining set']], 'y_data': [[239, 443, 450, 1234, 2124]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Bookcase, Billiard table, Chabudai, Hatstand, Dining set","239, 443, 450, 1234, 2124","Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, and order by the y-axis in asc."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Price_in_Dollar ASC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Bookcase', 'Billiard table', 'Chabudai', 'Hatstand', 'Dining set']], 'y_data': [[239, 443, 450, 1234, 2124]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Bookcase, Billiard table, Chabudai, Hatstand, Dining set","239, 443, 450, 1234, 2124","Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, display y axis from low to high order."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Price_in_Dollar DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Dining set', 'Hatstand', 'Chabudai', 'Billiard table', 'Bookcase']], 'y_data': [[2124, 1234, 450, 443, 239]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Dining set, Hatstand, Chabudai, Billiard table, Bookcase","2124, 1234, 450, 443, 239","Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, rank in descending by the Price_in_Dollar."
"SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Price_in_Dollar DESC",Bar,Medium,manufacturer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Price_in_Dollar', 'x_data': [['Dining set', 'Hatstand', 'Chabudai', 'Billiard table', 'Bookcase']], 'y_data': [[2124, 1234, 450, 443, 239]], 'classify': [], 'describe': ''}",bar,Name,Price_in_Dollar,"Dining set, Hatstand, Chabudai, Billiard table, Bookcase","2124, 1234, 450, 443, 239","Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, and rank in descending by the Price_in_Dollar."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[87, 155, 260]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","87, 155, 260","For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart, and show in asc by the total number."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[87, 155, 260]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","87, 155, 260","Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year, and could you list total number in ascending order?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[260, 155, 87]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","260, 155, 87","For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart, rank by the y axis in desc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[260, 155, 87]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","260, 155, 87","Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year, and sort total number from high to low order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Fri', 'Sat', 'Sun', 'Wed', 'Thur', 'Mon']], 'y_data': [[51, 60, 63, 66, 81, 89, 92]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Fri, Sat, Sun, Wed, Thur, Mon","51, 60, 63, 66, 81, 89, 92","Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day, and list by the the number of date from low to high."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Fri', 'Sat', 'Sun', 'Wed', 'Thur', 'Mon']], 'y_data': [[51, 60, 63, 66, 81, 89, 92]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Fri, Sat, Sun, Wed, Thur, Mon","51, 60, 63, 66, 81, 89, 92","For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart, I want to display by the Y in asc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sun', 'Sat', 'Fri', 'Tue']], 'y_data': [[92, 89, 81, 66, 63, 60, 51]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Wed, Sun, Sat, Fri, Tue","92, 89, 81, 66, 63, 60, 51","Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day, and could you show from high to low by the Y?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Wed', 'Sun', 'Sat', 'Fri', 'Tue']], 'y_data': [[92, 89, 81, 66, 63, 60, 51]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Wed, Sun, Sat, Fri, Tue","92, 89, 81, 66, 63, 60, 51","For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart, could you show from high to low by the Y?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4","For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, display by the X in asc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4","Please show the trend about the number of days with max temperature reaches 80 change over dates, display x axis from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4","For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, and order X-axis from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-29', '2013-08-30', '2013-08-31', '2013-09-01', '2013-09-02', '2013-09-03', '2013-09-04', '2013-09-05', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-10', '2013-09-16', '2013-09-18', '2013-09-19', '2013-09-23', '2013-09-27', '2013-09-28', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07', '2013-10-15', '2013-10-16', '2013-10-17', '2014-03-09', '2014-03-15', '2014-03-16', '2014-04-07', '2014-04-08', '2014-04-10', '2014-04-20', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-02', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-05-16', '2014-05-25', '2014-05-26', '2014-05-29', '2014-06-01', '2014-06-04', '2014-06-05', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-17', '2014-06-18', '2014-06-20', '2014-06-29', '2014-06-30', '2014-07-02', '2014-07-03', '2014-07-05', '2014-07-06', '2014-07-07', '2014-07-08', '2014-07-09', '2014-07-10', '2014-07-14', '2014-07-15', '2014-07-16', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-07-28', '2014-07-29', '2014-07-30', '2014-07-31', '2014-08-01', '2014-08-05', '2014-08-06', '2014-08-08', '2014-08-10', '2014-08-13', '2014-08-14', '2014-08-15', '2014-08-16', '2014-08-17', '2014-08-20', '2014-08-21', '2014-08-22', '2014-08-27', '2014-08-28', '2014-08-29', '2014-08-30', '2014-08-31', '2014-09-01', '2014-09-04', '2014-09-10', '2014-09-11', '2014-09-12', '2014-09-13', '2014-09-16', '2014-09-17', '2014-09-18', '2014-09-24', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07', '2014-10-08', '2014-10-12', '2014-10-13', '2014-10-18', '2014-10-29', '2014-10-30', '2015-01-27', '2015-02-02', '2015-02-27', '2015-03-14', '2015-03-15', '2015-03-19', '2015-03-26', '2015-04-16', '2015-04-27', '2015-04-29', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-05-30', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-11', '2015-06-12', '2015-06-13', '2015-06-19', '2015-06-20', '2015-06-24', '2015-06-25', '2015-06-26', '2015-06-27', '2015-06-30', '2015-07-01', '2015-07-03', '2015-07-04', '2015-07-05', '2015-07-13', '2015-07-15', '2015-07-16', '2015-07-17', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-07-30', '2015-08-01', '2015-08-07', '2015-08-08', '2015-08-10', '2015-08-11', '2015-08-12', '2015-08-13', '2015-08-14', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-18', '2015-08-22', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-28', '2015-08-29', '2015-08-30', '2015-08-31']], 'y_data': [[3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-29, 2013-08-30, 2013-08-31, 2013-09-01, 2013-09-02, 2013-09-03, 2013-09-04, 2013-09-05, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-10, 2013-09-16, 2013-09-18, 2013-09-19, 2013-09-23, 2013-09-27, 2013-09-28, 2013-10-04, 2013-10-05, 2013-10-06, 2013-10-07, 2013-10-15, 2013-10-16, 2013-10-17, 2014-03-09, 2014-03-15, 2014-03-16, 2014-04-07, 2014-04-08, 2014-04-10, 2014-04-20, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-02, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-05-16, 2014-05-25, 2014-05-26, 2014-05-29, 2014-06-01, 2014-06-04, 2014-06-05, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-17, 2014-06-18, 2014-06-20, 2014-06-29, 2014-06-30, 2014-07-02, 2014-07-03, 2014-07-05, 2014-07-06, 2014-07-07, 2014-07-08, 2014-07-09, 2014-07-10, 2014-07-14, 2014-07-15, 2014-07-16, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-07-28, 2014-07-29, 2014-07-30, 2014-07-31, 2014-08-01, 2014-08-05, 2014-08-06, 2014-08-08, 2014-08-10, 2014-08-13, 2014-08-14, 2014-08-15, 2014-08-16, 2014-08-17, 2014-08-20, 2014-08-21, 2014-08-22, 2014-08-27, 2014-08-28, 2014-08-29, 2014-08-30, 2014-08-31, 2014-09-01, 2014-09-04, 2014-09-10, 2014-09-11, 2014-09-12, 2014-09-13, 2014-09-16, 2014-09-17, 2014-09-18, 2014-09-24, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-07, 2014-10-08, 2014-10-12, 2014-10-13, 2014-10-18, 2014-10-29, 2014-10-30, 2015-01-27, 2015-02-02, 2015-02-27, 2015-03-14, 2015-03-15, 2015-03-19, 2015-03-26, 2015-04-16, 2015-04-27, 2015-04-29, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-05-30, 2015-06-07, 2015-06-08, 2015-06-09, 2015-06-11, 2015-06-12, 2015-06-13, 2015-06-19, 2015-06-20, 2015-06-24, 2015-06-25, 2015-06-26, 2015-06-27, 2015-06-30, 2015-07-01, 2015-07-03, 2015-07-04, 2015-07-05, 2015-07-13, 2015-07-15, 2015-07-16, 2015-07-17, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-07-30, 2015-08-01, 2015-08-07, 2015-08-08, 2015-08-10, 2015-08-11, 2015-08-12, 2015-08-13, 2015-08-14, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-18, 2015-08-22, 2015-08-25, 2015-08-26, 2015-08-27, 2015-08-28, 2015-08-29, 2015-08-30, 2015-08-31","3, 4, 1, 4, 1, 2, 1, 2, 5, 5, 3, 4, 2, 2, 4, 5, 4, 1, 4, 3, 5, 5, 5, 3, 5, 4, 1, 1, 1, 4, 4, 1, 3, 5, 5, 5, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 1, 1, 5, 4, 1, 5, 1, 5, 4, 5, 5, 1, 1, 2, 1, 3, 1, 1, 1, 4, 3, 3, 5, 5, 4, 4, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 2, 4, 2, 5, 1, 5, 5, 3, 1, 4, 4, 3, 3, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 4, 5, 1, 5, 2, 1, 1, 1, 1, 5, 2, 2, 4, 3, 1, 1, 1, 4, 2, 1, 5, 2, 2, 1, 1, 1, 3, 2, 1, 5, 4, 5, 5, 4, 2, 2, 1, 1, 1, 1, 3, 2, 1, 5, 5, 5, 1, 1, 1, 3, 5, 5, 2, 1, 4","Please show the trend about the number of days with max temperature reaches 80 change over dates, I want to display x-axis from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-31', '2015-08-30', '2015-08-29', '2015-08-28', '2015-08-27', '2015-08-26', '2015-08-25', '2015-08-22', '2015-08-18', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-14', '2015-08-13', '2015-08-12', '2015-08-11', '2015-08-10', '2015-08-08', '2015-08-07', '2015-08-01', '2015-07-30', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-17', '2015-07-16', '2015-07-15', '2015-07-13', '2015-07-05', '2015-07-04', '2015-07-03', '2015-07-01', '2015-06-30', '2015-06-27', '2015-06-26', '2015-06-25', '2015-06-24', '2015-06-20', '2015-06-19', '2015-06-13', '2015-06-12', '2015-06-11', '2015-06-09', '2015-06-08', '2015-06-07', '2015-05-30', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-29', '2015-04-27', '2015-04-16', '2015-03-26', '2015-03-19', '2015-03-15', '2015-03-14', '2015-02-27', '2015-02-02', '2015-01-27', '2014-10-30', '2014-10-29', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-08', '2014-10-07', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-24', '2014-09-18', '2014-09-17', '2014-09-16', '2014-09-13', '2014-09-12', '2014-09-11', '2014-09-10', '2014-09-04', '2014-09-01', '2014-08-31', '2014-08-30', '2014-08-29', '2014-08-28', '2014-08-27', '2014-08-22', '2014-08-21', '2014-08-20', '2014-08-17', '2014-08-16', '2014-08-15', '2014-08-14', '2014-08-13', '2014-08-10', '2014-08-08', '2014-08-06', '2014-08-05', '2014-08-01', '2014-07-31', '2014-07-30', '2014-07-29', '2014-07-28', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-16', '2014-07-15', '2014-07-14', '2014-07-10', '2014-07-09', '2014-07-08', '2014-07-07', '2014-07-06', '2014-07-05', '2014-07-03', '2014-07-02', '2014-06-30', '2014-06-29', '2014-06-20', '2014-06-18', '2014-06-17', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-06-05', '2014-06-04', '2014-06-01', '2014-05-29', '2014-05-26', '2014-05-25', '2014-05-16', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-02', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-20', '2014-04-10', '2014-04-08', '2014-04-07', '2014-03-16', '2014-03-15', '2014-03-09', '2013-10-17', '2013-10-16', '2013-10-15', '2013-10-07', '2013-10-06', '2013-10-05', '2013-10-04', '2013-09-28', '2013-09-27', '2013-09-23', '2013-09-19', '2013-09-18', '2013-09-16', '2013-09-10', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-09-05', '2013-09-04', '2013-09-03', '2013-09-02', '2013-09-01', '2013-08-31', '2013-08-30', '2013-08-29']], 'y_data': [[4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-31, 2015-08-30, 2015-08-29, 2015-08-28, 2015-08-27, 2015-08-26, 2015-08-25, 2015-08-22, 2015-08-18, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-14, 2015-08-13, 2015-08-12, 2015-08-11, 2015-08-10, 2015-08-08, 2015-08-07, 2015-08-01, 2015-07-30, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-17, 2015-07-16, 2015-07-15, 2015-07-13, 2015-07-05, 2015-07-04, 2015-07-03, 2015-07-01, 2015-06-30, 2015-06-27, 2015-06-26, 2015-06-25, 2015-06-24, 2015-06-20, 2015-06-19, 2015-06-13, 2015-06-12, 2015-06-11, 2015-06-09, 2015-06-08, 2015-06-07, 2015-05-30, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-29, 2015-04-27, 2015-04-16, 2015-03-26, 2015-03-19, 2015-03-15, 2015-03-14, 2015-02-27, 2015-02-02, 2015-01-27, 2014-10-30, 2014-10-29, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-08, 2014-10-07, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-24, 2014-09-18, 2014-09-17, 2014-09-16, 2014-09-13, 2014-09-12, 2014-09-11, 2014-09-10, 2014-09-04, 2014-09-01, 2014-08-31, 2014-08-30, 2014-08-29, 2014-08-28, 2014-08-27, 2014-08-22, 2014-08-21, 2014-08-20, 2014-08-17, 2014-08-16, 2014-08-15, 2014-08-14, 2014-08-13, 2014-08-10, 2014-08-08, 2014-08-06, 2014-08-05, 2014-08-01, 2014-07-31, 2014-07-30, 2014-07-29, 2014-07-28, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-16, 2014-07-15, 2014-07-14, 2014-07-10, 2014-07-09, 2014-07-08, 2014-07-07, 2014-07-06, 2014-07-05, 2014-07-03, 2014-07-02, 2014-06-30, 2014-06-29, 2014-06-20, 2014-06-18, 2014-06-17, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-06-05, 2014-06-04, 2014-06-01, 2014-05-29, 2014-05-26, 2014-05-25, 2014-05-16, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-02, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-20, 2014-04-10, 2014-04-08, 2014-04-07, 2014-03-16, 2014-03-15, 2014-03-09, 2013-10-17, 2013-10-16, 2013-10-15, 2013-10-07, 2013-10-06, 2013-10-05, 2013-10-04, 2013-09-28, 2013-09-27, 2013-09-23, 2013-09-19, 2013-09-18, 2013-09-16, 2013-09-10, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-09-05, 2013-09-04, 2013-09-03, 2013-09-02, 2013-09-01, 2013-08-31, 2013-08-30, 2013-08-29","4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3","For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, I want to display by the X-axis in desc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-31', '2015-08-30', '2015-08-29', '2015-08-28', '2015-08-27', '2015-08-26', '2015-08-25', '2015-08-22', '2015-08-18', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-14', '2015-08-13', '2015-08-12', '2015-08-11', '2015-08-10', '2015-08-08', '2015-08-07', '2015-08-01', '2015-07-30', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-17', '2015-07-16', '2015-07-15', '2015-07-13', '2015-07-05', '2015-07-04', '2015-07-03', '2015-07-01', '2015-06-30', '2015-06-27', '2015-06-26', '2015-06-25', '2015-06-24', '2015-06-20', '2015-06-19', '2015-06-13', '2015-06-12', '2015-06-11', '2015-06-09', '2015-06-08', '2015-06-07', '2015-05-30', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-29', '2015-04-27', '2015-04-16', '2015-03-26', '2015-03-19', '2015-03-15', '2015-03-14', '2015-02-27', '2015-02-02', '2015-01-27', '2014-10-30', '2014-10-29', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-08', '2014-10-07', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-24', '2014-09-18', '2014-09-17', '2014-09-16', '2014-09-13', '2014-09-12', '2014-09-11', '2014-09-10', '2014-09-04', '2014-09-01', '2014-08-31', '2014-08-30', '2014-08-29', '2014-08-28', '2014-08-27', '2014-08-22', '2014-08-21', '2014-08-20', '2014-08-17', '2014-08-16', '2014-08-15', '2014-08-14', '2014-08-13', '2014-08-10', '2014-08-08', '2014-08-06', '2014-08-05', '2014-08-01', '2014-07-31', '2014-07-30', '2014-07-29', '2014-07-28', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-16', '2014-07-15', '2014-07-14', '2014-07-10', '2014-07-09', '2014-07-08', '2014-07-07', '2014-07-06', '2014-07-05', '2014-07-03', '2014-07-02', '2014-06-30', '2014-06-29', '2014-06-20', '2014-06-18', '2014-06-17', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-06-05', '2014-06-04', '2014-06-01', '2014-05-29', '2014-05-26', '2014-05-25', '2014-05-16', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-02', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-20', '2014-04-10', '2014-04-08', '2014-04-07', '2014-03-16', '2014-03-15', '2014-03-09', '2013-10-17', '2013-10-16', '2013-10-15', '2013-10-07', '2013-10-06', '2013-10-05', '2013-10-04', '2013-09-28', '2013-09-27', '2013-09-23', '2013-09-19', '2013-09-18', '2013-09-16', '2013-09-10', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-09-05', '2013-09-04', '2013-09-03', '2013-09-02', '2013-09-01', '2013-08-31', '2013-08-30', '2013-08-29']], 'y_data': [[4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-31, 2015-08-30, 2015-08-29, 2015-08-28, 2015-08-27, 2015-08-26, 2015-08-25, 2015-08-22, 2015-08-18, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-14, 2015-08-13, 2015-08-12, 2015-08-11, 2015-08-10, 2015-08-08, 2015-08-07, 2015-08-01, 2015-07-30, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-17, 2015-07-16, 2015-07-15, 2015-07-13, 2015-07-05, 2015-07-04, 2015-07-03, 2015-07-01, 2015-06-30, 2015-06-27, 2015-06-26, 2015-06-25, 2015-06-24, 2015-06-20, 2015-06-19, 2015-06-13, 2015-06-12, 2015-06-11, 2015-06-09, 2015-06-08, 2015-06-07, 2015-05-30, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-29, 2015-04-27, 2015-04-16, 2015-03-26, 2015-03-19, 2015-03-15, 2015-03-14, 2015-02-27, 2015-02-02, 2015-01-27, 2014-10-30, 2014-10-29, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-08, 2014-10-07, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-24, 2014-09-18, 2014-09-17, 2014-09-16, 2014-09-13, 2014-09-12, 2014-09-11, 2014-09-10, 2014-09-04, 2014-09-01, 2014-08-31, 2014-08-30, 2014-08-29, 2014-08-28, 2014-08-27, 2014-08-22, 2014-08-21, 2014-08-20, 2014-08-17, 2014-08-16, 2014-08-15, 2014-08-14, 2014-08-13, 2014-08-10, 2014-08-08, 2014-08-06, 2014-08-05, 2014-08-01, 2014-07-31, 2014-07-30, 2014-07-29, 2014-07-28, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-16, 2014-07-15, 2014-07-14, 2014-07-10, 2014-07-09, 2014-07-08, 2014-07-07, 2014-07-06, 2014-07-05, 2014-07-03, 2014-07-02, 2014-06-30, 2014-06-29, 2014-06-20, 2014-06-18, 2014-06-17, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-06-05, 2014-06-04, 2014-06-01, 2014-05-29, 2014-05-26, 2014-05-25, 2014-05-16, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-02, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-20, 2014-04-10, 2014-04-08, 2014-04-07, 2014-03-16, 2014-03-15, 2014-03-09, 2013-10-17, 2013-10-16, 2013-10-15, 2013-10-07, 2013-10-06, 2013-10-05, 2013-10-04, 2013-09-28, 2013-09-27, 2013-09-23, 2013-09-19, 2013-09-18, 2013-09-16, 2013-09-10, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-09-05, 2013-09-04, 2013-09-03, 2013-09-02, 2013-09-01, 2013-08-31, 2013-08-30, 2013-08-29","4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3","Please show the trend about the number of days with max temperature reaches 80 change over dates, and could you display x axis from high to low order please?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-31', '2015-08-30', '2015-08-29', '2015-08-28', '2015-08-27', '2015-08-26', '2015-08-25', '2015-08-22', '2015-08-18', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-14', '2015-08-13', '2015-08-12', '2015-08-11', '2015-08-10', '2015-08-08', '2015-08-07', '2015-08-01', '2015-07-30', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-17', '2015-07-16', '2015-07-15', '2015-07-13', '2015-07-05', '2015-07-04', '2015-07-03', '2015-07-01', '2015-06-30', '2015-06-27', '2015-06-26', '2015-06-25', '2015-06-24', '2015-06-20', '2015-06-19', '2015-06-13', '2015-06-12', '2015-06-11', '2015-06-09', '2015-06-08', '2015-06-07', '2015-05-30', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-29', '2015-04-27', '2015-04-16', '2015-03-26', '2015-03-19', '2015-03-15', '2015-03-14', '2015-02-27', '2015-02-02', '2015-01-27', '2014-10-30', '2014-10-29', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-08', '2014-10-07', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-24', '2014-09-18', '2014-09-17', '2014-09-16', '2014-09-13', '2014-09-12', '2014-09-11', '2014-09-10', '2014-09-04', '2014-09-01', '2014-08-31', '2014-08-30', '2014-08-29', '2014-08-28', '2014-08-27', '2014-08-22', '2014-08-21', '2014-08-20', '2014-08-17', '2014-08-16', '2014-08-15', '2014-08-14', '2014-08-13', '2014-08-10', '2014-08-08', '2014-08-06', '2014-08-05', '2014-08-01', '2014-07-31', '2014-07-30', '2014-07-29', '2014-07-28', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-16', '2014-07-15', '2014-07-14', '2014-07-10', '2014-07-09', '2014-07-08', '2014-07-07', '2014-07-06', '2014-07-05', '2014-07-03', '2014-07-02', '2014-06-30', '2014-06-29', '2014-06-20', '2014-06-18', '2014-06-17', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-06-05', '2014-06-04', '2014-06-01', '2014-05-29', '2014-05-26', '2014-05-25', '2014-05-16', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-02', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-20', '2014-04-10', '2014-04-08', '2014-04-07', '2014-03-16', '2014-03-15', '2014-03-09', '2013-10-17', '2013-10-16', '2013-10-15', '2013-10-07', '2013-10-06', '2013-10-05', '2013-10-04', '2013-09-28', '2013-09-27', '2013-09-23', '2013-09-19', '2013-09-18', '2013-09-16', '2013-09-10', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-09-05', '2013-09-04', '2013-09-03', '2013-09-02', '2013-09-01', '2013-08-31', '2013-08-30', '2013-08-29']], 'y_data': [[4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-31, 2015-08-30, 2015-08-29, 2015-08-28, 2015-08-27, 2015-08-26, 2015-08-25, 2015-08-22, 2015-08-18, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-14, 2015-08-13, 2015-08-12, 2015-08-11, 2015-08-10, 2015-08-08, 2015-08-07, 2015-08-01, 2015-07-30, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-17, 2015-07-16, 2015-07-15, 2015-07-13, 2015-07-05, 2015-07-04, 2015-07-03, 2015-07-01, 2015-06-30, 2015-06-27, 2015-06-26, 2015-06-25, 2015-06-24, 2015-06-20, 2015-06-19, 2015-06-13, 2015-06-12, 2015-06-11, 2015-06-09, 2015-06-08, 2015-06-07, 2015-05-30, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-29, 2015-04-27, 2015-04-16, 2015-03-26, 2015-03-19, 2015-03-15, 2015-03-14, 2015-02-27, 2015-02-02, 2015-01-27, 2014-10-30, 2014-10-29, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-08, 2014-10-07, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-24, 2014-09-18, 2014-09-17, 2014-09-16, 2014-09-13, 2014-09-12, 2014-09-11, 2014-09-10, 2014-09-04, 2014-09-01, 2014-08-31, 2014-08-30, 2014-08-29, 2014-08-28, 2014-08-27, 2014-08-22, 2014-08-21, 2014-08-20, 2014-08-17, 2014-08-16, 2014-08-15, 2014-08-14, 2014-08-13, 2014-08-10, 2014-08-08, 2014-08-06, 2014-08-05, 2014-08-01, 2014-07-31, 2014-07-30, 2014-07-29, 2014-07-28, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-16, 2014-07-15, 2014-07-14, 2014-07-10, 2014-07-09, 2014-07-08, 2014-07-07, 2014-07-06, 2014-07-05, 2014-07-03, 2014-07-02, 2014-06-30, 2014-06-29, 2014-06-20, 2014-06-18, 2014-06-17, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-06-05, 2014-06-04, 2014-06-01, 2014-05-29, 2014-05-26, 2014-05-25, 2014-05-16, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-02, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-20, 2014-04-10, 2014-04-08, 2014-04-07, 2014-03-16, 2014-03-15, 2014-03-09, 2013-10-17, 2013-10-16, 2013-10-15, 2013-10-07, 2013-10-06, 2013-10-05, 2013-10-04, 2013-09-28, 2013-09-27, 2013-09-23, 2013-09-19, 2013-09-18, 2013-09-16, 2013-09-10, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-09-05, 2013-09-04, 2013-09-03, 2013-09-02, 2013-09-01, 2013-08-31, 2013-08-30, 2013-08-29","4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3","Please show the trend about the number of days with max temperature reaches 80 change over dates, order x axis from high to low order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-31', '2015-08-30', '2015-08-29', '2015-08-28', '2015-08-27', '2015-08-26', '2015-08-25', '2015-08-22', '2015-08-18', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-14', '2015-08-13', '2015-08-12', '2015-08-11', '2015-08-10', '2015-08-08', '2015-08-07', '2015-08-01', '2015-07-30', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-17', '2015-07-16', '2015-07-15', '2015-07-13', '2015-07-05', '2015-07-04', '2015-07-03', '2015-07-01', '2015-06-30', '2015-06-27', '2015-06-26', '2015-06-25', '2015-06-24', '2015-06-20', '2015-06-19', '2015-06-13', '2015-06-12', '2015-06-11', '2015-06-09', '2015-06-08', '2015-06-07', '2015-05-30', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-29', '2015-04-27', '2015-04-16', '2015-03-26', '2015-03-19', '2015-03-15', '2015-03-14', '2015-02-27', '2015-02-02', '2015-01-27', '2014-10-30', '2014-10-29', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-08', '2014-10-07', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-24', '2014-09-18', '2014-09-17', '2014-09-16', '2014-09-13', '2014-09-12', '2014-09-11', '2014-09-10', '2014-09-04', '2014-09-01', '2014-08-31', '2014-08-30', '2014-08-29', '2014-08-28', '2014-08-27', '2014-08-22', '2014-08-21', '2014-08-20', '2014-08-17', '2014-08-16', '2014-08-15', '2014-08-14', '2014-08-13', '2014-08-10', '2014-08-08', '2014-08-06', '2014-08-05', '2014-08-01', '2014-07-31', '2014-07-30', '2014-07-29', '2014-07-28', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-16', '2014-07-15', '2014-07-14', '2014-07-10', '2014-07-09', '2014-07-08', '2014-07-07', '2014-07-06', '2014-07-05', '2014-07-03', '2014-07-02', '2014-06-30', '2014-06-29', '2014-06-20', '2014-06-18', '2014-06-17', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-06-05', '2014-06-04', '2014-06-01', '2014-05-29', '2014-05-26', '2014-05-25', '2014-05-16', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-02', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-20', '2014-04-10', '2014-04-08', '2014-04-07', '2014-03-16', '2014-03-15', '2014-03-09', '2013-10-17', '2013-10-16', '2013-10-15', '2013-10-07', '2013-10-06', '2013-10-05', '2013-10-04', '2013-09-28', '2013-09-27', '2013-09-23', '2013-09-19', '2013-09-18', '2013-09-16', '2013-09-10', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-09-05', '2013-09-04', '2013-09-03', '2013-09-02', '2013-09-01', '2013-08-31', '2013-08-30', '2013-08-29']], 'y_data': [[4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-31, 2015-08-30, 2015-08-29, 2015-08-28, 2015-08-27, 2015-08-26, 2015-08-25, 2015-08-22, 2015-08-18, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-14, 2015-08-13, 2015-08-12, 2015-08-11, 2015-08-10, 2015-08-08, 2015-08-07, 2015-08-01, 2015-07-30, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-17, 2015-07-16, 2015-07-15, 2015-07-13, 2015-07-05, 2015-07-04, 2015-07-03, 2015-07-01, 2015-06-30, 2015-06-27, 2015-06-26, 2015-06-25, 2015-06-24, 2015-06-20, 2015-06-19, 2015-06-13, 2015-06-12, 2015-06-11, 2015-06-09, 2015-06-08, 2015-06-07, 2015-05-30, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-29, 2015-04-27, 2015-04-16, 2015-03-26, 2015-03-19, 2015-03-15, 2015-03-14, 2015-02-27, 2015-02-02, 2015-01-27, 2014-10-30, 2014-10-29, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-08, 2014-10-07, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-24, 2014-09-18, 2014-09-17, 2014-09-16, 2014-09-13, 2014-09-12, 2014-09-11, 2014-09-10, 2014-09-04, 2014-09-01, 2014-08-31, 2014-08-30, 2014-08-29, 2014-08-28, 2014-08-27, 2014-08-22, 2014-08-21, 2014-08-20, 2014-08-17, 2014-08-16, 2014-08-15, 2014-08-14, 2014-08-13, 2014-08-10, 2014-08-08, 2014-08-06, 2014-08-05, 2014-08-01, 2014-07-31, 2014-07-30, 2014-07-29, 2014-07-28, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-16, 2014-07-15, 2014-07-14, 2014-07-10, 2014-07-09, 2014-07-08, 2014-07-07, 2014-07-06, 2014-07-05, 2014-07-03, 2014-07-02, 2014-06-30, 2014-06-29, 2014-06-20, 2014-06-18, 2014-06-17, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-06-05, 2014-06-04, 2014-06-01, 2014-05-29, 2014-05-26, 2014-05-25, 2014-05-16, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-02, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-20, 2014-04-10, 2014-04-08, 2014-04-07, 2014-03-16, 2014-03-15, 2014-03-09, 2013-10-17, 2013-10-16, 2013-10-15, 2013-10-07, 2013-10-06, 2013-10-05, 2013-10-04, 2013-09-28, 2013-09-27, 2013-09-23, 2013-09-19, 2013-09-18, 2013-09-16, 2013-09-10, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-09-05, 2013-09-04, 2013-09-03, 2013-09-02, 2013-09-01, 2013-08-31, 2013-08-30, 2013-08-29","4, 1, 2, 5, 5, 3, 1, 1, 1, 5, 5, 5, 1, 2, 3, 1, 1, 1, 1, 2, 2, 4, 5, 5, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 1, 2, 4, 1, 1, 1, 3, 4, 2, 2, 5, 1, 1, 1, 1, 2, 5, 1, 5, 4, 5, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 5, 4, 1, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 1, 3, 5, 5, 1, 5, 2, 4, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 4, 4, 5, 5, 3, 3, 4, 1, 1, 1, 3, 1, 2, 1, 1, 5, 5, 4, 5, 1, 5, 1, 4, 5, 1, 1, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 5, 5, 5, 3, 1, 4, 4, 1, 1, 1, 4, 5, 3, 5, 5, 5, 3, 4, 1, 4, 5, 4, 2, 2, 4, 3, 5, 5, 2, 1, 2, 1, 4, 1, 4, 3","For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, I want to list x axis from high to low order."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, return the highest latitude among its stations Show bar chart, and could you show X-axis in ascending order?"
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","Show maximal lat from each city, list X-axis in asc order."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco', 'San Jose']], 'y_data': [[37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"Mountain View, Palo Alto, Redwood City, San Francisco, San Jose","37.40694000000001, 37.448598, 37.491269, 37.80477, 37.352601","For each city, what is the highest latitude for its stations Visualize by bar chart, and list by the bars from low to high."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View']], 'y_data': [[37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, San Francisco, Redwood City, Palo Alto, Mountain View","37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001","Show maximal lat from each city, I want to show x-axis from high to low order."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View']], 'y_data': [[37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, San Francisco, Redwood City, Palo Alto, Mountain View","37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001","For each city, return the highest latitude among its stations Show bar chart, I want to sort city in desc order please."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY city DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View']], 'y_data': [[37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, San Francisco, Redwood City, Palo Alto, Mountain View","37.352601, 37.80477, 37.491269, 37.448598, 37.40694000000001","For each city, what is the highest latitude for its stations Visualize by bar chart, show in descending by the names."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco']], 'y_data': [[37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, Mountain View, Palo Alto, Redwood City, San Francisco","37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477","Show maximal lat from each city, and could you list by the total number in asc?"
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco']], 'y_data': [[37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, Mountain View, Palo Alto, Redwood City, San Francisco","37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477","For each city, what is the highest latitude for its stations Visualize by bar chart, and could you display total number from low to high order please?"
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Jose', 'Mountain View', 'Palo Alto', 'Redwood City', 'San Francisco']], 'y_data': [[37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Jose, Mountain View, Palo Alto, Redwood City, San Francisco","37.352601, 37.40694000000001, 37.448598, 37.491269, 37.80477","For each city, return the highest latitude among its stations Show bar chart, could you list by the total number in asc?"
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View', 'San Jose']], 'y_data': [[37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Francisco, Redwood City, Palo Alto, Mountain View, San Jose","37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601","Show maximal lat from each city, show total number in descending order please."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View', 'San Jose']], 'y_data': [[37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Francisco, Redwood City, Palo Alto, Mountain View, San Jose","37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601","For each city, return the highest latitude among its stations Show bar chart, I want to sort by the Y-axis in desc please."
"SELECT city , max(lat) FROM station GROUP BY city ORDER BY max(lat) DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'max(lat)', 'x_data': [['San Francisco', 'Redwood City', 'Palo Alto', 'Mountain View', 'San Jose']], 'y_data': [[37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601]], 'classify': [], 'describe': ''}",bar,city,max(lat),"San Francisco, Redwood City, Palo Alto, Mountain View, San Jose","37.80477, 37.491269, 37.448598, 37.40694000000001, 37.352601","For each city, what is the highest latitude for its stations Visualize by bar chart, and order by the y axis from high to low."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65","Find the ids and names of stations from which at least 200 trips started, and rank from low to high by the X-axis."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65","What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, and rank from low to high by the X-axis."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65","Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, list by the x-axis from low to high."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65","Show me start_station_id by start station name in a histogram, and could you rank bars in ascending order?"
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['2nd at Folsom', '2nd at South Park', '2nd at Townsend', 'Beale at Market', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Embarcadero at Sansome', 'Grant Avenue at Columbus Avenue', 'Harry Bridges Plaza (Ferry Building)', 'Howard at 2nd', 'Market at 10th', 'Market at 4th', 'Market at Sansome', 'Powell Street BART', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Steuart at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Townsend at 7th']], 'y_data': [[62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"2nd at Folsom, 2nd at South Park, 2nd at Townsend, Beale at Market, Embarcadero at Bryant, Embarcadero at Folsom, Embarcadero at Sansome, Grant Avenue at Columbus Avenue, Harry Bridges Plaza (Ferry Building), Howard at 2nd, Market at 10th, Market at 4th, Market at Sansome, Powell Street BART, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Steuart at Market, Temporary Transbay Terminal (Howard at Beale), Townsend at 7th","62, 64, 61, 56, 54, 51, 60, 73, 50, 63, 67, 76, 77, 39, 70, 69, 74, 55, 65","what are the ids and names of all start stations that were the beginning of at least 200 trips?, and could you rank bars in ascending order?"
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)', 'Steuart at Market', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Powell Street BART', 'Market at Sansome', 'Market at 4th', 'Market at 10th', 'Howard at 2nd', 'Harry Bridges Plaza (Ferry Building)', 'Grant Avenue at Columbus Avenue', 'Embarcadero at Sansome', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Beale at Market', '2nd at Townsend', '2nd at South Park', '2nd at Folsom']], 'y_data': [[65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Townsend at 7th, Temporary Transbay Terminal (Howard at Beale), Steuart at Market, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Powell Street BART, Market at Sansome, Market at 4th, Market at 10th, Howard at 2nd, Harry Bridges Plaza (Ferry Building), Grant Avenue at Columbus Avenue, Embarcadero at Sansome, Embarcadero at Folsom, Embarcadero at Bryant, Beale at Market, 2nd at Townsend, 2nd at South Park, 2nd at Folsom","65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62","Find the ids and names of stations from which at least 200 trips started, list by the bar in desc."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)', 'Steuart at Market', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Powell Street BART', 'Market at Sansome', 'Market at 4th', 'Market at 10th', 'Howard at 2nd', 'Harry Bridges Plaza (Ferry Building)', 'Grant Avenue at Columbus Avenue', 'Embarcadero at Sansome', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Beale at Market', '2nd at Townsend', '2nd at South Park', '2nd at Folsom']], 'y_data': [[65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Townsend at 7th, Temporary Transbay Terminal (Howard at Beale), Steuart at Market, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Powell Street BART, Market at Sansome, Market at 4th, Market at 10th, Howard at 2nd, Harry Bridges Plaza (Ferry Building), Grant Avenue at Columbus Avenue, Embarcadero at Sansome, Embarcadero at Folsom, Embarcadero at Bryant, Beale at Market, 2nd at Townsend, 2nd at South Park, 2nd at Folsom","65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62","What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, list by the X-axis in descending."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)', 'Steuart at Market', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Powell Street BART', 'Market at Sansome', 'Market at 4th', 'Market at 10th', 'Howard at 2nd', 'Harry Bridges Plaza (Ferry Building)', 'Grant Avenue at Columbus Avenue', 'Embarcadero at Sansome', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Beale at Market', '2nd at Townsend', '2nd at South Park', '2nd at Folsom']], 'y_data': [[65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Townsend at 7th, Temporary Transbay Terminal (Howard at Beale), Steuart at Market, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Powell Street BART, Market at Sansome, Market at 4th, Market at 10th, Howard at 2nd, Harry Bridges Plaza (Ferry Building), Grant Avenue at Columbus Avenue, Embarcadero at Sansome, Embarcadero at Folsom, Embarcadero at Bryant, Beale at Market, 2nd at Townsend, 2nd at South Park, 2nd at Folsom","65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62","Show me start_station_id by start station name in a histogram, and could you sort in desc by the start_station_name?"
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)', 'Steuart at Market', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Powell Street BART', 'Market at Sansome', 'Market at 4th', 'Market at 10th', 'Howard at 2nd', 'Harry Bridges Plaza (Ferry Building)', 'Grant Avenue at Columbus Avenue', 'Embarcadero at Sansome', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Beale at Market', '2nd at Townsend', '2nd at South Park', '2nd at Folsom']], 'y_data': [[65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Townsend at 7th, Temporary Transbay Terminal (Howard at Beale), Steuart at Market, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Powell Street BART, Market at Sansome, Market at 4th, Market at 10th, Howard at 2nd, Harry Bridges Plaza (Ferry Building), Grant Avenue at Columbus Avenue, Embarcadero at Sansome, Embarcadero at Folsom, Embarcadero at Bryant, Beale at Market, 2nd at Townsend, 2nd at South Park, 2nd at Folsom","65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62","Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, rank from high to low by the X."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_name DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)', 'Steuart at Market', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Powell Street BART', 'Market at Sansome', 'Market at 4th', 'Market at 10th', 'Howard at 2nd', 'Harry Bridges Plaza (Ferry Building)', 'Grant Avenue at Columbus Avenue', 'Embarcadero at Sansome', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Beale at Market', '2nd at Townsend', '2nd at South Park', '2nd at Folsom']], 'y_data': [[65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Townsend at 7th, Temporary Transbay Terminal (Howard at Beale), Steuart at Market, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Powell Street BART, Market at Sansome, Market at 4th, Market at 10th, Howard at 2nd, Harry Bridges Plaza (Ferry Building), Grant Avenue at Columbus Avenue, Embarcadero at Sansome, Embarcadero at Folsom, Embarcadero at Bryant, Beale at Market, 2nd at Townsend, 2nd at South Park, 2nd at Folsom","65, 55, 74, 69, 70, 39, 77, 76, 67, 63, 50, 73, 60, 51, 54, 56, 61, 64, 62","what are the ids and names of all start stations that were the beginning of at least 200 trips?, and sort in desc by the bar."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Powell Street BART', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Temporary Transbay Terminal (Howard at Beale)', 'Beale at Market', 'Embarcadero at Sansome', '2nd at Townsend', '2nd at Folsom', 'Howard at 2nd', '2nd at South Park', 'Townsend at 7th', 'Market at 10th', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Grant Avenue at Columbus Avenue', 'Steuart at Market', 'Market at 4th', 'Market at Sansome']], 'y_data': [[39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Powell Street BART, Harry Bridges Plaza (Ferry Building), Embarcadero at Folsom, Embarcadero at Bryant, Temporary Transbay Terminal (Howard at Beale), Beale at Market, Embarcadero at Sansome, 2nd at Townsend, 2nd at Folsom, Howard at 2nd, 2nd at South Park, Townsend at 7th, Market at 10th, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Grant Avenue at Columbus Avenue, Steuart at Market, Market at 4th, Market at Sansome","39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77","Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, and could you rank in ascending by the total number?"
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Powell Street BART', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Temporary Transbay Terminal (Howard at Beale)', 'Beale at Market', 'Embarcadero at Sansome', '2nd at Townsend', '2nd at Folsom', 'Howard at 2nd', '2nd at South Park', 'Townsend at 7th', 'Market at 10th', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Grant Avenue at Columbus Avenue', 'Steuart at Market', 'Market at 4th', 'Market at Sansome']], 'y_data': [[39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Powell Street BART, Harry Bridges Plaza (Ferry Building), Embarcadero at Folsom, Embarcadero at Bryant, Temporary Transbay Terminal (Howard at Beale), Beale at Market, Embarcadero at Sansome, 2nd at Townsend, 2nd at Folsom, Howard at 2nd, 2nd at South Park, Townsend at 7th, Market at 10th, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Grant Avenue at Columbus Avenue, Steuart at Market, Market at 4th, Market at Sansome","39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77","Show me start_station_id by start station name in a histogram, could you show start_station_id from low to high order?"
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Powell Street BART', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Temporary Transbay Terminal (Howard at Beale)', 'Beale at Market', 'Embarcadero at Sansome', '2nd at Townsend', '2nd at Folsom', 'Howard at 2nd', '2nd at South Park', 'Townsend at 7th', 'Market at 10th', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Grant Avenue at Columbus Avenue', 'Steuart at Market', 'Market at 4th', 'Market at Sansome']], 'y_data': [[39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Powell Street BART, Harry Bridges Plaza (Ferry Building), Embarcadero at Folsom, Embarcadero at Bryant, Temporary Transbay Terminal (Howard at Beale), Beale at Market, Embarcadero at Sansome, 2nd at Townsend, 2nd at Folsom, Howard at 2nd, 2nd at South Park, Townsend at 7th, Market at 10th, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Grant Avenue at Columbus Avenue, Steuart at Market, Market at 4th, Market at Sansome","39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77","what are the ids and names of all start stations that were the beginning of at least 200 trips?, and list Y from low to high order."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Powell Street BART', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Temporary Transbay Terminal (Howard at Beale)', 'Beale at Market', 'Embarcadero at Sansome', '2nd at Townsend', '2nd at Folsom', 'Howard at 2nd', '2nd at South Park', 'Townsend at 7th', 'Market at 10th', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Grant Avenue at Columbus Avenue', 'Steuart at Market', 'Market at 4th', 'Market at Sansome']], 'y_data': [[39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Powell Street BART, Harry Bridges Plaza (Ferry Building), Embarcadero at Folsom, Embarcadero at Bryant, Temporary Transbay Terminal (Howard at Beale), Beale at Market, Embarcadero at Sansome, 2nd at Townsend, 2nd at Folsom, Howard at 2nd, 2nd at South Park, Townsend at 7th, Market at 10th, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Grant Avenue at Columbus Avenue, Steuart at Market, Market at 4th, Market at Sansome","39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77","What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, sort in asc by the Y."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id ASC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Powell Street BART', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Folsom', 'Embarcadero at Bryant', 'Temporary Transbay Terminal (Howard at Beale)', 'Beale at Market', 'Embarcadero at Sansome', '2nd at Townsend', '2nd at Folsom', 'Howard at 2nd', '2nd at South Park', 'Townsend at 7th', 'Market at 10th', 'San Francisco Caltrain 2 (330 Townsend)', 'San Francisco Caltrain (Townsend at 4th)', 'Grant Avenue at Columbus Avenue', 'Steuart at Market', 'Market at 4th', 'Market at Sansome']], 'y_data': [[39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Powell Street BART, Harry Bridges Plaza (Ferry Building), Embarcadero at Folsom, Embarcadero at Bryant, Temporary Transbay Terminal (Howard at Beale), Beale at Market, Embarcadero at Sansome, 2nd at Townsend, 2nd at Folsom, Howard at 2nd, 2nd at South Park, Townsend at 7th, Market at 10th, San Francisco Caltrain 2 (330 Townsend), San Francisco Caltrain (Townsend at 4th), Grant Avenue at Columbus Avenue, Steuart at Market, Market at 4th, Market at Sansome","39, 50, 51, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 76, 77","Find the ids and names of stations from which at least 200 trips started, and show total number in ascending order."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Market at Sansome', 'Market at 4th', 'Steuart at Market', 'Grant Avenue at Columbus Avenue', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Market at 10th', 'Townsend at 7th', '2nd at South Park', 'Howard at 2nd', '2nd at Folsom', '2nd at Townsend', 'Embarcadero at Sansome', 'Beale at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Harry Bridges Plaza (Ferry Building)', 'Powell Street BART']], 'y_data': [[77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Market at Sansome, Market at 4th, Steuart at Market, Grant Avenue at Columbus Avenue, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Market at 10th, Townsend at 7th, 2nd at South Park, Howard at 2nd, 2nd at Folsom, 2nd at Townsend, Embarcadero at Sansome, Beale at Market, Temporary Transbay Terminal (Howard at Beale), Embarcadero at Bryant, Embarcadero at Folsom, Harry Bridges Plaza (Ferry Building), Powell Street BART","77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39","Find the ids and names of stations from which at least 200 trips started, and list y-axis in descending order please."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Market at Sansome', 'Market at 4th', 'Steuart at Market', 'Grant Avenue at Columbus Avenue', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Market at 10th', 'Townsend at 7th', '2nd at South Park', 'Howard at 2nd', '2nd at Folsom', '2nd at Townsend', 'Embarcadero at Sansome', 'Beale at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Harry Bridges Plaza (Ferry Building)', 'Powell Street BART']], 'y_data': [[77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Market at Sansome, Market at 4th, Steuart at Market, Grant Avenue at Columbus Avenue, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Market at 10th, Townsend at 7th, 2nd at South Park, Howard at 2nd, 2nd at Folsom, 2nd at Townsend, Embarcadero at Sansome, Beale at Market, Temporary Transbay Terminal (Howard at Beale), Embarcadero at Bryant, Embarcadero at Folsom, Harry Bridges Plaza (Ferry Building), Powell Street BART","77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39","what are the ids and names of all start stations that were the beginning of at least 200 trips?, sort start_station_id from high to low order."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Market at Sansome', 'Market at 4th', 'Steuart at Market', 'Grant Avenue at Columbus Avenue', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Market at 10th', 'Townsend at 7th', '2nd at South Park', 'Howard at 2nd', '2nd at Folsom', '2nd at Townsend', 'Embarcadero at Sansome', 'Beale at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Harry Bridges Plaza (Ferry Building)', 'Powell Street BART']], 'y_data': [[77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Market at Sansome, Market at 4th, Steuart at Market, Grant Avenue at Columbus Avenue, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Market at 10th, Townsend at 7th, 2nd at South Park, Howard at 2nd, 2nd at Folsom, 2nd at Townsend, Embarcadero at Sansome, Beale at Market, Temporary Transbay Terminal (Howard at Beale), Embarcadero at Bryant, Embarcadero at Folsom, Harry Bridges Plaza (Ferry Building), Powell Street BART","77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39","Show me start_station_id by start station name in a histogram, and sort start_station_id in desc order."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Market at Sansome', 'Market at 4th', 'Steuart at Market', 'Grant Avenue at Columbus Avenue', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Market at 10th', 'Townsend at 7th', '2nd at South Park', 'Howard at 2nd', '2nd at Folsom', '2nd at Townsend', 'Embarcadero at Sansome', 'Beale at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Harry Bridges Plaza (Ferry Building)', 'Powell Street BART']], 'y_data': [[77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Market at Sansome, Market at 4th, Steuart at Market, Grant Avenue at Columbus Avenue, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Market at 10th, Townsend at 7th, 2nd at South Park, Howard at 2nd, 2nd at Folsom, 2nd at Townsend, Embarcadero at Sansome, Beale at Market, Temporary Transbay Terminal (Howard at Beale), Embarcadero at Bryant, Embarcadero at Folsom, Harry Bridges Plaza (Ferry Building), Powell Street BART","77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39","What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, sort start_station_id from high to low order."
"SELECT start_station_name , start_station_id FROM trip ORDER BY start_station_id DESC",Bar,Easy,bike_1,"{'chart': 'bar', 'x_name': 'start_station_name', 'y_name': 'start_station_id', 'x_data': [['Market at Sansome', 'Market at 4th', 'Steuart at Market', 'Grant Avenue at Columbus Avenue', 'San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Market at 10th', 'Townsend at 7th', '2nd at South Park', 'Howard at 2nd', '2nd at Folsom', '2nd at Townsend', 'Embarcadero at Sansome', 'Beale at Market', 'Temporary Transbay Terminal (Howard at Beale)', 'Embarcadero at Bryant', 'Embarcadero at Folsom', 'Harry Bridges Plaza (Ferry Building)', 'Powell Street BART']], 'y_data': [[77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39]], 'classify': [], 'describe': ''}",bar,start_station_name,start_station_id,"Market at Sansome, Market at 4th, Steuart at Market, Grant Avenue at Columbus Avenue, San Francisco Caltrain (Townsend at 4th), San Francisco Caltrain 2 (330 Townsend), Market at 10th, Townsend at 7th, 2nd at South Park, Howard at 2nd, 2nd at Folsom, 2nd at Townsend, Embarcadero at Sansome, Beale at Market, Temporary Transbay Terminal (Howard at Beale), Embarcadero at Bryant, Embarcadero at Folsom, Harry Bridges Plaza (Ferry Building), Powell Street BART","77, 76, 74, 73, 70, 69, 67, 65, 64, 63, 62, 61, 60, 56, 55, 54, 51, 50, 39","Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, and I want to list from high to low by the start_station_id please."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","A bar chart for giveing me the number of the dates when the max temperature was higher than 85, sort Y in asc order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","A bar chart for what are the number of the dates with a maximum temperature higher than 85?, order y axis from low to high order please."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and I want to show the number of date from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","What are the number of the dates with a maximum temperature higher than 85?, I want to show the number of date from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","Give me the number of the dates when the max temperature was higher than 85, and display from low to high by the Y."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[18, 62, 99]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","18, 62, 99","What are the dates with a maximum temperature higher than 85, and count them by a bar chart, display from low to high by the Y."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","What are the number of the dates with a maximum temperature higher than 85?, and rank from high to low by the the number of date."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","What are the dates with a maximum temperature higher than 85, and count them by a bar chart, sort by the the number of date in descending please."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","Give me the dates when the max temperature was higher than 85, and count them by a bar chart, sort by the the number of date in descending please."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","Give me the number of the dates when the max temperature was higher than 85, sort the number of date in descending order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","A bar chart for what are the number of the dates with a maximum temperature higher than 85?, show by the Y-axis in desc please."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[99, 62, 18]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","99, 62, 18","A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and sort in descending by the Y."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and could you list y axis in ascending order please?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","A bar chart for what are the number of the dates with a maximum temperature higher than 85?, and could you display from low to high by the y axis?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","What are the dates with a maximum temperature higher than 85, and count them by a bar chart, list in asc by the y axis."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","Give me the number of the dates when the max temperature was higher than 85, and I want to order from low to high by the y-axis."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and could you list y axis in ascending order please?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Fri', 'Sun', 'Thur', 'Mon']], 'y_data': [[20, 21, 23, 24, 28, 31, 32]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Fri, Sun, Thur, Mon","20, 21, 23, 24, 28, 31, 32","What are the number of the dates with a maximum temperature higher than 85?, I want to rank by the y-axis in asc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","A bar chart for what are the number of the dates with a maximum temperature higher than 85?, and show total number in descending order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","What are the number of the dates with a maximum temperature higher than 85?, and sort by the the number of date in desc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","What are the dates with a maximum temperature higher than 85, and count them by a bar chart, and display from high to low by the Y."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and display in descending by the y-axis."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","Give me the number of the dates when the max temperature was higher than 85, and display from high to low by the Y."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Thur', 'Sun', 'Fri', 'Sat', 'Wed', 'Tue']], 'y_data': [[32, 31, 28, 24, 23, 21, 20]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Thur, Sun, Fri, Sat, Wed, Tue","32, 31, 28, 24, 23, 21, 20","A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and could you show by the y axis in desc?"
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","A line chart for what are the number of the dates with a maximum temperature higher than 85?, rank by the X from low to high."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","A line chart for giveing me the number of the dates when the max temperature was higher than 85, I want to rank by the X in asc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","Give me the number of the dates when the max temperature was higher than 85, and order by the X from low to high."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","What are the number of the dates with a maximum temperature higher than 85?, and order by the X from low to high."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","What are the dates with a maximum temperature higher than 85, and count them by a line chart, and rank by the X from low to high."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-08-30', '2013-09-06', '2013-09-07', '2013-09-08', '2013-09-09', '2013-09-19', '2014-04-08', '2014-04-29', '2014-04-30', '2014-05-01', '2014-05-12', '2014-05-13', '2014-05-14', '2014-05-15', '2014-06-08', '2014-06-09', '2014-06-12', '2014-06-14', '2014-06-18', '2014-06-29', '2014-06-30', '2014-07-14', '2014-07-24', '2014-07-25', '2014-07-26', '2014-07-27', '2014-08-30', '2014-09-01', '2014-09-10', '2014-09-11', '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-12', '2014-10-13', '2014-10-18', '2015-01-27', '2015-02-27', '2015-03-14', '2015-04-27', '2015-04-30', '2015-05-01', '2015-05-02', '2015-05-03', '2015-06-08', '2015-06-12', '2015-06-25', '2015-06-30', '2015-07-01', '2015-07-19', '2015-07-20', '2015-07-27', '2015-07-28', '2015-07-29', '2015-08-08', '2015-08-13', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-26', '2015-08-27', '2015-08-28']], 'y_data': [[3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-08-30, 2013-09-06, 2013-09-07, 2013-09-08, 2013-09-09, 2013-09-19, 2014-04-08, 2014-04-29, 2014-04-30, 2014-05-01, 2014-05-12, 2014-05-13, 2014-05-14, 2014-05-15, 2014-06-08, 2014-06-09, 2014-06-12, 2014-06-14, 2014-06-18, 2014-06-29, 2014-06-30, 2014-07-14, 2014-07-24, 2014-07-25, 2014-07-26, 2014-07-27, 2014-08-30, 2014-09-01, 2014-09-10, 2014-09-11, 2014-10-01, 2014-10-02, 2014-10-03, 2014-10-04, 2014-10-05, 2014-10-06, 2014-10-12, 2014-10-13, 2014-10-18, 2015-01-27, 2015-02-27, 2015-03-14, 2015-04-27, 2015-04-30, 2015-05-01, 2015-05-02, 2015-05-03, 2015-06-08, 2015-06-12, 2015-06-25, 2015-06-30, 2015-07-01, 2015-07-19, 2015-07-20, 2015-07-27, 2015-07-28, 2015-07-29, 2015-08-08, 2015-08-13, 2015-08-15, 2015-08-16, 2015-08-17, 2015-08-26, 2015-08-27, 2015-08-28","3, 4, 5, 1, 2, 3, 1, 4, 5, 4, 4, 5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 1, 2, 5, 1, 1, 1, 3, 2, 1, 2, 5, 5, 5, 5, 1, 5, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 5, 1, 2, 4, 1, 4, 3, 3, 5, 1, 1, 1, 5, 4, 2, 1, 4, 4","Give me the dates when the max temperature was higher than 85, and count them by a line chart, order by the x axis in asc."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","Give me the dates when the max temperature was higher than 85, and count them by a line chart, order X in desc order."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","What are the dates with a maximum temperature higher than 85, and count them by a line chart, and show by the X-axis in descending."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","A line chart for giveing me the number of the dates when the max temperature was higher than 85, show by the X-axis in descending."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","Give me the number of the dates when the max temperature was higher than 85, and rank by the x-axis from high to low."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","What are the number of the dates with a maximum temperature higher than 85?, rank by the x-axis from high to low."
"SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-08-28', '2015-08-27', '2015-08-26', '2015-08-17', '2015-08-16', '2015-08-15', '2015-08-13', '2015-08-08', '2015-07-29', '2015-07-28', '2015-07-27', '2015-07-20', '2015-07-19', '2015-07-01', '2015-06-30', '2015-06-25', '2015-06-12', '2015-06-08', '2015-05-03', '2015-05-02', '2015-05-01', '2015-04-30', '2015-04-27', '2015-03-14', '2015-02-27', '2015-01-27', '2014-10-18', '2014-10-13', '2014-10-12', '2014-10-06', '2014-10-05', '2014-10-04', '2014-10-03', '2014-10-02', '2014-10-01', '2014-09-11', '2014-09-10', '2014-09-01', '2014-08-30', '2014-07-27', '2014-07-26', '2014-07-25', '2014-07-24', '2014-07-14', '2014-06-30', '2014-06-29', '2014-06-18', '2014-06-14', '2014-06-12', '2014-06-09', '2014-06-08', '2014-05-15', '2014-05-14', '2014-05-13', '2014-05-12', '2014-05-01', '2014-04-30', '2014-04-29', '2014-04-08', '2013-09-19', '2013-09-09', '2013-09-08', '2013-09-07', '2013-09-06', '2013-08-30']], 'y_data': [[4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-08-28, 2015-08-27, 2015-08-26, 2015-08-17, 2015-08-16, 2015-08-15, 2015-08-13, 2015-08-08, 2015-07-29, 2015-07-28, 2015-07-27, 2015-07-20, 2015-07-19, 2015-07-01, 2015-06-30, 2015-06-25, 2015-06-12, 2015-06-08, 2015-05-03, 2015-05-02, 2015-05-01, 2015-04-30, 2015-04-27, 2015-03-14, 2015-02-27, 2015-01-27, 2014-10-18, 2014-10-13, 2014-10-12, 2014-10-06, 2014-10-05, 2014-10-04, 2014-10-03, 2014-10-02, 2014-10-01, 2014-09-11, 2014-09-10, 2014-09-01, 2014-08-30, 2014-07-27, 2014-07-26, 2014-07-25, 2014-07-24, 2014-07-14, 2014-06-30, 2014-06-29, 2014-06-18, 2014-06-14, 2014-06-12, 2014-06-09, 2014-06-08, 2014-05-15, 2014-05-14, 2014-05-13, 2014-05-12, 2014-05-01, 2014-04-30, 2014-04-29, 2014-04-08, 2013-09-19, 2013-09-09, 2013-09-08, 2013-09-07, 2013-09-06, 2013-08-30","4, 4, 1, 2, 4, 5, 1, 1, 1, 5, 3, 3, 4, 1, 4, 2, 1, 5, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 2, 1, 2, 3, 1, 1, 1, 5, 2, 1, 4, 2, 4, 2, 1, 2, 5, 4, 5, 5, 4, 4, 5, 4, 1, 3, 2, 1, 5, 4, 3","A line chart for what are the number of the dates with a maximum temperature higher than 85?, show by the date in descending please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014', '2013']], 'y_data': [[163, 9796]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2014, 2013","163, 9796","Bar graph to show how many installation date from different installation date, and rank total number in asc order please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014', '2013']], 'y_data': [[163, 9796]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2014, 2013","163, 9796","Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year, order in ascending by the the number of installation date."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014', '2013']], 'y_data': [[163, 9796]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2014, 2013","163, 9796","Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis, and count for showing how many stations are installed each year, and sort y-axis from low to high order please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163","Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis, and count for showing how many stations are installed each year, list y axis in descending order."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163","Bar graph to show how many installation date from different installation date, display the number of installation date from high to low order please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013', '2014']], 'y_data': [[9796, 163]], 'classify': [], 'describe': 'BIN installation_date BY YEAR'}",bar,installation_date,COUNT(installation_date),"2013, 2014","9796, 163","Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year, and could you sort y-axis in descending order please?"
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Sat', 'Mon', 'Wed', 'Sun', 'Thur', 'Tue', 'Fri']], 'y_data': [[0, 964, 1369, 1469, 1694, 1957, 2506]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Sat, Mon, Wed, Sun, Thur, Tue, Fri","0, 964, 1369, 1469, 1694, 1957, 2506","Show how many installation date from each installation date, and rank by the Y in ascending."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Sat', 'Mon', 'Wed', 'Sun', 'Thur', 'Tue', 'Fri']], 'y_data': [[0, 964, 1369, 1469, 1694, 1957, 2506]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Sat, Mon, Wed, Sun, Thur, Tue, Fri","0, 964, 1369, 1469, 1694, 1957, 2506","Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year, sort in asc by the Y-axis."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Sat', 'Mon', 'Wed', 'Sun', 'Thur', 'Tue', 'Fri']], 'y_data': [[0, 964, 1369, 1469, 1694, 1957, 2506]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Sat, Mon, Wed, Sun, Thur, Tue, Fri","0, 964, 1369, 1469, 1694, 1957, 2506","Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year, sort from low to high by the y axis please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Fri', 'Tue', 'Thur', 'Sun', 'Wed', 'Mon', 'Sat']], 'y_data': [[2506, 1957, 1694, 1469, 1369, 964, 0]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Fri, Tue, Thur, Sun, Wed, Mon, Sat","2506, 1957, 1694, 1469, 1369, 964, 0","Show how many installation date from each installation date, list in desc by the Y-axis please."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Fri', 'Tue', 'Thur', 'Sun', 'Wed', 'Mon', 'Sat']], 'y_data': [[2506, 1957, 1694, 1469, 1369, 964, 0]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Fri, Tue, Thur, Sun, Wed, Mon, Sat","2506, 1957, 1694, 1469, 1369, 964, 0","Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year, and list Y in desc order."
"SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['Fri', 'Tue', 'Thur', 'Sun', 'Wed', 'Mon', 'Sat']], 'y_data': [[2506, 1957, 1694, 1469, 1369, 964, 0]], 'classify': [], 'describe': 'BIN installation_date BY WEEKDAY'}",bar,installation_date,COUNT(installation_date),"Fri, Tue, Thur, Sun, Wed, Mon, Sat","2506, 1957, 1694, 1469, 1369, 964, 0","Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year, display by the Y-axis in descending."
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date ASC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21","Show me a line chart of how how many installation date change over the installation date, and could you list from low to high by the X-axis?"
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date ASC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21","Tell me the trend using a line chart to show the total number of the station over the installation date, could you sort by the x-axis in asc?"
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date ASC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2013-08-05', '2013-08-06', '2013-08-07', '2013-08-12', '2013-08-14', '2013-08-15', '2013-08-16', '2013-08-19', '2013-08-20', '2013-08-21', '2013-08-22', '2013-08-23', '2013-08-25', '2013-12-31', '2014-01-22', '2014-02-20', '2014-04-09']], 'y_data': [[65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2013-08-05, 2013-08-06, 2013-08-07, 2013-08-12, 2013-08-14, 2013-08-15, 2013-08-16, 2013-08-19, 2013-08-20, 2013-08-21, 2013-08-22, 2013-08-23, 2013-08-25, 2013-12-31, 2014-01-22, 2014-02-20, 2014-04-09","65, 238, 105, 40, 101, 219, 112, 859, 1623, 1002, 1473, 2394, 1469, 96, 140, 2, 21","Show the number of stations installed change over the installation date of in station table using a line chart, order in ascending by the installation_date."
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date DESC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014-04-09', '2014-02-20', '2014-01-22', '2013-12-31', '2013-08-25', '2013-08-23', '2013-08-22', '2013-08-21', '2013-08-20', '2013-08-19', '2013-08-16', '2013-08-15', '2013-08-14', '2013-08-12', '2013-08-07', '2013-08-06', '2013-08-05']], 'y_data': [[21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2014-04-09, 2014-02-20, 2014-01-22, 2013-12-31, 2013-08-25, 2013-08-23, 2013-08-22, 2013-08-21, 2013-08-20, 2013-08-19, 2013-08-16, 2013-08-15, 2013-08-14, 2013-08-12, 2013-08-07, 2013-08-06, 2013-08-05","21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65","Tell me the trend using a line chart to show the total number of the station over the installation date, show by the x axis from high to low."
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date DESC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014-04-09', '2014-02-20', '2014-01-22', '2013-12-31', '2013-08-25', '2013-08-23', '2013-08-22', '2013-08-21', '2013-08-20', '2013-08-19', '2013-08-16', '2013-08-15', '2013-08-14', '2013-08-12', '2013-08-07', '2013-08-06', '2013-08-05']], 'y_data': [[21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2014-04-09, 2014-02-20, 2014-01-22, 2013-12-31, 2013-08-25, 2013-08-23, 2013-08-22, 2013-08-21, 2013-08-20, 2013-08-19, 2013-08-16, 2013-08-15, 2013-08-14, 2013-08-12, 2013-08-07, 2013-08-06, 2013-08-05","21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65","Show me a line chart of how how many installation date change over the installation date, and order x axis from high to low order."
"SELECT installation_date , COUNT(installation_date) FROM station GROUP BY installation_date ORDER BY installation_date DESC",Line,Medium,bike_1,"{'chart': 'line', 'x_name': 'installation_date', 'y_name': 'COUNT(installation_date)', 'x_data': [['2014-04-09', '2014-02-20', '2014-01-22', '2013-12-31', '2013-08-25', '2013-08-23', '2013-08-22', '2013-08-21', '2013-08-20', '2013-08-19', '2013-08-16', '2013-08-15', '2013-08-14', '2013-08-12', '2013-08-07', '2013-08-06', '2013-08-05']], 'y_data': [[21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65]], 'classify': [], 'describe': 'GROUP BY installation_date'}",line,installation_date,COUNT(installation_date),"2014-04-09, 2014-02-20, 2014-01-22, 2013-12-31, 2013-08-25, 2013-08-23, 2013-08-22, 2013-08-21, 2013-08-20, 2013-08-19, 2013-08-16, 2013-08-15, 2013-08-14, 2013-08-12, 2013-08-07, 2013-08-06, 2013-08-05","21, 2, 140, 96, 1469, 2394, 1473, 1002, 1623, 859, 112, 219, 101, 40, 105, 238, 65","Show the number of stations installed change over the installation date of in station table using a line chart, order by the x-axis from high to low."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['5th at Howard', 'Beale at Market', 'Civic Center BART (7th at Market)', 'Commercial at Montgomery', 'Embarcadero at Vallejo', 'Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)']], 'y_data': [[57, 56, 72, 45, 48, 77, 75, 65, 68]], 'classify': [], 'describe': ''}",bar,name,id,"5th at Howard, Beale at Market, Civic Center BART (7th at Market), Commercial at Montgomery, Embarcadero at Vallejo, Market at Sansome, Mechanics Plaza (Market at Battery), Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard)","57, 56, 72, 45, 48, 77, 75, 65, 68","Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, and show from low to high by the bar."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['5th at Howard', 'Beale at Market', 'Civic Center BART (7th at Market)', 'Commercial at Montgomery', 'Embarcadero at Vallejo', 'Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)']], 'y_data': [[57, 56, 72, 45, 48, 77, 75, 65, 68]], 'classify': [], 'describe': ''}",bar,name,id,"5th at Howard, Beale at Market, Civic Center BART (7th at Market), Commercial at Montgomery, Embarcadero at Vallejo, Market at Sansome, Mechanics Plaza (Market at Battery), Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard)","57, 56, 72, 45, 48, 77, 75, 65, 68","What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, display in asc by the x-axis please."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['5th at Howard', 'Beale at Market', 'Civic Center BART (7th at Market)', 'Commercial at Montgomery', 'Embarcadero at Vallejo', 'Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)']], 'y_data': [[57, 56, 72, 45, 48, 77, 75, 65, 68]], 'classify': [], 'describe': ''}",bar,name,id,"5th at Howard, Beale at Market, Civic Center BART (7th at Market), Commercial at Montgomery, Embarcadero at Vallejo, Market at Sansome, Mechanics Plaza (Market at Battery), Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard)","57, 56, 72, 45, 48, 77, 75, 65, 68","What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, list in ascending by the bar."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['5th at Howard', 'Beale at Market', 'Civic Center BART (7th at Market)', 'Commercial at Montgomery', 'Embarcadero at Vallejo', 'Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)']], 'y_data': [[57, 56, 72, 45, 48, 77, 75, 65, 68]], 'classify': [], 'describe': ''}",bar,name,id,"5th at Howard, Beale at Market, Civic Center BART (7th at Market), Commercial at Montgomery, Embarcadero at Vallejo, Market at Sansome, Mechanics Plaza (Market at Battery), Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard)","57, 56, 72, 45, 48, 77, 75, 65, 68","Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, show by the x-axis from low to high."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['5th at Howard', 'Beale at Market', 'Civic Center BART (7th at Market)', 'Commercial at Montgomery', 'Embarcadero at Vallejo', 'Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)']], 'y_data': [[57, 56, 72, 45, 48, 77, 75, 65, 68]], 'classify': [], 'describe': ''}",bar,name,id,"5th at Howard, Beale at Market, Civic Center BART (7th at Market), Commercial at Montgomery, Embarcadero at Vallejo, Market at Sansome, Mechanics Plaza (Market at Battery), Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard)","57, 56, 72, 45, 48, 77, 75, 65, 68","Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, and sort bar in asc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome', 'Embarcadero at Vallejo', 'Commercial at Montgomery', 'Civic Center BART (7th at Market)', 'Beale at Market', '5th at Howard']], 'y_data': [[68, 65, 75, 77, 48, 45, 72, 56, 57]], 'classify': [], 'describe': ''}",bar,name,id,"Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, Mechanics Plaza (Market at Battery), Market at Sansome, Embarcadero at Vallejo, Commercial at Montgomery, Civic Center BART (7th at Market), Beale at Market, 5th at Howard","68, 65, 75, 77, 48, 45, 72, 56, 57","Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, show in desc by the x axis."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome', 'Embarcadero at Vallejo', 'Commercial at Montgomery', 'Civic Center BART (7th at Market)', 'Beale at Market', '5th at Howard']], 'y_data': [[68, 65, 75, 77, 48, 45, 72, 56, 57]], 'classify': [], 'describe': ''}",bar,name,id,"Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, Mechanics Plaza (Market at Battery), Market at Sansome, Embarcadero at Vallejo, Commercial at Montgomery, Civic Center BART (7th at Market), Beale at Market, 5th at Howard","68, 65, 75, 77, 48, 45, 72, 56, 57","What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, list in descending by the bars."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome', 'Embarcadero at Vallejo', 'Commercial at Montgomery', 'Civic Center BART (7th at Market)', 'Beale at Market', '5th at Howard']], 'y_data': [[68, 65, 75, 77, 48, 45, 72, 56, 57]], 'classify': [], 'describe': ''}",bar,name,id,"Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, Mechanics Plaza (Market at Battery), Market at Sansome, Embarcadero at Vallejo, Commercial at Montgomery, Civic Center BART (7th at Market), Beale at Market, 5th at Howard","68, 65, 75, 77, 48, 45, 72, 56, 57","What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, and I want to order x axis in desc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome', 'Embarcadero at Vallejo', 'Commercial at Montgomery', 'Civic Center BART (7th at Market)', 'Beale at Market', '5th at Howard']], 'y_data': [[68, 65, 75, 77, 48, 45, 72, 56, 57]], 'classify': [], 'describe': ''}",bar,name,id,"Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, Mechanics Plaza (Market at Battery), Market at Sansome, Embarcadero at Vallejo, Commercial at Montgomery, Civic Center BART (7th at Market), Beale at Market, 5th at Howard","68, 65, 75, 77, 48, 45, 72, 56, 57","Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, I want to order x axis in desc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY name DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome', 'Embarcadero at Vallejo', 'Commercial at Montgomery', 'Civic Center BART (7th at Market)', 'Beale at Market', '5th at Howard']], 'y_data': [[68, 65, 75, 77, 48, 45, 72, 56, 57]], 'classify': [], 'describe': ''}",bar,name,id,"Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, Mechanics Plaza (Market at Battery), Market at Sansome, Embarcadero at Vallejo, Commercial at Montgomery, Civic Center BART (7th at Market), Beale at Market, 5th at Howard","68, 65, 75, 77, 48, 45, 72, 56, 57","Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, order name from high to low order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77","Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, and rank id in asc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77","Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, and order total number in ascending order please."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77","What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, I want to rank from low to high by the y-axis."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77","Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, rank id in asc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Commercial at Montgomery', 'Embarcadero at Vallejo', 'Beale at Market', '5th at Howard', 'Townsend at 7th', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Civic Center BART (7th at Market)', 'Mechanics Plaza (Market at Battery)', 'Market at Sansome']], 'y_data': [[45, 48, 56, 57, 65, 68, 72, 75, 77]], 'classify': [], 'describe': ''}",bar,name,id,"Commercial at Montgomery, Embarcadero at Vallejo, Beale at Market, 5th at Howard, Townsend at 7th, Yerba Buena Center of the Arts (3rd @ Howard), Civic Center BART (7th at Market), Mechanics Plaza (Market at Battery), Market at Sansome","45, 48, 56, 57, 65, 68, 72, 75, 77","What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, rank id in asc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Civic Center BART (7th at Market)', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', '5th at Howard', 'Beale at Market', 'Embarcadero at Vallejo', 'Commercial at Montgomery']], 'y_data': [[77, 75, 72, 68, 65, 57, 56, 48, 45]], 'classify': [], 'describe': ''}",bar,name,id,"Market at Sansome, Mechanics Plaza (Market at Battery), Civic Center BART (7th at Market), Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, 5th at Howard, Beale at Market, Embarcadero at Vallejo, Commercial at Montgomery","77, 75, 72, 68, 65, 57, 56, 48, 45","What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, display total number in desc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Civic Center BART (7th at Market)', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', '5th at Howard', 'Beale at Market', 'Embarcadero at Vallejo', 'Commercial at Montgomery']], 'y_data': [[77, 75, 72, 68, 65, 57, 56, 48, 45]], 'classify': [], 'describe': ''}",bar,name,id,"Market at Sansome, Mechanics Plaza (Market at Battery), Civic Center BART (7th at Market), Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, 5th at Howard, Beale at Market, Embarcadero at Vallejo, Commercial at Montgomery","77, 75, 72, 68, 65, 57, 56, 48, 45","Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, and I want to rank by the Y in desc please."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Civic Center BART (7th at Market)', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', '5th at Howard', 'Beale at Market', 'Embarcadero at Vallejo', 'Commercial at Montgomery']], 'y_data': [[77, 75, 72, 68, 65, 57, 56, 48, 45]], 'classify': [], 'describe': ''}",bar,name,id,"Market at Sansome, Mechanics Plaza (Market at Battery), Civic Center BART (7th at Market), Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, 5th at Howard, Beale at Market, Embarcadero at Vallejo, Commercial at Montgomery","77, 75, 72, 68, 65, 57, 56, 48, 45","Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, display total number in desc order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Civic Center BART (7th at Market)', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', '5th at Howard', 'Beale at Market', 'Embarcadero at Vallejo', 'Commercial at Montgomery']], 'y_data': [[77, 75, 72, 68, 65, 57, 56, 48, 45]], 'classify': [], 'describe': ''}",bar,name,id,"Market at Sansome, Mechanics Plaza (Market at Battery), Civic Center BART (7th at Market), Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, 5th at Howard, Beale at Market, Embarcadero at Vallejo, Commercial at Montgomery","77, 75, 72, 68, 65, 57, 56, 48, 45","What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, sort total number in descending order."
"SELECT name , id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12 ORDER BY id DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Market at Sansome', 'Mechanics Plaza (Market at Battery)', 'Civic Center BART (7th at Market)', 'Yerba Buena Center of the Arts (3rd @ Howard)', 'Townsend at 7th', '5th at Howard', 'Beale at Market', 'Embarcadero at Vallejo', 'Commercial at Montgomery']], 'y_data': [[77, 75, 72, 68, 65, 57, 56, 48, 45]], 'classify': [], 'describe': ''}",bar,name,id,"Market at Sansome, Mechanics Plaza (Market at Battery), Civic Center BART (7th at Market), Yerba Buena Center of the Arts (3rd @ Howard), Townsend at 7th, 5th at Howard, Beale at Market, Embarcadero at Vallejo, Commercial at Montgomery","77, 75, 72, 68, 65, 57, 56, 48, 45","Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, sort total number in descending order."
"SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['>0', '<=0']], 'y_data': [[0, 69]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),">0, <=0","0, 69","Show me how many long by long in a histogram, could you rank from low to high by the y axis?"
"SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['>0', '<=0']], 'y_data': [[0, 69]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),">0, <=0","0, 69","For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket, and I want to show by the Y in ascending."
"SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['<=0', '>0']], 'y_data': [[69, 0]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),"<=0, >0","69, 0","Show me how many long by long in a histogram, and list by the Y from high to low please."
"SELECT long , COUNT(long) FROM station  ORDER BY COUNT(long) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'long', 'y_name': 'COUNT(long)', 'x_data': [['<=0', '>0']], 'y_data': [[69, 0]], 'classify': [], 'describe': 'BIN long BY ZERO'}",bar,long,COUNT(long),"<=0, >0","69, 0","For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket, order in desc by the y axis."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY date ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1","For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, and show in asc by the names."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY date ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1","Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and I want to list by the bars from low to high."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY date DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014-12-31', '2013-12-20']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2014-12-31, 2013-12-20","1, 2","Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, could you order X in desc order?"
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY date DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014-12-31', '2013-12-20']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2014-12-31, 2013-12-20","1, 2","For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, and I want to sort X-axis from high to low order."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014-12-31', '2013-12-20']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2014-12-31, 2013-12-20","1, 2","For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, could you order how many date in ascending order?"
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014-12-31', '2013-12-20']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2014-12-31, 2013-12-20","1, 2","Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and could you order in asc by the y axis please?"
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1","Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, order by the total number from high to low."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) GROUP BY date ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-20', '2014-12-31']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY date'}",bar,date,COUNT(date),"2013-12-20, 2014-12-31","2, 1","For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, could you sort by the Y in descending?"
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013","1, 2","Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and display the number of date in ascending order."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013","1, 2","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart, list from low to high by the y axis."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014","2, 1","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart, I want to rank Y from high to low order."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2014']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2014","2, 1","Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and order in desc by the Y please."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sat', 'Sun', 'Thur', 'Tue', 'Wed', 'Fri']], 'y_data': [[0, 0, 0, 0, 0, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sat, Sun, Thur, Tue, Wed, Fri","0, 0, 0, 0, 0, 1, 2","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart, I want to rank Y-axis in asc order."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sat', 'Sun', 'Thur', 'Tue', 'Wed', 'Fri']], 'y_data': [[0, 0, 0, 0, 0, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sat, Sun, Thur, Tue, Wed, Fri","0, 0, 0, 0, 0, 1, 2","Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, I want to sort by the total number from low to high."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Fri', 'Wed', 'Tue', 'Thur', 'Sun', 'Sat', 'Mon']], 'y_data': [[2, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Fri, Wed, Tue, Thur, Sun, Sat, Mon","2, 1, 0, 0, 0, 0, 0","For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart, sort total number in desc order."
"SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Fri', 'Wed', 'Tue', 'Thur', 'Sun', 'Sat', 'Mon']], 'y_data': [[2, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Fri, Wed, Tue, Thur, Sun, Sat, Mon","2, 1, 0, 0, 0, 0, 0","Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, could you show in desc by the y-axis?"
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, and rank by the city from low to high."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, could you order in ascending by the X?"
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, rank in asc by the bars."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and rank in asc by the bars."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and could you order in ascending by the X?"
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","Create a bar chart showing the total number across city, and I want to order by the bar in ascending."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, and order by the x axis in desc."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, and display by the names from high to low."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, and order by the x axis in desc."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and display by the names from high to low."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and display by the names from high to low."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","Create a bar chart showing the total number across city, I want to list names from high to low order."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and show by the y-axis from low to high please."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, sort y axis in asc order please."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, and sort in ascending by the Y-axis."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","Create a bar chart showing the total number across city, and show by the y-axis from low to high please."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, display Y from low to high order."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Jose', 'San Francisco']], 'y_data': [[16, 35]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Jose, San Francisco","16, 35","A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and could you list the total number in asc order?"
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and list y-axis in descending order."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, rank in desc by the Y."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and could you display in descending by the total number?"
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","Create a bar chart showing the total number across city, list in desc by the Y."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, and list in desc by the Y."
"SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'city', 'y_name': 'COUNT(*)', 'x_data': [['San Francisco', 'San Jose']], 'y_data': [[35, 16]], 'classify': [], 'describe': ''}",bar,city,COUNT(*),"San Francisco, San Jose","35, 16","Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, and list y-axis in descending order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","What are the number of the dates that have an average sea level pressure between 303 and 31?, I want to rank y-axis in asc order please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you show total number in ascending order?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, sort in asc by the how many date please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, could you rank by the Y in asc please?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and sort in asc by the how many date please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2013', '2014']], 'y_data': [[22, 27, 38]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2013, 2014","22, 27, 38","What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, and rank by the y-axis in ascending please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","What are the number of the dates that have an average sea level pressure between 303 and 31?, could you sort in desc by the y axis?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, could you sort in desc by the y axis?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, could you sort in desc by the y axis?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, show y-axis from high to low order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and show Y-axis in descending order please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2013', '2015']], 'y_data': [[38, 27, 22]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2013, 2015","38, 27, 22","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, display in desc by the Y-axis."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, display Y-axis from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and list by the total number in asc."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, list by the the number of date from low to high."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, and I want to display by the the number of date from low to high."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","What are the number of the dates that have an average sea level pressure between 303 and 31?, and show y axis in ascending order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 1, 7, 10, 21, 23, 25]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","0, 1, 7, 10, 21, 23, 25","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, order in ascending by the Y-axis."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you rank in desc by the y-axis?"
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, sort the number of date in descending order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and rank in descending by the y axis please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, show y axis in descending order please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, and order y axis in descending order please."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[25, 23, 21, 10, 7, 1, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","25, 23, 21, 10, 7, 1, 0","What are the number of the dates that have an average sea level pressure between 303 and 31?, and sort the number of date in descending order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and I want to display date from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and I want to display date from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the dates that have an average sea level pressure between 303 and 31, and count them by a line chart, rank in ascending by the x axis."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the number of the dates that have an average sea level pressure between 303 and 31?, display date in asc order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a line chart, list from low to high by the date."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date ASC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013-12-09', '2013-12-10', '2013-12-13', '2013-12-14', '2013-12-15', '2013-12-23', '2013-12-24', '2014-01-12', '2014-01-13', '2014-01-14', '2014-11-23', '2014-11-24', '2014-11-25', '2014-12-21', '2014-12-27', '2014-12-28', '2015-01-04', '2015-01-05', '2015-01-23', '2015-02-24', '2015-03-05', '2015-04-14']], 'y_data': [[5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2013-12-09, 2013-12-10, 2013-12-13, 2013-12-14, 2013-12-15, 2013-12-23, 2013-12-24, 2014-01-12, 2014-01-13, 2014-01-14, 2014-11-23, 2014-11-24, 2014-11-25, 2014-12-21, 2014-12-27, 2014-12-28, 2015-01-04, 2015-01-05, 2015-01-23, 2015-02-24, 2015-03-05, 2015-04-14","5, 4, 2, 5, 5, 5, 1, 5, 5, 5, 4, 5, 5, 1, 5, 3, 5, 5, 5, 5, 1, 1","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, display date in asc order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","What are the number of the dates that have an average sea level pressure between 303 and 31?, list X-axis in desc order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and rank in desc by the x axis."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","What are the dates that have an average sea level pressure between 303 and 31, and count them by a line chart, order in desc by the date."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a line chart, and list X-axis in desc order."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and list by the X-axis in descending."
"SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date ORDER BY date DESC",Line,Hard,bike_1,"{'chart': 'line', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015-04-14', '2015-03-05', '2015-02-24', '2015-01-23', '2015-01-05', '2015-01-04', '2014-12-28', '2014-12-27', '2014-12-21', '2014-11-25', '2014-11-24', '2014-11-23', '2014-01-14', '2014-01-13', '2014-01-12', '2013-12-24', '2013-12-23', '2013-12-15', '2013-12-14', '2013-12-13', '2013-12-10', '2013-12-09']], 'y_data': [[1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5]], 'classify': [], 'describe': 'GROUP BY date'}",line,date,COUNT(date),"2015-04-14, 2015-03-05, 2015-02-24, 2015-01-23, 2015-01-05, 2015-01-04, 2014-12-28, 2014-12-27, 2014-12-21, 2014-11-25, 2014-11-24, 2014-11-23, 2014-01-14, 2014-01-13, 2014-01-12, 2013-12-24, 2013-12-23, 2013-12-15, 2013-12-14, 2013-12-13, 2013-12-10, 2013-12-09","1, 1, 5, 5, 5, 5, 3, 5, 1, 5, 5, 4, 5, 5, 5, 1, 5, 5, 5, 2, 4, 5","What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you order by the x axis from high to low?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2014']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2014","1, 4","What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and list by the y-axis from low to high."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2014']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2014","1, 4","Draw a bar chart of date versus how many date, and I want to sort Y in asc order."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2014']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2014","1, 4","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency, and rank by the Y-axis in ascending."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2015', '2014']], 'y_data': [[1, 4]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2015, 2014","1, 4","I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year, display how many date in asc order please."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1","What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, I want to sort Y in descending order."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1","Draw a bar chart of date versus how many date, and could you display by the Y-axis in desc?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency, list Y-axis from high to low order."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015']], 'y_data': [[4, 1]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015","4, 1","I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year, and list Y-axis from high to low order."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 32]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2015, 2014","0, 32","What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and could you sort by the total number of cloud cover in asc?"
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 32]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2015, 2014","0, 32","Bar chart x axis date y axis total number of cloud cover, and sort by the total number of cloud cover in ascending please."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 32]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2015, 2014","0, 32","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover, show by the Y-axis in asc please."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 32]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2015, 2014","0, 32","I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year, and I want to display in asc by the total number."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0","What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, rank in descending by the Y-axis."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover, and order in desc by the total number."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0","Bar chart x axis date y axis total number of cloud cover, and show Y from high to low order."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[32, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,SUM(cloud_cover),"2014, 2015","32, 0","I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year, and rank in descending by the Y-axis."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 8]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2015, 2014","0, 8","Show me mean cloud cover by date in a histogram, could you display the average of cloud cover in ascending order?"
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 8]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2015, 2014","0, 8","I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year, and I want to sort Y-axis in asc order."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 8]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2015, 2014","0, 8","What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and show in asc by the Y."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2015', '2014']], 'y_data': [[0, 8]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2015, 2014","0, 8","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their average cloud cover, I want to order Y from low to high order please."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0","Show me mean cloud cover by date in a histogram, and list by the Y in desc."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0","What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and order by the the average of cloud cover in descending please."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0","I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year, and rank by the y axis from high to low."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['2014', '2015']], 'y_data': [[8, 0]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,AVG(cloud_cover),"2014, 2015","8, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their average cloud cover, rank by the y axis from high to low."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Thur', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Fri, Thur, Wed, Sat","0, 0, 0, 1, 1, 1, 2","I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day, and list in asc by the y axis."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Thur', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Fri, Thur, Wed, Sat","0, 0, 0, 1, 1, 1, 2","For those dates that have the 5 highest cloud cover rates, please bin the date into the day of week interval and count their frequency, show by the y axis in ascending."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Thur', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Fri, Thur, Wed, Sat","0, 0, 0, 1, 1, 1, 2","Bar chart x axis date y axis the number of date, and list in asc by the y-axis."
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Thur', 'Wed', 'Sat']], 'y_data': [[0, 0, 0, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Sun, Tue, Fri, Thur, Wed, Sat","0, 0, 0, 1, 1, 1, 2","What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and could you sort from low to high by the y-axis?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[2, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Sat, Wed, Thur, Fri, Tue, Sun, Mon","2, 1, 1, 1, 0, 0, 0","Bar chart x axis date y axis the number of date, could you display by the total number from high to low?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[2, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Sat, Wed, Thur, Fri, Tue, Sun, Mon","2, 1, 1, 1, 0, 0, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into the day of week interval and count their frequency, could you sort in descending by the Y-axis?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[2, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Sat, Wed, Thur, Fri, Tue, Sun, Mon","2, 1, 1, 1, 0, 0, 0","I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each day, and could you sort in descending by the Y-axis?"
"SELECT date , COUNT(date) FROM weather  ORDER BY COUNT(date) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[2, 1, 1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Sat, Wed, Thur, Fri, Tue, Sun, Mon","2, 1, 1, 1, 0, 0, 0","What is the frequency of the dates (bin into weekday interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, I want to sort in descending by the the number of date."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 8, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","0, 0, 0, 8, 8, 8, 8","What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates? You can show me a bar chart, list by the y-axis in ascending."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 8, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","0, 0, 0, 8, 8, 8, 8","I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day, list by the y-axis in ascending."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 8, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","0, 0, 0, 8, 8, 8, 8","Bar graph to show total number of cloud cover from different date, and show by the Y from low to high."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Fri', 'Sat', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 8, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Mon, Sun, Tue, Fri, Sat, Thur, Wed","0, 0, 0, 8, 8, 8, 8","For those dates that have the 5 highest cloud cover rates, please bin the date into weekdays interval and compute their total cloud cover, and show y-axis from low to high order."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 8, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","8, 8, 8, 8, 0, 0, 0","What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates? You can show me a bar chart, could you show Y-axis in desc order?"
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 8, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","8, 8, 8, 8, 0, 0, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into weekdays interval and compute their total cloud cover, and show total number in descending order."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 8, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","8, 8, 8, 8, 0, 0, 0","Bar graph to show total number of cloud cover from different date, list in desc by the total number."
"SELECT date , SUM(cloud_cover) FROM weather  ORDER BY SUM(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'SUM(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Sat', 'Fri', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 8, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,SUM(cloud_cover),"Wed, Thur, Sat, Fri, Tue, Sun, Mon","8, 8, 8, 8, 0, 0, 0","I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day, and order total number from high to low order."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 4, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","0, 0, 0, 4, 8, 8, 8","For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover, and display y-axis in ascending order."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 4, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","0, 0, 0, 4, 8, 8, 8","Show the average of cloud cover from each date, and I want to rank by the y-axis in asc."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 4, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","0, 0, 0, 4, 8, 8, 8","I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day, list Y-axis in ascending order please."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) ASC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Fri', 'Thur', 'Wed']], 'y_data': [[0, 0, 0, 4, 8, 8, 8]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Mon, Sun, Tue, Sat, Fri, Thur, Wed","0, 0, 0, 4, 8, 8, 8","What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, rank by the mean cloud cover in asc."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 4, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","8, 8, 8, 4, 0, 0, 0","Show the average of cloud cover from each date, and I want to show Y-axis from high to low order please."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 4, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","8, 8, 8, 4, 0, 0, 0","For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover, and could you display y-axis in desc order?"
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 4, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","8, 8, 8, 4, 0, 0, 0","What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and order in descending by the Y please."
"SELECT date , AVG(cloud_cover) FROM weather  ORDER BY AVG(cloud_cover) DESC",Bar,Medium,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'AVG(cloud_cover)', 'x_data': [['Wed', 'Thur', 'Fri', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[8, 8, 8, 4, 0, 0, 0]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,AVG(cloud_cover),"Wed, Thur, Fri, Sat, Tue, Sun, Mon","8, 8, 8, 4, 0, 0, 0","I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day, rank from high to low by the Y-axis."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[106, 206, 275]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","106, 206, 275","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, and display y axis from low to high order."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2013', '2015', '2014']], 'y_data': [[106, 206, 275]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2013, 2015, 2014","106, 206, 275","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, and list by the Y from low to high."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[275, 206, 106]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","275, 206, 106","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, sort by the y axis in desc."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['2014', '2015', '2013']], 'y_data': [[275, 206, 106]], 'classify': [], 'describe': 'BIN date BY YEAR'}",bar,date,COUNT(date),"2014, 2015, 2013","275, 206, 106","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, sort by the y axis in desc."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Thur', 'Sun', 'Fri', 'Mon']], 'y_data': [[79, 81, 82, 82, 86, 87, 90]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Thur, Sun, Fri, Mon","79, 81, 82, 82, 86, 87, 90","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, order total number in ascending order please."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) ASC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Tue', 'Wed', 'Sat', 'Thur', 'Sun', 'Fri', 'Mon']], 'y_data': [[79, 81, 82, 82, 86, 87, 90]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Tue, Wed, Sat, Thur, Sun, Fri, Mon","79, 81, 82, 82, 86, 87, 90","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, order total number in ascending order please."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Fri', 'Sun', 'Thur', 'Sat', 'Wed', 'Tue']], 'y_data': [[90, 87, 86, 82, 82, 81, 79]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Fri, Sun, Thur, Sat, Wed, Tue","90, 87, 86, 82, 82, 81, 79","On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, and I want to order in descending by the Y-axis."
"SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""  ORDER BY COUNT(date) DESC",Bar,Hard,bike_1,"{'chart': 'bar', 'x_name': 'date', 'y_name': 'COUNT(date)', 'x_data': [['Mon', 'Fri', 'Sun', 'Thur', 'Sat', 'Wed', 'Tue']], 'y_data': [[90, 87, 86, 82, 82, 81, 79]], 'classify': [], 'describe': 'BIN date BY WEEKDAY'}",bar,date,COUNT(date),"Mon, Fri, Sun, Thur, Sat, Wed, Tue","90, 87, 86, 82, 82, 81, 79","In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, sort in desc by the Y."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","Give me a bar chart for how many grape of each grape, could you show by the bar in asc?"
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","What is the number of different grapes of each wine? Show me a bar chart, and display X-axis in ascending order."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","Please give me a bar chart that counts the number of grape of wine, and I want to display in ascending by the X-axis."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","Give me a bar chart for how many grape of each grape, and I want to order by the bars in descending."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","What is the number of different grapes of each wine? Show me a bar chart, rank names from high to low order."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","Please give me a bar chart that counts the number of grape of wine, and sort from high to low by the bars."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","Please give me a bar chart that counts the number of grape of wine, list in ascending by the total number."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","Give me a bar chart for how many grape of each grape, and sort by the total number in asc."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","What is the number of different grapes of each wine? Show me a bar chart, and sort y axis in asc order please."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","What is the number of different grapes of each wine? Show me a bar chart, I want to sort by the Y-axis in desc."
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","Please give me a bar chart that counts the number of grape of wine, could you sort Y from high to low order?"
"SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY COUNT(Grape) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'COUNT(Grape)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Grape'}",bar,Grape,COUNT(Grape),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","Give me a bar chart for how many grape of each grape, and I want to sort by the total number in descending."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5","List the number of areas of all appellations in the bar chart, I want to display from low to high by the x-axis."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5","Return a bar chart for what is the number of areas for all appellations?, I want to display from low to high by the x-axis."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5","Show me a bar chart about the number of areas for all appellations, order by the Area in asc."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'Central Coast', 'Central Valley', 'N/A', 'North Coast', 'Santa Cruz Mountains', 'Sierra Foothills']], 'y_data': [[1, 14, 2, 1, 31, 3, 5]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, Central Coast, Central Valley, N/A, North Coast, Santa Cruz Mountains, Sierra Foothills","1, 14, 2, 1, 31, 3, 5","Give me a bar chart for the number of area of each area, and order by the Area in asc."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['Sierra Foothills', 'Santa Cruz Mountains', 'North Coast', 'N/A', 'Central Valley', 'Central Coast', 'California']], 'y_data': [[5, 3, 31, 1, 2, 14, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"Sierra Foothills, Santa Cruz Mountains, North Coast, N/A, Central Valley, Central Coast, California","5, 3, 31, 1, 2, 14, 1","Show me a bar chart about the number of areas for all appellations, rank from high to low by the x-axis."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['Sierra Foothills', 'Santa Cruz Mountains', 'North Coast', 'N/A', 'Central Valley', 'Central Coast', 'California']], 'y_data': [[5, 3, 31, 1, 2, 14, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"Sierra Foothills, Santa Cruz Mountains, North Coast, N/A, Central Valley, Central Coast, California","5, 3, 31, 1, 2, 14, 1","Return a bar chart for what is the number of areas for all appellations?, and could you show X-axis in desc order?"
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['Sierra Foothills', 'Santa Cruz Mountains', 'North Coast', 'N/A', 'Central Valley', 'Central Coast', 'California']], 'y_data': [[5, 3, 31, 1, 2, 14, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"Sierra Foothills, Santa Cruz Mountains, North Coast, N/A, Central Valley, Central Coast, California","5, 3, 31, 1, 2, 14, 1","List the number of areas of all appellations in the bar chart, rank from high to low by the x-axis."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['Sierra Foothills', 'Santa Cruz Mountains', 'North Coast', 'N/A', 'Central Valley', 'Central Coast', 'California']], 'y_data': [[5, 3, 31, 1, 2, 14, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"Sierra Foothills, Santa Cruz Mountains, North Coast, N/A, Central Valley, Central Coast, California","5, 3, 31, 1, 2, 14, 1","Give me a bar chart for the number of area of each area, display by the x-axis in descending."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'N/A', 'Central Valley', 'Santa Cruz Mountains', 'Sierra Foothills', 'Central Coast', 'North Coast']], 'y_data': [[1, 1, 2, 3, 5, 14, 31]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, N/A, Central Valley, Santa Cruz Mountains, Sierra Foothills, Central Coast, North Coast","1, 1, 2, 3, 5, 14, 31","List the number of areas of all appellations in the bar chart, and I want to show y axis in ascending order."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'N/A', 'Central Valley', 'Santa Cruz Mountains', 'Sierra Foothills', 'Central Coast', 'North Coast']], 'y_data': [[1, 1, 2, 3, 5, 14, 31]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, N/A, Central Valley, Santa Cruz Mountains, Sierra Foothills, Central Coast, North Coast","1, 1, 2, 3, 5, 14, 31","Return a bar chart for what is the number of areas for all appellations?, and could you rank y axis in asc order please?"
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'N/A', 'Central Valley', 'Santa Cruz Mountains', 'Sierra Foothills', 'Central Coast', 'North Coast']], 'y_data': [[1, 1, 2, 3, 5, 14, 31]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, N/A, Central Valley, Santa Cruz Mountains, Sierra Foothills, Central Coast, North Coast","1, 1, 2, 3, 5, 14, 31","Give me a bar chart for the number of area of each area, and I want to show y axis in ascending order."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['California', 'N/A', 'Central Valley', 'Santa Cruz Mountains', 'Sierra Foothills', 'Central Coast', 'North Coast']], 'y_data': [[1, 1, 2, 3, 5, 14, 31]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"California, N/A, Central Valley, Santa Cruz Mountains, Sierra Foothills, Central Coast, North Coast","1, 1, 2, 3, 5, 14, 31","Show me a bar chart about the number of areas for all appellations, and I want to show y axis in ascending order."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['North Coast', 'Central Coast', 'Sierra Foothills', 'Santa Cruz Mountains', 'Central Valley', 'N/A', 'California']], 'y_data': [[31, 14, 5, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"North Coast, Central Coast, Sierra Foothills, Santa Cruz Mountains, Central Valley, N/A, California","31, 14, 5, 3, 2, 1, 1","Give me a bar chart for the number of area of each area, sort by the Y from high to low."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['North Coast', 'Central Coast', 'Sierra Foothills', 'Santa Cruz Mountains', 'Central Valley', 'N/A', 'California']], 'y_data': [[31, 14, 5, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"North Coast, Central Coast, Sierra Foothills, Santa Cruz Mountains, Central Valley, N/A, California","31, 14, 5, 3, 2, 1, 1","Return a bar chart for what is the number of areas for all appellations?, and show y axis from high to low order please."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['North Coast', 'Central Coast', 'Sierra Foothills', 'Santa Cruz Mountains', 'Central Valley', 'N/A', 'California']], 'y_data': [[31, 14, 5, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"North Coast, Central Coast, Sierra Foothills, Santa Cruz Mountains, Central Valley, N/A, California","31, 14, 5, 3, 2, 1, 1","List the number of areas of all appellations in the bar chart, rank by the total number from high to low."
"SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY COUNT(Area) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Area', 'y_name': 'COUNT(Area)', 'x_data': [['North Coast', 'Central Coast', 'Sierra Foothills', 'Santa Cruz Mountains', 'Central Valley', 'N/A', 'California']], 'y_data': [[31, 14, 5, 3, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Area'}",bar,Area,COUNT(Area),"North Coast, Central Coast, Sierra Foothills, Santa Cruz Mountains, Central Valley, N/A, California","31, 14, 5, 3, 2, 1, 1","Show me a bar chart about the number of areas for all appellations, sort in desc by the total number."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1","List the number of counties of all appellations in a bar chart, and I want to list in ascending by the bars."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1","What is the number of counties for all appellations?, I want to rank bars in asc order."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1","Plot the number of county by grouped by county as a bar graph, and I want to list in ascending by the bars."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Contra Costa', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Contra Costa, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 3, 1, 1, 3, 2, 3, 8, 11, 1, 1, 4, 5, 1, 11, 1","Return a bar chart about the number of counties for all appellations?, and I want to list in ascending by the bars."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Contra Costa', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Contra Costa, Calaveras, Amador, Alameda","1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1","List the number of counties of all appellations in a bar chart, and display in desc by the X-axis."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Contra Costa', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Contra Costa, Calaveras, Amador, Alameda","1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1","Plot the number of county by grouped by county as a bar graph, display in descending by the x axis."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Contra Costa', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Contra Costa, Calaveras, Amador, Alameda","1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1","What is the number of counties for all appellations?, and I want to order bars from high to low order please."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY County DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Contra Costa', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Contra Costa, Calaveras, Amador, Alameda","1, 11, 1, 5, 4, 1, 1, 11, 8, 3, 2, 3, 1, 1, 3, 1","Return a bar chart about the number of counties for all appellations?, I want to order bars from high to low order please."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'Contra Costa', 'San Benito', 'San Joaquin', 'Solano', 'Yolo', 'Mendocino', 'Amador', 'Lake', 'Monterey', 'San Luis Obispo', 'Santa Barbara', 'N/A', 'Napa', 'Sonoma']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, Contra Costa, San Benito, San Joaquin, Solano, Yolo, Mendocino, Amador, Lake, Monterey, San Luis Obispo, Santa Barbara, N/A, Napa, Sonoma","1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11","Return a bar chart about the number of counties for all appellations?, and could you display in ascending by the Y?"
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'Contra Costa', 'San Benito', 'San Joaquin', 'Solano', 'Yolo', 'Mendocino', 'Amador', 'Lake', 'Monterey', 'San Luis Obispo', 'Santa Barbara', 'N/A', 'Napa', 'Sonoma']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, Contra Costa, San Benito, San Joaquin, Solano, Yolo, Mendocino, Amador, Lake, Monterey, San Luis Obispo, Santa Barbara, N/A, Napa, Sonoma","1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11","What is the number of counties for all appellations?, and order Y-axis in ascending order."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'Contra Costa', 'San Benito', 'San Joaquin', 'Solano', 'Yolo', 'Mendocino', 'Amador', 'Lake', 'Monterey', 'San Luis Obispo', 'Santa Barbara', 'N/A', 'Napa', 'Sonoma']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, Contra Costa, San Benito, San Joaquin, Solano, Yolo, Mendocino, Amador, Lake, Monterey, San Luis Obispo, Santa Barbara, N/A, Napa, Sonoma","1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11","List the number of counties of all appellations in a bar chart, show by the y-axis from low to high."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'Contra Costa', 'San Benito', 'San Joaquin', 'Solano', 'Yolo', 'Mendocino', 'Amador', 'Lake', 'Monterey', 'San Luis Obispo', 'Santa Barbara', 'N/A', 'Napa', 'Sonoma']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, Contra Costa, San Benito, San Joaquin, Solano, Yolo, Mendocino, Amador, Lake, Monterey, San Luis Obispo, Santa Barbara, N/A, Napa, Sonoma","1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 8, 11, 11","Plot the number of county by grouped by county as a bar graph, and order Y-axis in ascending order."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Sonoma', 'Napa', 'N/A', 'Santa Barbara', 'San Luis Obispo', 'Monterey', 'Lake', 'Amador', 'Mendocino', 'Yolo', 'Solano', 'San Joaquin', 'San Benito', 'Contra Costa', 'Calaveras', 'Alameda']], 'y_data': [[11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Sonoma, Napa, N/A, Santa Barbara, San Luis Obispo, Monterey, Lake, Amador, Mendocino, Yolo, Solano, San Joaquin, San Benito, Contra Costa, Calaveras, Alameda","11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1","Plot the number of county by grouped by county as a bar graph, and list by the y axis in descending."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Sonoma', 'Napa', 'N/A', 'Santa Barbara', 'San Luis Obispo', 'Monterey', 'Lake', 'Amador', 'Mendocino', 'Yolo', 'Solano', 'San Joaquin', 'San Benito', 'Contra Costa', 'Calaveras', 'Alameda']], 'y_data': [[11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Sonoma, Napa, N/A, Santa Barbara, San Luis Obispo, Monterey, Lake, Amador, Mendocino, Yolo, Solano, San Joaquin, San Benito, Contra Costa, Calaveras, Alameda","11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1","List the number of counties of all appellations in a bar chart, and list by the Y-axis in descending."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Sonoma', 'Napa', 'N/A', 'Santa Barbara', 'San Luis Obispo', 'Monterey', 'Lake', 'Amador', 'Mendocino', 'Yolo', 'Solano', 'San Joaquin', 'San Benito', 'Contra Costa', 'Calaveras', 'Alameda']], 'y_data': [[11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Sonoma, Napa, N/A, Santa Barbara, San Luis Obispo, Monterey, Lake, Amador, Mendocino, Yolo, Solano, San Joaquin, San Benito, Contra Costa, Calaveras, Alameda","11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1","What is the number of counties for all appellations?, and list by the Y-axis in descending."
"SELECT County , COUNT(County) FROM APPELLATIONS GROUP BY County ORDER BY COUNT(County) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Sonoma', 'Napa', 'N/A', 'Santa Barbara', 'San Luis Obispo', 'Monterey', 'Lake', 'Amador', 'Mendocino', 'Yolo', 'Solano', 'San Joaquin', 'San Benito', 'Contra Costa', 'Calaveras', 'Alameda']], 'y_data': [[11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Sonoma, Napa, N/A, Santa Barbara, San Luis Obispo, Monterey, Lake, Amador, Mendocino, Yolo, Solano, San Joaquin, San Benito, Contra Costa, Calaveras, Alameda","11, 11, 8, 5, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1","Return a bar chart about the number of counties for all appellations?, and list by the y axis in descending."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, rank x axis from low to high order."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and show Name from low to high order."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort X from low to high order."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Chardonnay', 'Garys Vineyard', 'Kali Hart', 'Metallico Un-Oaked', 'Pinot Noir', 'Rosellas Vineyard', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard']], 'y_data': [[2, 3, 1, 1, 4, 4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Chardonnay, Garys Vineyard, Kali Hart, Metallico Un-Oaked, Pinot Noir, Rosellas Vineyard, Sarmento Vineyard, Sleepy Hollow Vineyard","2, 3, 1, 1, 4, 4, 1, 1","A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and order by the X from low to high please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Rosellas Vineyard', 'Pinot Noir', 'Metallico Un-Oaked', 'Kali Hart', 'Garys Vineyard', 'Chardonnay']], 'y_data': [[1, 1, 4, 4, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Sleepy Hollow Vineyard, Sarmento Vineyard, Rosellas Vineyard, Pinot Noir, Metallico Un-Oaked, Kali Hart, Garys Vineyard, Chardonnay","1, 1, 4, 4, 1, 1, 3, 2","A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and display by the x-axis in desc please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Rosellas Vineyard', 'Pinot Noir', 'Metallico Un-Oaked', 'Kali Hart', 'Garys Vineyard', 'Chardonnay']], 'y_data': [[1, 1, 4, 4, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Sleepy Hollow Vineyard, Sarmento Vineyard, Rosellas Vineyard, Pinot Noir, Metallico Un-Oaked, Kali Hart, Garys Vineyard, Chardonnay","1, 1, 4, 4, 1, 1, 3, 2","Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort from high to low by the bars please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Rosellas Vineyard', 'Pinot Noir', 'Metallico Un-Oaked', 'Kali Hart', 'Garys Vineyard', 'Chardonnay']], 'y_data': [[1, 1, 4, 4, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Sleepy Hollow Vineyard, Sarmento Vineyard, Rosellas Vineyard, Pinot Noir, Metallico Un-Oaked, Kali Hart, Garys Vineyard, Chardonnay","1, 1, 4, 4, 1, 1, 3, 2","What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, list x axis from high to low order."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Rosellas Vineyard', 'Pinot Noir', 'Metallico Un-Oaked', 'Kali Hart', 'Garys Vineyard', 'Chardonnay']], 'y_data': [[1, 1, 4, 4, 1, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Sleepy Hollow Vineyard, Sarmento Vineyard, Rosellas Vineyard, Pinot Noir, Metallico Un-Oaked, Kali Hart, Garys Vineyard, Chardonnay","1, 1, 4, 4, 1, 1, 3, 2","What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, and display by the x-axis in desc."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Kali Hart', 'Metallico Un-Oaked', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard', 'Chardonnay', 'Garys Vineyard', 'Pinot Noir', 'Rosellas Vineyard']], 'y_data': [[1, 1, 1, 1, 2, 3, 4, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Kali Hart, Metallico Un-Oaked, Sarmento Vineyard, Sleepy Hollow Vineyard, Chardonnay, Garys Vineyard, Pinot Noir, Rosellas Vineyard","1, 1, 1, 1, 2, 3, 4, 4","What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, could you sort the number of name from low to high order?"
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Kali Hart', 'Metallico Un-Oaked', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard', 'Chardonnay', 'Garys Vineyard', 'Pinot Noir', 'Rosellas Vineyard']], 'y_data': [[1, 1, 1, 1, 2, 3, 4, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Kali Hart, Metallico Un-Oaked, Sarmento Vineyard, Sleepy Hollow Vineyard, Chardonnay, Garys Vineyard, Pinot Noir, Rosellas Vineyard","1, 1, 1, 1, 2, 3, 4, 4","A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, display in asc by the Y."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Kali Hart', 'Metallico Un-Oaked', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard', 'Chardonnay', 'Garys Vineyard', 'Pinot Noir', 'Rosellas Vineyard']], 'y_data': [[1, 1, 1, 1, 2, 3, 4, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Kali Hart, Metallico Un-Oaked, Sarmento Vineyard, Sleepy Hollow Vineyard, Chardonnay, Garys Vineyard, Pinot Noir, Rosellas Vineyard","1, 1, 1, 1, 2, 3, 4, 4","What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, rank total number from low to high order."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Kali Hart', 'Metallico Un-Oaked', 'Sarmento Vineyard', 'Sleepy Hollow Vineyard', 'Chardonnay', 'Garys Vineyard', 'Pinot Noir', 'Rosellas Vineyard']], 'y_data': [[1, 1, 1, 1, 2, 3, 4, 4]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Kali Hart, Metallico Un-Oaked, Sarmento Vineyard, Sleepy Hollow Vineyard, Chardonnay, Garys Vineyard, Pinot Noir, Rosellas Vineyard","1, 1, 1, 1, 2, 3, 4, 4","Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, show in asc by the Y."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Rosellas Vineyard', 'Pinot Noir', 'Garys Vineyard', 'Chardonnay', 'Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Metallico Un-Oaked', 'Kali Hart']], 'y_data': [[4, 4, 3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Rosellas Vineyard, Pinot Noir, Garys Vineyard, Chardonnay, Sleepy Hollow Vineyard, Sarmento Vineyard, Metallico Un-Oaked, Kali Hart","4, 4, 3, 2, 1, 1, 1, 1","Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort y-axis from high to low order please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Rosellas Vineyard', 'Pinot Noir', 'Garys Vineyard', 'Chardonnay', 'Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Metallico Un-Oaked', 'Kali Hart']], 'y_data': [[4, 4, 3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Rosellas Vineyard, Pinot Noir, Garys Vineyard, Chardonnay, Sleepy Hollow Vineyard, Sarmento Vineyard, Metallico Un-Oaked, Kali Hart","4, 4, 3, 2, 1, 1, 1, 1","A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, I want to sort by the Y in descending please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Rosellas Vineyard', 'Pinot Noir', 'Garys Vineyard', 'Chardonnay', 'Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Metallico Un-Oaked', 'Kali Hart']], 'y_data': [[4, 4, 3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Rosellas Vineyard, Pinot Noir, Garys Vineyard, Chardonnay, Sleepy Hollow Vineyard, Sarmento Vineyard, Metallico Un-Oaked, Kali Hart","4, 4, 3, 2, 1, 1, 1, 1","What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, sort y-axis from high to low order please."
"SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Rosellas Vineyard', 'Pinot Noir', 'Garys Vineyard', 'Chardonnay', 'Sleepy Hollow Vineyard', 'Sarmento Vineyard', 'Metallico Un-Oaked', 'Kali Hart']], 'y_data': [[4, 4, 3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Rosellas Vineyard, Pinot Noir, Garys Vineyard, Chardonnay, Sleepy Hollow Vineyard, Sarmento Vineyard, Metallico Un-Oaked, Kali Hart","4, 4, 3, 2, 1, 1, 1, 1","What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, and order in desc by the y axis."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Fri', 'Sat', 'Thur', 'Wed', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 0, 0, 0, 2, 6, 13]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Fri, Sat, Thur, Wed, Tue, Sun, Mon","0, 0, 0, 0, 2, 6, 13","A bar chart that computes the total number of wines with a price is bigger than 100 Next, Bin the year into the weekday interval, rank y-axis from low to high order."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Fri', 'Sat', 'Thur', 'Wed', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 0, 0, 0, 2, 6, 13]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Fri, Sat, Thur, Wed, Tue, Sun, Mon","0, 0, 0, 0, 2, 6, 13","How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval, and I want to show by the Y in ascending."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Sun', 'Tue', 'Wed', 'Thur', 'Sat', 'Fri']], 'y_data': [[13, 6, 2, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Sun, Tue, Wed, Thur, Sat, Fri","13, 6, 2, 0, 0, 0, 0","A bar chart that computes the total number of wines with a price is bigger than 100 Next, Bin the year into the weekday interval, and I want to rank by the y axis in desc please."
"SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100  ORDER BY COUNT(Year) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Mon', 'Sun', 'Tue', 'Wed', 'Thur', 'Sat', 'Fri']], 'y_data': [[13, 6, 2, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Mon, Sun, Tue, Wed, Thur, Sat, Fri","13, 6, 2, 0, 0, 0, 0","How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval, and I want to rank from high to low by the total number."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0","List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display in ascending by the bars."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery ASC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 0","List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, order x axis in asc order."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Paul Hobbs', 'Morlet', 'Lewis', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Carter', 'Bucella']], 'y_data': [[0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Paul Hobbs, Morlet, Lewis, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Carter, Bucella","0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, display by the X in desc."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY Winery DESC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Paul Hobbs', 'Morlet', 'Lewis', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Carter', 'Bucella']], 'y_data': [[0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Paul Hobbs, Morlet, Lewis, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Carter, Bucella","0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, could you show bar in desc order please?"
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Morlet', 'Paul Hobbs', 'Carter', 'Lewis', 'Sine Qua Non']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Morlet, Paul Hobbs, Carter, Lewis, Sine Qua Non","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 0","List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and show y-axis in asc order."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) ASC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Morlet', 'Paul Hobbs', 'Carter', 'Lewis', 'Sine Qua Non']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Morlet, Paul Hobbs, Carter, Lewis, Sine Qua Non","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 0","List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display by the total number from low to high."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Lewis', 'Carter', 'Paul Hobbs', 'Morlet', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Bucella']], 'y_data': [[0, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Lewis, Carter, Paul Hobbs, Morlet, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Bucella","0, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, show by the y-axis from high to low."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Winery ORDER BY COUNT(Winery) DESC",Stacked Bar,Extra Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Lewis', 'Carter', 'Paul Hobbs', 'Morlet', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Bucella']], 'y_data': [[0, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'classify': ['Cabernet Sauvingnon', 'Grenache', 'Syrah'], 'describe': 'GROUP BY Grape, GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Lewis, Carter, Paul Hobbs, Morlet, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Bucella","0, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and could you show by the y axis in descending?"
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4","Compare the number of winery of the wines whose price is bigger than 100, and could you order bar in asc order please?"
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4","List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank from low to high by the names please."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Carter', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Lewis', 'Morlet', 'Paul Hobbs', 'Sine Qua Non']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Carter, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Lewis, Morlet, Paul Hobbs, Sine Qua Non","1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 4","Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank X in ascending order."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Paul Hobbs', 'Morlet', 'Lewis', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Carter', 'Bucella']], 'y_data': [[4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Paul Hobbs, Morlet, Lewis, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Carter, Bucella","4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, sort bars from high to low order please."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Paul Hobbs', 'Morlet', 'Lewis', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Carter', 'Bucella']], 'y_data': [[4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Paul Hobbs, Morlet, Lewis, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Carter, Bucella","4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank names from high to low order."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Paul Hobbs', 'Morlet', 'Lewis', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Carter', 'Bucella']], 'y_data': [[4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Paul Hobbs, Morlet, Lewis, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Carter, Bucella","4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1","Compare the number of winery of the wines whose price is bigger than 100, and show by the x-axis from high to low."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Morlet', 'Paul Hobbs', 'Carter', 'Lewis', 'Sine Qua Non']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Morlet, Paul Hobbs, Carter, Lewis, Sine Qua Non","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4","List the number of winery of the wines whose price is bigger than 100 in a bar chart, and I want to rank in asc by the Y-axis."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Morlet', 'Paul Hobbs', 'Carter', 'Lewis', 'Sine Qua Non']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Morlet, Paul Hobbs, Carter, Lewis, Sine Qua Non","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4","Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank by the Y-axis in asc."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Bucella', 'Casa Piena', 'Caymus', 'Chappellet', 'Chimeney Rock', 'Darioush', 'David Arthur', 'Dos Lagos', 'Hourglass', 'Janzen', 'Morlet', 'Paul Hobbs', 'Carter', 'Lewis', 'Sine Qua Non']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Bucella, Casa Piena, Caymus, Chappellet, Chimeney Rock, Darioush, David Arthur, Dos Lagos, Hourglass, Janzen, Morlet, Paul Hobbs, Carter, Lewis, Sine Qua Non","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4","Compare the number of winery of the wines whose price is bigger than 100, and could you sort total number from low to high order?"
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Lewis', 'Carter', 'Paul Hobbs', 'Morlet', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Bucella']], 'y_data': [[4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Lewis, Carter, Paul Hobbs, Morlet, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Bucella","4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Compare the number of winery of the wines whose price is bigger than 100, I want to show by the y axis from high to low."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Lewis', 'Carter', 'Paul Hobbs', 'Morlet', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Bucella']], 'y_data': [[4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Lewis, Carter, Paul Hobbs, Morlet, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Bucella","4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and order from high to low by the Y-axis."
"SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY COUNT(Winery) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'Winery', 'y_name': 'COUNT(Winery)', 'x_data': [['Sine Qua Non', 'Lewis', 'Carter', 'Paul Hobbs', 'Morlet', 'Janzen', 'Hourglass', 'Dos Lagos', 'David Arthur', 'Darioush', 'Chimeney Rock', 'Chappellet', 'Caymus', 'Casa Piena', 'Bucella']], 'y_data': [[4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Winery'}",bar,Winery,COUNT(Winery),"Sine Qua Non, Lewis, Carter, Paul Hobbs, Morlet, Janzen, Hourglass, Dos Lagos, David Arthur, Darioush, Chimeney Rock, Chappellet, Caymus, Casa Piena, Bucella","4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the number of winery of the wines whose price is bigger than 100 in a bar chart, could you display in descending by the total number please?"
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1","Find the country of all appellations who have at most three wines, and visualize them in a bar chart, list X-axis in asc order."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1","Give me a bar chart for those countries of all appellations who have at most three wines, sort x axis in asc order."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Amador', 'Calaveras', 'Lake', 'Mendocino', 'Monterey', 'N/A', 'Napa', 'San Benito', 'San Joaquin', 'San Luis Obispo', 'Santa Barbara', 'Solano', 'Sonoma', 'Yolo']], 'y_data': [[1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Amador, Calaveras, Lake, Mendocino, Monterey, N/A, Napa, San Benito, San Joaquin, San Luis Obispo, Santa Barbara, Solano, Sonoma, Yolo","1, 2, 1, 2, 2, 2, 7, 6, 1, 1, 3, 1, 1, 3, 1","What are the countries for applications with at most 3 wines? Return the result in a bar chart, and could you display County in ascending order?"
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Calaveras, Amador, Alameda","1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1","What are the countries for applications with at most 3 wines? Return the result in a bar chart, I want to list from high to low by the x-axis."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Calaveras, Amador, Alameda","1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1","Give me a bar chart for those countries of all appellations who have at most three wines, I want to list from high to low by the x-axis."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY County DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Yolo', 'Sonoma', 'Solano', 'Santa Barbara', 'San Luis Obispo', 'San Joaquin', 'San Benito', 'Napa', 'N/A', 'Monterey', 'Mendocino', 'Lake', 'Calaveras', 'Amador', 'Alameda']], 'y_data': [[1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Yolo, Sonoma, Solano, Santa Barbara, San Luis Obispo, San Joaquin, San Benito, Napa, N/A, Monterey, Mendocino, Lake, Calaveras, Amador, Alameda","1, 3, 1, 1, 3, 1, 1, 6, 7, 2, 2, 2, 1, 2, 1","Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and I want to list by the County in desc."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'San Benito', 'San Joaquin', 'Santa Barbara', 'Solano', 'Yolo', 'Amador', 'Lake', 'Mendocino', 'Monterey', 'San Luis Obispo', 'Sonoma', 'Napa', 'N/A']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, San Benito, San Joaquin, Santa Barbara, Solano, Yolo, Amador, Lake, Mendocino, Monterey, San Luis Obispo, Sonoma, Napa, N/A","1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7","Give me a bar chart for those countries of all appellations who have at most three wines, I want to sort by the Y from low to high please."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'San Benito', 'San Joaquin', 'Santa Barbara', 'Solano', 'Yolo', 'Amador', 'Lake', 'Mendocino', 'Monterey', 'San Luis Obispo', 'Sonoma', 'Napa', 'N/A']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, San Benito, San Joaquin, Santa Barbara, Solano, Yolo, Amador, Lake, Mendocino, Monterey, San Luis Obispo, Sonoma, Napa, N/A","1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7","What are the countries for applications with at most 3 wines? Return the result in a bar chart, and sort Y-axis in asc order."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) ASC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['Alameda', 'Calaveras', 'San Benito', 'San Joaquin', 'Santa Barbara', 'Solano', 'Yolo', 'Amador', 'Lake', 'Mendocino', 'Monterey', 'San Luis Obispo', 'Sonoma', 'Napa', 'N/A']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"Alameda, Calaveras, San Benito, San Joaquin, Santa Barbara, Solano, Yolo, Amador, Lake, Mendocino, Monterey, San Luis Obispo, Sonoma, Napa, N/A","1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 6, 7","Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and rank in ascending by the Y-axis."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['N/A', 'Napa', 'Sonoma', 'San Luis Obispo', 'Monterey', 'Mendocino', 'Lake', 'Amador', 'Yolo', 'Solano', 'Santa Barbara', 'San Joaquin', 'San Benito', 'Calaveras', 'Alameda']], 'y_data': [[7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"N/A, Napa, Sonoma, San Luis Obispo, Monterey, Mendocino, Lake, Amador, Yolo, Solano, Santa Barbara, San Joaquin, San Benito, Calaveras, Alameda","7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1","Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and show from high to low by the Y-axis."
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['N/A', 'Napa', 'Sonoma', 'San Luis Obispo', 'Monterey', 'Mendocino', 'Lake', 'Amador', 'Yolo', 'Solano', 'Santa Barbara', 'San Joaquin', 'San Benito', 'Calaveras', 'Alameda']], 'y_data': [[7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"N/A, Napa, Sonoma, San Luis Obispo, Monterey, Mendocino, Lake, Amador, Yolo, Solano, Santa Barbara, San Joaquin, San Benito, Calaveras, Alameda","7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1","What are the countries for applications with at most 3 wines? Return the result in a bar chart, could you display in desc by the Y?"
"SELECT County , COUNT(County) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY County ORDER BY COUNT(County) DESC",Bar,Hard,wine_1,"{'chart': 'bar', 'x_name': 'County', 'y_name': 'COUNT(County)', 'x_data': [['N/A', 'Napa', 'Sonoma', 'San Luis Obispo', 'Monterey', 'Mendocino', 'Lake', 'Amador', 'Yolo', 'Solano', 'Santa Barbara', 'San Joaquin', 'San Benito', 'Calaveras', 'Alameda']], 'y_data': [[7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY County'}",bar,County,COUNT(County),"N/A, Napa, Sonoma, San Luis Obispo, Monterey, Mendocino, Lake, Amador, Yolo, Solano, Santa Barbara, San Joaquin, San Benito, Calaveras, Alameda","7, 6, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1","Give me a bar chart for those countries of all appellations who have at most three wines, order y axis in descending order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","What are the numbers of wines for different grapes Plot them as bar chart, and list from low to high by the Grape please."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","How many wines are there for each grape, and I want to display by the X in ascending."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","A bar chart about how many wines are there for each grape?, sort in ascending by the Grape."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","what are the numbers of wines for different grapes?, display by the X-axis in asc."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","Display a bar chart for what are the numbers of wines for different grapes?, and list from low to high by the bars."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","Show me the total number by grape in a histogram, and display by the X-axis in asc."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache', 'Malbec', 'Marsanne', 'Merlot', 'Petite Sirah', 'Pinot Noir', 'Roussanne', 'Sangiovese', 'Sauvignon Blanc', 'Syrah', 'Tempranillo', 'Viognier', 'Zinfandel']], 'y_data': [[1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Cabernet Sauvingnon, Chardonnay, Grenache, Malbec, Marsanne, Merlot, Petite Sirah, Pinot Noir, Roussanne, Sangiovese, Sauvignon Blanc, Syrah, Tempranillo, Viognier, Zinfandel","1, 1, 68, 104, 10, 1, 1, 10, 6, 109, 1, 1, 46, 61, 1, 1, 78","Return a bar chart on how many wines are there for each grape?, list from low to high by the Grape please."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","How many wines are there for each grape, and show x-axis from high to low order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","A bar chart about how many wines are there for each grape?, rank by the bars from high to low."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","what are the numbers of wines for different grapes?, and show x-axis from high to low order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","What are the numbers of wines for different grapes Plot them as bar chart, sort by the bar in desc."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","Show me the total number by grape in a histogram, sort by the bar in desc."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","Return a bar chart on how many wines are there for each grape?, I want to list in desc by the x axis."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY Grape DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Zinfandel', 'Viognier', 'Tempranillo', 'Syrah', 'Sauvignon Blanc', 'Sangiovese', 'Roussanne', 'Pinot Noir', 'Petite Sirah', 'Merlot', 'Marsanne', 'Malbec', 'Grenache', 'Chardonnay', 'Cabernet Sauvingnon', 'Cabernet Franc', 'Barbera']], 'y_data': [[78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Zinfandel, Viognier, Tempranillo, Syrah, Sauvignon Blanc, Sangiovese, Roussanne, Pinot Noir, Petite Sirah, Merlot, Marsanne, Malbec, Grenache, Chardonnay, Cabernet Sauvingnon, Cabernet Franc, Barbera","78, 1, 1, 61, 46, 1, 1, 109, 6, 10, 1, 1, 10, 104, 68, 1, 1","Display a bar chart for what are the numbers of wines for different grapes?, and I want to show from high to low by the Grape."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","How many wines are there for each grape, sort y axis from low to high order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","Return a bar chart on how many wines are there for each grape?, order by the Y from low to high."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","Display a bar chart for what are the numbers of wines for different grapes?, and order by the total number in ascending."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","A bar chart about how many wines are there for each grape?, order by the total number in ascending."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","Show me the total number by grape in a histogram, and show from low to high by the y axis."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","what are the numbers of wines for different grapes?, and rank total number in ascending order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Barbera', 'Cabernet Franc', 'Malbec', 'Marsanne', 'Roussanne', 'Sangiovese', 'Tempranillo', 'Viognier', 'Petite Sirah', 'Grenache', 'Merlot', 'Sauvignon Blanc', 'Syrah', 'Cabernet Sauvingnon', 'Zinfandel', 'Chardonnay', 'Pinot Noir']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Barbera, Cabernet Franc, Malbec, Marsanne, Roussanne, Sangiovese, Tempranillo, Viognier, Petite Sirah, Grenache, Merlot, Sauvignon Blanc, Syrah, Cabernet Sauvingnon, Zinfandel, Chardonnay, Pinot Noir","1, 1, 1, 1, 1, 1, 1, 1, 6, 10, 10, 46, 61, 68, 78, 104, 109","What are the numbers of wines for different grapes Plot them as bar chart, show by the the total number in ascending."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","A bar chart about how many wines are there for each grape?, and display by the the total number in desc please."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","How many wines are there for each grape, display by the the total number in desc please."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","What are the numbers of wines for different grapes Plot them as bar chart, and I want to rank in descending by the the total number ."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","Show me the total number by grape in a histogram, and show Y-axis in descending order please."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","what are the numbers of wines for different grapes?, and I want to rank in descending by the the total number ."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","Return a bar chart on how many wines are there for each grape?, and I want to list the total number in desc order."
"SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Grape', 'y_name': 'count(*)', 'x_data': [['Pinot Noir', 'Chardonnay', 'Zinfandel', 'Cabernet Sauvingnon', 'Syrah', 'Sauvignon Blanc', 'Merlot', 'Grenache', 'Petite Sirah', 'Viognier', 'Tempranillo', 'Sangiovese', 'Roussanne', 'Marsanne', 'Malbec', 'Cabernet Franc', 'Barbera']], 'y_data': [[109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Grape,count(*),"Pinot Noir, Chardonnay, Zinfandel, Cabernet Sauvingnon, Syrah, Sauvignon Blanc, Merlot, Grenache, Petite Sirah, Viognier, Tempranillo, Sangiovese, Roussanne, Marsanne, Malbec, Cabernet Franc, Barbera","109, 104, 78, 68, 61, 46, 10, 10, 6, 1, 1, 1, 1, 1, 1, 1, 1","Display a bar chart for what are the numbers of wines for different grapes?, display by the the total number in desc please."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Wed', 'Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Wed, Fri, Mon, Sat, Sun, Tue, Thur","0, 1, 1, 1, 1, 1, 2","Give me a bar chart for the number of year of each year, order by the how many year in ascending."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Wed', 'Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Wed, Fri, Mon, Sat, Sun, Tue, Thur","0, 1, 1, 1, 1, 1, 2","Bin the year attribute into the Year interval and count them for a bar chart, and order by the how many year in ascending."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri', 'Wed']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Fri, Wed","2, 1, 1, 1, 1, 1, 0","Give me a bar chart for the number of year of each year, and rank total number in desc order."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri', 'Wed']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Fri, Wed","2, 1, 1, 1, 1, 1, 0","Bin the year attribute into the Year interval and count them for a bar chart, and rank total number in desc order."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","What are the average prices of wines for different years Show the trend, and list x axis in asc order please."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","What is the average prices of wines for each each Visualize by line chart, rank by the X in ascending."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","Plot year by mean price as a line chart, and sort x axis from low to high order."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","Draw a line chart for what is the average prices of wines for each each?, sort x axis from low to high order."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","Display a line chart for what is the average prices of wines for each each?, and display in ascending by the x-axis."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year ASC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","60.714285714285715, 52.82142857142857, 52.941176470588225, 49.41847826086956, 39.70769230769231, 30.953846153846154, 32","Give me a tendency forwhat are the average prices of wines for different years?, and could you list by the X in asc please?"
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","What are the average prices of wines for different years Show the trend, list by the X-axis in descending."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","Display a line chart for what is the average prices of wines for each each?, list by the X-axis in descending."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","Give me a tendency forwhat are the average prices of wines for different years?, and could you show by the X from high to low?"
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","Plot year by mean price as a line chart, rank from high to low by the x axis."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","Draw a line chart for what is the average prices of wines for each each?, and show in desc by the x-axis."
"SELECT Year , avg(Price) FROM WINE GROUP BY YEAR ORDER BY Year DESC",Line,Medium,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'avg(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715]], 'classify': [], 'describe': ''}",line,Year,avg(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 30.953846153846154, 39.70769230769231, 49.41847826086956, 52.941176470588225, 52.82142857142857, 60.714285714285715","What is the average prices of wines for each each Visualize by line chart, and rank from high to low by the x axis."
"SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Wed', 'Fri', 'Tue', 'Mon', 'Sat', 'Sun', 'Thur']], 'y_data': [[0, 32, 39, 49, 52, 52, 90]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Wed, Fri, Tue, Mon, Sat, Sun, Thur","0, 32, 39, 49, 52, 52, 90","Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, list from low to high by the Y."
"SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Wed', 'Fri', 'Tue', 'Mon', 'Sat', 'Sun', 'Thur']], 'y_data': [[0, 32, 39, 49, 52, 52, 90]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Wed, Fri, Tue, Mon, Sat, Sun, Thur","0, 32, 39, 49, 52, 52, 90","Bar chart x axis year y axis total number of avg(price), and list from low to high by the Y."
"SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Thur', 'Sun', 'Sat', 'Mon', 'Tue', 'Fri', 'Wed']], 'y_data': [[90, 52, 52, 49, 39, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Thur, Sun, Sat, Mon, Tue, Fri, Wed","90, 52, 52, 49, 39, 32, 0","Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, I want to list by the total number from high to low."
"SELECT Year , SUM(avg(Price)) FROM WINE  ORDER BY SUM(avg(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'SUM(avg(Price))', 'x_data': [['Thur', 'Sun', 'Sat', 'Mon', 'Tue', 'Fri', 'Wed']], 'y_data': [[90, 52, 52, 49, 39, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,SUM(avg(Price)),"Thur, Sun, Sat, Mon, Tue, Fri, Wed","90, 52, 52, 49, 39, 32, 0","Bar chart x axis year y axis total number of avg(price), order in desc by the sum avg(price)."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Wed', 'Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Wed, Fri, Mon, Sat, Sun, Tue, Thur","0, 1, 1, 1, 1, 1, 2","Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, could you order by the Y from low to high?"
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Wed', 'Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Wed, Fri, Mon, Sat, Sun, Tue, Thur","0, 1, 1, 1, 1, 1, 2","Bar graph to show how many year from different year, and rank y-axis from low to high order."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Wed', 'Fri', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Wed, Fri, Mon, Sat, Sun, Tue, Thur","0, 1, 1, 1, 1, 1, 2","A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, and list total number from low to high order."
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri', 'Wed']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Fri, Wed","2, 1, 1, 1, 1, 1, 0","Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, and could you order y axis from high to low order?"
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri', 'Wed']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Fri, Wed","2, 1, 1, 1, 1, 1, 0","A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, could you rank by the y axis in desc?"
"SELECT Year , COUNT(Year) FROM WINE  ORDER BY COUNT(Year) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Fri', 'Wed']], 'y_data': [[2, 1, 1, 1, 1, 1, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Fri, Wed","2, 1, 1, 1, 1, 1, 0","Bar graph to show how many year from different year, sort the number of year in desc order."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88","What are the maximum score of wines in each year?, and show in asc by the X."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88","Give me a line chart about each year's maximum score , I want to order x axis from low to high order."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88","Show me the trend aboutthe maximum score of wines for each year, and I want to order by the Year from low to high."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[92, 95, 98, 98, 95, 95, 88]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","92, 95, 98, 98, 95, 95, 88","Can you draw the trend of maximal score over the year?, sort X in asc order."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[88, 95, 95, 98, 98, 95, 92]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","88, 95, 95, 98, 98, 95, 92","Can you draw the trend of maximal score over the year?, rank by the x-axis in descending."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[88, 95, 95, 98, 98, 95, 92]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","88, 95, 95, 98, 98, 95, 92","What are the maximum score of wines in each year?, and list by the Year in descending please."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[88, 95, 95, 98, 98, 95, 92]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","88, 95, 95, 98, 98, 95, 92","Show me the trend aboutthe maximum score of wines for each year, rank Year in desc order please."
"SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Score)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[88, 95, 95, 98, 98, 95, 92]], 'classify': [], 'describe': ''}",line,Year,max(Score),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","88, 95, 95, 98, 98, 95, 92","Give me a line chart about each year's maximum score , and rank by the x-axis in descending."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 32, 76.5, 100, 130, 200, 225]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Wed, Fri, Thur, Sat, Tue, Sun, Mon","0, 32, 76.5, 100, 130, 200, 225","Compare the average of maximum price of wines each year, bin the year into the weekday interval, and I want to display in asc by the y axis."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 32, 76.5, 100, 130, 200, 225]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Wed, Fri, Thur, Sat, Tue, Sun, Mon","0, 32, 76.5, 100, 130, 200, 225","A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval


, I want to display in asc by the y axis."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 32, 76.5, 100, 130, 200, 225]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Wed, Fri, Thur, Sat, Tue, Sun, Mon","0, 32, 76.5, 100, 130, 200, 225","Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart, could you list from low to high by the Y-axis?"
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Sun', 'Mon']], 'y_data': [[0, 32, 76.5, 100, 130, 200, 225]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Wed, Fri, Thur, Sat, Tue, Sun, Mon","0, 32, 76.5, 100, 130, 200, 225","Show mean max(price) from each year, display in ascending by the Y."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[225, 200, 130, 100, 76.5, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Sun, Tue, Sat, Thur, Fri, Wed","225, 200, 130, 100, 76.5, 32, 0","Compare the average of maximum price of wines each year, bin the year into the weekday interval, list from high to low by the y-axis."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[225, 200, 130, 100, 76.5, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Sun, Tue, Sat, Thur, Fri, Wed","225, 200, 130, 100, 76.5, 32, 0","Show mean max(price) from each year, rank from high to low by the total number."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[225, 200, 130, 100, 76.5, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Sun, Tue, Sat, Thur, Fri, Wed","225, 200, 130, 100, 76.5, 32, 0","A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval


, order by the total number in desc."
"SELECT Year , AVG(max(Price)) FROM WINE  ORDER BY AVG(max(Price)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Price))', 'x_data': [['Mon', 'Sun', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[225, 200, 130, 100, 76.5, 32, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Price)),"Mon, Sun, Tue, Sat, Thur, Fri, Wed","225, 200, 130, 100, 76.5, 32, 0","Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart, order by the total number in desc."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Mon', 'Sun']], 'y_data': [[0, 88, 93.5, 95, 95, 98, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Wed, Fri, Thur, Sat, Tue, Mon, Sun","0, 88, 93.5, 95, 95, 98, 98","Compare the average of maximum score of wines each year, bin the year into the weekday interval, and sort by the total number in asc."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Mon', 'Sun']], 'y_data': [[0, 88, 93.5, 95, 95, 98, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Wed, Fri, Thur, Sat, Tue, Mon, Sun","0, 88, 93.5, 95, 95, 98, 98","Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart, and rank from low to high by the Y-axis."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Mon', 'Sun']], 'y_data': [[0, 88, 93.5, 95, 95, 98, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Wed, Fri, Thur, Sat, Tue, Mon, Sun","0, 88, 93.5, 95, 95, 98, 98","Give me a bar chart for mean max(score) of each year, and sort by the y-axis in ascending."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) ASC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Wed', 'Fri', 'Thur', 'Sat', 'Tue', 'Mon', 'Sun']], 'y_data': [[0, 88, 93.5, 95, 95, 98, 98]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Wed, Fri, Thur, Sat, Tue, Mon, Sun","0, 88, 93.5, 95, 95, 98, 98","A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval, sort by the total number in asc."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Sun', 'Mon', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[98, 98, 95, 95, 93.5, 88, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Sun, Mon, Tue, Sat, Thur, Fri, Wed","98, 98, 95, 95, 93.5, 88, 0","Compare the average of maximum score of wines each year, bin the year into the weekday interval, and show by the Y-axis from high to low."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Sun', 'Mon', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[98, 98, 95, 95, 93.5, 88, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Sun, Mon, Tue, Sat, Thur, Fri, Wed","98, 98, 95, 95, 93.5, 88, 0","A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval, and I want to show in descending by the total number."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Sun', 'Mon', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[98, 98, 95, 95, 93.5, 88, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Sun, Mon, Tue, Sat, Thur, Fri, Wed","98, 98, 95, 95, 93.5, 88, 0","Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart, and list Y from high to low order."
"SELECT Year , AVG(max(Score)) FROM WINE  ORDER BY AVG(max(Score)) DESC",Bar,Medium,wine_1,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'AVG(max(Score))', 'x_data': [['Sun', 'Mon', 'Tue', 'Sat', 'Thur', 'Fri', 'Wed']], 'y_data': [[98, 98, 95, 95, 93.5, 88, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,AVG(max(Score)),"Sun, Mon, Tue, Sat, Thur, Fri, Wed","98, 98, 95, 95, 93.5, 88, 0","Give me a bar chart for mean max(score) of each year, and show by the Y-axis from high to low."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32","Visualize the general trend of maximal price over the year, I want to sort X-axis in asc order."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32","Given a line chart about the maximum price of wines for each year, display Year from low to high order."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32","Show me the trend about the maximum price of wines for each year, order by the x-axis in ascending."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2004-01-01', '2005-01-01', '2006-01-01', '2007-01-01', '2008-01-01', '2009-01-01', '2066-01-01']], 'y_data': [[75, 100, 200, 225, 130, 78, 32]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2004-01-01, 2005-01-01, 2006-01-01, 2007-01-01, 2008-01-01, 2009-01-01, 2066-01-01","75, 100, 200, 225, 130, 78, 32","What is the maximum price of wines in each year?, sort by the X-axis from low to high."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 78, 130, 225, 200, 100, 75]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 78, 130, 225, 200, 100, 75","What is the maximum price of wines in each year?, sort in desc by the Year."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 78, 130, 225, 200, 100, 75]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 78, 130, 225, 200, 100, 75","Given a line chart about the maximum price of wines for each year, I want to show in descending by the x-axis please."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 78, 130, 225, 200, 100, 75]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 78, 130, 225, 200, 100, 75","Visualize the general trend of maximal price over the year, list X in desc order."
"SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year DESC",Line,Easy,wine_1,"{'chart': 'line', 'x_name': 'Year', 'y_name': 'max(Price)', 'x_data': [['2066-01-01', '2009-01-01', '2008-01-01', '2007-01-01', '2006-01-01', '2005-01-01', '2004-01-01']], 'y_data': [[32, 78, 130, 225, 200, 100, 75]], 'classify': [], 'describe': ''}",line,Year,max(Price),"2066-01-01, 2009-01-01, 2008-01-01, 2007-01-01, 2006-01-01, 2005-01-01, 2004-01-01","32, 78, 130, 225, 200, 100, 75","Show me the trend about the maximum price of wines for each year, and display by the x axis in descending."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","Bar chart of the total number from each headquarters, order in asc by the Headquarters."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","List all headquarters and the number of companies in each headquarter with a bar chart, show from low to high by the Headquarters."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and rank in asc by the x axis please."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","List all headquarters and the number of companies in each headquarter, and order bar in ascending order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","List all headquarters and the number of companies in each headquarter, show in descending by the x axis."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","List all headquarters and the number of companies in each headquarter with a bar chart, show Headquarters in descending order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and order names in descending order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","Bar chart of the total number from each headquarters, and rank in desc by the x axis."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","List all headquarters and the number of companies in each headquarter, I want to list Y in asc order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","List all headquarters and the number of companies in each headquarter with a bar chart, show from low to high by the total number please."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and show from low to high by the total number please."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","Bar chart of the total number from each headquarters, I want to list Y in asc order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and I want to list in desc by the total number."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","List all headquarters and the number of companies in each headquarter, and order the total number in desc order."
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","List all headquarters and the number of companies in each headquarter with a bar chart, could you display by the the total number from high to low?"
"SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'count(*)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Headquarters,count(*),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","Bar chart of the total number from each headquarters, rank by the Y in descending."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4","How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and rank by the names from low to high."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4","Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, show X-axis in ascending order please."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Oil and gas', 'Banking']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Oil and gas, Banking","4, 2","Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, display bars in descending order."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY Main_Industry DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Oil and gas', 'Banking']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Oil and gas, Banking","4, 2","How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and list names from high to low order."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4","How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, could you sort in asc by the y axis please?"
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Oil and gas']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Oil and gas","2, 4","Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, and display y axis from low to high order please."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Oil and gas', 'Banking']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Oil and gas, Banking","4, 2","How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, and could you display by the total number from high to low?"
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE headquarters != 'USA' GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Oil and gas', 'Banking']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Oil and gas, Banking","4, 2","Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, and display Y from high to low order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","what are the main indstries and total market value for each industry?, and could you display bars in asc order?"
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","A bar chart about what are the main indstries and total market value for each industry?, rank in ascending by the names please."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","Draw a bar chart of main industry versus total number of market value, I want to show by the X-axis from low to high."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","Show all main industry and total market value in each industry, show in asc by the x-axis."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","What are the main indstries and total market value for each industry Visualize by bar chart, rank in ascending by the X-axis."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Banking', 'Conglomerate', 'Oil and gas']], 'y_data': [[580.4000000000002, 415.9, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Banking, Conglomerate, Oil and gas","580.4000000000002, 415.9, 1257.1","Show all main industry and total market value in each industry by a bar chart, show in asc by the x-axis."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","what are the main indstries and total market value for each industry?, and order by the x-axis in desc."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","Show all main industry and total market value in each industry, order by the x-axis from high to low."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","A bar chart about what are the main indstries and total market value for each industry?, and could you rank X-axis from high to low order?"
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","Draw a bar chart of main industry versus total number of market value, order from high to low by the names."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","Show all main industry and total market value in each industry by a bar chart, display x-axis from high to low order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Conglomerate', 'Banking']], 'y_data': [[1257.1, 415.9, 580.4000000000002]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Conglomerate, Banking","1257.1, 415.9, 580.4000000000002","What are the main indstries and total market value for each industry Visualize by bar chart, list in descending by the X."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","Show all main industry and total market value in each industry by a bar chart, show in asc by the y-axis please."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","what are the main indstries and total market value for each industry?, and display in asc by the total number."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","What are the main indstries and total market value for each industry Visualize by bar chart, I want to order sum market value in asc order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","A bar chart about what are the main indstries and total market value for each industry?, I want to order sum market value in asc order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","Draw a bar chart of main industry versus total number of market value, and order in ascending by the y axis."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Conglomerate', 'Banking', 'Oil and gas']], 'y_data': [[415.9, 580.4000000000002, 1257.1]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Conglomerate, Banking, Oil and gas","415.9, 580.4000000000002, 1257.1","Show all main industry and total market value in each industry, and order in ascending by the y axis."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","Draw a bar chart of main industry versus total number of market value, and display y-axis in descending order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","What are the main indstries and total market value for each industry Visualize by bar chart, I want to sort Y-axis in descending order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","Show all main industry and total market value in each industry by a bar chart, rank in descending by the Y."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","Show all main industry and total market value in each industry, and I want to sort Y-axis in descending order."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","A bar chart about what are the main indstries and total market value for each industry?, sort by the Y-axis in desc."
"SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'sum(market_value)', 'x_data': [['Oil and gas', 'Banking', 'Conglomerate']], 'y_data': [[1257.1, 580.4000000000002, 415.9]], 'classify': [], 'describe': ''}",bar,Main_Industry,sum(market_value),"Oil and gas, Banking, Conglomerate","1257.1, 580.4000000000002, 415.9","what are the main indstries and total market value for each industry?, and sort by the Y in descending."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2","How many companies without a gas station in each main industry? Draw a bar chart, and display X in asc order."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2","Show the number of companies without a gas station in each main industry with a bar chart, and order from low to high by the bars please."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Conglomerate', 'Banking']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Conglomerate, Banking","2, 3","How many companies without a gas station in each main industry? Draw a bar chart, and I want to order in desc by the x-axis."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY Main_Industry DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Conglomerate', 'Banking']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Conglomerate, Banking","2, 3","Show the number of companies without a gas station in each main industry with a bar chart, sort in desc by the X-axis."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Conglomerate', 'Banking']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Conglomerate, Banking","2, 3","Show the number of companies without a gas station in each main industry with a bar chart, could you list from low to high by the Y?"
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Conglomerate', 'Banking']], 'y_data': [[2, 3]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Conglomerate, Banking","2, 3","How many companies without a gas station in each main industry? Draw a bar chart, and display by the total number in asc."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2","How many companies without a gas station in each main industry? Draw a bar chart, order y axis in descending order."
"SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Main_Industry', 'y_name': 'COUNT(Main_Industry)', 'x_data': [['Banking', 'Conglomerate']], 'y_data': [[3, 2]], 'classify': [], 'describe': 'GROUP BY Main_Industry'}",bar,Main_Industry,COUNT(Main_Industry),"Banking, Conglomerate","3, 2","Show the number of companies without a gas station in each main industry with a bar chart, display by the Y-axis in desc."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1","Show the number of gas stations for each manager in a bar chart, and show by the names in ascending."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1","How many gas stations dors each manager have? Plot a bar chart, show by the names in ascending."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Colin Denman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Colin Denman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow","1, 1, 1, 2, 1, 1, 1, 1, 1, 1","Draw a bar chart of manager name versus how many manager name, and list X from low to high order."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'Colin Denman', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, Colin Denman, BryanDenman, Bryan Taylor, BrianWingrave","1, 1, 1, 1, 1, 1, 2, 1, 1, 1","How many gas stations dors each manager have? Plot a bar chart, list bars in descending order."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'Colin Denman', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, Colin Denman, BryanDenman, Bryan Taylor, BrianWingrave","1, 1, 1, 1, 1, 1, 2, 1, 1, 1","Show the number of gas stations for each manager in a bar chart, and I want to show by the X in desc."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'Colin Denman', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, Colin Denman, BryanDenman, Bryan Taylor, BrianWingrave","1, 1, 1, 1, 1, 1, 2, 1, 1, 1","Draw a bar chart of manager name versus how many manager name, and list bars in descending order."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow', 'Colin Denman']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow, Colin Denman","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","Draw a bar chart of manager name versus how many manager name, and show by the total number from low to high."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow', 'Colin Denman']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow, Colin Denman","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","Show the number of gas stations for each manager in a bar chart, I want to rank by the Y from low to high."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['BrianWingrave', 'Bryan Taylor', 'BryanDenman', 'Jon Rowe', 'Luke Rowe', 'Simon Cope Derek Marloe', 'SimonMarloe', 'Tom Whit', 'Tony Bristow', 'Colin Denman']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"BrianWingrave, Bryan Taylor, BryanDenman, Jon Rowe, Luke Rowe, Simon Cope Derek Marloe, SimonMarloe, Tom Whit, Tony Bristow, Colin Denman","1, 1, 1, 1, 1, 1, 1, 1, 1, 2","How many gas stations dors each manager have? Plot a bar chart, and I want to list in asc by the y-axis."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Colin Denman', 'Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Colin Denman, Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, BryanDenman, Bryan Taylor, BrianWingrave","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Show the number of gas stations for each manager in a bar chart, and sort from high to low by the y-axis."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Colin Denman', 'Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Colin Denman, Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, BryanDenman, Bryan Taylor, BrianWingrave","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many gas stations dors each manager have? Plot a bar chart, and sort from high to low by the y-axis."
"SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY COUNT(Manager_Name) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Manager_Name', 'y_name': 'COUNT(Manager_Name)', 'x_data': [['Colin Denman', 'Tony Bristow', 'Tom Whit', 'SimonMarloe', 'Simon Cope Derek Marloe', 'Luke Rowe', 'Jon Rowe', 'BryanDenman', 'Bryan Taylor', 'BrianWingrave']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Manager_Name'}",bar,Manager_Name,COUNT(Manager_Name),"Colin Denman, Tony Bristow, Tom Whit, SimonMarloe, Simon Cope Derek Marloe, Luke Rowe, Jon Rowe, BryanDenman, Bryan Taylor, BrianWingrave","2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Draw a bar chart of manager name versus how many manager name, I want to sort how many manager name in desc order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'ExxonMobil', 'PetroChina', 'Petrobras', 'Royal Dutch Shell']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, ExxonMobil, PetroChina, Petrobras, Royal Dutch Shell","1, 2, 1, 1, 1","For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and display Company in asc order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'ExxonMobil', 'PetroChina', 'Petrobras', 'Royal Dutch Shell']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, ExxonMobil, PetroChina, Petrobras, Royal Dutch Shell","1, 2, 1, 1, 1","Show the company name with the number of gas station by a bar chart, display Company in asc order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'ExxonMobil', 'PetroChina', 'Petrobras', 'Royal Dutch Shell']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, ExxonMobil, PetroChina, Petrobras, Royal Dutch Shell","1, 2, 1, 1, 1","Show the company name with the number of gas station Show bar chart, and display Company in asc order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['Royal Dutch Shell', 'Petrobras', 'PetroChina', 'ExxonMobil', 'BP']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"Royal Dutch Shell, Petrobras, PetroChina, ExxonMobil, BP","1, 1, 1, 2, 1","For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and order bars in descending order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['Royal Dutch Shell', 'Petrobras', 'PetroChina', 'ExxonMobil', 'BP']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"Royal Dutch Shell, Petrobras, PetroChina, ExxonMobil, BP","1, 1, 1, 2, 1","Show the company name with the number of gas station by a bar chart, and could you sort in descending by the X?"
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['Royal Dutch Shell', 'Petrobras', 'PetroChina', 'ExxonMobil', 'BP']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"Royal Dutch Shell, Petrobras, PetroChina, ExxonMobil, BP","1, 1, 1, 2, 1","Show the company name with the number of gas station Show bar chart, and order by the names in desc."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'PetroChina', 'Petrobras', 'Royal Dutch Shell', 'ExxonMobil']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, PetroChina, Petrobras, Royal Dutch Shell, ExxonMobil","1, 1, 1, 1, 2","For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and I want to sort Y in asc order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'PetroChina', 'Petrobras', 'Royal Dutch Shell', 'ExxonMobil']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, PetroChina, Petrobras, Royal Dutch Shell, ExxonMobil","1, 1, 1, 1, 2","Show the company name with the number of gas station Show bar chart, and could you sort by the Y in ascending?"
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) ASC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['BP', 'PetroChina', 'Petrobras', 'Royal Dutch Shell', 'ExxonMobil']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Company,count(*),"BP, PetroChina, Petrobras, Royal Dutch Shell, ExxonMobil","1, 1, 1, 1, 2","Show the company name with the number of gas station by a bar chart, I want to show the total number from low to high order."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'Petrobras', 'PetroChina', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, Petrobras, PetroChina, BP","2, 1, 1, 1, 1","Show the company name with the number of gas station by a bar chart, and show in descending by the y-axis."
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'Petrobras', 'PetroChina', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, Petrobras, PetroChina, BP","2, 1, 1, 1, 1","For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, could you order by the Y in desc?"
"SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY count(*) DESC",Bar,Hard,gas_company,"{'chart': 'bar', 'x_name': 'Company', 'y_name': 'count(*)', 'x_data': [['ExxonMobil', 'Royal Dutch Shell', 'Petrobras', 'PetroChina', 'BP']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Company,count(*),"ExxonMobil, Royal Dutch Shell, Petrobras, PetroChina, BP","2, 1, 1, 1, 1","Show the company name with the number of gas station Show bar chart, rank in descending by the y-axis please."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","How many companies in each headquarter? Plot a bar chart, and I want to sort from low to high by the x-axis."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","Show the number of companies in each headquarter with a bar chart, and show x-axis in ascending order."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'China', 'Netherlands', 'UK', 'USA']], 'y_data': [[1, 2, 1, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, China, Netherlands, UK, USA","1, 2, 1, 2, 4","Bar chart of how many headquarters from each headquarters, list names in asc order."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","Show the number of companies in each headquarter with a bar chart, and list by the Headquarters from high to low."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","How many companies in each headquarter? Plot a bar chart, I want to order in descending by the Headquarters please."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'Netherlands', 'China', 'Brazil']], 'y_data': [[4, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, Netherlands, China, Brazil","4, 2, 1, 2, 1","Bar chart of how many headquarters from each headquarters, order from high to low by the bars."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","Show the number of companies in each headquarter with a bar chart, show y-axis from low to high order please."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","How many companies in each headquarter? Plot a bar chart, could you order in ascending by the y-axis please?"
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) ASC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['Brazil', 'Netherlands', 'China', 'UK', 'USA']], 'y_data': [[1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"Brazil, Netherlands, China, UK, USA","1, 1, 2, 2, 4","Bar chart of how many headquarters from each headquarters, and list in ascending by the y axis."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","Bar chart of how many headquarters from each headquarters, could you sort from high to low by the Y-axis?"
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","Show the number of companies in each headquarter with a bar chart, and order by the the number of headquarters in desc."
"SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY COUNT(Headquarters) DESC",Bar,Medium,gas_company,"{'chart': 'bar', 'x_name': 'Headquarters', 'y_name': 'COUNT(Headquarters)', 'x_data': [['USA', 'UK', 'China', 'Netherlands', 'Brazil']], 'y_data': [[4, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Headquarters'}",bar,Headquarters,COUNT(Headquarters),"USA, UK, China, Netherlands, Brazil","4, 2, 2, 1, 1","How many companies in each headquarter? Plot a bar chart, and could you sort from high to low by the Y-axis?"
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","3, 3, 2","Give me a histogram for how many events are there for each party?, and display by the bars in asc."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","3, 3, 2","Return a bar chart on how many events are there for each party?, and display by the bars in asc."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","3, 3, 2","Show party names and the number of events for each party in a bar chart, and list by the X-axis in asc."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","3, 3, 2","How many events are there for each party, and show in asc by the x axis."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","3, 3, 2","Show party names and the number of events for each party, and rank Party_name in asc order."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","2, 3, 3","Show party names and the number of events for each party in a bar chart, could you order by the x axis from high to low?"
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","2, 3, 3","How many events are there for each party, show by the x-axis from high to low."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","2, 3, 3","Return a bar chart on how many events are there for each party?, and could you order by the x axis from high to low?"
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","2, 3, 3","Give me a histogram for how many events are there for each party?, could you order by the x axis from high to low?"
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","2, 3, 3","Show party names and the number of events for each party, list x axis in descending order."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', '3', 'Convention Peoples Party']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, 3, Convention Peoples Party","2, 3, 3","Show party names and the number of events for each party, and show in ascending by the Y-axis."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', '3', 'Convention Peoples Party']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, 3, Convention Peoples Party","2, 3, 3","Give me a histogram for how many events are there for each party?, and show in ascending by the Y-axis."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', '3', 'Convention Peoples Party']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, 3, Convention Peoples Party","2, 3, 3","Return a bar chart on how many events are there for each party?, could you display by the Y-axis in asc?"
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', '3', 'Convention Peoples Party']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, 3, Convention Peoples Party","2, 3, 3","Show party names and the number of events for each party in a bar chart, I want to sort in asc by the Y."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', '3', 'Convention Peoples Party']], 'y_data': [[2, 3, 3]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, 3, Convention Peoples Party","2, 3, 3","How many events are there for each party, and sort in asc by the the total number ."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', '3', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, 3, Progress Party","3, 3, 2","Show party names and the number of events for each party in a bar chart, show in descending by the y-axis."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', '3', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, 3, Progress Party","3, 3, 2","How many events are there for each party, order by the the total number in desc please."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', '3', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, 3, Progress Party","3, 3, 2","Show party names and the number of events for each party, order by the the total number in desc please."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', '3', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, 3, Progress Party","3, 3, 2","Return a bar chart on how many events are there for each party?, and order in descending by the y axis."
"SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', '3', 'Progress Party']], 'y_data': [[3, 3, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, 3, Progress Party","3, 3, 2","Give me a histogram for how many events are there for each party?, and list by the total number in descending."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[9, 2, 4]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","9, 2, 4","Show all party names and the number of members in each party with a bar chart, rank by the Party_name from low to high please."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[9, 2, 4]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","9, 2, 4","Show all party names and the number of members in each party Show bar chart, and rank by the names from low to high please."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[9, 2, 4]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","9, 2, 4","Return a bar chart on how many members are in each party?, rank by the Party_name in asc please."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[9, 2, 4]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","9, 2, 4","Give me a histogram for how many members are in each party?, and rank from low to high by the bar."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Convention Peoples Party', 'Progress Party']], 'y_data': [[9, 2, 4]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Convention Peoples Party, Progress Party","9, 2, 4","How many members are in each party Show bar chart, rank by the Party_name from low to high please."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[4, 2, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","4, 2, 9","Show all party names and the number of members in each party with a bar chart, and list in desc by the bars."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[4, 2, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","4, 2, 9","Give me a histogram for how many members are in each party?, and I want to order in descending by the X."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[4, 2, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","4, 2, 9","Show all party names and the number of members in each party Show bar chart, show by the X-axis in desc."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[4, 2, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","4, 2, 9","Return a bar chart on how many members are in each party?, and display by the X in desc."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Progress Party', 'Convention Peoples Party', '3']], 'y_data': [[4, 2, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Progress Party, Convention Peoples Party, 3","4, 2, 9","How many members are in each party Show bar chart, show X-axis from high to low order."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9","Show all party names and the number of members in each party Show bar chart, and order the total number in ascending order."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9","Return a bar chart on how many members are in each party?, rank in asc by the y axis."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9","Show all party names and the number of members in each party with a bar chart, rank in asc by the y axis."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9","How many members are in each party Show bar chart, and rank by the the total number in asc."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['Convention Peoples Party', 'Progress Party', '3']], 'y_data': [[2, 4, 9]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"Convention Peoples Party, Progress Party, 3","2, 4, 9","Give me a histogram for how many members are in each party?, display by the Y from low to high."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Progress Party', 'Convention Peoples Party']], 'y_data': [[9, 4, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Progress Party, Convention Peoples Party","9, 4, 2","Give me a histogram for how many members are in each party?, and could you list by the y-axis from high to low?"
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Progress Party', 'Convention Peoples Party']], 'y_data': [[9, 4, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Progress Party, Convention Peoples Party","9, 4, 2","How many members are in each party Show bar chart, and rank in desc by the y-axis."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Progress Party', 'Convention Peoples Party']], 'y_data': [[9, 4, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Progress Party, Convention Peoples Party","9, 4, 2","Return a bar chart on how many members are in each party?, could you list by the y-axis from high to low?"
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Progress Party', 'Convention Peoples Party']], 'y_data': [[9, 4, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Progress Party, Convention Peoples Party","9, 4, 2","Show all party names and the number of members in each party with a bar chart, and rank in desc by the y-axis."
"SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Party_name', 'y_name': 'count(*)', 'x_data': [['3', 'Progress Party', 'Convention Peoples Party']], 'y_data': [[9, 4, 2]], 'classify': [], 'describe': ''}",bar,Party_name,count(*),"3, Progress Party, Convention Peoples Party","9, 4, 2","Show all party names and the number of members in each party Show bar chart, and rank in desc by the y-axis."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Which ministers are not a part of the Progress Party, and count them by a bar chart, list by the Minister from low to high."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP)","1, 2, 1","Show all ministers who do not belong to Progress Party, and count them by a bar chart, rank in asc by the bars."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 2, 1","Show all ministers who do not belong to Progress Party, and count them by a bar chart, sort by the x-axis from high to low."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY Minister DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 2, 1","Which ministers are not a part of the Progress Party, and count them by a bar chart, and I want to order by the x-axis from high to low."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP)","1, 1, 2","Show all ministers who do not belong to Progress Party, and count them by a bar chart, and order in asc by the Y."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP)","1, 1, 2","Which ministers are not a part of the Progress Party, and count them by a bar chart, order in asc by the Y."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1","Which ministers are not a part of the Progress Party, and count them by a bar chart, I want to show Y-axis from high to low order."
"SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Hard,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1","Show all ministers who do not belong to Progress Party, and count them by a bar chart, and could you show total number from high to low order?"
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1","Plot how many minister by grouped by minister as a bar graph, and order by the Minister in ascending."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1","Give me a bar chart showing the total number of each minister, and show by the x-axis in asc."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Kojo Botsio (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 1, 2, 1","Plot how many minister by grouped by minister as a bar graph, and rank by the bar from high to low."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Kojo Botsio (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 1, 2, 1","Give me a bar chart showing the total number of each minister, display by the bars in desc please."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Kojo Botsio (MP), Ebenezer Ako-Adjei (MP)","1, 1, 1, 2","Plot how many minister by grouped by minister as a bar graph, display y-axis in ascending order."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Kojo Botsio (MP), Ebenezer Ako-Adjei (MP)","1, 1, 1, 2","Give me a bar chart showing the total number of each minister, I want to list in asc by the total number."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Kojo Botsio (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1, 1","Plot how many minister by grouped by minister as a bar graph, and list in desc by the y axis."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Kojo Botsio (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1, 1","Give me a bar chart showing the total number of each minister, and sort y axis in descending order please."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1958', '1960', '1959', '1961', '1957']], 'y_data': [[1, 1, 1, 1, 2], [1, 1, 2, 2, 2], [1, 2, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1958, 1960, 1959, 1961, 1957","1, 1, 1, 1, 2","How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name, rank by the the number of took office from low to high."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1958', '1960', '1959', '1961', '1957']], 'y_data': [[1, 1, 1, 1, 2], [1, 1, 2, 2, 2], [1, 2, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1958, 1960, 1959, 1961, 1957","1, 1, 1, 1, 2","Stack bar chart of how many took office vs Minister based on took office, and could you sort by the y axis from low to high?"
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1957', '1961', '1959', '1960', '1958']], 'y_data': [[2, 1, 1, 1, 1], [2, 2, 2, 1, 1], [2, 2, 2, 2, 1], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1957, 1961, 1959, 1960, 1958","2, 1, 1, 1, 1","How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name, and sort Y in desc order."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['1957', '1961', '1959', '1960', '1958']], 'y_data': [[2, 1, 1, 1, 1], [2, 2, 2, 1, 1], [2, 2, 2, 2, 1], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY YEAR'}",bar,Took_office,COUNT(Took_office),"1957, 1961, 1959, 1960, 1958","2, 1, 1, 1, 1","Stack bar chart of how many took office vs Minister based on took office, list by the y-axis from high to low please."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1959', '1961', '1960', '1962', '1958']], 'y_data': [[1, 1, 1, 1, 2], [1, 1, 2, 2, 2], [1, 2, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1959, 1961, 1960, 1962, 1958","1, 1, 1, 1, 2","How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, I want to display in ascending by the Y."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1959', '1961', '1960', '1962', '1958']], 'y_data': [[1, 1, 1, 1, 2], [1, 1, 2, 2, 2], [1, 2, 2, 2, 2], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1959, 1961, 1960, 1962, 1958","1, 1, 1, 1, 2","Stacked bar chart of the number of left office for with each Minister in each left office, could you display in asc by the y-axis?"
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1958', '1962', '1960', '1961', '1959']], 'y_data': [[2, 1, 1, 1, 1], [2, 2, 2, 1, 1], [2, 2, 2, 2, 1], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1958, 1962, 1960, 1961, 1959","2, 1, 1, 1, 1","Stacked bar chart of the number of left office for with each Minister in each left office, list the number of left office in desc order."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['1958', '1962', '1960', '1961', '1959']], 'y_data': [[2, 1, 1, 1, 1], [2, 2, 2, 1, 1], [2, 2, 2, 2, 1], [2, 2, 2, 2, 2]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY YEAR'}",bar,Left_office,COUNT(Left_office),"1958, 1962, 1960, 1961, 1959","2, 1, 1, 1, 1","How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, sort in desc by the y-axis."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Sat', 'Fri', 'Sun', 'Thur', 'Tue', 'Wed']], 'y_data': [[0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Sat, Fri, Sun, Thur, Tue, Wed","0, 0, 0, 0, 0, 0, 1","Stacked bar of took office and how many took office colored by Minister, and sort Y from low to high order."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Sat', 'Fri', 'Sun', 'Thur', 'Tue', 'Wed']], 'y_data': [[0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Sat, Fri, Sun, Thur, Tue, Wed","0, 0, 0, 0, 0, 0, 1","How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, list in ascending by the how many took office."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Wed', 'Tue', 'Thur', 'Sun', 'Fri', 'Sat', 'Mon']], 'y_data': [[1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Wed, Tue, Thur, Sun, Fri, Sat, Mon","1, 0, 0, 0, 0, 0, 0","Stacked bar of took office and how many took office colored by Minister, and display by the Y-axis in descending."
"SELECT Took_office , COUNT(Took_office) FROM party GROUP BY Minister ORDER BY COUNT(Took_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Wed', 'Tue', 'Thur', 'Sun', 'Fri', 'Sat', 'Mon']], 'y_data': [[1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Wed, Tue, Thur, Sun, Fri, Sat, Mon","1, 0, 0, 0, 0, 0, 0","How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, and show y axis from high to low order."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Sat', 'Tue', 'Fri', 'Mon', 'Sun', 'Wed', 'Thur']], 'y_data': [[0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Sat, Tue, Fri, Mon, Sun, Wed, Thur","0, 0, 0, 0, 0, 0, 1","How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name, and display in ascending by the Y-axis."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) ASC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Sat', 'Tue', 'Fri', 'Mon', 'Sun', 'Wed', 'Thur']], 'y_data': [[0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Sat, Tue, Fri, Mon, Sun, Wed, Thur","0, 0, 0, 0, 0, 0, 1","Stacked bar chart of the number of left office for with each Minister in each left office, and I want to list Y in asc order."
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Thur', 'Wed', 'Sun', 'Mon', 'Fri', 'Tue', 'Sat']], 'y_data': [[1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Thur, Wed, Sun, Mon, Fri, Tue, Sat","1, 0, 0, 0, 0, 0, 0","Stacked bar chart of the number of left office for with each Minister in each left office, could you sort by the Y in descending please?"
"SELECT Left_office , COUNT(Left_office) FROM party GROUP BY Minister ORDER BY COUNT(Left_office) DESC",Stacked Bar,Extra Hard,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Thur', 'Wed', 'Sun', 'Mon', 'Fri', 'Tue', 'Sat']], 'y_data': [[1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 'classify': ['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)'], 'describe': 'GROUP BY Minister, BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Thur, Wed, Sun, Mon, Fri, Tue, Sat","1, 0, 0, 0, 0, 0, 0","How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name, and rank by the how many left office in descending."
"SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Sat', 'Fri', 'Sun', 'Thur', 'Tue', 'Wed']], 'y_data': [[0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Sat, Fri, Sun, Thur, Tue, Wed","0, 0, 1, 1, 1, 1, 1","How many parties of the time they took office, binning the took office into WEEKDAY interval, could you rank y-axis in ascending order?"
"SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Mon', 'Sat', 'Fri', 'Sun', 'Thur', 'Tue', 'Wed']], 'y_data': [[0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Mon, Sat, Fri, Sun, Thur, Tue, Wed","0, 0, 1, 1, 1, 1, 1","Bar graph to show the number of took office from different took office, and show by the Y in ascending."
"SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Wed', 'Tue', 'Thur', 'Sun', 'Fri', 'Sat', 'Mon']], 'y_data': [[1, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Wed, Tue, Thur, Sun, Fri, Sat, Mon","1, 1, 1, 1, 1, 0, 0","How many parties of the time they took office, binning the took office into WEEKDAY interval, I want to show by the Y-axis in descending."
"SELECT Took_office , COUNT(Took_office) FROM party  ORDER BY COUNT(Took_office) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Took_office', 'y_name': 'COUNT(Took_office)', 'x_data': [['Wed', 'Tue', 'Thur', 'Sun', 'Fri', 'Sat', 'Mon']], 'y_data': [[1, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Took_office BY WEEKDAY'}",bar,Took_office,COUNT(Took_office),"Wed, Tue, Thur, Sun, Fri, Sat, Mon","1, 1, 1, 1, 1, 0, 0","Bar graph to show the number of took office from different took office, I want to sort in desc by the Y please."
"SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Sat', 'Tue', 'Fri', 'Mon', 'Sun', 'Thur', 'Wed']], 'y_data': [[0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Sat, Tue, Fri, Mon, Sun, Thur, Wed","0, 0, 1, 1, 1, 1, 1","Bar chart x axis left office y axis the number of left office, show total number from low to high order."
"SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Sat', 'Tue', 'Fri', 'Mon', 'Sun', 'Thur', 'Wed']], 'y_data': [[0, 0, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Sat, Tue, Fri, Mon, Sun, Thur, Wed","0, 0, 1, 1, 1, 1, 1","How many parties of the time they leave office, binning the leave office into WEEKDAY interval, show by the y-axis in ascending."
"SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Wed', 'Thur', 'Sun', 'Mon', 'Fri', 'Tue', 'Sat']], 'y_data': [[1, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Wed, Thur, Sun, Mon, Fri, Tue, Sat","1, 1, 1, 1, 1, 0, 0","Bar chart x axis left office y axis the number of left office, order by the total number in descending."
"SELECT Left_office , COUNT(Left_office) FROM party  ORDER BY COUNT(Left_office) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Left_office', 'y_name': 'COUNT(Left_office)', 'x_data': [['Wed', 'Thur', 'Sun', 'Mon', 'Fri', 'Tue', 'Sat']], 'y_data': [[1, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Left_office BY WEEKDAY'}",bar,Left_office,COUNT(Left_office),"Wed, Thur, Sun, Mon, Fri, Tue, Sat","1, 1, 1, 1, 1, 0, 0","How many parties of the time they leave office, binning the leave office into WEEKDAY interval, display by the how many left office in descending please."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1","Compare the total number of each minister using a bar graph, and list by the X in ascending."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Ebenezer Ako-Adjei (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Ebenezer Ako-Adjei (MP), Imoru Egala (MP), Kojo Botsio (MP)","1, 2, 1, 1","Bar chart x axis minister y axis how many minister, list names from low to high order."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Kojo Botsio (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 1, 2, 1","Compare the total number of each minister using a bar graph, rank in descending by the x-axis."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY Minister DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Ebenezer Ako-Adjei (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Kojo Botsio (MP), Imoru Egala (MP), Ebenezer Ako-Adjei (MP), Dr. Kwame Nkrumah (MP)","1, 1, 2, 1","Bar chart x axis minister y axis how many minister, could you sort by the X-axis in descending?"
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Kojo Botsio (MP), Ebenezer Ako-Adjei (MP)","1, 1, 1, 2","Compare the total number of each minister using a bar graph, list the number of minister in ascending order."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) ASC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Dr. Kwame Nkrumah (MP)', 'Imoru Egala (MP)', 'Kojo Botsio (MP)', 'Ebenezer Ako-Adjei (MP)']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Dr. Kwame Nkrumah (MP), Imoru Egala (MP), Kojo Botsio (MP), Ebenezer Ako-Adjei (MP)","1, 1, 1, 2","Bar chart x axis minister y axis how many minister, and rank by the total number in ascending."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Kojo Botsio (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1, 1","Compare the total number of each minister using a bar graph, display by the total number in descending."
"SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister ORDER BY COUNT(Minister) DESC",Bar,Medium,party_people,"{'chart': 'bar', 'x_name': 'Minister', 'y_name': 'COUNT(Minister)', 'x_data': [['Ebenezer Ako-Adjei (MP)', 'Kojo Botsio (MP)', 'Imoru Egala (MP)', 'Dr. Kwame Nkrumah (MP)']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Minister'}",bar,Minister,COUNT(Minister),"Ebenezer Ako-Adjei (MP), Kojo Botsio (MP), Imoru Egala (MP), Dr. Kwame Nkrumah (MP)","2, 1, 1, 1","Bar chart x axis minister y axis how many minister, display the number of minister in descending order."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","How many templates for each template type code? Show a bar chart, rank in asc by the names."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Show the number of template type code from each template type code, and rank by the bars from low to high."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Return a bar chart showing the number of templates for each template type code, and sort by the bars from low to high."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","How many templates for each template type code? Show a bar chart, and sort from high to low by the bars please."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Return a bar chart showing the number of templates for each template type code, and list X-axis in desc order."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Show the number of template type code from each template type code, sort from high to low by the bars please."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Show the number of template type code from each template type code, I want to sort in ascending by the Y-axis please."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Return a bar chart showing the number of templates for each template type code, and I want to order in asc by the y-axis."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","How many templates for each template type code? Show a bar chart, and could you list by the the number of template type code from low to high?"
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Return a bar chart showing the number of templates for each template type code, and could you display in descending by the total number?"
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Show the number of template type code from each template type code, and rank in desc by the y-axis."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","How many templates for each template type code? Show a bar chart, rank by the the number of template type code in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","Show all template type codes and the number of documents using each type Visualize by bar chart, rank Template_Type_Code in asc order."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","Show all template type codes and the number of documents using each type with a bar chart, and sort by the x-axis in ascending."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","What are the different template type codes, and how many documents use each type Plot them as bar chart, list X-axis from low to high order."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","A bar chart about what are the different template type codes, and how many documents use each type?, display from low to high by the Template_Type_Code."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'PP', 'PPT']], 'y_data': [[3, 5, 4, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, PP, PPT","3, 5, 4, 3","what are the different template type codes, and how many documents use each type?, and rank in ascending by the Template_Type_Code."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'BK', 'AD']], 'y_data': [[3, 4, 5, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, BK, AD","3, 4, 5, 3","Show all template type codes and the number of documents using each type with a bar chart, display by the x axis in descending."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'BK', 'AD']], 'y_data': [[3, 4, 5, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, BK, AD","3, 4, 5, 3","Show all template type codes and the number of documents using each type Visualize by bar chart, list in descending by the x axis."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'BK', 'AD']], 'y_data': [[3, 4, 5, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, BK, AD","3, 4, 5, 3","What are the different template type codes, and how many documents use each type Plot them as bar chart, and show by the bar from high to low."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'BK', 'AD']], 'y_data': [[3, 4, 5, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, BK, AD","3, 4, 5, 3","what are the different template type codes, and how many documents use each type?, and display by the x axis in descending."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'BK', 'AD']], 'y_data': [[3, 4, 5, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, BK, AD","3, 4, 5, 3","A bar chart about what are the different template type codes, and how many documents use each type?, order by the x axis in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'PPT', 'PP', 'BK']], 'y_data': [[3, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, PPT, PP, BK","3, 3, 4, 5","Show all template type codes and the number of documents using each type Visualize by bar chart, and could you display in asc by the y-axis?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'PPT', 'PP', 'BK']], 'y_data': [[3, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, PPT, PP, BK","3, 3, 4, 5","What are the different template type codes, and how many documents use each type Plot them as bar chart, and could you order y axis from low to high order please?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'PPT', 'PP', 'BK']], 'y_data': [[3, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, PPT, PP, BK","3, 3, 4, 5","Show all template type codes and the number of documents using each type with a bar chart, list from low to high by the Y please."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'PPT', 'PP', 'BK']], 'y_data': [[3, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, PPT, PP, BK","3, 3, 4, 5","A bar chart about what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'PPT', 'PP', 'BK']], 'y_data': [[3, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, PPT, PP, BK","3, 3, 4, 5","what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?"
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'PPT', 'AD']], 'y_data': [[5, 4, 3, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"BK, PP, PPT, AD","5, 4, 3, 3","what are the different template type codes, and how many documents use each type?, and I want to list by the Y-axis in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'PPT', 'AD']], 'y_data': [[5, 4, 3, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"BK, PP, PPT, AD","5, 4, 3, 3","Show all template type codes and the number of documents using each type with a bar chart, rank by the the total number in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'PPT', 'AD']], 'y_data': [[5, 4, 3, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"BK, PP, PPT, AD","5, 4, 3, 3","A bar chart about what are the different template type codes, and how many documents use each type?, I want to list by the Y-axis in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'PPT', 'AD']], 'y_data': [[5, 4, 3, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"BK, PP, PPT, AD","5, 4, 3, 3","What are the different template type codes, and how many documents use each type Plot them as bar chart, I want to list by the Y-axis in desc."
"SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['BK', 'PP', 'PPT', 'AD']], 'y_data': [[5, 4, 3, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"BK, PP, PPT, AD","5, 4, 3, 3","Show all template type codes and the number of documents using each type Visualize by bar chart, display total number in desc order please."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, and I want to list by the bar in asc."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and I want to list by the bar in asc."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","Show all paragraph texts for the document ""Customer reviews"", and count them by a bar chart, I want to sort in asc by the x axis."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, could you list by the x-axis in asc?"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and show by the X in descending."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, rank by the x-axis from high to low."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and order names in desc order."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY Paragraph_Text DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","Show all paragraph texts for the document ""Customer reviews"", and count them by a bar chart, and show Paragraph_Text from high to low order."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, list by the y-axis in ascending."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display by the how many paragraph text from low to high."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, I want to sort in asc by the Y-axis please."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) ASC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Ukraine', 'Korea']], 'y_data': [[1, 2]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Ukraine, Korea","1, 2","Show all paragraph texts for the document ""Customer reviews"", and count them by a bar chart, and I want to sort in asc by the Y-axis please."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display Y in desc order."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, and list by the total number from high to low."
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","Show all paragraph texts for the document ""Customer reviews"", and count them by a bar chart, could you display in descending by the y-axis?"
"SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews"" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",Bar,Extra Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Paragraph_Text', 'y_name': 'COUNT(Paragraph_Text)', 'x_data': [['Korea', 'Ukraine']], 'y_data': [[2, 1]], 'classify': [], 'describe': 'GROUP BY Paragraph_Text'}",bar,Paragraph_Text,COUNT(Paragraph_Text),"Korea, Ukraine","2, 1","What are the number of the paragraph texts for the document with the name 'Customer reviews'?, could you list in desc by the Y please?"
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['A history of Arts', 'About Korea', 'Customer reviews', 'Do not panic', 'How Google people work', 'How to write a CV', 'Learning French', 'Palm reading', 'Summer Show', 'Welcome to NY']], 'y_data': [[2, 1, 3, 1, 1, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"A history of Arts, About Korea, Customer reviews, Do not panic, How Google people work, How to write a CV, Learning French, Palm reading, Summer Show, Welcome to NY","2, 1, 3, 1, 1, 2, 1, 1, 1, 2","What is the number of documents for each document name? Return a bar chart, I want to order names in ascending order."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['A history of Arts', 'About Korea', 'Customer reviews', 'Do not panic', 'How Google people work', 'How to write a CV', 'Learning French', 'Palm reading', 'Summer Show', 'Welcome to NY']], 'y_data': [[2, 1, 3, 1, 1, 2, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"A history of Arts, About Korea, Customer reviews, Do not panic, How Google people work, How to write a CV, Learning French, Palm reading, Summer Show, Welcome to NY","2, 1, 3, 1, 1, 2, 1, 1, 1, 2","Show the number of documents for each document name in a bar chart, and I want to order names in ascending order."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Welcome to NY', 'Summer Show', 'Palm reading', 'Learning French', 'How to write a CV', 'How Google people work', 'Do not panic', 'Customer reviews', 'About Korea', 'A history of Arts']], 'y_data': [[2, 1, 1, 1, 2, 1, 1, 3, 1, 2]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Welcome to NY, Summer Show, Palm reading, Learning French, How to write a CV, How Google people work, Do not panic, Customer reviews, About Korea, A history of Arts","2, 1, 1, 1, 2, 1, 1, 3, 1, 2","What is the number of documents for each document name? Return a bar chart, and display by the names in descending please."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY Document_Name DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Welcome to NY', 'Summer Show', 'Palm reading', 'Learning French', 'How to write a CV', 'How Google people work', 'Do not panic', 'Customer reviews', 'About Korea', 'A history of Arts']], 'y_data': [[2, 1, 1, 1, 2, 1, 1, 3, 1, 2]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Welcome to NY, Summer Show, Palm reading, Learning French, How to write a CV, How Google people work, Do not panic, Customer reviews, About Korea, A history of Arts","2, 1, 1, 1, 2, 1, 1, 3, 1, 2","Show the number of documents for each document name in a bar chart, and list from high to low by the X-axis please."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['About Korea', 'Do not panic', 'How Google people work', 'Learning French', 'Palm reading', 'Summer Show', 'A history of Arts', 'How to write a CV', 'Welcome to NY', 'Customer reviews']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"About Korea, Do not panic, How Google people work, Learning French, Palm reading, Summer Show, A history of Arts, How to write a CV, Welcome to NY, Customer reviews","1, 1, 1, 1, 1, 1, 2, 2, 2, 3","What is the number of documents for each document name? Return a bar chart, display by the y-axis in ascending."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['About Korea', 'Do not panic', 'How Google people work', 'Learning French', 'Palm reading', 'Summer Show', 'A history of Arts', 'How to write a CV', 'Welcome to NY', 'Customer reviews']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"About Korea, Do not panic, How Google people work, Learning French, Palm reading, Summer Show, A history of Arts, How to write a CV, Welcome to NY, Customer reviews","1, 1, 1, 1, 1, 1, 2, 2, 2, 3","Show the number of documents for each document name in a bar chart, could you display in ascending by the the total number please?"
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Customer reviews', 'Welcome to NY', 'How to write a CV', 'A history of Arts', 'Summer Show', 'Palm reading', 'Learning French', 'How Google people work', 'Do not panic', 'About Korea']], 'y_data': [[3, 2, 2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Customer reviews, Welcome to NY, How to write a CV, A history of Arts, Summer Show, Palm reading, Learning French, How Google people work, Do not panic, About Korea","3, 2, 2, 2, 1, 1, 1, 1, 1, 1","Show the number of documents for each document name in a bar chart, order by the Y-axis from high to low."
"SELECT Document_Name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Name', 'y_name': 'count(*)', 'x_data': [['Customer reviews', 'Welcome to NY', 'How to write a CV', 'A history of Arts', 'Summer Show', 'Palm reading', 'Learning French', 'How Google people work', 'Do not panic', 'About Korea']], 'y_data': [[3, 2, 2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Document_Name,count(*),"Customer reviews, Welcome to NY, How to write a CV, A history of Arts, Summer Show, Palm reading, Learning French, How Google people work, Do not panic, About Korea","3, 2, 2, 2, 1, 1, 1, 1, 1, 1","What is the number of documents for each document name? Return a bar chart, display by the the total number in descending please."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, I want to sort from low to high by the x axis."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and I want to display X-axis in asc order."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Show all template type codes and number of templates for each with a bar chart, I want to list by the X-axis from low to high."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Return a bar chart on what are the different template type codes, and how many templates correspond to each?, order from low to high by the X."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Show all template type codes and number of templates for each Visualize by bar chart, and I want to sort from low to high by the x axis."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"AD, BK, CV, PP, PPT","3, 6, 2, 6, 3","Show me the total number by template type code in a histogram, sort by the X in ascending."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and could you show in desc by the x axis?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Show all template type codes and number of templates for each Visualize by bar chart, order X-axis in descending order."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and list by the Template_Type_Code in descending."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Show me the total number by template type code in a histogram, and list by the Template_Type_Code in descending."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and order from high to low by the x-axis please."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[3, 6, 2, 6, 3]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PPT, PP, CV, BK, AD","3, 6, 2, 6, 3","Show all template type codes and number of templates for each with a bar chart, order from high to low by the x-axis please."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","What are the different template type codes, and how many templates correspond to each Plot them as bar chart, could you rank in ascending by the Y-axis please?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Show all template type codes and number of templates for each Visualize by bar chart, I want to list in ascending by the Y-axis please."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and display by the Y in ascending."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Show all template type codes and number of templates for each with a bar chart, and I want to list in ascending by the Y-axis please."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and order by the the total number in ascending."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['CV', 'AD', 'PPT', 'BK', 'PP']], 'y_data': [[2, 3, 3, 6, 6]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"CV, AD, PPT, BK, PP","2, 3, 3, 6, 6","Show me the total number by template type code in a histogram, and display from low to high by the Y."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Show all template type codes and number of templates for each with a bar chart, could you list Y-axis in descending order please?"
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and I want to show by the y axis in desc."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and I want to sort by the Y from high to low."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Show all template type codes and number of templates for each Visualize by bar chart, show Y-axis in descending order."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","Show me the total number by template type code in a histogram, and list y-axis from high to low order."
"SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'count(*)', 'x_data': [['PP', 'BK', 'PPT', 'AD', 'CV']], 'y_data': [[6, 6, 3, 3, 2]], 'classify': [], 'describe': ''}",bar,Template_Type_Code,count(*),"PP, BK, PPT, AD, CV","6, 6, 3, 3, 2","What are the different template type codes, and how many templates correspond to each Plot them as bar chart, I want to show by the y axis in desc."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1","How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to sort by the bars in asc."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'BK', 'CV', 'PP', 'PPT']], 'y_data': [[3, 2, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, BK, CV, PP, PPT","3, 2, 1, 2, 1","Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and rank in ascending by the names."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[1, 2, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PPT, PP, CV, BK, AD","1, 2, 1, 2, 3","Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, display from high to low by the X."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY Template_Type_Code DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['PPT', 'PP', 'CV', 'BK', 'AD']], 'y_data': [[1, 2, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"PPT, PP, CV, BK, AD","1, 2, 1, 2, 3","How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to display in desc by the X-axis."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['CV', 'PPT', 'BK', 'PP', 'AD']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"CV, PPT, BK, PP, AD","1, 1, 2, 2, 3","Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and order y-axis in ascending order."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['CV', 'PPT', 'BK', 'PP', 'AD']], 'y_data': [[1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"CV, PPT, BK, PP, AD","1, 1, 2, 2, 3","How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to rank in ascending by the Y."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'PP', 'BK', 'PPT', 'CV']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, PP, BK, PPT, CV","3, 2, 2, 1, 1","Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and I want to rank by the y-axis from high to low."
"SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",Bar,Hard,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Template_Type_Code', 'y_name': 'COUNT(Template_Type_Code)', 'x_data': [['AD', 'PP', 'BK', 'PPT', 'CV']], 'y_data': [[3, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Template_Type_Code'}",bar,Template_Type_Code,COUNT(Template_Type_Code),"AD, PP, BK, PPT, CV","3, 2, 2, 1, 1","How many templates with version number later than 5 for each template type code? Show me a bar chart, and order by the y axis in descending."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'h', 'k', 'n', 'r', 'w', 'y', 'z']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, h, k, n, r, w, y, z","1, 1, 1, 2, 1, 1, 1, 2, 4, 1","Bar chart x axis document description y axis how many document description, and list bars in ascending order please."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'h', 'k', 'n', 'r', 'w', 'y', 'z']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, h, k, n, r, w, y, z","1, 1, 1, 2, 1, 1, 1, 2, 4, 1","How many documents for each document description? Show me a bar chart, and could you display x-axis in asc order please?"
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'h', 'k', 'n', 'r', 'w', 'y', 'z']], 'y_data': [[1, 1, 1, 2, 1, 1, 1, 2, 4, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, h, k, n, r, w, y, z","1, 1, 1, 2, 1, 1, 1, 2, 4, 1","List the number of documents for each document description in a bar chart, and I want to sort by the bars from low to high."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['z', 'y', 'w', 'r', 'n', 'k', 'h', 'f', 'b', '']], 'y_data': [[1, 4, 2, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"z, y, w, r, n, k, h, f, b, ","1, 4, 2, 1, 1, 1, 2, 1, 1, 1","List the number of documents for each document description in a bar chart, order from high to low by the x-axis."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['z', 'y', 'w', 'r', 'n', 'k', 'h', 'f', 'b', '']], 'y_data': [[1, 4, 2, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"z, y, w, r, n, k, h, f, b, ","1, 4, 2, 1, 1, 1, 2, 1, 1, 1","How many documents for each document description? Show me a bar chart, and rank bars from high to low order."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY Document_Description DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['z', 'y', 'w', 'r', 'n', 'k', 'h', 'f', 'b', '']], 'y_data': [[1, 4, 2, 1, 1, 1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"z, y, w, r, n, k, h, f, b, ","1, 4, 2, 1, 1, 1, 2, 1, 1, 1","Bar chart x axis document description y axis how many document description, list bar in desc order."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'k', 'n', 'r', 'z', 'h', 'w', 'y']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, k, n, r, z, h, w, y","1, 1, 1, 1, 1, 1, 1, 2, 2, 4","Bar chart x axis document description y axis how many document description, and display in ascending by the total number."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'k', 'n', 'r', 'z', 'h', 'w', 'y']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, k, n, r, z, h, w, y","1, 1, 1, 1, 1, 1, 1, 2, 2, 4","List the number of documents for each document description in a bar chart, display the number of document description in asc order."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['', 'b', 'f', 'k', 'n', 'r', 'z', 'h', 'w', 'y']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 4]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),", b, f, k, n, r, z, h, w, y","1, 1, 1, 1, 1, 1, 1, 2, 2, 4","How many documents for each document description? Show me a bar chart, list total number in ascending order."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['y', 'w', 'h', 'z', 'r', 'n', 'k', 'f', 'b', '']], 'y_data': [[4, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"y, w, h, z, r, n, k, f, b, ","4, 2, 2, 1, 1, 1, 1, 1, 1, 1","How many documents for each document description? Show me a bar chart, I want to sort in descending by the the number of document description."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['y', 'w', 'h', 'z', 'r', 'n', 'k', 'f', 'b', '']], 'y_data': [[4, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"y, w, h, z, r, n, k, f, b, ","4, 2, 2, 1, 1, 1, 1, 1, 1, 1","List the number of documents for each document description in a bar chart, I want to sort in descending by the the number of document description."
"SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) DESC",Bar,Medium,cre_Doc_Template_Mgt,"{'chart': 'bar', 'x_name': 'Document_Description', 'y_name': 'COUNT(Document_Description)', 'x_data': [['y', 'w', 'h', 'z', 'r', 'n', 'k', 'f', 'b', '']], 'y_data': [[4, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Document_Description'}",bar,Document_Description,COUNT(Document_Description),"y, w, h, z, r, n, k, f, b, ","4, 2, 2, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis document description y axis how many document description, and could you rank total number in descending order?"
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","Return a bar chart on how many movie reviews does each director get?, and order in asc by the bars."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","How many movie reviews does each director get Show bar chart, and order x axis from low to high order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","Show me a bar chart for how many movie reviews does each director get?, and order bars in ascending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[2, 2, 2, 5, 3]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","2, 2, 2, 5, 3","For each director, how many reviews have they received Visualize by bar chart, and order in asc by the names."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[3, 5, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","3, 5, 2, 2, 2","Show me a bar chart for how many movie reviews does each director get?, show in desc by the bar."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[3, 5, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","3, 5, 2, 2, 2","For each director, how many reviews have they received Visualize by bar chart, order bar in desc order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[3, 5, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","3, 5, 2, 2, 2","How many movie reviews does each director get Show bar chart, and could you sort in desc by the X-axis?"
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[3, 5, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","3, 5, 2, 2, 2","Return a bar chart on how many movie reviews does each director get?, sort director in descending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Victor Fleming', 'Steven Spielberg']], 'y_data': [[2, 2, 2, 3, 5]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Victor Fleming, Steven Spielberg","2, 2, 2, 3, 5","Show me a bar chart for how many movie reviews does each director get?, and display the total number in ascending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Victor Fleming', 'Steven Spielberg']], 'y_data': [[2, 2, 2, 3, 5]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Victor Fleming, Steven Spielberg","2, 2, 2, 3, 5","How many movie reviews does each director get Show bar chart, and rank y axis in ascending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Victor Fleming', 'Steven Spielberg']], 'y_data': [[2, 2, 2, 3, 5]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Victor Fleming, Steven Spielberg","2, 2, 2, 3, 5","For each director, how many reviews have they received Visualize by bar chart, and display the total number in ascending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Victor Fleming', 'Steven Spielberg']], 'y_data': [[2, 2, 2, 3, 5]], 'classify': [], 'describe': ''}",bar,director,count(*),", James Cameron, Robert Wise, Victor Fleming, Steven Spielberg","2, 2, 2, 3, 5","Return a bar chart on how many movie reviews does each director get?, display the total number in ascending order."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Steven Spielberg', 'Victor Fleming', 'Robert Wise', 'James Cameron', '']], 'y_data': [[5, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Steven Spielberg, Victor Fleming, Robert Wise, James Cameron, ","5, 3, 2, 2, 2","For each director, how many reviews have they received Visualize by bar chart, and could you rank from high to low by the Y-axis?"
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Steven Spielberg', 'Victor Fleming', 'Robert Wise', 'James Cameron', '']], 'y_data': [[5, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Steven Spielberg, Victor Fleming, Robert Wise, James Cameron, ","5, 3, 2, 2, 2","Show me a bar chart for how many movie reviews does each director get?, and I want to display by the y axis in descending please."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Steven Spielberg', 'Victor Fleming', 'Robert Wise', 'James Cameron', '']], 'y_data': [[5, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Steven Spielberg, Victor Fleming, Robert Wise, James Cameron, ","5, 3, 2, 2, 2","How many movie reviews does each director get Show bar chart, sort y-axis in desc order please."
"SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'count(*)', 'x_data': [['Steven Spielberg', 'Victor Fleming', 'Robert Wise', 'James Cameron', '']], 'y_data': [[5, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,count(*),"Steven Spielberg, Victor Fleming, Robert Wise, James Cameron, ","5, 3, 2, 2, 2","Return a bar chart on how many movie reviews does each director get?, order Y-axis from high to low order."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2","Please tell me the total star ratings of each movie title using a bar chart, and order bar in ascending order."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the title and and the total star rating of the movie using a bar chart, order by the X from low to high."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 5, 5, 8","Please tell me the total star ratings of each movie title using a bar chart, I want to show in descending by the X."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 5, 5, 8","Visualize the title and and the total star rating of the movie using a bar chart, could you display bars in descending order?"
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'E.T.', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"The Sound of Music, Snow White, E.T., Gone with the Wind, Avatar","2, 4, 5, 5, 8","Visualize the title and and the total star rating of the movie using a bar chart, show from low to high by the total number."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'E.T.', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"The Sound of Music, Snow White, E.T., Gone with the Wind, Avatar","2, 4, 5, 5, 8","Please tell me the total star ratings of each movie title using a bar chart, and sort Y in asc order please."
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'Gone with the Wind', 'E.T.', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, Gone with the Wind, E.T., Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the title and and the total star rating of the movie using a bar chart, and could you order in desc by the y axis please?"
"SELECT title , SUM(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY SUM(stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(stars)', 'x_data': [['Avatar', 'Gone with the Wind', 'E.T.', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(stars),"Avatar, Gone with the Wind, E.T., Snow White, The Sound of Music","8, 5, 5, 4, 2","Please tell me the total star ratings of each movie title using a bar chart, and list from high to low by the y-axis."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","What are the average star ratings of each movie title? Could you return me a bar chart?, and could you list by the title in asc please?"
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","Please tell me the average star ratings of each movie title using a bar chart, list x-axis from low to high order."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","Visualize the title and and the average star rating of the movie using a bar chart, sort bars in asc order."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","Please tell me the average star ratings of each movie title using a bar chart, and could you show by the bar in desc?"
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","Visualize the title and and the average star rating of the movie using a bar chart, list bars in desc order please."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","What are the average star ratings of each movie title? Could you return me a bar chart?, show names from high to low order please."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","What are the average star ratings of each movie title? Could you return me a bar chart?, and I want to show total number in asc order."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","Please tell me the average star ratings of each movie title using a bar chart, and display from low to high by the mean stars."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","Visualize the title and and the average star rating of the movie using a bar chart, display from low to high by the y-axis."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","What are the average star ratings of each movie title? Could you return me a bar chart?, rank in desc by the Y please."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","Please tell me the average star ratings of each movie title using a bar chart, rank in desc by the Y please."
"SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(stars)', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(stars),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","Visualize the title and and the average star rating of the movie using a bar chart, and could you display y axis in descending order?"
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the total smallest rating of different movie title using a bar chart, and sort by the X in asc please."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the title and their total smallest ratings of the movie using a bar chart, sort from low to high by the bars."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","8, 5, 5, 4, 2","Please return me a bar chart show what are the total smallest rating of different movie title?, and list in ascending by the X."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 5, 5, 8","Please return me a bar chart show what are the total smallest rating of different movie title?, order from high to low by the names."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 5, 5, 8","Visualize the total smallest rating of different movie title using a bar chart, rank by the x-axis in desc."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 5, 5, 8","Visualize the title and their total smallest ratings of the movie using a bar chart, show bar in desc order."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'E.T.', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, E.T., Gone with the Wind, Avatar","2, 4, 5, 5, 8","Please return me a bar chart show what are the total smallest rating of different movie title?, and I want to sort total number from low to high order."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'E.T.', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, E.T., Gone with the Wind, Avatar","2, 4, 5, 5, 8","Visualize the title and their total smallest ratings of the movie using a bar chart, order y axis from low to high order."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'E.T.', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 5, 5, 8]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"The Sound of Music, Snow White, E.T., Gone with the Wind, Avatar","2, 4, 5, 5, 8","Visualize the total smallest rating of different movie title using a bar chart, rank by the total number in ascending please."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'Gone with the Wind', 'E.T.', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, Gone with the Wind, E.T., Snow White, The Sound of Music","8, 5, 5, 4, 2","Please return me a bar chart show what are the total smallest rating of different movie title?, show in descending by the Y-axis please."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'Gone with the Wind', 'E.T.', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, Gone with the Wind, E.T., Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the title and their total smallest ratings of the movie using a bar chart, and rank from high to low by the y-axis please."
"SELECT T2.title , SUM(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY SUM(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'SUM(min(T1.stars))', 'x_data': [['Avatar', 'Gone with the Wind', 'E.T.', 'Snow White', 'The Sound of Music']], 'y_data': [[8, 5, 5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,SUM(min(T1.stars)),"Avatar, Gone with the Wind, E.T., Snow White, The Sound of Music","8, 5, 5, 4, 2","Visualize the total smallest rating of different movie title using a bar chart, and could you order from high to low by the y axis?"
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","Visualize the title and their average smallest ratings of the movie using a bar chart, rank by the X in ascending."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","Visualize the average smallest rating of different movie title using a bar chart, show names from low to high order."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Snow White', 'The Sound of Music']], 'y_data': [[4, 2.5, 2.5, 4, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Avatar, E.T., Gone with the Wind, Snow White, The Sound of Music","4, 2.5, 2.5, 4, 2","Please return me a bar chart show what are the average smallest rating of different movie title?, I want to list names in ascending order."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","Visualize the title and their average smallest ratings of the movie using a bar chart, sort by the title in descending please."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","Please return me a bar chart show what are the average smallest rating of different movie title?, and sort by the x axis in descending."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY T2.title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'Snow White', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[2, 4, 2.5, 2.5, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, Snow White, Gone with the Wind, E.T., Avatar","2, 4, 2.5, 2.5, 4","Visualize the average smallest rating of different movie title using a bar chart, and could you rank by the x axis from high to low please?"
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","Please return me a bar chart show what are the average smallest rating of different movie title?, show from low to high by the stars)."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","Visualize the title and their average smallest ratings of the movie using a bar chart, and show by the y-axis from low to high."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['The Sound of Music', 'E.T.', 'Gone with the Wind', 'Avatar', 'Snow White']], 'y_data': [[2, 2.5, 2.5, 4, 4]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"The Sound of Music, E.T., Gone with the Wind, Avatar, Snow White","2, 2.5, 2.5, 4, 4","Visualize the average smallest rating of different movie title using a bar chart, and I want to sort by the stars) in ascending please."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","Visualize the average smallest rating of different movie title using a bar chart, and order by the total number in desc."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","Visualize the title and their average smallest ratings of the movie using a bar chart, and sort in descending by the stars)."
"SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title ORDER BY AVG(min(T1.stars)) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'AVG(min(T1.stars))', 'x_data': [['Snow White', 'Avatar', 'Gone with the Wind', 'E.T.', 'The Sound of Music']], 'y_data': [[4, 4, 2.5, 2.5, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,AVG(min(T1.stars)),"Snow White, Avatar, Gone with the Wind, E.T., The Sound of Music","4, 4, 2.5, 2.5, 2","Please return me a bar chart show what are the average smallest rating of different movie title?, sort in descending by the stars)."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[3, 2, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","3, 2, 2, 4, 2","Show the title and score of the movie with a bar chart, I want to display in asc by the x-axis."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[3, 2, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","3, 2, 2, 4, 2","Draw a bar chart to compare the stars of each movie by title, and rank by the names in asc."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,title,stars,"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar","2, 4, 2, 2, 3","Show the title and score of the movie with a bar chart, show X-axis in descending order."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY title DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,title,stars,"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar","2, 4, 2, 2, 3","Draw a bar chart to compare the stars of each movie by title, and show X-axis in descending order."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music', 'Avatar', 'Snow White']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,title,stars,"Gone with the Wind, Raiders of the Lost Ark, The Sound of Music, Avatar, Snow White","2, 2, 2, 3, 4","Show the title and score of the movie with a bar chart, and rank in ascending by the Y-axis."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music', 'Avatar', 'Snow White']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,title,stars,"Gone with the Wind, Raiders of the Lost Ark, The Sound of Music, Avatar, Snow White","2, 2, 2, 3, 4","Draw a bar chart to compare the stars of each movie by title, could you sort Y from low to high order?"
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2","Draw a bar chart to compare the stars of each movie by title, and sort in descending by the Y-axis."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,stars,"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2","Show the title and score of the movie with a bar chart, and I want to show Y-axis in descending order."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[3, 2, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","3, 2, 2, 4, 2","Compare the lowest rating among all movies by each title using a histogram, list from low to high by the title."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[3, 2, 2, 4, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","3, 2, 2, 4, 2","Show the title and the lowest rating among all movies in a bar chart, list in ascending by the bars."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar","2, 4, 2, 2, 3","Show the title and the lowest rating among all movies in a bar chart, order names from high to low order please."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[2, 4, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar","2, 4, 2, 2, 3","Compare the lowest rating among all movies by each title using a histogram, could you rank from high to low by the X-axis?"
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music', 'Avatar', 'Snow White']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Gone with the Wind, Raiders of the Lost Ark, The Sound of Music, Avatar, Snow White","2, 2, 2, 3, 4","Show the title and the lowest rating among all movies in a bar chart, I want to rank in ascending by the Y."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music', 'Avatar', 'Snow White']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Gone with the Wind, Raiders of the Lost Ark, The Sound of Music, Avatar, Snow White","2, 2, 2, 3, 4","Compare the lowest rating among all movies by each title using a histogram, and I want to show Y-axis from low to high order."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2","Show the title and the lowest rating among all movies in a bar chart, order in desc by the Y-axis please."
"SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY min(T1.stars) DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'min(T1.stars)', 'x_data': [['Snow White', 'Avatar', 'The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,title,min(T1.stars),"Snow White, Avatar, The Sound of Music, Raiders of the Lost Ark, Gone with the Wind","4, 3, 2, 2, 2","Compare the lowest rating among all movies by each title using a histogram, and show from high to low by the stars."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Show the stars of each director by a bar chart, and display from low to high by the X."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Please give me a bar chart to compare the stars by directors, sort by the x axis in asc."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","2, 2, 2, 3, 4","Please give me a bar chart to compare the stars by directors, and list by the X-axis from high to low."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY director DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","2, 2, 2, 3, 4","Show the stars of each director by a bar chart, and could you order from high to low by the x axis?"
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron, ","2, 2, 2, 3, 4","Please give me a bar chart to compare the stars by directors, I want to display by the Y-axis from low to high."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron, ","2, 2, 2, 3, 4","Show the stars of each director by a bar chart, and could you order stars in asc order?"
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","4, 3, 2, 2, 2","Show the stars of each director by a bar chart, show by the Y in desc."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY stars DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['', 'James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,stars,", James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","4, 3, 2, 2, 2","Please give me a bar chart to compare the stars by directors, list by the y-axis in desc."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Compare the lowest rating among all movies by each director using a bar chart, list by the director from low to high."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Show the director and their lowest rating among all movies in a bar chart, list by the director from low to high."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","4, 3, 2, 2, 2","Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, sort in ascending by the x axis."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","2, 2, 2, 3, 4","Compare the lowest rating among all movies by each director using a bar chart, display x axis from high to low order please."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","2, 2, 2, 3, 4","Show the director and their lowest rating among all movies in a bar chart, display by the x axis from high to low please."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY director DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron, ","2, 2, 2, 3, 4","Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and order x-axis from high to low order."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron, ","2, 2, 2, 3, 4","Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and I want to list in ascending by the Y-axis."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron, ","2, 2, 2, 3, 4","Show the director and their lowest rating among all movies in a bar chart, display by the stars in asc."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) ASC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron', '']], 'y_data': [[2, 2, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron, ","2, 2, 2, 3, 4","Compare the lowest rating among all movies by each director using a bar chart, and could you list Y-axis in asc order?"
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","4, 3, 2, 2, 2","Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, display Y in desc order."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","4, 3, 2, 2, 2","Show the director and their lowest rating among all movies in a bar chart, and sort total number from high to low order."
"SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director ORDER BY min(T1.stars) DESC",Bar,Medium,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'min(T1.stars)', 'x_data': [['', 'James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[4, 3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,director,min(T1.stars),", James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","4, 3, 2, 2, 2","Compare the lowest rating among all movies by each director using a bar chart, and display y axis from high to low order."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,title,stars,"Avatar, Gone with the Wind, Raiders of the Lost Ark, The Sound of Music","5, 4, 4, 3","Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, and I want to display X from low to high order please."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,title,stars,"The Sound of Music, Raiders of the Lost Ark, Gone with the Wind, Avatar","3, 4, 4, 5","Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, show X in descending order please."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY stars ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['The Sound of Music', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Avatar']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,title,stars,"The Sound of Music, Gone with the Wind, Raiders of the Lost Ark, Avatar","3, 4, 4, 5","Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, order y-axis in asc order please."
"SELECT title , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY stars DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'stars', 'x_data': [['Avatar', 'Raiders of the Lost Ark', 'Gone with the Wind', 'The Sound of Music']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,title,stars,"Avatar, Raiders of the Lost Ark, Gone with the Wind, The Sound of Music","5, 4, 4, 3","Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, sort y-axis in desc order."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title ORDER BY title ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'The Sound of Music']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,title,max(T1.stars),"Avatar, Gone with the Wind, Raiders of the Lost Ark, The Sound of Music","5, 4, 4, 3","Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, rank x-axis in asc order."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title ORDER BY title DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['The Sound of Music', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,title,max(T1.stars),"The Sound of Music, Raiders of the Lost Ark, Gone with the Wind, Avatar","3, 4, 4, 5","Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order names in desc order please."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title ORDER BY max(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['The Sound of Music', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Avatar']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,title,max(T1.stars),"The Sound of Music, Gone with the Wind, Raiders of the Lost Ark, Avatar","3, 4, 4, 5","Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order from low to high by the y-axis."
"SELECT title , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY title ORDER BY max(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'max(T1.stars)', 'x_data': [['Avatar', 'Raiders of the Lost Ark', 'Gone with the Wind', 'The Sound of Music']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,title,max(T1.stars),"Avatar, Raiders of the Lost Ark, Gone with the Wind, The Sound of Music","5, 4, 4, 3","Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, and show stars in descending order."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,director,stars,"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, and sort in ascending by the bars."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron']], 'y_data': [[4, 4, 3, 5]], 'classify': [], 'describe': ''}",bar,director,stars,"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron","4, 4, 3, 5","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, I want to list by the director in desc."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY stars ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,director,stars,"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron","3, 4, 4, 5","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, and display by the Y in asc."
"SELECT director , stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" ORDER BY stars DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'stars', 'x_data': [['James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,director,stars,"James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","5, 4, 4, 3","For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL Could you plot the result with a bar chart?, rank by the total number in descending."
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director ORDER BY director ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['James Cameron', 'Robert Wise', 'Steven Spielberg', 'Victor Fleming']], 'y_data': [[5, 3, 4, 4]], 'classify': [], 'describe': ''}",bar,director,max(T1.stars),"James Cameron, Robert Wise, Steven Spielberg, Victor Fleming","5, 3, 4, 4","For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, and I want to list x-axis in ascending order."
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director ORDER BY director DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['Victor Fleming', 'Steven Spielberg', 'Robert Wise', 'James Cameron']], 'y_data': [[4, 4, 3, 5]], 'classify': [], 'describe': ''}",bar,director,max(T1.stars),"Victor Fleming, Steven Spielberg, Robert Wise, James Cameron","4, 4, 3, 5","For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, list by the x-axis in descending please."
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director ORDER BY max(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['Robert Wise', 'Steven Spielberg', 'Victor Fleming', 'James Cameron']], 'y_data': [[3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,director,max(T1.stars),"Robert Wise, Steven Spielberg, Victor Fleming, James Cameron","3, 4, 4, 5","For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, and could you display by the Y in ascending?"
"SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director ORDER BY max(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'director', 'y_name': 'max(T1.stars)', 'x_data': [['James Cameron', 'Victor Fleming', 'Steven Spielberg', 'Robert Wise']], 'y_data': [[5, 4, 4, 3]], 'classify': [], 'describe': ''}",bar,director,max(T1.stars),"James Cameron, Victor Fleming, Steven Spielberg, Robert Wise","5, 4, 4, 3","For each director, return the director's name together with the highest rating among all of their movies and ignore movies whose director is NULL Could you plot the result with a bar chart?, order by the y axis from high to low."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, could you display in ascending by the X-axis?"
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","What is the average rating star for each reviewer, could you display in ascending by the X-axis?"
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","A bar chart about what is the average rating star for each reviewer?, display in ascending by the x axis please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","What is the average number of stars that each reviewer awards for a movie Show bar chart, and list by the bar from low to high."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","Draw a bar chart for what is the average rating star for each reviewer?, and I want to order from low to high by the X."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Ashley White', 'Brittany Harris', 'Chris Jackson', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron', 'Mike Anderson', 'Sarah Martinez']], 'y_data': [[3, 2.6666666666666665, 3, 4, 4, 5, 3, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Ashley White, Brittany Harris, Chris Jackson, Daniel Lewis, Elizabeth Thomas, James Cameron, Mike Anderson, Sarah Martinez","3, 2.6666666666666665, 3, 4, 4, 5, 3, 3","Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display in ascending by the x axis please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and I want to display x-axis in desc order please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","Draw a bar chart for what is the average rating star for each reviewer?, show from high to low by the bar please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","A bar chart about what is the average rating star for each reviewer?, could you show x axis from high to low order?"
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","What is the average rating star for each reviewer, and rank by the bar in descending please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","What is the average number of stars that each reviewer awards for a movie Show bar chart, could you order by the name from high to low?"
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY name DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Sarah Martinez', 'Mike Anderson', 'James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Chris Jackson', 'Brittany Harris', 'Ashley White']], 'y_data': [[3, 3, 5, 4, 4, 3, 2.6666666666666665, 3]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Sarah Martinez, Mike Anderson, James Cameron, Elizabeth Thomas, Daniel Lewis, Chris Jackson, Brittany Harris, Ashley White","3, 3, 5, 4, 4, 3, 2.6666666666666665, 3","Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and could you order by the name from high to low?"
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, rank in ascending by the y-axis."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","What is the average rating star for each reviewer, and order Y-axis from low to high order please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank in ascending by the y-axis."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display by the y axis in ascending."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","Draw a bar chart for what is the average rating star for each reviewer?, order by the stars in ascending."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['Brittany Harris', 'Ashley White', 'Chris Jackson', 'Mike Anderson', 'Sarah Martinez', 'Daniel Lewis', 'Elizabeth Thomas', 'James Cameron']], 'y_data': [[2.6666666666666665, 3, 3, 3, 3, 4, 4, 5]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"Brittany Harris, Ashley White, Chris Jackson, Mike Anderson, Sarah Martinez, Daniel Lewis, Elizabeth Thomas, James Cameron","2.6666666666666665, 3, 3, 3, 3, 4, 4, 5","A bar chart about what is the average rating star for each reviewer?, and display in ascending by the total number."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, and show in descending by the Y-axis."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and rank Y in descending order."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","Draw a bar chart for what is the average rating star for each reviewer?, sort y axis in desc order please."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","A bar chart about what is the average rating star for each reviewer?, I want to show from high to low by the y axis."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","What is the average rating star for each reviewer, display in descending by the total number."
"SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) DESC",Bar,Hard,movie_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'avg(T1.stars)', 'x_data': [['James Cameron', 'Elizabeth Thomas', 'Daniel Lewis', 'Sarah Martinez', 'Mike Anderson', 'Chris Jackson', 'Ashley White', 'Brittany Harris']], 'y_data': [[5, 4, 4, 3, 3, 3, 3, 2.6666666666666665]], 'classify': [], 'describe': ''}",bar,name,avg(T1.stars),"James Cameron, Elizabeth Thomas, Daniel Lewis, Sarah Martinez, Mike Anderson, Chris Jackson, Ashley White, Brittany Harris","5, 4, 4, 3, 3, 3, 3, 2.6666666666666665","What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank Y in descending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and list X-axis in asc order please."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and display in asc by the X-axis."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the number of the titles of all movies that have rating star is between 3 and 5?, list by the names from low to high."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and display X-axis in ascending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the number of the titles of all movies that have between 3 and 5 stars?, display X-axis in ascending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Avatar', 'E.T.', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White', 'The Sound of Music']], 'y_data': [[2, 1, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Avatar, E.T., Gone with the Wind, Raiders of the Lost Ark, Snow White, The Sound of Music","2, 1, 2, 2, 2, 1","What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, display in ascending by the title."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","What are the number of the titles of all movies that have between 3 and 5 stars?, and show names in descending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, I want to show by the bars from high to low."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and order bars in descending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, show names in descending order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and rank by the x-axis in descending."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY title DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['The Sound of Music', 'Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'E.T.', 'Avatar']], 'y_data': [[1, 2, 2, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"The Sound of Music, Snow White, Raiders of the Lost Ark, Gone with the Wind, E.T., Avatar","1, 2, 2, 2, 1, 2","What are the number of the titles of all movies that have rating star is between 3 and 5?, I want to show by the bars from high to low."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","What are the number of the titles of all movies that have between 3 and 5 stars?, rank Y-axis in asc order."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, rank in ascending by the y-axis."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and could you rank y-axis in ascending order?"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","What are the number of the titles of all movies that have rating star is between 3 and 5?, could you rank y-axis in ascending order?"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and sort from low to high by the the number of title."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) ASC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['E.T.', 'The Sound of Music', 'Avatar', 'Gone with the Wind', 'Raiders of the Lost Ark', 'Snow White']], 'y_data': [[1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"E.T., The Sound of Music, Avatar, Gone with the Wind, Raiders of the Lost Ark, Snow White","1, 1, 2, 2, 2, 2","What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and I want to show by the y axis in asc."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","What are the number of the titles of all movies that have rating star is between 3 and 5?, list by the y axis in desc."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and could you display by the y axis in descending?"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and list by the y axis in desc."
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","What are the number of the titles of all movies that have between 3 and 5 stars?, and could you sort the number of title from high to low order?"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, and could you display by the y axis in descending?"
"SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",Bar,Extra Hard,movie_1,"{'chart': 'bar', 'x_name': 'title', 'y_name': 'COUNT(title)', 'x_data': [['Snow White', 'Raiders of the Lost Ark', 'Gone with the Wind', 'Avatar', 'The Sound of Music', 'E.T.']], 'y_data': [[2, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY title'}",bar,title,COUNT(title),"Snow White, Raiders of the Lost Ark, Gone with the Wind, Avatar, The Sound of Music, E.T.","2, 2, 2, 2, 1, 1","A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, list by the y axis in desc."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, and show x-axis in ascending order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and list by the X-axis in asc."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and show x-axis in ascending order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year ASC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 2], [3, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 1, 0, 0, 0, 2], [4, 0, 0, 0, 0, 2, 0, 0, 0, 2]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 2","For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, and display in ascending by the x-axis."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[2, 0, 0, 0, 1, 0, 0, 0, 0, 2], [2, 0, 0, 0, 1, 0, 0, 0, 0, 3], [2, 0, 0, 0, 1, 0, 0, 0, 0, 4], [2, 0, 0, 0, 2, 0, 0, 0, 0, 4]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","2, 0, 0, 0, 1, 0, 0, 0, 0, 2","For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, show X-axis in descending order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[2, 0, 0, 0, 1, 0, 0, 0, 0, 2], [2, 0, 0, 0, 1, 0, 0, 0, 0, 3], [2, 0, 0, 0, 1, 0, 0, 0, 0, 4], [2, 0, 0, 0, 2, 0, 0, 0, 0, 4]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","2, 0, 0, 0, 1, 0, 0, 0, 0, 2","For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title The result can be drawn as a trend line, display by the x-axis from high to low please."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[2, 0, 0, 0, 1, 0, 0, 0, 0, 2], [2, 0, 0, 0, 1, 0, 0, 0, 0, 3], [2, 0, 0, 0, 1, 0, 0, 0, 0, 4], [2, 0, 0, 0, 2, 0, 0, 0, 0, 4]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","2, 0, 0, 0, 1, 0, 0, 0, 0, 2","For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, and display by the x-axis from high to low please."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title GROUP BY title ORDER BY year DESC",Grouping Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[2, 0, 0, 0, 1, 0, 0, 0, 0, 2], [2, 0, 0, 0, 1, 0, 0, 0, 0, 3], [2, 0, 0, 0, 1, 0, 0, 0, 0, 4], [2, 0, 0, 0, 2, 0, 0, 0, 0, 4]], 'classify': ['Avatar', 'E.T.', 'Raiders of the Lost Ark', 'Titanic'], 'describe': 'GROUP BY title, BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","2, 0, 0, 0, 1, 0, 0, 0, 0, 2","For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart, sort year from high to low order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year ASC",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 1","For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and I want to order by the x-axis from low to high."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year ASC",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['1981~1983', '1984~1986', '1987~1989', '1990~1992', '1993~1995', '1996~1998', '1999~2001', '2002~2004', '2005~2007', '2008~2009']], 'y_data': [[2, 0, 0, 0, 0, 1, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"1981~1983, 1984~1986, 1987~1989, 1990~1992, 1993~1995, 1996~1998, 1999~2001, 2002~2004, 2005~2007, 2008~2009","2, 0, 0, 0, 0, 1, 0, 0, 0, 1","For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, I want to rank year from low to high order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year DESC",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[1, 0, 0, 0, 1, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","1, 0, 0, 0, 1, 0, 0, 0, 0, 2","For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and list x axis from high to low order."
"SELECT year , COUNT(year) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY year DESC",Line,Extra Hard,movie_1,"{'chart': 'line', 'x_name': 'year', 'y_name': 'COUNT(year)', 'x_data': [['2008~2009', '2005~2007', '2002~2004', '1999~2001', '1996~1998', '1993~1995', '1990~1992', '1987~1989', '1984~1986', '1981~1983']], 'y_data': [[1, 0, 0, 0, 1, 0, 0, 0, 0, 2]], 'classify': [], 'describe': 'BIN year BY YEAR'}",line,year,COUNT(year),"2008~2009, 2005~2007, 2002~2004, 1999~2001, 1996~1998, 1993~1995, 1990~1992, 1987~1989, 1984~1986, 1981~1983","1, 0, 0, 0, 1, 0, 0, 0, 0, 2","For directors who had more than one movie, bin the dates of release into Year interval and them compute the total number of movies in each year bucket Show me the result using a line chart, and rank by the year from high to low."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id GROUP BY customer_last_name ORDER BY customer_last_name ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Turcotte', 'Wiza']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Huels, Langworth, Lind, Rath, Schinner, Turcotte, Wiza","2, 1, 1, 1, 1, 1, 1, 1","Give me a bar chart showing the number of customers who has an account for each customer last name, show by the x-axis from low to high."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id GROUP BY customer_last_name ORDER BY customer_last_name DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Wiza', 'Turcotte', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Effertz']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Wiza, Turcotte, Schinner, Rath, Lind, Langworth, Huels, Effertz","1, 1, 1, 1, 1, 1, 1, 2","Give me a bar chart showing the number of customers who has an account for each customer last name, display by the customer_last_name from high to low."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Turcotte', 'Wiza', 'Effertz']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Huels, Langworth, Lind, Rath, Schinner, Turcotte, Wiza, Effertz","1, 1, 1, 1, 1, 1, 1, 2","Give me a bar chart showing the number of customers who has an account for each customer last name, I want to display in ascending by the y-axis."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Wiza', 'Turcotte', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Wiza, Turcotte, Schinner, Rath, Lind, Langworth, Huels","2, 1, 1, 1, 1, 1, 1, 1","Give me a bar chart showing the number of customers who has an account for each customer last name, and sort from high to low by the y axis please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Draw a bar chart of transaction type versus the total number, and rank from low to high by the names."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?, list by the bar in ascending."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show the transaction type and the number of transactions Plot them as bar chart, and rank from low to high by the X-axis."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Return a histogram on what are the different transaction types, and how many transactions of each have taken place?, and could you list by the X in asc?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show the transaction type and the number of transactions by a bar chart, could you sort x-axis from low to high order?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","What are the different transaction types, and how many transactions of each have taken place Show bar chart, show by the x-axis from low to high."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?, I want to display in descending by the bar."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show the transaction type and the number of transactions Plot them as bar chart, show names from high to low order."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Draw a bar chart of transaction type versus the total number, and list transaction_type in descending order please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show the transaction type and the number of transactions by a bar chart, and show in descending by the transaction_type."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","What are the different transaction types, and how many transactions of each have taken place Show bar chart, could you show bars from high to low order?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY transaction_type DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Return a histogram on what are the different transaction types, and how many transactions of each have taken place?, and show in descending by the transaction_type."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Draw a bar chart of transaction type versus the total number, show from low to high by the the total number ."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Return a histogram on what are the different transaction types, and how many transactions of each have taken place?, display total number from low to high order."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?, and sort by the total number in ascending please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show the transaction type and the number of transactions Plot them as bar chart, show from low to high by the the total number ."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","What are the different transaction types, and how many transactions of each have taken place Show bar chart, and sort by the the total number in ascending."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Payment', 'Refund']], 'y_data': [[6, 9]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Payment, Refund","6, 9","Show the transaction type and the number of transactions by a bar chart, sort by the the total number in ascending."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show the transaction type and the number of transactions by a bar chart, and display in desc by the y axis."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show the transaction type and the number of transactions Plot them as bar chart, and could you sort by the y-axis from high to low?"
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Show me a bar chart for what are the different transaction types, and how many transactions of each have taken place?, and show from high to low by the total number please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","What are the different transaction types, and how many transactions of each have taken place Show bar chart, show from high to low by the Y please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Draw a bar chart of transaction type versus the total number, and show from high to low by the total number please."
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'transaction_type', 'y_name': 'count(*)', 'x_data': [['Refund', 'Payment']], 'y_data': [[9, 6]], 'classify': [], 'describe': ''}",bar,transaction_type,count(*),"Refund, Payment","9, 6","Return a histogram on what are the different transaction types, and how many transactions of each have taken place?, and rank total number from high to low order please."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many customers for different customer last name? Draw a bar chart, and show names from low to high order."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Show the number of customers for different customer last name in a bar chart, could you sort x-axis in ascending order?"
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Effertz', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza']], 'y_data': [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Effertz, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza","1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis customer last name y axis how many customer last name, and sort bars from low to high order."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Effertz', 'Davis', 'Brekke']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Effertz, Davis, Brekke","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1","Bar chart x axis customer last name y axis how many customer last name, could you list from high to low by the X-axis?"
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Effertz', 'Davis', 'Brekke']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Effertz, Davis, Brekke","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1","How many customers for different customer last name? Draw a bar chart, rank by the bar in desc."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY customer_last_name DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Effertz', 'Davis', 'Brekke']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Effertz, Davis, Brekke","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1","Show the number of customers for different customer last name in a bar chart, show by the x axis in descending."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza', 'Effertz']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza, Effertz","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","Show the number of customers for different customer last name in a bar chart, show by the the number of customer last name in ascending."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza', 'Effertz']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza, Effertz","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","Bar chart x axis customer last name y axis how many customer last name, and could you order the number of customer last name from low to high order?"
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Brekke', 'Davis', 'Erdman', 'Farrell', 'Feest', 'Huels', 'Langworth', 'Lind', 'Rath', 'Schinner', 'Swift', 'Turcotte', 'Wiza', 'Effertz']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Brekke, Davis, Erdman, Farrell, Feest, Huels, Langworth, Lind, Rath, Schinner, Swift, Turcotte, Wiza, Effertz","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2","How many customers for different customer last name? Draw a bar chart, could you order the number of customer last name from low to high order?"
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Davis', 'Brekke']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Davis, Brekke","2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis customer last name y axis how many customer last name, and sort from high to low by the y axis."
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Davis', 'Brekke']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Davis, Brekke","2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","How many customers for different customer last name? Draw a bar chart, and could you rank total number in descending order?"
"SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name ORDER BY COUNT(customer_last_name) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'customer_last_name', 'y_name': 'COUNT(customer_last_name)', 'x_data': [['Effertz', 'Wiza', 'Turcotte', 'Swift', 'Schinner', 'Rath', 'Lind', 'Langworth', 'Huels', 'Feest', 'Farrell', 'Erdman', 'Davis', 'Brekke']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY customer_last_name'}",bar,customer_last_name,COUNT(customer_last_name),"Effertz, Wiza, Turcotte, Swift, Schinner, Rath, Lind, Langworth, Huels, Feest, Farrell, Erdman, Davis, Brekke","2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Show the number of customers for different customer last name in a bar chart, and show in descending by the y-axis."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","Show me the number of card type code by card type code in a histogram, sort X-axis in ascending order."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","Show the number of cards in different card type code in a bar chart, display by the names in ascending please."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","How many cards in different card type code? Plot a bar chart, list by the X from low to high."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","How many cards in different card type code? Plot a bar chart, rank by the x axis in desc."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","Show the number of cards in different card type code in a bar chart, show by the names in desc please."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","Show me the number of card type code by card type code in a histogram, and order card_type_code from high to low order please."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","Show the number of cards in different card type code in a bar chart, rank Y-axis in asc order."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","Show me the number of card type code by card type code in a histogram, display from low to high by the y axis."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Credit, Debit","7, 8","How many cards in different card type code? Plot a bar chart, sort total number in ascending order."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","How many cards in different card type code? Plot a bar chart, and rank how many card type code in descending order."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","Show the number of cards in different card type code in a bar chart, show y axis in descending order."
"SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'COUNT(card_type_code)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,COUNT(card_type_code),"Debit, Credit","8, 7","Show me the number of card type code by card type code in a histogram, and could you order by the total number in descending?"
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","Bar graph to show sum card number from different card type code, and display by the X in ascending."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","What are card ids, customer ids, card types, and card numbers for each customer card?, and I want to order x axis in asc order."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","卡号求和无意义, order x-axis in ascending order please."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","What are card ids, customer ids, card types, and card numbers for each customer card?, and order in descending by the names."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","Bar graph to show sum card number from different card type code, order in descending by the x-axis."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","卡号求和无意义, and sort in desc by the bars."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","Bar graph to show sum card number from different card type code, show in ascending by the y-axis please."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","What are card ids, customer ids, card types, and card numbers for each customer card?, list y-axis from low to high order please."
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Debit', 'Credit']], 'y_data': [[10744938002896200, 21491532119475148]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Debit, Credit","10744938002896200, 21491532119475148","卡号求和无意义, could you sort y-axis in asc order?"
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","What are card ids, customer ids, card types, and card numbers for each customer card?, and could you show y axis in desc order?"
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","Bar graph to show sum card number from different card type code, could you rank Y from high to low order?"
"SELECT card_type_code , SUM(card_number) FROM Customers_cards GROUP BY card_type_code ORDER BY SUM(card_number) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'SUM(card_number)', 'x_data': [['Credit', 'Debit']], 'y_data': [[21491532119475148, 10744938002896200]], 'classify': [], 'describe': 'GROUP BY card_type_code'}",bar,card_type_code,SUM(card_number),"Credit, Debit","21491532119475148, 10744938002896200","卡号求和无意义, I want to list from high to low by the total number of card number."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","what are the different card types, and how many transactions have been made with each?, show in ascending by the card_type_code please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a bar chart on what are the different card types, and how many transactions have been made with each?, and I want to rank by the x-axis in ascending please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show the card type codes and the number of transactions Visualize by bar chart, I want to rank by the x-axis in ascending please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show the card type codes and the number of transactions with a bar chart, and show in ascending by the card_type_code please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many transactions have been made with each Visualize by bar chart, could you order bars in asc order?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show the card type codes and the number of transactions with a bar chart, show by the X in descending."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show the card type codes and the number of transactions Visualize by bar chart, and rank by the X-axis in descending please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","what are the different card types, and how many transactions have been made with each?, and sort X from high to low order."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Return a bar chart on what are the different card types, and how many transactions have been made with each?, and list in desc by the X."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY card_type_code DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","What are the different card types, and how many transactions have been made with each Visualize by bar chart, and display by the card_type_code in descending."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many transactions have been made with each Visualize by bar chart, sort Y-axis in asc order please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show the card type codes and the number of transactions with a bar chart, could you order Y in ascending order?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","what are the different card types, and how many transactions have been made with each?, and sort Y-axis in asc order please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show the card type codes and the number of transactions Visualize by bar chart, and could you order Y in ascending order?"
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) ASC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a bar chart on what are the different card types, and how many transactions have been made with each?, sort Y-axis in asc order please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","what are the different card types, and how many transactions have been made with each?, and I want to order in desc by the Y-axis."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show the card type codes and the number of transactions Visualize by bar chart, display by the y axis in desc."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show the card type codes and the number of transactions with a bar chart, and show in descending by the total number please."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","What are the different card types, and how many transactions have been made with each Visualize by bar chart, I want to order in desc by the Y-axis."
"SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",Bar,Hard,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Return a bar chart on what are the different card types, and how many transactions have been made with each?, and I want to display Y in desc order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show all card type codes and the number of cards in each type by a bar chart, and I want to rank names in ascending order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Bar chart x axis card type code y axis the total number, and order by the X-axis from low to high."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a histogram on what are the different card types, and how many cards are there of each?, and list in asc by the x axis please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show all card type codes and the number of cards in each type Plot them as bar chart, rank from low to high by the x-axis."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Display a bar chart for what are the different card types, and how many cards are there of each?, and I want to list bar from low to high order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many cards are there of each, display card_type_code in ascending order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show all card type codes and the number of cards in each type Plot them as bar chart, could you rank from high to low by the names?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Bar chart x axis card type code y axis the total number, and rank X-axis in descending order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","What are the different card types, and how many cards are there of each, and display by the bar from high to low."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Display a bar chart for what are the different card types, and how many cards are there of each?, sort names from high to low order please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show all card type codes and the number of cards in each type by a bar chart, and list from high to low by the names please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY card_type_code DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Return a histogram on what are the different card types, and how many cards are there of each?, could you rank from high to low by the names?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Bar chart x axis card type code y axis the total number, and could you sort y-axis in ascending order?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Display a bar chart for what are the different card types, and how many cards are there of each?, and could you rank in asc by the y-axis?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show all card type codes and the number of cards in each type by a bar chart, and rank y-axis from low to high order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Return a histogram on what are the different card types, and how many cards are there of each?, and sort from low to high by the Y."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","Show all card type codes and the number of cards in each type Plot them as bar chart, and rank from low to high by the Y."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) ASC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Credit', 'Debit']], 'y_data': [[7, 8]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Credit, Debit","7, 8","What are the different card types, and how many cards are there of each, and list in asc by the the total number ."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show all card type codes and the number of cards in each type Plot them as bar chart, list the total number from high to low order please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Bar chart x axis card type code y axis the total number, and display by the y-axis from high to low please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Display a bar chart for what are the different card types, and how many cards are there of each?, could you display Y from high to low order?"
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Return a histogram on what are the different card types, and how many cards are there of each?, and display by the y-axis from high to low please."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","What are the different card types, and how many cards are there of each, I want to order total number in descending order."
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC",Bar,Medium,customers_card_transactions,"{'chart': 'bar', 'x_name': 'card_type_code', 'y_name': 'count(*)', 'x_data': [['Debit', 'Credit']], 'y_data': [[8, 7]], 'classify': [], 'describe': ''}",bar,card_type_code,count(*),"Debit, Credit","8, 7","Show all card type codes and the number of cards in each type by a bar chart, I want to sort Y in descending order."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5","Show the number of documents for each location code in a bar chart, and could you rank from low to high by the X?"
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5","How many documents for different location code? Plot a bar chart to show the proportion, list x-axis in asc order please."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"b, c, e, n, x","3, 2, 4, 1, 5","Bar chart x axis location code y axis how many location code, and list x-axis in asc order please."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, n, e, c, b","5, 1, 4, 2, 3","How many documents for different location code? Plot a bar chart to show the proportion, and sort in desc by the Location_Code please."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, n, e, c, b","5, 1, 4, 2, 3","Show the number of documents for each location code in a bar chart, I want to order from high to low by the bars."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, n, e, c, b","5, 1, 4, 2, 3","Bar chart x axis location code y axis how many location code, and I want to order from high to low by the bars."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"n, c, b, e, x","1, 2, 3, 4, 5","Bar chart x axis location code y axis how many location code, and show by the Y-axis in ascending."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"n, c, b, e, x","1, 2, 3, 4, 5","How many documents for different location code? Plot a bar chart to show the proportion, and order y-axis in ascending order please."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"n, c, b, e, x","1, 2, 3, 4, 5","Show the number of documents for each location code in a bar chart, and could you list from low to high by the Y?"
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, e, b, c, n","5, 4, 3, 2, 1","Show the number of documents for each location code in a bar chart, and I want to rank by the y axis in desc."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, e, b, c, n","5, 4, 3, 2, 1","How many documents for different location code? Plot a bar chart to show the proportion, and show Y in desc order."
"SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Location_Code) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'COUNT(Location_Code)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Location_Code'}",bar,Location_Code,COUNT(Location_Code),"x, e, b, c, n","5, 4, 3, 2, 1","Bar chart x axis location code y axis how many location code, display by the y-axis from high to low."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5","Show the number of documents in different starting date and group by starting date with a line chart, list by the X from low to high."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5","How many documents in different starting date? Return a line chart grouping by starting date, and list by the X from low to high."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972-03-31', '1985-05-13', '1986-10-14', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2017-01-06']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972-03-31, 1985-05-13, 1986-10-14, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2017-01-06","3, 1, 2, 1, 1, 1, 1, 5","Plot how many date in location from over date in location from in a line chart, and list by the X from low to high."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017-01-06', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1986-10-14', '1985-05-13', '1972-03-31']], 'y_data': [[5, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017-01-06, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1986-10-14, 1985-05-13, 1972-03-31","5, 1, 1, 1, 1, 2, 1, 3","Plot how many date in location from over date in location from in a line chart, display in desc by the x-axis."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017-01-06', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1986-10-14', '1985-05-13', '1972-03-31']], 'y_data': [[5, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017-01-06, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1986-10-14, 1985-05-13, 1972-03-31","5, 1, 1, 1, 1, 2, 1, 3","How many documents in different starting date? Return a line chart grouping by starting date, list by the X in descending."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017-01-06', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1986-10-14', '1985-05-13', '1972-03-31']], 'y_data': [[5, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY Date_in_Location_From'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017-01-06, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1986-10-14, 1985-05-13, 1972-03-31","5, 1, 1, 1, 1, 2, 1, 3","Show the number of documents in different starting date and group by starting date with a line chart, list by the X in descending."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5","Can you draw the trend of how many date in location from over the date in location from?, and list by the x-axis from low to high."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5","Show the number of documents in different starting date and bin starting date by year interval with a line chart, sort X in asc order please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 3, 0, 0, 1, 0, 3, 0, 5]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 3, 0, 0, 1, 0, 3, 0, 5","How many documents in different starting date? Return a line chart binning starting date by year interval, sort X in asc order please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[5, 0, 3, 0, 1, 0, 0, 3, 0, 3]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","5, 0, 3, 0, 1, 0, 0, 3, 0, 3","Show the number of documents in different starting date and bin starting date by year interval with a line chart, and list x axis in descending order."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[5, 0, 3, 0, 1, 0, 0, 3, 0, 3]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","5, 0, 3, 0, 1, 0, 0, 3, 0, 3","Can you draw the trend of how many date in location from over the date in location from?, order by the x-axis in descending."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY Date_in_Location_From DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[5, 0, 3, 0, 1, 0, 0, 3, 0, 3]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","5, 0, 3, 0, 1, 0, 0, 3, 0, 3","How many documents in different starting date? Return a line chart binning starting date by year interval, order in descending by the Date_in_Location_From please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Sat', 'Thur', 'Wed', 'Sun', 'Mon', 'Tue', 'Fri']], 'y_data': [[0, 0, 0, 1, 2, 3, 9]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Sat, Thur, Wed, Sun, Mon, Tue, Fri","0, 0, 0, 1, 2, 3, 9","Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, list in ascending by the Y-axis."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Sat', 'Thur', 'Wed', 'Sun', 'Mon', 'Tue', 'Fri']], 'y_data': [[0, 0, 0, 1, 2, 3, 9]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Sat, Thur, Wed, Sun, Mon, Tue, Fri","0, 0, 0, 1, 2, 3, 9","Bar chart x axis date in location from y axis the number of date in location from, and sort by the y axis in asc."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Sat', 'Thur', 'Wed', 'Sun', 'Mon', 'Tue', 'Fri']], 'y_data': [[0, 0, 0, 1, 2, 3, 9]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Sat, Thur, Wed, Sun, Mon, Tue, Fri","0, 0, 0, 1, 2, 3, 9","How many documents in different starting date? Return a bar chart binning starting date by weekday interval, could you display in ascending by the y-axis?"
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Fri', 'Tue', 'Mon', 'Sun', 'Wed', 'Thur', 'Sat']], 'y_data': [[9, 3, 2, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Fri, Tue, Mon, Sun, Wed, Thur, Sat","9, 3, 2, 1, 0, 0, 0","Bar chart x axis date in location from y axis the number of date in location from, and order by the total number in desc please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Fri', 'Tue', 'Mon', 'Sun', 'Wed', 'Thur', 'Sat']], 'y_data': [[9, 3, 2, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Fri, Tue, Mon, Sun, Wed, Thur, Sat","9, 3, 2, 1, 0, 0, 0","Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, and rank y axis in desc order please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Fri', 'Tue', 'Mon', 'Sun', 'Wed', 'Thur', 'Sat']], 'y_data': [[9, 3, 2, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Fri, Tue, Mon, Sun, Wed, Thur, Sat","9, 3, 2, 1, 0, 0, 0","How many documents in different starting date? Return a bar chart binning starting date by weekday interval, I want to sort y-axis in descending order."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1","Show the number of documents in different ending date and group by ending date with a line chart, and sort in ascending by the x-axis."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1","How many documents in different ending date? Return a line chart grouping by ending date, and rank from low to high by the Date_in_Locaton_To."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","2, 2, 2, 1, 1, 1, 1, 3, 1, 1","Can you draw the trend of how many date in locaton to over the date in locaton to?, order Date_in_Locaton_To in ascending order please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[1, 1, 3, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","1, 1, 3, 1, 1, 1, 1, 2, 2, 2","Show the number of documents in different ending date and group by ending date with a line chart, and display in desc by the X."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[1, 1, 3, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","1, 1, 3, 1, 1, 1, 1, 2, 2, 2","Can you draw the trend of how many date in locaton to over the date in locaton to?, and I want to sort x-axis in descending order please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[1, 1, 3, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","1, 1, 3, 1, 1, 1, 1, 2, 2, 2","How many documents in different ending date? Return a line chart grouping by ending date, and display in desc by the X."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1","I want to see trend of the number of date in locaton to by date in locaton to, and list by the x axis in asc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1","Show the number of documents in different ending date and bin ending date by year interval with a line chart, and list by the x axis in asc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 4, 0, 1, 1, 0, 0, 5, 1, 1","How many documents in different ending date? Return a line chart binning ending date by year interval, could you rank by the X-axis from low to high?"
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2","I want to see trend of the number of date in locaton to by date in locaton to, sort by the x axis in desc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2","How many documents in different ending date? Return a line chart binning ending date by year interval, I want to rank X in descending order."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY Date_in_Locaton_To DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 5, 0, 0, 1, 1, 0, 4, 0, 2","Show the number of documents in different ending date and bin ending date by year interval with a line chart, and I want to display X from high to low order please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Sat', 'Wed', 'Mon', 'Sun', 'Thur', 'Fri', 'Tue']], 'y_data': [[0, 0, 1, 2, 2, 4, 6]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Sat, Wed, Mon, Sun, Thur, Fri, Tue","0, 0, 1, 2, 2, 4, 6","How many documents in different ending date? Return a bar chart binning ending date by weekday, order y-axis from low to high order."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Sat', 'Wed', 'Mon', 'Sun', 'Thur', 'Fri', 'Tue']], 'y_data': [[0, 0, 1, 2, 2, 4, 6]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Sat, Wed, Mon, Sun, Thur, Fri, Tue","0, 0, 1, 2, 2, 4, 6","Show the number of documents in different ending date and bin ending date by weekday with a bar chart, and could you display by the y axis from low to high?"
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Sat', 'Wed', 'Mon', 'Sun', 'Thur', 'Fri', 'Tue']], 'y_data': [[0, 0, 1, 2, 2, 4, 6]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Sat, Wed, Mon, Sun, Thur, Fri, Tue","0, 0, 1, 2, 2, 4, 6","Create a bar chart showing the number of date in locaton to across date in locaton to, could you display by the y axis from low to high?"
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Tue', 'Fri', 'Thur', 'Sun', 'Mon', 'Wed', 'Sat']], 'y_data': [[6, 4, 2, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Tue, Fri, Thur, Sun, Mon, Wed, Sat","6, 4, 2, 2, 1, 0, 0","Create a bar chart showing the number of date in locaton to across date in locaton to, I want to show the number of date in locaton to from high to low order."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Tue', 'Fri', 'Thur', 'Sun', 'Mon', 'Wed', 'Sat']], 'y_data': [[6, 4, 2, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Tue, Fri, Thur, Sun, Mon, Wed, Sat","6, 4, 2, 2, 1, 0, 0","How many documents in different ending date? Return a bar chart binning ending date by weekday, and rank by the total number in descending."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations  ORDER BY COUNT(Date_in_Locaton_To) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Tue', 'Fri', 'Thur', 'Sun', 'Mon', 'Wed', 'Sat']], 'y_data': [[6, 4, 2, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Tue, Fri, Thur, Sun, Mon, Wed, Sat","6, 4, 2, 2, 1, 0, 0","Show the number of documents in different ending date and bin ending date by weekday with a bar chart, and rank by the total number in descending."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6","Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, sort x axis from low to high order."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6","Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, display Date_in_Location_From from low to high order please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6","Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order X in asc order."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[3, 0, 5, 0, 0, 1, 0, 3, 0, 6], [4, 0, 5, 0, 0, 1, 0, 3, 0, 7], [5, 0, 5, 0, 0, 1, 0, 5, 0, 8], [5, 0, 5, 0, 0, 1, 0, 5, 0, 9], [6, 0, 6, 0, 0, 2, 0, 6, 0, 10]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","3, 0, 5, 0, 0, 1, 0, 3, 0, 6","Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and display x-axis in asc order."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[6, 0, 3, 0, 1, 0, 0, 5, 0, 3], [7, 0, 3, 0, 1, 0, 0, 5, 0, 4], [8, 0, 5, 0, 1, 0, 0, 5, 0, 5], [9, 0, 5, 0, 1, 0, 0, 5, 0, 5], [10, 0, 6, 0, 2, 0, 0, 6, 0, 6]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","6, 0, 3, 0, 1, 0, 0, 5, 0, 3","Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and order in descending by the Date_in_Location_From please."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[6, 0, 3, 0, 1, 0, 0, 5, 0, 3], [7, 0, 3, 0, 1, 0, 0, 5, 0, 4], [8, 0, 5, 0, 1, 0, 0, 5, 0, 5], [9, 0, 5, 0, 1, 0, 0, 5, 0, 5], [10, 0, 6, 0, 2, 0, 0, 6, 0, 6]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","6, 0, 3, 0, 1, 0, 0, 5, 0, 3","Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code, and could you rank from high to low by the X?"
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Location_From DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[6, 0, 3, 0, 1, 0, 0, 5, 0, 3], [7, 0, 3, 0, 1, 0, 0, 5, 0, 4], [8, 0, 5, 0, 1, 0, 0, 5, 0, 5], [9, 0, 5, 0, 1, 0, 0, 5, 0, 5], [10, 0, 6, 0, 2, 0, 0, 6, 0, 6]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY YEAR'}",line,Date_in_Location_From,COUNT(Date_in_Location_From),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","6, 0, 3, 0, 1, 0, 0, 5, 0, 3","Show the number of documents in different starting date Bin starting date by year interval and group by location code with a group line chart, and order in desc by the X."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Sat', 'Thur', 'Wed', 'Sun', 'Mon', 'Tue', 'Fri']], 'y_data': [[0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 1, 3], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Sat, Thur, Wed, Sun, Mon, Tue, Fri","0, 0, 0, 0, 1, 1, 1","Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, could you order by the the number of date in location from in ascending?"
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) ASC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Sat', 'Thur', 'Wed', 'Sun', 'Mon', 'Tue', 'Fri']], 'y_data': [[0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 1, 3], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Sat, Thur, Wed, Sun, Mon, Tue, Fri","0, 0, 0, 0, 1, 1, 1","Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, display from low to high by the Y."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Fri', 'Tue', 'Mon', 'Sun', 'Wed', 'Thur', 'Sat']], 'y_data': [[1, 1, 1, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0], [3, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 0, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Fri, Tue, Mon, Sun, Wed, Thur, Sat","1, 1, 1, 0, 0, 0, 0","Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, and order by the y axis in descending."
"SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Location_From) DESC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Location_From', 'y_name': 'COUNT(Date_in_Location_From)', 'x_data': [['Fri', 'Tue', 'Mon', 'Sun', 'Wed', 'Thur', 'Sat']], 'y_data': [[1, 1, 1, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0], [3, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 0, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Location_From BY WEEKDAY'}",bar,Date_in_Location_From,COUNT(Date_in_Location_From),"Fri, Tue, Mon, Sun, Wed, Thur, Sat","1, 1, 1, 0, 0, 0, 0","Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, show by the y-axis in desc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0","Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, and list by the Date_in_Locaton_To in ascending."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0","I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort by the Date_in_Locaton_To in asc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0","I want to see trend the number of date in locaton to over date in locaton to by Location_Code, and sort X in ascending order."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To ASC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976-06-15', '1986-10-14', '1987-11-05', '1995-01-01', '1997-03-10', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 1, 1, 1, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976-06-15, 1986-10-14, 1987-11-05, 1995-01-01, 1997-03-10, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","0, 1, 0, 1, 0, 0, 0, 1, 0, 0","Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, rank by the x axis from low to high please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","0, 0, 1, 0, 0, 0, 1, 0, 1, 0","Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, I want to order in descending by the X-axis please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","0, 0, 1, 0, 0, 0, 1, 0, 1, 0","Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, show by the x axis in desc."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","0, 0, 1, 0, 0, 0, 1, 0, 1, 0","I want to see trend the number of date in locaton to over date in locaton to by Location_Code, could you sort in descending by the Date_in_Locaton_To please?"
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ,  Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",Grouping Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '1997-03-10', '1995-01-01', '1987-11-05', '1986-10-14', '1976-06-15']], 'y_data': [[0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, GROUP BY Date_in_Locaton_To'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 1997-03-10, 1995-01-01, 1987-11-05, 1986-10-14, 1976-06-15","0, 0, 1, 0, 0, 0, 1, 0, 1, 0","I want to see trend the number of date in locaton to over date in locaton to by Location_Code, order by the X-axis in descending."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1","Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, and rank in asc by the x-axis."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1","Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, and I want to show by the X-axis from low to high."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1","Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, show by the X from low to high."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To ASC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012~2015', '2016~2017']], 'y_data': [[2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1], [2, 0, 6, 0, 2, 1, 0, 0, 7, 1, 1], [2, 0, 8, 0, 2, 1, 0, 0, 8, 1, 2], [2, 0, 8, 0, 2, 2, 0, 0, 8, 1, 2], [4, 0, 8, 0, 2, 2, 0, 0, 10, 2, 2]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012~2015, 2016~2017","2, 0, 5, 0, 2, 1, 0, 0, 6, 1, 1","Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, show x axis in asc order please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2], [1, 1, 7, 0, 0, 1, 2, 0, 6, 0, 2], [2, 1, 8, 0, 0, 1, 2, 0, 8, 0, 2], [2, 1, 8, 0, 0, 2, 2, 0, 8, 0, 2], [2, 2, 10, 0, 0, 2, 2, 0, 8, 0, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2","Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, display by the X-axis from high to low please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2], [1, 1, 7, 0, 0, 1, 2, 0, 6, 0, 2], [2, 1, 8, 0, 0, 1, 2, 0, 8, 0, 2], [2, 1, 8, 0, 0, 2, 2, 0, 8, 0, 2], [2, 2, 10, 0, 0, 2, 2, 0, 8, 0, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2","Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, display from high to low by the x axis."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2], [1, 1, 7, 0, 0, 1, 2, 0, 6, 0, 2], [2, 1, 8, 0, 0, 1, 2, 0, 8, 0, 2], [2, 1, 8, 0, 0, 2, 2, 0, 8, 0, 2], [2, 2, 10, 0, 0, 2, 2, 0, 8, 0, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2","Show the number of documents in different ending date Bin ending date by year interval and group by location code with a group line chart, I want to display by the Date_in_Locaton_To from high to low."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY Date_in_Locaton_To DESC",Grouping Line,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['2016~2017', '2012~2015', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2], [1, 1, 7, 0, 0, 1, 2, 0, 6, 0, 2], [2, 1, 8, 0, 0, 1, 2, 0, 8, 0, 2], [2, 1, 8, 0, 0, 2, 2, 0, 8, 0, 2], [2, 2, 10, 0, 0, 2, 2, 0, 8, 0, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY YEAR'}",line,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"2016~2017, 2012~2015, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","1, 1, 6, 0, 0, 1, 2, 0, 5, 0, 2","Give me line charts of worldwide gross how many date in locaton to over year date in locaton to by major genres Location_Code, and sort in desc by the Date_in_Locaton_To please."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Sat', 'Wed', 'Mon', 'Sun', 'Thur', 'Fri', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Sat, Wed, Mon, Sun, Thur, Fri, Tue","0, 0, 0, 0, 1, 1, 1","Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart, order by the Y in ascending."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) ASC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Sat', 'Wed', 'Mon', 'Sun', 'Thur', 'Fri', 'Tue']], 'y_data': [[0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 4]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Sat, Wed, Mon, Sun, Thur, Fri, Tue","0, 0, 0, 0, 1, 1, 1","Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code, order by the Y in ascending."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Tue', 'Fri', 'Thur', 'Sun', 'Mon', 'Wed', 'Sat']], 'y_data': [[1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [4, 1, 0, 0, 0, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Tue, Fri, Thur, Sun, Mon, Wed, Sat","1, 1, 1, 0, 0, 0, 0","Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code, rank in desc by the y axis."
"SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC",Stacked Bar,Extra Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_in_Locaton_To', 'y_name': 'COUNT(Date_in_Locaton_To)', 'x_data': [['Tue', 'Fri', 'Thur', 'Sun', 'Mon', 'Wed', 'Sat']], 'y_data': [[1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [4, 1, 0, 0, 0, 0, 0]], 'classify': ['b', 'c', 'e', 'n', 'x'], 'describe': 'GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY'}",bar,Date_in_Locaton_To,COUNT(Date_in_Locaton_To),"Tue, Fri, Thur, Sun, Mon, Wed, Sat","1, 1, 1, 0, 0, 0, 0","Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart, could you display in descending by the y axis please?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","Return a histogram on what is the code of each role and the number of employees in each role?, and I want to display bars in ascending order."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","Show all role codes and the number of employees in each role Show bar chart, and show by the X-axis in ascending."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","Show all role codes and the number of employees in each role by a bar chart, could you sort from low to high by the names?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","Bar chart x axis role code y axis the total number, order X-axis from low to high order please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","What is the code of each role and the number of employees in each role Show bar chart, order X-axis from low to high order please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'HR', 'MG', 'PR', 'PT']], 'y_data': [[7, 1, 1, 5, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, HR, MG, PR, PT","7, 1, 1, 5, 1","Give me a histogram for what is the code of each role and the number of employees in each role?, could you sort from low to high by the names?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","Bar chart x axis role code y axis the total number, I want to display in descending by the Role_Code."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","Show all role codes and the number of employees in each role Show bar chart, and could you show by the bars in desc please?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","Show all role codes and the number of employees in each role by a bar chart, display from high to low by the X-axis please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","What is the code of each role and the number of employees in each role Show bar chart, and I want to show by the x axis in desc please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","Return a histogram on what is the code of each role and the number of employees in each role?, sort x axis in desc order please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY Role_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['PT', 'PR', 'MG', 'HR', 'ED']], 'y_data': [[1, 5, 1, 1, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"PT, PR, MG, HR, ED","1, 5, 1, 1, 7","Give me a histogram for what is the code of each role and the number of employees in each role?, and sort x axis in desc order please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","Show all role codes and the number of employees in each role by a bar chart, show in ascending by the Y-axis please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","Return a histogram on what is the code of each role and the number of employees in each role?, and show in ascending by the Y-axis please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","Show all role codes and the number of employees in each role Show bar chart, and show from low to high by the y axis."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","Give me a histogram for what is the code of each role and the number of employees in each role?, and could you sort y axis in ascending order?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","Bar chart x axis role code y axis the total number, and show in ascending by the Y-axis please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['HR', 'MG', 'PT', 'PR', 'ED']], 'y_data': [[1, 1, 1, 5, 7]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"HR, MG, PT, PR, ED","1, 1, 1, 5, 7","What is the code of each role and the number of employees in each role Show bar chart, could you sort y axis in ascending order?"
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","What is the code of each role and the number of employees in each role Show bar chart, and order by the y axis in desc please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","Show all role codes and the number of employees in each role Show bar chart, I want to rank from high to low by the Y-axis please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","Bar chart x axis role code y axis the total number, sort by the the total number from high to low."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","Return a histogram on what is the code of each role and the number of employees in each role?, order by the y axis in desc please."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","Show all role codes and the number of employees in each role by a bar chart, and sort by the the total number from high to low."
"SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Role_Code', 'y_name': 'count(*)', 'x_data': [['ED', 'PR', 'PT', 'MG', 'HR']], 'y_data': [[7, 5, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Role_Code,count(*),"ED, PR, PT, MG, HR","7, 5, 1, 1, 1","Give me a histogram for what is the code of each role and the number of employees in each role?, and I want to order in descending by the Y-axis."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Sun', 'Fri', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 2, 3, 4, 5]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Sat, Wed, Thur, Sun, Fri, Mon, Tue","0, 0, 1, 2, 3, 4, 5","Bar chart x axis calendar date y axis the number of calendar date, and display by the y axis from low to high."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Sun', 'Fri', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 2, 3, 4, 5]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Sat, Wed, Thur, Sun, Fri, Mon, Tue","0, 0, 1, 2, 3, 4, 5","Show all calendar dates and bin by weekday in a bar chart, could you order how many calendar date from low to high order?"
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Sat', 'Wed', 'Thur', 'Sun', 'Fri', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 2, 3, 4, 5]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Sat, Wed, Thur, Sun, Fri, Mon, Tue","0, 0, 1, 2, 3, 4, 5","What are all the calendar dates? Show a bar chart binning calendar date by weekday, display by the y axis from low to high."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Tue', 'Mon', 'Fri', 'Sun', 'Thur', 'Wed', 'Sat']], 'y_data': [[5, 4, 3, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Tue, Mon, Fri, Sun, Thur, Wed, Sat","5, 4, 3, 2, 1, 0, 0","Show all calendar dates and bin by weekday in a bar chart, I want to rank y axis in desc order."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Tue', 'Mon', 'Fri', 'Sun', 'Thur', 'Wed', 'Sat']], 'y_data': [[5, 4, 3, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Tue, Mon, Fri, Sun, Thur, Wed, Sat","5, 4, 3, 2, 1, 0, 0","Bar chart x axis calendar date y axis the number of calendar date, I want to display by the Y in desc."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['Tue', 'Mon', 'Fri', 'Sun', 'Thur', 'Wed', 'Sat']], 'y_data': [[5, 4, 3, 2, 1, 0, 0]], 'classify': [], 'describe': 'BIN Calendar_Date BY WEEKDAY'}",bar,Calendar_Date,COUNT(Calendar_Date),"Tue, Mon, Fri, Sun, Thur, Wed, Sat","5, 4, 3, 2, 1, 0, 0","What are all the calendar dates? Show a bar chart binning calendar date by weekday, could you display total number in desc order?"
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1","Show all calendar dates and bin by year in a line chart, list by the Calendar_Date from low to high."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1","Plot calendar date by how many calendar date as a line chart, rank X in asc order please."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date ASC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['1972~1976', '1977~1981', '1982~1986', '1987~1991', '1992~1996', '1997~2001', '2002~2006', '2007~2011', '2012~2016', '2017']], 'y_data': [[2, 0, 2, 2, 2, 1, 0, 4, 1, 1]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"1972~1976, 1977~1981, 1982~1986, 1987~1991, 1992~1996, 1997~2001, 2002~2006, 2007~2011, 2012~2016, 2017","2, 0, 2, 2, 2, 1, 0, 4, 1, 1","What are all the calendar dates? Give me a line chart binning calendar dates by year, rank from low to high by the x-axis please."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[1, 1, 4, 0, 1, 2, 2, 2, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","1, 1, 4, 0, 1, 2, 2, 2, 0, 2","What are all the calendar dates? Give me a line chart binning calendar dates by year, and list X-axis in desc order."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[1, 1, 4, 0, 1, 2, 2, 2, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","1, 1, 4, 0, 1, 2, 2, 2, 0, 2","Show all calendar dates and bin by year in a line chart, and order by the x-axis in desc."
"SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY Calendar_Date DESC",Line,Medium,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'COUNT(Calendar_Date)', 'x_data': [['2017', '2012~2016', '2007~2011', '2002~2006', '1997~2001', '1992~1996', '1987~1991', '1982~1986', '1977~1981', '1972~1976']], 'y_data': [[1, 1, 4, 0, 1, 2, 2, 2, 0, 2]], 'classify': [], 'describe': 'BIN Calendar_Date BY YEAR'}",line,Calendar_Date,COUNT(Calendar_Date),"2017, 2012~2016, 2007~2011, 2002~2006, 1997~2001, 1992~1996, 1987~1991, 1982~1986, 1977~1981, 1972~1976","1, 1, 4, 0, 1, 2, 2, 2, 0, 2","Plot calendar date by how many calendar date as a line chart, list x-axis in descending order please."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","Return a line on what are all the calendar dates and day Numbers?, and order from low to high by the x-axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","Show all calendar dates and day Numbers Plot them as line chart, list by the X-axis in asc please."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","Show me the trend about what are all the calendar dates and day Numbers?, list by the X-axis in asc please."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","I want to see trend of day_number by calendar date, and list in asc by the x-axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","Show all calendar dates and day Numbers in a line chart, list in asc by the x-axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date ASC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['1972-03-31', '1976-06-15', '1985-05-13', '1986-10-14', '1987-11-05', '1988-02-01', '1994-11-15', '1995-01-01', '1997-03-10', '2007-05-28', '2008-06-08', '2009-08-18', '2010-11-26', '2012-07-03', '2017-01-06']], 'y_data': [[5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"1972-03-31, 1976-06-15, 1985-05-13, 1986-10-14, 1987-11-05, 1988-02-01, 1994-11-15, 1995-01-01, 1997-03-10, 2007-05-28, 2008-06-08, 2009-08-18, 2010-11-26, 2012-07-03, 2017-01-06","5, 7, 7, 1, 3, 8, 9, 1, 7, 2, 3, 8, 7, 7, 8","What are all the calendar dates and day Numbers Show the trend, sort X-axis from low to high order."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","Show all calendar dates and day Numbers Plot them as line chart, rank by the Calendar_Date from high to low please."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","I want to see trend of day_number by calendar date, rank in descending by the x axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","What are all the calendar dates and day Numbers Show the trend, and rank in descending by the x axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","Show me the trend about what are all the calendar dates and day Numbers?, rank in descending by the x-axis please."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","Show all calendar dates and day Numbers in a line chart, sort in desc by the x axis."
"SELECT Calendar_Date , Day_Number FROM Ref_calendar ORDER BY Calendar_Date DESC",Line,Easy,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Calendar_Date', 'y_name': 'Day_Number', 'x_data': [['2017-01-06', '2012-07-03', '2010-11-26', '2009-08-18', '2008-06-08', '2007-05-28', '1997-03-10', '1995-01-01', '1994-11-15', '1988-02-01', '1987-11-05', '1986-10-14', '1985-05-13', '1976-06-15', '1972-03-31']], 'y_data': [[8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5]], 'classify': [], 'describe': ''}",line,Calendar_Date,Day_Number,"2017-01-06, 2012-07-03, 2010-11-26, 2009-08-18, 2008-06-08, 2007-05-28, 1997-03-10, 1995-01-01, 1994-11-15, 1988-02-01, 1987-11-05, 1986-10-14, 1985-05-13, 1976-06-15, 1972-03-31","8, 7, 7, 8, 3, 2, 7, 1, 9, 8, 3, 1, 7, 7, 5","Return a line on what are all the calendar dates and day Numbers?, and rank in descending by the X-axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","Show the location codes and the number of documents in each location in a bar chart, and list from low to high by the bars."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","Display a bar chart for what is the code of each location and the number of documents in that location?, sort in ascending by the x axis please."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","what is the code of each location and the number of documents in that location?, and could you order by the Location_Code in ascending?"
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","Create a bar chart showing the total number across location code, and order by the Location_Code in asc."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","Show the location codes and the number of documents in each location Visualize by bar chart, and list by the x-axis in asc."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['b', 'c', 'e', 'n', 'x']], 'y_data': [[3, 2, 4, 1, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"b, c, e, n, x","3, 2, 4, 1, 5","What is the code of each location and the number of documents in that location Show bar chart, sort in ascending by the x axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","Display a bar chart for what is the code of each location and the number of documents in that location?, and could you show X from high to low order?"
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","Create a bar chart showing the total number across location code, and could you show X from high to low order?"
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","Show the location codes and the number of documents in each location in a bar chart, and I want to display by the names from high to low."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","what is the code of each location and the number of documents in that location?, display in desc by the X."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","Show the location codes and the number of documents in each location Visualize by bar chart, display by the X in descending."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'n', 'e', 'c', 'b']], 'y_data': [[5, 1, 4, 2, 3]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, n, e, c, b","5, 1, 4, 2, 3","What is the code of each location and the number of documents in that location Show bar chart, and could you show bar in desc order?"
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","Create a bar chart showing the total number across location code, and list by the total number in ascending."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","Show the location codes and the number of documents in each location Visualize by bar chart, and I want to display in ascending by the Y-axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","Display a bar chart for what is the code of each location and the number of documents in that location?, list by the total number in ascending."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","what is the code of each location and the number of documents in that location?, I want to list in asc by the y-axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","Show the location codes and the number of documents in each location in a bar chart, list total number in asc order."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) ASC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['n', 'c', 'b', 'e', 'x']], 'y_data': [[1, 2, 3, 4, 5]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"n, c, b, e, x","1, 2, 3, 4, 5","What is the code of each location and the number of documents in that location Show bar chart, and list total number in asc order."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","Display a bar chart for what is the code of each location and the number of documents in that location?, rank in descending by the y-axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","what is the code of each location and the number of documents in that location?, and rank in descending by the y-axis."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","What is the code of each location and the number of documents in that location Show bar chart, and display in desc by the the total number ."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","Create a bar chart showing the total number across location code, and order from high to low by the total number."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","Show the location codes and the number of documents in each location Visualize by bar chart, display by the total number from high to low."
"SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC",Bar,Medium,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Location_Code', 'y_name': 'count(*)', 'x_data': [['x', 'e', 'b', 'c', 'n']], 'y_data': [[5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Location_Code,count(*),"x, e, b, c, n","5, 4, 3, 2, 1","Show the location codes and the number of documents in each location in a bar chart, order the total number in descending order."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) ASC",Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Fri', 'Sat', 'Wed', 'Thur', 'Mon', 'Sun', 'Tue']], 'y_data': [[0, 0, 0, 1, 3, 4, 7]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Fri, Sat, Wed, Thur, Mon, Sun, Tue","0, 0, 0, 1, 3, 4, 7","Return a bar chart showing the number of documents stored in each weekday, and list in asc by the Y please."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) ASC",Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Fri', 'Sat', 'Wed', 'Thur', 'Mon', 'Sun', 'Tue']], 'y_data': [[0, 0, 0, 1, 3, 4, 7]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Fri, Sat, Wed, Thur, Mon, Sun, Tue","0, 0, 0, 1, 3, 4, 7","How many documents are stored? Bin the store date by weekday in a bar chart, and order by the y-axis from low to high."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) DESC",Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Tue', 'Sun', 'Mon', 'Thur', 'Wed', 'Sat', 'Fri']], 'y_data': [[7, 4, 3, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Tue, Sun, Mon, Thur, Wed, Sat, Fri","7, 4, 3, 1, 0, 0, 0","Return a bar chart showing the number of documents stored in each weekday, order from high to low by the total number."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY COUNT(Date_Stored) DESC",Bar,Hard,cre_Doc_Tracking_DB,"{'chart': 'bar', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['Tue', 'Sun', 'Mon', 'Thur', 'Wed', 'Sat', 'Fri']], 'y_data': [[7, 4, 3, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Date_Stored BY WEEKDAY'}",bar,Date_Stored,COUNT(Date_Stored),"Tue, Sun, Mon, Thur, Wed, Sat, Fri","7, 4, 3, 1, 0, 0, 0","How many documents are stored? Bin the store date by weekday in a bar chart, and I want to show in desc by the y-axis."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored ASC",Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012']], 'y_data': [[3, 0, 2, 0, 1, 3, 0, 0, 4, 2]], 'classify': [], 'describe': 'BIN Date_Stored BY YEAR'}",line,Date_Stored,COUNT(Date_Stored),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012","3, 0, 2, 0, 1, 3, 0, 0, 4, 2","Show how many documents are stored and bin by year in a line chart, and could you rank X from low to high order please?"
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored ASC",Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['1976~1979', '1980~1983', '1984~1987', '1988~1991', '1992~1995', '1996~1999', '2000~2003', '2004~2007', '2008~2011', '2012']], 'y_data': [[3, 0, 2, 0, 1, 3, 0, 0, 4, 2]], 'classify': [], 'describe': 'BIN Date_Stored BY YEAR'}",line,Date_Stored,COUNT(Date_Stored),"1976~1979, 1980~1983, 1984~1987, 1988~1991, 1992~1995, 1996~1999, 2000~2003, 2004~2007, 2008~2011, 2012","3, 0, 2, 0, 1, 3, 0, 0, 4, 2","Show how many documents are stored and bin by year in a line chart, and order by the X-axis from low to high please."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored DESC",Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['2012', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[2, 4, 0, 0, 3, 1, 0, 2, 0, 3]], 'classify': [], 'describe': 'BIN Date_Stored BY YEAR'}",line,Date_Stored,COUNT(Date_Stored),"2012, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","2, 4, 0, 0, 3, 1, 0, 2, 0, 3","Show how many documents are stored and bin by year in a line chart, and rank by the x-axis in desc."
"SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date  ORDER BY Date_Stored DESC",Line,Hard,cre_Doc_Tracking_DB,"{'chart': 'line', 'x_name': 'Date_Stored', 'y_name': 'COUNT(Date_Stored)', 'x_data': [['2012', '2008~2011', '2004~2007', '2000~2003', '1996~1999', '1992~1995', '1988~1991', '1984~1987', '1980~1983', '1976~1979']], 'y_data': [[2, 4, 0, 0, 3, 1, 0, 2, 0, 3]], 'classify': [], 'describe': 'BIN Date_Stored BY YEAR'}",line,Date_Stored,COUNT(Date_Stored),"2012, 2008~2011, 2004~2007, 2000~2003, 1996~1999, 1992~1995, 1988~1991, 1984~1987, 1980~1983, 1976~1979","2, 4, 0, 0, 3, 1, 0, 2, 0, 3","Show how many documents are stored and bin by year in a line chart, and sort by the Date_Stored from high to low please."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Flower Awards', 'LA Awards', 'Panasonic Awards']], 'y_data': [[2, 5, 1]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Flower Awards, LA Awards, Panasonic Awards","2, 5, 1","Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, display names in asc order."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Flower Awards', 'LA Awards', 'Panasonic Awards']], 'y_data': [[2, 5, 1]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Flower Awards, LA Awards, Panasonic Awards","2, 5, 1","Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, could you show by the X-axis from low to high?"
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'LA Awards', 'Flower Awards']], 'y_data': [[1, 5, 2]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, LA Awards, Flower Awards","1, 5, 2","Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, rank in desc by the x-axis please."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Festival_Name DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'LA Awards', 'Flower Awards']], 'y_data': [[1, 5, 2]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, LA Awards, Flower Awards","1, 5, 2","Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and order by the bar in descending."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T1.Festival_ID ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5","Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and could you list by the total number in asc please?"
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T1.Festival_ID ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['Panasonic Awards', 'Flower Awards', 'LA Awards']], 'y_data': [[1, 2, 5]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"Panasonic Awards, Flower Awards, LA Awards","1, 2, 5","Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, and show by the y-axis from low to high."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T1.Festival_ID DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['LA Awards', 'Flower Awards', 'Panasonic Awards']], 'y_data': [[5, 2, 1]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"LA Awards, Flower Awards, Panasonic Awards","5, 2, 1","Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, rank in descending by the y axis."
"SELECT T3.Festival_Name , T1.Festival_ID FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T1.Festival_ID DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Festival_Name', 'y_name': 'Festival_ID', 'x_data': [['LA Awards', 'Flower Awards', 'Panasonic Awards']], 'y_data': [[5, 2, 1]], 'classify': [], 'describe': ''}",bar,Festival_Name,Festival_ID,"LA Awards, Flower Awards, Panasonic Awards","5, 2, 1","Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and show in desc by the total number."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2",", I want to list by the bars from low to high please."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Music/Variety Show', 'Program Talent Show']], 'y_data': [[2, 2, 3, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Music/Variety Show, Program Talent Show","2, 2, 3, 2","Show the total number from each type, and order names in asc order."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Program Talent Show', 'Program Music/Variety Show', 'Presenter Talent Show', 'Presenter Music/Variety Show']], 'y_data': [[2, 3, 2, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Program Talent Show, Program Music/Variety Show, Presenter Talent Show, Presenter Music/Variety Show","2, 3, 2, 2",", and order by the bar in desc."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Program Talent Show', 'Program Music/Variety Show', 'Presenter Talent Show', 'Presenter Music/Variety Show']], 'y_data': [[2, 3, 2, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Program Talent Show, Program Music/Variety Show, Presenter Talent Show, Presenter Music/Variety Show","2, 3, 2, 2","Show the total number from each type, and I want to sort names from high to low order."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY COUNT(*) ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Talent Show', 'Program Music/Variety Show']], 'y_data': [[2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Talent Show, Program Music/Variety Show","2, 2, 2, 3",", and order in asc by the y axis."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY COUNT(*) ASC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Presenter Music/Variety Show', 'Presenter Talent Show', 'Program Talent Show', 'Program Music/Variety Show']], 'y_data': [[2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Presenter Music/Variety Show, Presenter Talent Show, Program Talent Show, Program Music/Variety Show","2, 2, 2, 3","Show the total number from each type, and order y axis in ascending order."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Program Music/Variety Show', 'Program Talent Show', 'Presenter Talent Show', 'Presenter Music/Variety Show']], 'y_data': [[3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Program Music/Variety Show, Program Talent Show, Presenter Talent Show, Presenter Music/Variety Show","3, 2, 2, 2","Show the total number from each type, and I want to sort in descending by the y-axis."
"SELECT Type , COUNT(*) FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC",Bar,Medium,entertainment_awards,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(*)', 'x_data': [['Program Music/Variety Show', 'Program Talent Show', 'Presenter Talent Show', 'Presenter Music/Variety Show']], 'y_data': [[3, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Type,COUNT(*),"Program Music/Variety Show, Program Talent Show, Presenter Talent Show, Presenter Music/Variety Show","3, 2, 2, 2",", rank in desc by the the total number ."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67","Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and sort in asc by the bars."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Austria', 'Finland', 'Sweden']], 'y_data': [[58.66666666666666, 47.45, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Austria, Finland, Sweden","58.66666666666666, 47.45, 67","Show the names of countries and the average speed of roller coasters from each country with a bar chart, sort in asc by the bars."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Sweden', 'Finland', 'Austria']], 'y_data': [[67, 47.45, 58.66666666666666]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Sweden, Finland, Austria","67, 47.45, 58.66666666666666","Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, sort from high to low by the Name please."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name DESC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Sweden', 'Finland', 'Austria']], 'y_data': [[67, 47.45, 58.66666666666666]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Sweden, Finland, Austria","67, 47.45, 58.66666666666666","Show the names of countries and the average speed of roller coasters from each country with a bar chart, and show by the bars in desc please."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Finland', 'Austria', 'Sweden']], 'y_data': [[47.45, 58.66666666666666, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Finland, Austria, Sweden","47.45, 58.66666666666666, 67","Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show in asc by the Y?"
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) ASC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Finland', 'Austria', 'Sweden']], 'y_data': [[47.45, 58.66666666666666, 67]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Finland, Austria, Sweden","47.45, 58.66666666666666, 67","Show the names of countries and the average speed of roller coasters from each country with a bar chart, display by the y-axis in asc."
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Sweden', 'Austria', 'Finland']], 'y_data': [[67, 58.66666666666666, 47.45]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Sweden, Austria, Finland","67, 58.66666666666666, 47.45","Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show y-axis from high to low order?"
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY avg(T2.Speed) DESC",Bar,Hard,roller_coaster,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'avg(T2.Speed)', 'x_data': [['Sweden', 'Austria', 'Finland']], 'y_data': [[67, 58.66666666666666, 47.45]], 'classify': [], 'describe': ''}",bar,Name,avg(T2.Speed),"Sweden, Austria, Finland","67, 58.66666666666666, 47.45","Show the names of countries and the average speed of roller coasters from each country with a bar chart, and I want to display by the y axis from high to low."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","What is the average price of the products for each category, could you list by the bars in ascending?"
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","Show me a bar chart for what is the average price of the products for each category?, show from low to high by the x axis."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","Return the average price of products that have each category code in a bar chart, sort in ascending by the names."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","A bar chart about what is the average price of the products for each category?, and rank product_category_code in ascending order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","Return the average price of products that have each category code, and sort in ascending by the names."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Book', 'Food', 'Hardware']], 'y_data': [[35, 2.88, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Book, Food, Hardware","35, 2.88, 66.67","Bar graph to show the average of product price from different product category code, show names from low to high order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","What is the average price of the products for each category, and sort bars in descending order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","Return the average price of products that have each category code, and show X in desc order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","Show me a bar chart for what is the average price of the products for each category?, and I want to order bar from high to low order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","A bar chart about what is the average price of the products for each category?, sort bars in descending order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","Return the average price of products that have each category code in a bar chart, could you rank x axis in desc order?"
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY product_category_code DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Food', 'Book']], 'y_data': [[66.67, 2.88, 35]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Food, Book","66.67, 2.88, 35","Bar graph to show the average of product price from different product category code, and show bar in descending order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","Show me a bar chart for what is the average price of the products for each category?, order by the Y from low to high."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","Bar graph to show the average of product price from different product category code, and I want to display by the Y-axis in ascending."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","Return the average price of products that have each category code in a bar chart, and list y axis from low to high order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","A bar chart about what is the average price of the products for each category?, and rank from low to high by the y axis."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","Return the average price of products that have each category code, and order by the mean product price in asc."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Food', 'Book', 'Hardware']], 'y_data': [[2.88, 35, 66.67]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Food, Book, Hardware","2.88, 35, 66.67","What is the average price of the products for each category, list y axis from low to high order."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","Return the average price of products that have each category code in a bar chart, and order Y in desc order please."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","A bar chart about what is the average price of the products for each category?, order Y in desc order please."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","Return the average price of products that have each category code, and could you sort mean product price from high to low order please?"
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","Bar graph to show the average of product price from different product category code, and order Y in desc order please."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","What is the average price of the products for each category, I want to show from high to low by the mean product price please."
"SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) DESC",Bar,Medium,customer_complaints,"{'chart': 'bar', 'x_name': 'product_category_code', 'y_name': 'avg(product_price)', 'x_data': [['Hardware', 'Book', 'Food']], 'y_data': [[66.67, 35, 2.88]], 'classify': [], 'describe': ''}",bar,product_category_code,avg(product_price),"Hardware, Book, Food","66.67, 35, 2.88","Show me a bar chart for what is the average price of the products for each category?, could you show from high to low by the y axis?"
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","what are all the different product names, and how many complains has each received?, and order X-axis in asc order."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","Draw a bar chart for what are all the different product names, and how many complains has each received?, I want to order by the X-axis in ascending please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","List the name of all products along with the number of complaints that they have received, and order from low to high by the X-axis."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","List the name of all products along with the number of complaints that they have received with a bar chart, and I want to rank by the x axis in ascending please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'Keyboard', 'Mouse', 'The Great Gatsby']], 'y_data': [[6, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, Keyboard, Mouse, The Great Gatsby","6, 1, 1, 4","What are all the different product names, and how many complains has each received Show bar chart, sort by the X-axis from low to high please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['The Great Gatsby', 'Mouse', 'Keyboard', 'Chocolate']], 'y_data': [[4, 1, 1, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"The Great Gatsby, Mouse, Keyboard, Chocolate","4, 1, 1, 6","What are all the different product names, and how many complains has each received Show bar chart, and show in desc by the bars."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['The Great Gatsby', 'Mouse', 'Keyboard', 'Chocolate']], 'y_data': [[4, 1, 1, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"The Great Gatsby, Mouse, Keyboard, Chocolate","4, 1, 1, 6","what are all the different product names, and how many complains has each received?, rank in desc by the product_name."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['The Great Gatsby', 'Mouse', 'Keyboard', 'Chocolate']], 'y_data': [[4, 1, 1, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"The Great Gatsby, Mouse, Keyboard, Chocolate","4, 1, 1, 6","List the name of all products along with the number of complaints that they have received with a bar chart, and show in descending by the x axis."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['The Great Gatsby', 'Mouse', 'Keyboard', 'Chocolate']], 'y_data': [[4, 1, 1, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"The Great Gatsby, Mouse, Keyboard, Chocolate","4, 1, 1, 6","List the name of all products along with the number of complaints that they have received, sort in desc by the bars."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY product_name DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['The Great Gatsby', 'Mouse', 'Keyboard', 'Chocolate']], 'y_data': [[4, 1, 1, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"The Great Gatsby, Mouse, Keyboard, Chocolate","4, 1, 1, 6","Draw a bar chart for what are all the different product names, and how many complains has each received?, sort in desc by the bars."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Keyboard', 'Mouse', 'The Great Gatsby', 'Chocolate']], 'y_data': [[1, 1, 4, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Keyboard, Mouse, The Great Gatsby, Chocolate","1, 1, 4, 6","List the name of all products along with the number of complaints that they have received with a bar chart, show by the Y-axis in asc."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Keyboard', 'Mouse', 'The Great Gatsby', 'Chocolate']], 'y_data': [[1, 1, 4, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Keyboard, Mouse, The Great Gatsby, Chocolate","1, 1, 4, 6","What are all the different product names, and how many complains has each received Show bar chart, I want to display in ascending by the Y."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Keyboard', 'Mouse', 'The Great Gatsby', 'Chocolate']], 'y_data': [[1, 1, 4, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Keyboard, Mouse, The Great Gatsby, Chocolate","1, 1, 4, 6","List the name of all products along with the number of complaints that they have received, sort by the the total number from low to high please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Keyboard', 'Mouse', 'The Great Gatsby', 'Chocolate']], 'y_data': [[1, 1, 4, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Keyboard, Mouse, The Great Gatsby, Chocolate","1, 1, 4, 6","Draw a bar chart for what are all the different product names, and how many complains has each received?, sort by the the total number from low to high please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) ASC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Keyboard', 'Mouse', 'The Great Gatsby', 'Chocolate']], 'y_data': [[1, 1, 4, 6]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Keyboard, Mouse, The Great Gatsby, Chocolate","1, 1, 4, 6","what are all the different product names, and how many complains has each received?, rank in asc by the Y-axis."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'The Great Gatsby', 'Mouse', 'Keyboard']], 'y_data': [[6, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, The Great Gatsby, Mouse, Keyboard","6, 4, 1, 1","What are all the different product names, and how many complains has each received Show bar chart, and rank Y-axis in descending order."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'The Great Gatsby', 'Mouse', 'Keyboard']], 'y_data': [[6, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, The Great Gatsby, Mouse, Keyboard","6, 4, 1, 1","List the name of all products along with the number of complaints that they have received, order in desc by the y-axis."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'The Great Gatsby', 'Mouse', 'Keyboard']], 'y_data': [[6, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, The Great Gatsby, Mouse, Keyboard","6, 4, 1, 1","what are all the different product names, and how many complains has each received?, and order from high to low by the Y please."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'The Great Gatsby', 'Mouse', 'Keyboard']], 'y_data': [[6, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, The Great Gatsby, Mouse, Keyboard","6, 4, 1, 1","Draw a bar chart for what are all the different product names, and how many complains has each received?, show from high to low by the Y-axis."
"SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",Bar,Hard,customer_complaints,"{'chart': 'bar', 'x_name': 'product_name', 'y_name': 'count(*)', 'x_data': [['Chocolate', 'The Great Gatsby', 'Mouse', 'Keyboard']], 'y_data': [[6, 4, 1, 1]], 'classify': [], 'describe': ''}",bar,product_name,count(*),"Chocolate, The Great Gatsby, Mouse, Keyboard","6, 4, 1, 1","List the name of all products along with the number of complaints that they have received with a bar chart, and show from high to low by the Y-axis."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","Show all countries and the number of singers in each country Show bar chart, and I want to sort by the X in asc."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","Give me a histogram for how many singers are from each country?, and I want to sort in ascending by the names."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","Draw a bar chart of country versus the total number, and rank from low to high by the X-axis."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","Return a bar chart on how many singers are from each country?, and rank from low to high by the X-axis."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","How many singers are from each country, I want to show by the bar from low to high."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, Netherlands, United States","4, 1, 1","Show all countries and the number of singers in each country in a bar chart, and I want to sort by the X in asc."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","How many singers are from each country, and could you rank by the x-axis in descending?"
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","Show all countries and the number of singers in each country Show bar chart, and sort bar in desc order please."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","Show all countries and the number of singers in each country in a bar chart, and I want to order by the bars from high to low."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","Give me a histogram for how many singers are from each country?, and sort in descending by the names."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","Return a bar chart on how many singers are from each country?, list by the bar from high to low."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"United States, Netherlands, France","1, 1, 4","Draw a bar chart of country versus the total number, could you rank by the bar in desc?"
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","Give me a histogram for how many singers are from each country?, and could you display in ascending by the the total number ?"
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","Show all countries and the number of singers in each country Show bar chart, and show from low to high by the Y."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","Return a bar chart on how many singers are from each country?, list by the y axis in ascending."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","How many singers are from each country, show by the the total number in asc."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","Show all countries and the number of singers in each country in a bar chart, and order Y from low to high order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Netherlands, United States, France","1, 1, 4","Draw a bar chart of country versus the total number, rank y axis in ascending order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","How many singers are from each country, could you display by the y axis in descending please?"
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","Draw a bar chart of country versus the total number, and sort the total number in desc order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","Return a bar chart on how many singers are from each country?, sort the total number in desc order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","Give me a histogram for how many singers are from each country?, and sort the total number in desc order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","Show all countries and the number of singers in each country in a bar chart, show Y-axis from high to low order."
"SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"France, United States, Netherlands","4, 1, 1","Show all countries and the number of singers in each country Show bar chart, and could you sort from high to low by the Y-axis?"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","List all singer names in concerts in year 2014, and count them by a bar chart, could you display by the names from low to high?"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, display X-axis in ascending order."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","What are the number of the names of the singers who performed in a concert in 2014?, display X-axis in ascending order."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[1, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","1, 2, 1, 1, 1","A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and display bar from low to high order."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","1, 1, 1, 2, 1","List all singer names in concerts in year 2014, and count them by a bar chart, and show X from high to low order."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","1, 1, 1, 2, 1","A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, could you sort by the bar in descending please?"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","1, 1, 1, 2, 1","What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, could you sort by the bar in descending please?"
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","1, 1, 1, 2, 1","What are the number of the names of the singers who performed in a concert in 2014?, show by the bar in desc please."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Rose White', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Rose White, Timbaland, Tribal King, Justin Brown","1, 1, 1, 1, 2","What are the number of the names of the singers who performed in a concert in 2014?, order by the the number of name from low to high."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Rose White', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Rose White, Timbaland, Tribal King, Justin Brown","1, 1, 1, 1, 2","List all singer names in concerts in year 2014, and count them by a bar chart, and show by the Y-axis from low to high."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Rose White', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Rose White, Timbaland, Tribal King, Justin Brown","1, 1, 1, 1, 2","A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, order by the the number of name from low to high."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) ASC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['John Nizinik', 'Rose White', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"John Nizinik, Rose White, Timbaland, Tribal King, Justin Brown","1, 1, 1, 1, 2","What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, and list the number of name from low to high order."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'Rose White', 'John Nizinik']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Justin Brown, Tribal King, Timbaland, Rose White, John Nizinik","2, 1, 1, 1, 1","What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, list from high to low by the the number of name."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'Rose White', 'John Nizinik']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Justin Brown, Tribal King, Timbaland, Rose White, John Nizinik","2, 1, 1, 1, 1","A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and order from high to low by the total number."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'Rose White', 'John Nizinik']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Justin Brown, Tribal King, Timbaland, Rose White, John Nizinik","2, 1, 1, 1, 1","List all singer names in concerts in year 2014, and count them by a bar chart, list from high to low by the the number of name."
"SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY COUNT(Name) DESC",Bar,Extra Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'Rose White', 'John Nizinik']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Justin Brown, Tribal King, Timbaland, Rose White, John Nizinik","2, 1, 1, 1, 1","What are the number of the names of the singers who performed in a concert in 2014?, could you show the number of name in desc order?"
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1","Give me a bar chart for the number of country of each country, list by the x-axis from low to high please."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1","What is the number of singers for each country? Show a bar chart, display by the names in ascending."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, Netherlands, United States","4, 1, 1","Show the number of singers in each country with a bar chart, and list by the x-axis from low to high please."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Netherlands, France","1, 1, 4","Show the number of singers in each country with a bar chart, and sort bar from high to low order."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Netherlands, France","1, 1, 4","Give me a bar chart for the number of country of each country, sort names in desc order."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Netherlands, France","1, 1, 4","What is the number of singers for each country? Show a bar chart, and sort by the bar from high to low."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Netherlands, United States, France","1, 1, 4","Show the number of singers in each country with a bar chart, display by the the number of country in asc."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Netherlands, United States, France","1, 1, 4","Give me a bar chart for the number of country of each country, and could you rank total number from low to high order?"
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Netherlands', 'United States', 'France']], 'y_data': [[1, 1, 4]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Netherlands, United States, France","1, 1, 4","What is the number of singers for each country? Show a bar chart, and list from low to high by the y-axis."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, United States, Netherlands","4, 1, 1","Give me a bar chart for the number of country of each country, and list in descending by the the number of country."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, United States, Netherlands","4, 1, 1","What is the number of singers for each country? Show a bar chart, and I want to rank y-axis in desc order."
"SELECT Country , COUNT(Country) FROM singer GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['France', 'United States', 'Netherlands']], 'y_data': [[4, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"France, United States, Netherlands","4, 1, 1","Show the number of singers in each country with a bar chart, I want to rank y-axis in desc order."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32","What is the average age of singers for each country? Visualize with a bar chart, show X-axis in ascending order."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32","Show the average of age from each country, and show from low to high by the X please."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['France', 'Netherlands', 'United States']], 'y_data': [[34.5, 52, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"France, Netherlands, United States","34.5, 52, 32","Show the average age of singers for each country with a bar chart, and order in asc by the x axis."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[32, 52, 34.5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Netherlands, France","32, 52, 34.5","Show the average age of singers for each country with a bar chart, and I want to show in descending by the X please."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[32, 52, 34.5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Netherlands, France","32, 52, 34.5","Show the average of age from each country, and rank by the x-axis in descending."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY Country DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Netherlands', 'France']], 'y_data': [[32, 52, 34.5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Netherlands, France","32, 52, 34.5","What is the average age of singers for each country? Visualize with a bar chart, order from high to low by the X-axis."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'France', 'Netherlands']], 'y_data': [[32, 34.5, 52]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, France, Netherlands","32, 34.5, 52","What is the average age of singers for each country? Visualize with a bar chart, I want to show by the Y-axis in asc."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'France', 'Netherlands']], 'y_data': [[32, 34.5, 52]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, France, Netherlands","32, 34.5, 52","Show the average of age from each country, I want to list from low to high by the total number."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'France', 'Netherlands']], 'y_data': [[32, 34.5, 52]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, France, Netherlands","32, 34.5, 52","Show the average age of singers for each country with a bar chart, and I want to show by the Y-axis in asc."
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Netherlands', 'France', 'United States']], 'y_data': [[52, 34.5, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Netherlands, France, United States","52, 34.5, 32","Show the average age of singers for each country with a bar chart, could you order from high to low by the Y-axis?"
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Netherlands', 'France', 'United States']], 'y_data': [[52, 34.5, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Netherlands, France, United States","52, 34.5, 32","Show the average of age from each country, and could you order from high to low by the Y-axis?"
"SELECT Country , AVG(Age) FROM singer GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,concert_singer,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Netherlands', 'France', 'United States']], 'y_data': [[52, 34.5, 32]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Netherlands, France, United States","52, 34.5, 32","What is the average age of singers for each country? Visualize with a bar chart, list by the total number in desc please."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","2, 3, 1, 2, 2","Give me a histogram for what are the names of the singers and number of concerts for each person?, order in asc by the names please."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","2, 3, 1, 2, 2","List singer names and number of concerts for each singer, and could you sort X-axis in asc order?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","2, 3, 1, 2, 2","A bar chart about what are the names of the singers and number of concerts for each person?, and could you display by the x axis in asc?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","2, 3, 1, 2, 2","List singer names and number of concerts for each singer with a bar chart, could you display by the x axis in asc?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['John Nizinik', 'Justin Brown', 'Rose White', 'Timbaland', 'Tribal King']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"John Nizinik, Justin Brown, Rose White, Timbaland, Tribal King","2, 3, 1, 2, 2","What are the names of the singers and number of concerts for each person Show bar chart, and sort X-axis from low to high order please."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","2, 2, 1, 3, 2","Give me a histogram for what are the names of the singers and number of concerts for each person?, and list by the Name in descending please."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","2, 2, 1, 3, 2","A bar chart about what are the names of the singers and number of concerts for each person?, and show names in desc order."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","2, 2, 1, 3, 2","What are the names of the singers and number of concerts for each person Show bar chart, and I want to show bar in desc order."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","2, 2, 1, 3, 2","List singer names and number of concerts for each singer with a bar chart, and I want to sort by the Name in desc."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tribal King', 'Timbaland', 'Rose White', 'Justin Brown', 'John Nizinik']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tribal King, Timbaland, Rose White, Justin Brown, John Nizinik","2, 2, 1, 3, 2","List singer names and number of concerts for each singer, and could you sort in descending by the X-axis please?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Rose White', 'John Nizinik', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Rose White, John Nizinik, Timbaland, Tribal King, Justin Brown","1, 2, 2, 2, 3","List singer names and number of concerts for each singer, and sort by the Y in asc."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Rose White', 'John Nizinik', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Rose White, John Nizinik, Timbaland, Tribal King, Justin Brown","1, 2, 2, 2, 3","List singer names and number of concerts for each singer with a bar chart, and rank in ascending by the y-axis."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Rose White', 'John Nizinik', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Rose White, John Nizinik, Timbaland, Tribal King, Justin Brown","1, 2, 2, 2, 3","A bar chart about what are the names of the singers and number of concerts for each person?, I want to order y-axis in ascending order."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Rose White', 'John Nizinik', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Rose White, John Nizinik, Timbaland, Tribal King, Justin Brown","1, 2, 2, 2, 3","What are the names of the singers and number of concerts for each person Show bar chart, sort in ascending by the the total number ."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Rose White', 'John Nizinik', 'Timbaland', 'Tribal King', 'Justin Brown']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Rose White, John Nizinik, Timbaland, Tribal King, Justin Brown","1, 2, 2, 2, 3","Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show in asc by the y-axis?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'John Nizinik', 'Rose White']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Justin Brown, Tribal King, Timbaland, John Nizinik, Rose White","3, 2, 2, 2, 1","What are the names of the singers and number of concerts for each person Show bar chart, I want to show by the Y in desc."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'John Nizinik', 'Rose White']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Justin Brown, Tribal King, Timbaland, John Nizinik, Rose White","3, 2, 2, 2, 1","A bar chart about what are the names of the singers and number of concerts for each person?, list in desc by the Y."
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'John Nizinik', 'Rose White']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Justin Brown, Tribal King, Timbaland, John Nizinik, Rose White","3, 2, 2, 2, 1","List singer names and number of concerts for each singer with a bar chart, and could you display total number in descending order?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'John Nizinik', 'Rose White']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Justin Brown, Tribal King, Timbaland, John Nizinik, Rose White","3, 2, 2, 2, 1","Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show total number in desc order?"
"SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Justin Brown', 'Tribal King', 'Timbaland', 'John Nizinik', 'Rose White']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Justin Brown, Tribal King, Timbaland, John Nizinik, Rose White","3, 2, 2, 2, 1","List singer names and number of concerts for each singer, and could you show total number in desc order?"
"SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'count(*)', 'x_data': [['Bleeding Love', 'Free choice', 'Free choice 2', 'Happy Tonight', 'Party All Night', 'Wide Awake']], 'y_data': [[1, 3, 2, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Theme,count(*),"Bleeding Love, Free choice, Free choice 2, Happy Tonight, Party All Night, Wide Awake","1, 3, 2, 2, 1, 1","What is the number of each theme? Plot as a bar chart, and list x-axis in ascending order."
"SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY Theme DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'count(*)', 'x_data': [['Wide Awake', 'Party All Night', 'Happy Tonight', 'Free choice 2', 'Free choice', 'Bleeding Love']], 'y_data': [[1, 1, 2, 2, 3, 1]], 'classify': [], 'describe': ''}",bar,Theme,count(*),"Wide Awake, Party All Night, Happy Tonight, Free choice 2, Free choice, Bleeding Love","1, 1, 2, 2, 3, 1","What is the number of each theme? Plot as a bar chart, and could you order by the X-axis from high to low please?"
"SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) ASC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'count(*)', 'x_data': [['Bleeding Love', 'Party All Night', 'Wide Awake', 'Free choice 2', 'Happy Tonight', 'Free choice']], 'y_data': [[1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,Theme,count(*),"Bleeding Love, Party All Night, Wide Awake, Free choice 2, Happy Tonight, Free choice","1, 1, 1, 2, 2, 3","What is the number of each theme? Plot as a bar chart, I want to list the total number in ascending order."
"SELECT Theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id ORDER BY count(*) DESC",Bar,Hard,concert_singer,"{'chart': 'bar', 'x_name': 'Theme', 'y_name': 'count(*)', 'x_data': [['Free choice', 'Happy Tonight', 'Free choice 2', 'Wide Awake', 'Party All Night', 'Bleeding Love']], 'y_data': [[3, 2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Theme,count(*),"Free choice, Happy Tonight, Free choice 2, Wide Awake, Party All Night, Bleeding Love","3, 2, 2, 1, 1, 1","What is the number of each theme? Plot as a bar chart, order from high to low by the Y-axis."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Give me a histogram for how many climbers are from each country?, I want to show by the X-axis from low to high please."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Bar chart of the total number from each country, I want to show by the x-axis in ascending."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Display a bar chart for how many climbers are from each country?, and could you display X in asc order?"
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","How many climbers are from each country, rank X-axis from low to high order."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Give me a histogram for how many climbers are from each country?, and could you rank in descending by the x axis?"
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","How many climbers are from each country, order in descending by the x axis."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Display a bar chart for how many climbers are from each country?, rank Country in desc order."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY Country DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Bar chart of the total number from each country, and I want to order names from high to low order."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Display a bar chart for how many climbers are from each country?, and list from low to high by the the total number please."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Give me a histogram for how many climbers are from each country?, and show by the y axis from low to high."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","How many climbers are from each country, and sort by the Y in ascending."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['Switzerland', 'United Kingdom', 'West Germany']], 'y_data': [[1, 3, 6]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"Switzerland, United Kingdom, West Germany","1, 3, 6","Bar chart of the total number from each country, sort by the Y in ascending."
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Bar chart of the total number from each country, and could you list by the total number from high to low please?"
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Give me a histogram for how many climbers are from each country?, and could you list by the total number from high to low please?"
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","How many climbers are from each country, could you list by the total number from high to low please?"
"SELECT Country , COUNT(*) FROM climber GROUP BY Country ORDER BY COUNT(*) DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(*)', 'x_data': [['West Germany', 'United Kingdom', 'Switzerland']], 'y_data': [[6, 3, 1]], 'classify': [], 'describe': ''}",bar,Country,COUNT(*),"West Germany, United Kingdom, Switzerland","6, 3, 1","Display a bar chart for how many climbers are from each country?, and I want to order y axis in descending order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'L Currie', 'Mick Horsepole', 'Siegfried Schauz']], 'y_data': [[4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, L Currie, Mick Horsepole, Siegfried Schauz","4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895","A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, rank from low to high by the X-axis."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'L Currie', 'Mick Horsepole', 'Siegfried Schauz']], 'y_data': [[4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, L Currie, Mick Horsepole, Siegfried Schauz","4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895","What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, display from low to high by the bars please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'L Currie', 'Mick Horsepole', 'Siegfried Schauz']], 'y_data': [[4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, L Currie, Mick Horsepole, Siegfried Schauz","4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895","Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, rank from low to high by the bar."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'L Currie', 'Mick Horsepole', 'Siegfried Schauz']], 'y_data': [[4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, L Currie, Mick Horsepole, Siegfried Schauz","4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895","Show the names of climbers and the heights of mountains they climb Show bar chart, rank bar from low to high order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'L Currie', 'Mick Horsepole', 'Siegfried Schauz']], 'y_data': [[4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, L Currie, Mick Horsepole, Siegfried Schauz","4985, 4985, 5148, 5199, 5199, 5199, 5895, 4890, 4890, 5895","Show the names of climbers and the heights of mountains they climb by a bar chart, and display from low to high by the bars please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Mick Horsepole', 'L Currie', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher']], 'y_data': [[5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Mick Horsepole, L Currie, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher","5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985","Show the names of climbers and the heights of mountains they climb by a bar chart, rank x axis in desc order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Mick Horsepole', 'L Currie', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher']], 'y_data': [[5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Mick Horsepole, L Currie, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher","5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985","Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, rank x axis in desc order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Mick Horsepole', 'L Currie', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher']], 'y_data': [[5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Mick Horsepole, L Currie, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher","5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985","What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, and I want to show X-axis from high to low order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Mick Horsepole', 'L Currie', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher']], 'y_data': [[5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Mick Horsepole, L Currie, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher","5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985","A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, display in desc by the bars please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Name DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Mick Horsepole', 'L Currie', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher']], 'y_data': [[5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Mick Horsepole, L Currie, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher","5895, 4890, 4890, 5895, 5199, 5199, 5199, 5148, 4985, 4985","Show the names of climbers and the heights of mountains they climb Show bar chart, and display in desc by the bars please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['L Currie', 'Mick Horsepole', 'Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'Siegfried Schauz']], 'y_data': [[4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"L Currie, Mick Horsepole, Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, Siegfried Schauz","4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895","Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, rank y axis from low to high order."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['L Currie', 'Mick Horsepole', 'Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'Siegfried Schauz']], 'y_data': [[4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"L Currie, Mick Horsepole, Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, Siegfried Schauz","4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895","Show the names of climbers and the heights of mountains they climb by a bar chart, show from low to high by the Y-axis please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['L Currie', 'Mick Horsepole', 'Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'Siegfried Schauz']], 'y_data': [[4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"L Currie, Mick Horsepole, Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, Siegfried Schauz","4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895","Show the names of climbers and the heights of mountains they climb Show bar chart, show from low to high by the Y-axis please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['L Currie', 'Mick Horsepole', 'Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'Siegfried Schauz']], 'y_data': [[4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"L Currie, Mick Horsepole, Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, Siegfried Schauz","4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895","What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, and rank by the Height in ascending."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height ASC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['L Currie', 'Mick Horsepole', 'Arseneus Butscher', 'Charlie Freedman', 'Georg Auerbacher', 'Hans Luthringhauser', 'Horst Owesle', 'Jean Claude Castella', 'Klaus Enders', 'Siegfried Schauz']], 'y_data': [[4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895]], 'classify': [], 'describe': ''}",bar,Name,Height,"L Currie, Mick Horsepole, Arseneus Butscher, Charlie Freedman, Georg Auerbacher, Hans Luthringhauser, Horst Owesle, Jean Claude Castella, Klaus Enders, Siegfried Schauz","4890, 4890, 4985, 4985, 5148, 5199, 5199, 5199, 5895, 5895","A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, and sort by the y axis from low to high please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher', 'Mick Horsepole', 'L Currie']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher, Mick Horsepole, L Currie","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890","Show the names of climbers and the heights of mountains they climb Show bar chart, and display from high to low by the total number."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher', 'Mick Horsepole', 'L Currie']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher, Mick Horsepole, L Currie","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890","Show the names of climbers and the heights of mountains they climb by a bar chart, and could you show by the Height in desc please?"
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher', 'Mick Horsepole', 'L Currie']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher, Mick Horsepole, L Currie","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890","Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, and show by the Height in descending."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher', 'Mick Horsepole', 'L Currie']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher, Mick Horsepole, L Currie","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890","What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, display by the Y-axis from high to low please."
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",Bar,Medium,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height', 'x_data': [['Siegfried Schauz', 'Klaus Enders', 'Jean Claude Castella', 'Horst Owesle', 'Hans Luthringhauser', 'Georg Auerbacher', 'Charlie Freedman', 'Arseneus Butscher', 'Mick Horsepole', 'L Currie']], 'y_data': [[5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890]], 'classify': [], 'describe': ''}",bar,Name,Height,"Siegfried Schauz, Klaus Enders, Jean Claude Castella, Horst Owesle, Hans Luthringhauser, Georg Auerbacher, Charlie Freedman, Arseneus Butscher, Mick Horsepole, L Currie","5895, 5895, 5199, 5199, 5199, 5148, 4985, 4985, 4890, 4890","A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, and I want to show in descending by the y-axis."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2","What is the number of climbers for each mountain? Show me a bar chart, list by the x-axis in ascending."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY T2.Name ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mawenzi (Hans Meyer Pk)', 'Mount Kenya (Batian)', 'Mount Kenya (Lenana)']], 'y_data': [[2, 2, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mawenzi (Hans Meyer Pk), Mount Kenya (Batian), Mount Kenya (Lenana)","2, 2, 1, 3, 2","Show the number of climbers for each mountain in a bar chart, I want to order names from low to high order."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mount Kenya (Lenana)', 'Mount Kenya (Batian)', 'Mawenzi (Hans Meyer Pk)', 'Kibo (Uhuru Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mount Kenya (Lenana), Mount Kenya (Batian), Mawenzi (Hans Meyer Pk), Kibo (Uhuru Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk)","2, 3, 1, 2, 2","What is the number of climbers for each mountain? Show me a bar chart, order bar in descending order please."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY T2.Name DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mount Kenya (Lenana)', 'Mount Kenya (Batian)', 'Mawenzi (Hans Meyer Pk)', 'Kibo (Uhuru Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)']], 'y_data': [[2, 3, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mount Kenya (Lenana), Mount Kenya (Batian), Mawenzi (Hans Meyer Pk), Kibo (Uhuru Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk)","2, 3, 1, 2, 2","Show the number of climbers for each mountain in a bar chart, and sort Name in descending order."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mawenzi (Hans Meyer Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mount Kenya (Lenana)', 'Mount Kenya (Batian)']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mawenzi (Hans Meyer Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mount Kenya (Lenana), Mount Kenya (Batian)","1, 2, 2, 2, 3","Show the number of climbers for each mountain in a bar chart, and I want to display y-axis in ascending order."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mawenzi (Hans Meyer Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Kibo (Uhuru Pk)', 'Mount Kenya (Lenana)', 'Mount Kenya (Batian)']], 'y_data': [[1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mawenzi (Hans Meyer Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk), Kibo (Uhuru Pk), Mount Kenya (Lenana), Mount Kenya (Batian)","1, 2, 2, 2, 3","What is the number of climbers for each mountain? Show me a bar chart, I want to display y-axis in ascending order."
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mount Kenya (Batian)', 'Mount Kenya (Lenana)', 'Kibo (Uhuru Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Mawenzi (Hans Meyer Pk)']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mount Kenya (Batian), Mount Kenya (Lenana), Kibo (Uhuru Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk), Mawenzi (Hans Meyer Pk)","3, 2, 2, 2, 1","Show the number of climbers for each mountain in a bar chart, could you display in desc by the the number of name?"
"SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'COUNT(Name)', 'x_data': [['Mount Kenya (Batian)', 'Mount Kenya (Lenana)', 'Kibo (Uhuru Pk)', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)', 'Mawenzi (Hans Meyer Pk)']], 'y_data': [[3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY Name'}",bar,Name,COUNT(Name),"Mount Kenya (Batian), Mount Kenya (Lenana), Kibo (Uhuru Pk), Duwoni / Mt Speke (Vittorio Emanuele Pk), Mawenzi (Hans Meyer Pk)","3, 2, 2, 2, 1","What is the number of climbers for each mountain? Show me a bar chart, rank in desc by the Y."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and could you show in ascending by the bars?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, could you show in ascending by the bars?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the number of the countries of mountains with height bigger than 5000?, I want to display X-axis in ascending order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, and list in ascending by the x axis please."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","A bar chart for what are the number of the countries of mountains with height bigger than 5000?, and I want to show by the X in ascending."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the number of the countries of the mountains that have a height larger than 5000, could you order in ascending by the X-axis?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","Return the number of the countries of the mountains that have a height larger than 5000, display from high to low by the bar."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and display from high to low by the x axis please."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","What are the number of the countries of mountains with height bigger than 5000?, and sort names from high to low order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, list in desc by the X."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","A bar chart for what are the number of the countries of mountains with height bigger than 5000?, could you show in descending by the Country?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY Country DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, display X in descending order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and I want to list y-axis in asc order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","A bar chart for what are the number of the countries of mountains with height bigger than 5000?, order by the Y-axis in asc."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the number of the countries of the mountains that have a height larger than 5000, and I want to list y axis from low to high order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, and I want to list y-axis in asc order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","What are the number of the countries of mountains with height bigger than 5000?, I want to rank by the Y-axis from low to high."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['DR Congo Uganda', 'Kenya', 'Tanzania']], 'y_data': [[1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"DR Congo Uganda, Kenya, Tanzania","1, 1, 2","Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, could you sort y-axis in ascending order?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, list y axis in descending order."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","A bar chart for what are the number of the countries of mountains with height bigger than 5000?, and show from high to low by the total number."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","What are the number of the countries of mountains with height bigger than 5000?, and show from high to low by the total number."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, list in desc by the y axis please."
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","Return the number of the countries of the mountains that have a height larger than 5000, and could you show y axis in desc order?"
"SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Hard,climbing,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Tanzania', 'Kenya', 'DR Congo Uganda']], 'y_data': [[2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Tanzania, Kenya, DR Congo Uganda","2, 1, 1","What are the countries of mountains with height bigger than 5000, and count them by a bar chart, display by the y-axis in descending."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","A bar chart for finding the number of the names of swimmers who has a result of ""win"", and rank X in asc order."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","Find the number of the names of swimmers who has a result of ""win"", show names in ascending order please."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Ryan Cochrane', 'Sergiy Fesenko']], 'y_data': [[3, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Ryan Cochrane, Sergiy Fesenko","3, 1, 1, 2, 1, 1","Find the names of swimmers who has a result of ""win"", and count them by a bar chart, rank X in asc order."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sergiy Fesenko', 'Ryan Cochrane', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[1, 1, 2, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sergiy Fesenko, Ryan Cochrane, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","1, 1, 2, 1, 1, 3","Find the names of swimmers who has a result of ""win"", and count them by a bar chart, and could you show in desc by the bar?"
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sergiy Fesenko', 'Ryan Cochrane', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[1, 1, 2, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sergiy Fesenko, Ryan Cochrane, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","1, 1, 2, 1, 1, 3","Find the number of the names of swimmers who has a result of ""win"", and display by the bar in descending."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sergiy Fesenko', 'Ryan Cochrane', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[1, 1, 2, 1, 1, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sergiy Fesenko, Ryan Cochrane, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","1, 1, 2, 1, 1, 3","A bar chart for finding the number of the names of swimmers who has a result of ""win"", could you order x axis in descending order?"
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Federico Colbertaldo', 'Grant Hackett', 'Ryan Cochrane', 'Sergiy Fesenko', 'Oussama Mellouli', 'Craig Stevens']], 'y_data': [[1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Federico Colbertaldo, Grant Hackett, Ryan Cochrane, Sergiy Fesenko, Oussama Mellouli, Craig Stevens","1, 1, 1, 1, 2, 3","Find the names of swimmers who has a result of ""win"", and count them by a bar chart, could you list by the total number in ascending?"
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Federico Colbertaldo', 'Grant Hackett', 'Ryan Cochrane', 'Sergiy Fesenko', 'Oussama Mellouli', 'Craig Stevens']], 'y_data': [[1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Federico Colbertaldo, Grant Hackett, Ryan Cochrane, Sergiy Fesenko, Oussama Mellouli, Craig Stevens","1, 1, 1, 1, 2, 3","A bar chart for finding the number of the names of swimmers who has a result of ""win"", and rank by the Y-axis in ascending."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Federico Colbertaldo', 'Grant Hackett', 'Ryan Cochrane', 'Sergiy Fesenko', 'Oussama Mellouli', 'Craig Stevens']], 'y_data': [[1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Federico Colbertaldo, Grant Hackett, Ryan Cochrane, Sergiy Fesenko, Oussama Mellouli, Craig Stevens","1, 1, 1, 1, 2, 3","Find the number of the names of swimmers who has a result of ""win"", rank by the y-axis in ascending."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Oussama Mellouli', 'Sergiy Fesenko', 'Ryan Cochrane', 'Grant Hackett', 'Federico Colbertaldo']], 'y_data': [[3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Oussama Mellouli, Sergiy Fesenko, Ryan Cochrane, Grant Hackett, Federico Colbertaldo","3, 2, 1, 1, 1, 1","A bar chart for finding the number of the names of swimmers who has a result of ""win"", could you display by the y-axis from high to low?"
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Oussama Mellouli', 'Sergiy Fesenko', 'Ryan Cochrane', 'Grant Hackett', 'Federico Colbertaldo']], 'y_data': [[3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Oussama Mellouli, Sergiy Fesenko, Ryan Cochrane, Grant Hackett, Federico Colbertaldo","3, 2, 1, 1, 1, 1","Find the number of the names of swimmers who has a result of ""win"", order in desc by the Y."
"SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name ORDER BY COUNT(name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Craig Stevens', 'Oussama Mellouli', 'Sergiy Fesenko', 'Ryan Cochrane', 'Grant Hackett', 'Federico Colbertaldo']], 'y_data': [[3, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Craig Stevens, Oussama Mellouli, Sergiy Fesenko, Ryan Cochrane, Grant Hackett, Federico Colbertaldo","3, 2, 1, 1, 1, 1","Find the names of swimmers who has a result of ""win"", and count them by a bar chart, and could you show by the y axis in descending please?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2","Show me the total number by country in a histogram, and could you display by the x axis in asc?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2","Draw a bar chart for how many stadiums does each country have?, and could you sort in ascending by the names please?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2","Show me a bar chart for how many stadiums does each country have?, and show in asc by the Country."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Russia', 'Spain']], 'y_data': [[1, 1, 1, 1, 4, 2]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Russia, Spain","1, 1, 1, 1, 4, 2","How many stadiums does each country have Show bar chart, and I want to display from low to high by the Country."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Spain', 'Russia', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[2, 4, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Spain, Russia, Hungary, France, England, Azerbaijan","2, 4, 1, 1, 1, 1","Show me a bar chart for how many stadiums does each country have?, could you display x axis in descending order?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Spain', 'Russia', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[2, 4, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Spain, Russia, Hungary, France, England, Azerbaijan","2, 4, 1, 1, 1, 1","Show me the total number by country in a histogram, could you order in desc by the names?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Spain', 'Russia', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[2, 4, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Spain, Russia, Hungary, France, England, Azerbaijan","2, 4, 1, 1, 1, 1","How many stadiums does each country have Show bar chart, could you rank X from high to low order please?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY Country DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Spain', 'Russia', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[2, 4, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Spain, Russia, Hungary, France, England, Azerbaijan","2, 4, 1, 1, 1, 1","Draw a bar chart for how many stadiums does each country have?, and could you order in desc by the names?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Spain', 'Russia']], 'y_data': [[1, 1, 1, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Spain, Russia","1, 1, 1, 1, 2, 4","How many stadiums does each country have Show bar chart, could you display Y in asc order?"
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Spain', 'Russia']], 'y_data': [[1, 1, 1, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Spain, Russia","1, 1, 1, 1, 2, 4","Show me a bar chart for how many stadiums does each country have?, and I want to display by the total number in asc please."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Spain', 'Russia']], 'y_data': [[1, 1, 1, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Spain, Russia","1, 1, 1, 1, 2, 4","Show me the total number by country in a histogram, sort in asc by the y-axis."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Azerbaijan', 'England', 'France', 'Hungary', 'Spain', 'Russia']], 'y_data': [[1, 1, 1, 1, 2, 4]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Azerbaijan, England, France, Hungary, Spain, Russia","1, 1, 1, 1, 2, 4","Draw a bar chart for how many stadiums does each country have?, and show total number in asc order."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Russia', 'Spain', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[4, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Russia, Spain, Hungary, France, England, Azerbaijan","4, 2, 1, 1, 1, 1","Show me the total number by country in a histogram, I want to show Y-axis from high to low order."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Russia', 'Spain', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[4, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Russia, Spain, Hungary, France, England, Azerbaijan","4, 2, 1, 1, 1, 1","How many stadiums does each country have Show bar chart, and rank by the Y-axis in descending."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Russia', 'Spain', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[4, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Russia, Spain, Hungary, France, England, Azerbaijan","4, 2, 1, 1, 1, 1","Draw a bar chart for how many stadiums does each country have?, and list in descending by the the total number ."
"SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'count(*)', 'x_data': [['Russia', 'Spain', 'Hungary', 'France', 'England', 'Azerbaijan']], 'y_data': [[4, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Country,count(*),"Russia, Spain, Hungary, France, England, Azerbaijan","4, 2, 1, 1, 1, 1","Show me a bar chart for how many stadiums does each country have?, list in descending by the the total number ."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, and order from low to high by the X please."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order from low to high by the X please."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, could you show by the x-axis in ascending?"
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, order by the Nationality in ascending."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Show total number of id from each nationality, order by the bar from low to high."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[6, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","6, 6, 8, 5, 7, 3, 1","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, order by the bar from low to high."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to show by the x-axis from high to low."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, and could you list in descending by the names?"
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, display bar in descending order."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the X from high to low."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Show total number of id from each nationality, sort Nationality in desc order."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 6]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 6","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, sort by the bars in desc."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the total number."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, could you order by the y axis in asc?"
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the sum id from low to high."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, and order in asc by the total number."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the y axis."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Italy', 'Australia', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 5, 6, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"Ukraine, Tunisia, Italy, Australia, Canada, Poland, France","1, 3, 5, 6, 6, 7, 8","Show total number of id from each nationality, and display total number in ascending order please."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, I want to sort from high to low by the y-axis."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Show total number of id from each nationality, and order by the Y in descending."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, and display by the total number in desc."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, and display by the total number in desc."
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, could you order in descending by the Y-axis please?"
"SELECT Nationality , SUM(ID) FROM swimmer GROUP BY Nationality ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Australia', 'Italy', 'Tunisia', 'Ukraine']], 'y_data': [[8, 7, 6, 6, 5, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(ID),"France, Poland, Canada, Australia, Italy, Tunisia, Ukraine","8, 7, 6, 6, 5, 3, 1","Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order by the Y in descending."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to display in ascending by the x axis."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, and list by the bar from low to high."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Show the average of id from each nationality, and sort X-axis in ascending order."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and could you sort from low to high by the X-axis?"
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to sort by the x axis in asc."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[3, 6, 8, 5, 7, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","3, 6, 8, 5, 7, 3, 1","Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, display X-axis from low to high order."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and I want to show by the x-axis in descending."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","Show the average of id from each nationality, and list in desc by the X please."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list in desc by the X please."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, could you sort bars from high to low order?"
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, I want to display in descending by the Nationality."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 3, 7, 5, 8, 6, 3]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 3, 7, 5, 8, 6, 3","A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, list in desc by the X please."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list from low to high by the Y."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","Show the average of id from each nationality, I want to display in ascending by the Y."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and rank from low to high by the mean id."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, rank from low to high by the mean id."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and could you display in ascending by the Y please?"
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['Ukraine', 'Australia', 'Tunisia', 'Italy', 'Canada', 'Poland', 'France']], 'y_data': [[1, 3, 3, 5, 6, 7, 8]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"Ukraine, Australia, Tunisia, Italy, Canada, Poland, France","1, 3, 3, 5, 6, 7, 8","Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the Y."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, display by the y-axis in desc please."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, rank by the Y in descending."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","Show the average of id from each nationality, display mean id in desc order."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and list in desc by the y axis."
"SELECT Nationality , AVG(ID) FROM swimmer GROUP BY Nationality ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(ID)', 'x_data': [['France', 'Poland', 'Canada', 'Italy', 'Tunisia', 'Australia', 'Ukraine']], 'y_data': [[8, 7, 6, 5, 3, 3, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(ID),"France, Poland, Canada, Italy, Tunisia, Australia, Ukraine","8, 7, 6, 5, 3, 3, 1","Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, I want to order bars in asc order."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you sort X-axis in asc order?"
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and order x axis in asc order please."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to list bar from low to high order."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Bar chart x axis nationality y axis sum meter 100, order x axis in asc order please."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[114, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","114, 57, 55, 57, 57, 57, 57","Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and order by the x-axis in asc."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to list by the X in descending."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and sort by the X-axis from high to low."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, could you rank x axis in descending order please?"
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, rank names in descending order."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Bar chart x axis nationality y axis sum meter 100, and I want to sort in desc by the X."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 114","Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, sort by the X-axis from high to low."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, sort by the Y-axis in asc."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you list by the total number from low to high?"
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Bar chart x axis nationality y axis sum meter 100, and rank from low to high by the Y-axis."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to display by the total number in ascending."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and list y axis in ascending order please."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['France', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"France, Canada, Italy, Poland, Tunisia, Ukraine, Australia","55, 57, 57, 57, 57, 57, 114","Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and rank from low to high by the Y-axis."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and could you sort in descending by the total number of meter 100?"
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Bar chart x axis nationality y axis sum meter 100, display y axis in descending order please."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, show total number from high to low order."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, I want to display from high to low by the y-axis."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and display y-axis from high to low order."
"SELECT Nationality , SUM(meter_100) FROM swimmer GROUP BY Nationality ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'SUM(meter_100)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'France']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,SUM(meter_100),"Australia, Ukraine, Tunisia, Poland, Italy, Canada, France","114, 57, 57, 57, 57, 57, 55","Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to display from high to low by the y-axis."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Bar chart x axis nationality y axis mean meter 100, rank from low to high by the bars."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display in asc by the Nationality."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and rank from low to high by the bars."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, display in asc by the x-axis."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, display in asc by the Nationality."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[57, 57, 55, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","57, 57, 55, 57, 57, 57, 57","Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, could you show in asc by the bars?"
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, sort from high to low by the X."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and sort by the names from high to low."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Bar chart x axis nationality y axis mean meter 100, and could you list X in desc order?"
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, sort names in descending order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and I want to show by the Nationality from high to low."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[57, 57, 57, 57, 55, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","57, 57, 57, 57, 55, 57, 57","Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, I want to show by the Nationality from high to low."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and show the average of meter 100 in asc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Bar chart x axis nationality y axis mean meter 100, and I want to display in asc by the y-axis please."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and display by the y-axis in ascending."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, show the average of meter 100 in asc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the the average of meter 100."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['France', 'Australia', 'Canada', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"France, Australia, Canada, Italy, Poland, Tunisia, Ukraine","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and display by the y-axis in ascending."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and order Y in desc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Bar chart x axis nationality y axis mean meter 100, I want to order from high to low by the Y-axis."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and order Y in desc order."
"SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'AVG(meter_100)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'Canada', 'Australia', 'France']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,AVG(meter_100),"Ukraine, Tunisia, Poland, Italy, Canada, Australia, France","57, 57, 57, 57, 57, 57, 55","Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and display in descending by the Y-axis."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, could you list by the bars from low to high?"
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and I want to display in ascending by the x axis."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Show total number of id from each meter 200, and list by the x axis in ascending."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to display in ascending by the x axis."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and list meter_200 in asc order please."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 7]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 7","Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, list meter_200 in asc order please."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and show by the meter_200 in desc."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","Show total number of id from each meter 200, and order by the x-axis in descending."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, order bars from high to low order."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, display by the bars in desc."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and order bars from high to low order."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[7, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","7, 2, 7, 5, 3, 4, 8","Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and order by the names from high to low."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, I want to order by the Y from low to high please."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and rank by the y axis in asc."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","Show total number of id from each meter 200, I want to sort in ascending by the Y."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and I want to order by the Y from low to high please."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and display in asc by the Y-axis."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:57.21', '1:56.44', '1:56.34', '1:56.77', '1:57.10', '1:57.26', '1:54.40']], 'y_data': [[2, 3, 4, 5, 7, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:57.21, 1:56.44, 1:56.34, 1:56.77, 1:57.10, 1:57.26, 1:54.40","2, 3, 4, 5, 7, 7, 8","Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and order in ascending by the total number."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and display by the sum id in desc."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, I want to list from high to low by the total number."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, display by the sum id in desc."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, order Y in descending order please."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","Show total number of id from each meter 200, and I want to list from high to low by the total number."
"SELECT meter_200 , SUM(ID) FROM swimmer GROUP BY meter_200 ORDER BY SUM(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(ID)', 'x_data': [['1:54.40', '1:57.26', '1:57.10', '1:56.77', '1:56.34', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 7, 5, 4, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(ID),"1:54.40, 1:57.26, 1:57.10, 1:56.77, 1:56.34, 1:56.44, 1:57.21","8, 7, 7, 5, 4, 3, 2","Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, rank in descending by the y axis."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, display from low to high by the X-axis."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, display from low to high by the X-axis."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and could you rank bar in asc order?"
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Draw a bar chart of meter 200 versus the average of id, and display bars from low to high order."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and display from low to high by the X-axis."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[8, 4, 3, 5, 7, 2, 3.5]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","8, 4, 3, 5, 7, 2, 3.5","A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank in ascending by the bar."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and order by the bar in descending."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and order by the bars from high to low."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, I want to rank by the bars in descending."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order from high to low by the bars."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","Draw a bar chart of meter 200 versus the average of id, and could you order by the bars in desc?"
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[3.5, 2, 7, 5, 3, 4, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","3.5, 2, 7, 5, 3, 4, 8","Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and could you show in desc by the x-axis?"
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, order total number in asc order."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","Draw a bar chart of meter 200 versus the average of id, order total number in asc order."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order by the y axis from low to high please."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:57.21', '1:56.44', '1:57.26', '1:56.34', '1:56.77', '1:57.10', '1:54.40']], 'y_data': [[2, 3, 3.5, 4, 5, 7, 8]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:57.21, 1:56.44, 1:57.26, 1:56.34, 1:56.77, 1:57.10, 1:54.40","2, 3, 3.5, 4, 5, 7, 8","Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and show from low to high by the Y-axis."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank by the Y in desc."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","Draw a bar chart of meter 200 versus the average of id, show from high to low by the Y."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, list by the y-axis in desc."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and I want to order y-axis in desc order."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and list Y in desc order."
"SELECT meter_200 , AVG(ID) FROM swimmer GROUP BY meter_200 ORDER BY AVG(ID) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(ID)', 'x_data': [['1:54.40', '1:57.10', '1:56.77', '1:56.34', '1:57.26', '1:56.44', '1:57.21']], 'y_data': [[8, 7, 5, 4, 3.5, 3, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(ID),"1:54.40, 1:57.10, 1:56.77, 1:56.34, 1:57.26, 1:56.44, 1:57.21","8, 7, 5, 4, 3.5, 3, 2","Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and I want to order y-axis in desc order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, rank in ascending by the bar."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and could you display bar in ascending order?"
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and show by the X from low to high."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, show from low to high by the x axis."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Create a bar chart showing total number of meter 100 across meter 200, rank from low to high by the x axis please."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, rank in ascending by the bar."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and could you list x-axis from high to low order?"
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, order bar from high to low order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, list x-axis in descending order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Create a bar chart showing total number of meter 100 across meter 200, display x-axis from high to low order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, list x-axis in descending order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and show by the x axis in desc."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and show total number in ascending order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to rank in asc by the y-axis."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, show Y-axis in asc order please."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, display Y-axis in asc order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Create a bar chart showing total number of meter 100 across meter 200, and could you order from low to high by the Y-axis please?"
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 114]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 114","Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, display Y-axis in asc order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display from high to low by the y-axis."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, sort from high to low by the total number of meter 100 please."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Create a bar chart showing total number of meter 100 across meter 200, and rank y-axis from high to low order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, could you list y-axis from high to low order?"
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, and I want to order y-axis from high to low order."
"SELECT meter_200 , SUM(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY SUM(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'SUM(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[114, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,SUM(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","114, 57, 57, 57, 57, 57, 55","Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, sort from high to low by the total number of meter 100 please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, could you rank x-axis in ascending order?"
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and could you display by the x-axis in asc?"
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and I want to rank bars in asc order."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, and order in ascending by the meter_200."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, and show by the x-axis from low to high."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Plot mean meter 100 by grouped by meter 200 as a bar graph, and order in ascending by the meter_200."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, rank by the bars in descending please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display in desc by the x-axis."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Plot mean meter 100 by grouped by meter 200 as a bar graph, display in descending by the X-axis please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, list from high to low by the names please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, and I want to rank from high to low by the X."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to order from high to low by the names."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, sort by the Y in asc."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, and could you show mean meter 100 from low to high order?"
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and order by the y-axis in asc."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, I want to list mean meter 100 from low to high order."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Plot mean meter 100 by grouped by meter 200 as a bar graph, and list by the y axis in ascending."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[55, 57, 57, 57, 57, 57, 57]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","55, 57, 57, 57, 57, 57, 57","Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to list mean meter 100 from low to high order."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, rank y axis in desc order."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, display Y in descending order please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, display from high to low by the mean meter 100."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, display Y in descending order please."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and list mean meter 100 from high to low order."
"SELECT meter_200 , AVG(meter_100) FROM swimmer GROUP BY meter_200 ORDER BY AVG(meter_100) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'AVG(meter_100)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[57, 57, 57, 57, 57, 57, 55]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,AVG(meter_100),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","57, 57, 57, 57, 57, 57, 55","Plot mean meter 100 by grouped by meter 200 as a bar graph, I want to display in desc by the total number."
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","A bar chart shows the distribution of name and ID , could you list bar in ascending order?"
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","Plot id by grouped by name as a bar graph, display by the X from low to high."
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","Draw a bar chart about the distribution of name and ID , and I want to display x-axis in ascending order please."
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","Return a bar chart about the distribution of name and ID , display from low to high by the x axis."
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","Give me the comparison about ID over the name , and I want to show in asc by the X-axis."
"SELECT name , ID FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[4, 5, 2, 3, 7, 6, 1, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","4, 5, 2, 3, 7, 6, 1, 8","Visualize a bar chart about the distribution of name and ID , and display from low to high by the x axis."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","Draw a bar chart about the distribution of name and ID , and I want to display x-axis in desc order."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","A bar chart shows the distribution of name and ID , and show names in descending order."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","Plot id by grouped by name as a bar graph, show by the x-axis in descending please."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","Give me the comparison about ID over the name , and show by the x-axis in descending please."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","Return a bar chart about the distribution of name and ID , list in descending by the x axis."
"SELECT name , ID FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[8, 1, 6, 7, 3, 2, 5, 4]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","8, 1, 6, 7, 3, 2, 5, 4","Visualize a bar chart about the distribution of name and ID , and list by the names from high to low."
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of name and ID , and rank Y from low to high order."
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the name , display by the Y-axis in asc."
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","A bar chart shows the distribution of name and ID , I want to order by the Y-axis in asc."
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","Visualize a bar chart about the distribution of name and ID , I want to order by the Y-axis in asc."
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","Draw a bar chart about the distribution of name and ID , and could you rank by the Y in ascending please?"
"SELECT name , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sergiy Fesenko', 'Grant Hackett', 'Oussama Mellouli', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Sébastien Rouault']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,name,ID,"Sergiy Fesenko, Grant Hackett, Oussama Mellouli, Craig Stevens, Federico Colbertaldo, Ryan Cochrane, Przemysław Stańczyk, Sébastien Rouault","1, 2, 3, 4, 5, 6, 7, 8","Plot id by grouped by name as a bar graph, and display ID in ascending order please."
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","Draw a bar chart about the distribution of name and ID , I want to display from high to low by the Y-axis."
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","Visualize a bar chart about the distribution of name and ID , and sort from high to low by the Y-axis."
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the name , could you show by the ID in descending please?"
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","A bar chart shows the distribution of name and ID , and sort from high to low by the ID."
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of name and ID , sort from high to low by the ID."
"SELECT name , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'ID', 'x_data': [['Sébastien Rouault', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Oussama Mellouli', 'Grant Hackett', 'Sergiy Fesenko']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,name,ID,"Sébastien Rouault, Przemysław Stańczyk, Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Oussama Mellouli, Grant Hackett, Sergiy Fesenko","8, 7, 6, 5, 4, 3, 2, 1","Plot id by grouped by name as a bar graph, and I want to display from high to low by the Y-axis."
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Show me about the distribution of name and meter_100 in a bar chart, could you rank by the bar from low to high?"
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Draw a bar chart about the distribution of name and meter_100 , sort from low to high by the X."
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Visualize a bar chart about the distribution of name and meter_100 , and display from low to high by the x axis."
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Return a bar chart about the distribution of name and meter_100 , and list by the name in asc."
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Give me the comparison about meter_100 over the name by a bar chart, could you order name from low to high order?"
"SELECT name , meter_100 FROM swimmer ORDER BY name ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Craig Stevens', 'Federico Colbertaldo', 'Grant Hackett', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Ryan Cochrane', 'Sergiy Fesenko', 'Sébastien Rouault']], 'y_data': [[57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Craig Stevens, Federico Colbertaldo, Grant Hackett, Oussama Mellouli, Przemysław Stańczyk, Ryan Cochrane, Sergiy Fesenko, Sébastien Rouault","57.35, 57.66, 57.34, 57.31, 57.31, 57.84, 57.34, 55.67","Draw a bar chart of name versus meter_100, list by the name in asc."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Show me about the distribution of name and meter_100 in a bar chart, show by the X-axis in desc."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Visualize a bar chart about the distribution of name and meter_100 , display from high to low by the names."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Draw a bar chart about the distribution of name and meter_100 , and display from high to low by the names."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Give me the comparison about meter_100 over the name by a bar chart, and I want to list by the X in desc."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Draw a bar chart of name versus meter_100, show in descending by the names."
"SELECT name , meter_100 FROM swimmer ORDER BY name DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Sergiy Fesenko', 'Ryan Cochrane', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Grant Hackett', 'Federico Colbertaldo', 'Craig Stevens']], 'y_data': [[55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Sergiy Fesenko, Ryan Cochrane, Przemysław Stańczyk, Oussama Mellouli, Grant Hackett, Federico Colbertaldo, Craig Stevens","55.67, 57.34, 57.84, 57.31, 57.31, 57.34, 57.66, 57.35","Return a bar chart about the distribution of name and meter_100 , and order in desc by the x-axis please."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Draw a bar chart about the distribution of name and meter_100 , and list in asc by the total number."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Return a bar chart about the distribution of name and meter_100 , and list in asc by the total number."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Show me about the distribution of name and meter_100 in a bar chart, and display y axis in asc order."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the name by a bar chart, display in asc by the y-axis."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Draw a bar chart of name versus meter_100, and rank by the total number in ascending."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Sébastien Rouault', 'Oussama Mellouli', 'Przemysław Stańczyk', 'Grant Hackett', 'Sergiy Fesenko', 'Craig Stevens', 'Federico Colbertaldo', 'Ryan Cochrane']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Sébastien Rouault, Oussama Mellouli, Przemysław Stańczyk, Grant Hackett, Sergiy Fesenko, Craig Stevens, Federico Colbertaldo, Ryan Cochrane","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of name and meter_100 , and I want to sort Y from low to high order."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Show me about the distribution of name and meter_100 in a bar chart, rank y axis in desc order please."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the name by a bar chart, rank y axis in desc order please."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Draw a bar chart about the distribution of name and meter_100 , sort y axis in desc order."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Return a bar chart about the distribution of name and meter_100 , and order by the total number in desc."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Draw a bar chart of name versus meter_100, and sort by the total number in descending."
"SELECT name , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'meter_100', 'x_data': [['Ryan Cochrane', 'Federico Colbertaldo', 'Craig Stevens', 'Sergiy Fesenko', 'Grant Hackett', 'Przemysław Stańczyk', 'Oussama Mellouli', 'Sébastien Rouault']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,name,meter_100,"Ryan Cochrane, Federico Colbertaldo, Craig Stevens, Sergiy Fesenko, Grant Hackett, Przemysław Stańczyk, Oussama Mellouli, Sébastien Rouault","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of name and meter_100 , and order by the total number in desc."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Find meter_300 and ID , and visualize them by a bar chart, and show bar in asc order."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Return a bar chart about the distribution of meter_300 and ID , display by the names in asc."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Give me the comparison about ID over the meter_300 , and I want to list by the bar from low to high."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Show id from each meter 300, and rank from low to high by the names."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Show me about the distribution of meter_300 and ID in a bar chart, I want to rank by the names from low to high."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[8, 4, 3, 7, 5, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","8, 4, 3, 7, 5, 6, 2, 1","Draw a bar chart about the distribution of meter_300 and ID , and order by the names in ascending."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Draw a bar chart about the distribution of meter_300 and ID , and rank X-axis in descending order."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Show id from each meter 300, order by the bars in descending."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Find meter_300 and ID , and visualize them by a bar chart, and rank X-axis in descending order."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Return a bar chart about the distribution of meter_300 and ID , could you display in descending by the X-axis?"
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Give me the comparison about ID over the meter_300 , display in descending by the X-axis."
"SELECT meter_300 , ID FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[1, 2, 6, 5, 7, 3, 4, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","1, 2, 6, 5, 7, 3, 4, 8","Show me about the distribution of meter_300 and ID in a bar chart, and show in descending by the meter_300."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Find meter_300 and ID , and visualize them by a bar chart, and display y-axis from low to high order."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of meter_300 and ID , I want to show from low to high by the y axis please."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Show id from each meter 300, and I want to show from low to high by the y axis please."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Draw a bar chart about the distribution of meter_300 and ID , I want to show from low to high by the y axis please."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the meter_300 , and I want to display by the ID in asc."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:57.10', '2:56.95', '2:55.94', '2:55.90', '2:56.04', '2:56.64', '2:56.02', '2:53.46']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:57.10, 2:56.95, 2:55.94, 2:55.90, 2:56.04, 2:56.64, 2:56.02, 2:53.46","1, 2, 3, 4, 5, 6, 7, 8","Show me about the distribution of meter_300 and ID in a bar chart, could you show by the Y-axis in asc?"
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Show id from each meter 300, and list in descending by the y axis."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of meter_300 and ID , and show y axis from high to low order."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Find meter_300 and ID , and visualize them by a bar chart, list in descending by the y axis."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the meter_300 , and show by the y axis in descending."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Draw a bar chart about the distribution of meter_300 and ID , and order y axis in descending order."
"SELECT meter_300 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'ID', 'x_data': [['2:53.46', '2:56.02', '2:56.64', '2:56.04', '2:55.90', '2:55.94', '2:56.95', '2:57.10']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_300,ID,"2:53.46, 2:56.02, 2:56.64, 2:56.04, 2:55.90, 2:55.94, 2:56.95, 2:57.10","8, 7, 6, 5, 4, 3, 2, 1","Show me about the distribution of meter_300 and ID in a bar chart, could you order by the y-axis in descending?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Give me the comparison about meter_100 over the meter_300 by a bar chart, and could you list in ascending by the bars?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Show me about the distribution of meter_300 and meter_100 in a bar chart, could you list from low to high by the X-axis?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Find meter_300 and meter_100 , and visualize them by a bar chart, and sort by the names from low to high."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Plot meter_100 by grouped by meter 300 as a bar graph, could you list in ascending by the bars?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Visualize a bar chart about the distribution of meter_300 and meter_100 , and could you list from low to high by the X-axis?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.90', '2:55.94', '2:56.02', '2:56.04', '2:56.64', '2:56.95', '2:57.10']], 'y_data': [[55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.90, 2:55.94, 2:56.02, 2:56.04, 2:56.64, 2:56.95, 2:57.10","55.67, 57.35, 57.31, 57.31, 57.66, 57.84, 57.34, 57.34","Give me the comparison about meter_100 over the meter_300 , I want to show by the X from low to high."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Give me the comparison about meter_100 over the meter_300 , and could you order by the bar from high to low?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Give me the comparison about meter_100 over the meter_300 by a bar chart, list X in descending order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Show me about the distribution of meter_300 and meter_100 in a bar chart, rank by the bars in descending please."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Find meter_300 and meter_100 , and visualize them by a bar chart, and rank by the bars in descending please."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Visualize a bar chart about the distribution of meter_300 and meter_100 , and list X in descending order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_300 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:57.10', '2:56.95', '2:56.64', '2:56.04', '2:56.02', '2:55.94', '2:55.90', '2:53.46']], 'y_data': [[57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:57.10, 2:56.95, 2:56.64, 2:56.04, 2:56.02, 2:55.94, 2:55.90, 2:53.46","57.34, 57.34, 57.84, 57.66, 57.31, 57.31, 57.35, 55.67","Plot meter_100 by grouped by meter 300 as a bar graph, I want to order by the names in descending."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Plot meter_100 by grouped by meter 300 as a bar graph, I want to show Y from low to high order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Find meter_300 and meter_100 , and visualize them by a bar chart, and list meter_100 in asc order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of meter_300 and meter_100 , list total number in ascending order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_300 by a bar chart, and show from low to high by the Y please."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_300 , and list meter_100 in asc order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:53.46', '2:55.94', '2:56.02', '2:56.95', '2:57.10', '2:55.90', '2:56.04', '2:56.64']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:53.46, 2:55.94, 2:56.02, 2:56.95, 2:57.10, 2:55.90, 2:56.04, 2:56.64","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Show me about the distribution of meter_300 and meter_100 in a bar chart, and I want to show Y from low to high order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of meter_300 and meter_100 , and list Y-axis in descending order."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_300 by a bar chart, could you display in desc by the y-axis?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_300 , and display in desc by the Y."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Find meter_300 and meter_100 , and visualize them by a bar chart, and could you display in desc by the y-axis?"
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Plot meter_100 by grouped by meter 300 as a bar graph, rank in descending by the Y-axis."
"SELECT meter_300 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_300', 'y_name': 'meter_100', 'x_data': [['2:56.64', '2:56.04', '2:55.90', '2:57.10', '2:56.95', '2:56.02', '2:55.94', '2:53.46']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_300,meter_100,"2:56.64, 2:56.04, 2:55.90, 2:57.10, 2:56.95, 2:56.02, 2:55.94, 2:53.46","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Show me about the distribution of meter_300 and meter_100 in a bar chart, and list Y from high to low order."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","Show me about the distribution of meter_400 and ID in a bar chart, sort by the X-axis in ascending."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","A bar chart shows the distribution of meter_400 and ID , I want to show by the names in ascending please."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","Find meter_400 and ID , and visualize them by a bar chart, sort by the X-axis in ascending."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","Visualize a bar chart about the distribution of meter_400 and ID , and order by the bars in asc."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","Give me the comparison about ID over the meter_400 by a bar chart, could you sort x axis in ascending order?"
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 5, 3, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","8, 7, 5, 3, 4, 6, 2, 1","Show id from each meter 400, and sort by the X-axis in ascending."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","Show id from each meter 400, and list by the X from high to low."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","Find meter_400 and ID , and visualize them by a bar chart, and display x axis in desc order please."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","Visualize a bar chart about the distribution of meter_400 and ID , display x axis in desc order please."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","A bar chart shows the distribution of meter_400 and ID , could you list meter_400 in descending order?"
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","Show me about the distribution of meter_400 and ID in a bar chart, list by the X from high to low."
"SELECT meter_400 , ID FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 6, 4, 3, 5, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","1, 2, 6, 4, 3, 5, 7, 8","Give me the comparison about ID over the meter_400 by a bar chart, and list in desc by the names."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the meter_400 by a bar chart, sort in asc by the y axis."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","Show me about the distribution of meter_400 and ID in a bar chart, and order by the y axis in asc."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","Visualize a bar chart about the distribution of meter_400 and ID , sort in asc by the y axis."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","Find meter_400 and ID , and visualize them by a bar chart, order by the y axis in asc."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","A bar chart shows the distribution of meter_400 and ID , order by the y axis in asc."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:57.12', '3:57.00', '3:55.49', '3:55.72', '3:55.37', '3:56.34', '3:55.36', '3:52.93']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:57.12, 3:57.00, 3:55.49, 3:55.72, 3:55.37, 3:56.34, 3:55.36, 3:52.93","1, 2, 3, 4, 5, 6, 7, 8","Show id from each meter 400, and sort y-axis in ascending order."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the meter_400 by a bar chart, show in descending by the ID."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","Visualize a bar chart about the distribution of meter_400 and ID , order by the total number from high to low."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","Find meter_400 and ID , and visualize them by a bar chart, and list by the Y from high to low please."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","Show id from each meter 400, show in descending by the ID."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","A bar chart shows the distribution of meter_400 and ID , and order by the total number from high to low."
"SELECT meter_400 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'ID', 'x_data': [['3:52.93', '3:55.36', '3:56.34', '3:55.37', '3:55.72', '3:55.49', '3:57.00', '3:57.12']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_400,ID,"3:52.93, 3:55.36, 3:56.34, 3:55.37, 3:55.72, 3:55.49, 3:57.00, 3:57.12","8, 7, 6, 5, 4, 3, 2, 1","Show me about the distribution of meter_400 and ID in a bar chart, and could you order in descending by the y-axis?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","Find meter_400 and meter_100 , and visualize them by a bar chart, and sort from low to high by the X."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","Give me the comparison about meter_100 over the meter_400 , could you order in asc by the x axis?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","Bar graph to show meter_100 from different meter 400, I want to list X-axis from low to high order."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","Return a bar chart about the distribution of meter_400 and meter_100 , and show from low to high by the bar please."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","A bar chart shows the distribution of meter_400 and meter_100 , and could you order in asc by the x axis?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.37', '3:55.49', '3:55.72', '3:56.34', '3:57.00', '3:57.12']], 'y_data': [[55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.37, 3:55.49, 3:55.72, 3:56.34, 3:57.00, 3:57.12","55.67, 57.31, 57.66, 57.31, 57.35, 57.84, 57.34, 57.34","Visualize a bar chart about the distribution of meter_400 and meter_100 , I want to show by the bar in ascending please."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","Find meter_400 and meter_100 , and visualize them by a bar chart, and rank by the X in descending please."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","A bar chart shows the distribution of meter_400 and meter_100 , rank X in descending order."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","Give me the comparison about meter_100 over the meter_400 , I want to show bars in descending order please."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","Bar graph to show meter_100 from different meter 400, rank by the X in descending please."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","Return a bar chart about the distribution of meter_400 and meter_100 , and rank X in descending order."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_400 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:57.12', '3:57.00', '3:56.34', '3:55.72', '3:55.49', '3:55.37', '3:55.36', '3:52.93']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:57.12, 3:57.00, 3:56.34, 3:55.72, 3:55.49, 3:55.37, 3:55.36, 3:52.93","57.34, 57.34, 57.84, 57.35, 57.31, 57.66, 57.31, 55.67","Visualize a bar chart about the distribution of meter_400 and meter_100 , and rank by the x axis in descending."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_400 , could you show by the meter_100 in ascending?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Return a bar chart about the distribution of meter_400 and meter_100 , display meter_100 in ascending order."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of meter_400 and meter_100 , and display by the meter_100 in asc."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Find meter_400 and meter_100 , and visualize them by a bar chart, and could you display by the y axis in asc?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Bar graph to show meter_100 from different meter 400, and could you display by the y axis in asc?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:52.93', '3:55.36', '3:55.49', '3:57.00', '3:57.12', '3:55.72', '3:55.37', '3:56.34']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:52.93, 3:55.36, 3:55.49, 3:57.00, 3:57.12, 3:55.72, 3:55.37, 3:56.34","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","A bar chart shows the distribution of meter_400 and meter_100 , and could you display by the y axis in asc?"
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Return a bar chart about the distribution of meter_400 and meter_100 , display in descending by the meter_100."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","A bar chart shows the distribution of meter_400 and meter_100 , and show in descending by the total number."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Bar graph to show meter_100 from different meter 400, and show in descending by the total number."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_400 , show in descending by the total number."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Find meter_400 and meter_100 , and visualize them by a bar chart, and I want to sort by the Y in desc."
"SELECT meter_400 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_400', 'y_name': 'meter_100', 'x_data': [['3:56.34', '3:55.37', '3:55.72', '3:57.12', '3:57.00', '3:55.49', '3:55.36', '3:52.93']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_400,meter_100,"3:56.34, 3:55.37, 3:55.72, 3:57.12, 3:57.00, 3:55.49, 3:55.36, 3:52.93","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of meter_400 and meter_100 , rank from high to low by the Y please."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","Show me about the distribution of meter_500 and ID in a bar chart, order names in asc order please."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","Show id from each meter 500, and could you show by the x-axis in asc?"
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","Draw a bar chart about the distribution of meter_500 and ID , and rank in ascending by the x axis."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","Give me the comparison about ID over the meter_500 , rank in ascending by the x axis."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","Return a bar chart about the distribution of meter_500 and ID , and show in ascending by the x axis please."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[8, 3, 7, 5, 4, 6, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","8, 3, 7, 5, 4, 6, 2, 1","A bar chart shows the distribution of meter_500 and ID , rank in ascending by the x axis."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","A bar chart shows the distribution of meter_500 and ID , list by the X-axis in descending."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","Show me about the distribution of meter_500 and ID in a bar chart, and show x-axis in desc order."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","Give me the comparison about ID over the meter_500 , and list by the meter_500 in descending."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","Return a bar chart about the distribution of meter_500 and ID , and rank in desc by the meter_500."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","Draw a bar chart about the distribution of meter_500 and ID , list by the meter_500 in descending."
"SELECT meter_500 , ID FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[1, 2, 6, 4, 5, 7, 3, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","1, 2, 6, 4, 5, 7, 3, 8","Show id from each meter 500, and could you sort x axis in descending order?"
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the meter_500 , rank by the ID in asc."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","A bar chart shows the distribution of meter_500 and ID , and I want to rank y axis from low to high order."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","Show me about the distribution of meter_500 and ID in a bar chart, rank Y in ascending order."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","Draw a bar chart about the distribution of meter_500 and ID , rank by the ID in asc."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","Show id from each meter 500, order total number in ascending order."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:57.03', '4:56.96', '4:54.19', '4:55.08', '4:54.48', '4:56.15', '4:54.21', '4:52.85']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:57.03, 4:56.96, 4:54.19, 4:55.08, 4:54.48, 4:56.15, 4:54.21, 4:52.85","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of meter_500 and ID , rank by the ID in asc."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of meter_500 and ID , and could you sort in descending by the total number?"
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","Show me about the distribution of meter_500 and ID in a bar chart, could you order y axis in descending order please?"
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","A bar chart shows the distribution of meter_500 and ID , and could you order y axis in descending order please?"
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the meter_500 , and show y axis from high to low order."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","Draw a bar chart about the distribution of meter_500 and ID , and I want to rank y-axis in desc order."
"SELECT meter_500 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'ID', 'x_data': [['4:52.85', '4:54.21', '4:56.15', '4:54.48', '4:55.08', '4:54.19', '4:56.96', '4:57.03']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_500,ID,"4:52.85, 4:54.21, 4:56.15, 4:54.48, 4:55.08, 4:54.19, 4:56.96, 4:57.03","8, 7, 6, 5, 4, 3, 2, 1","Show id from each meter 500, could you rank in descending by the y-axis?"
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","Give me the comparison about meter_100 over the meter_500 by a bar chart, rank in asc by the bar."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","Find meter_500 and meter_100 , and visualize them by a bar chart, could you list by the X in asc?"
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","Bar chart x axis meter 500 y axis meter_100, and list by the bars in asc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","A bar chart shows the distribution of meter_500 and meter_100 , and rank by the bar from low to high."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","Show me about the distribution of meter_500 and meter_100 in a bar chart, rank by the bar from low to high."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:54.48', '4:55.08', '4:56.15', '4:56.96', '4:57.03']], 'y_data': [[55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:54.48, 4:55.08, 4:56.15, 4:56.96, 4:57.03","55.67, 57.31, 57.31, 57.66, 57.35, 57.84, 57.34, 57.34","Give me the comparison about meter_100 over the meter_500 , show bar from low to high order."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_500 , and I want to rank by the X-axis in desc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","Show me about the distribution of meter_500 and meter_100 in a bar chart, and rank x-axis in descending order please."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","Find meter_500 and meter_100 , and visualize them by a bar chart, and order in descending by the X-axis."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","A bar chart shows the distribution of meter_500 and meter_100 , could you list meter_500 from high to low order?"
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_500 by a bar chart, and display from high to low by the x axis."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_500 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:57.03', '4:56.96', '4:56.15', '4:55.08', '4:54.48', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:57.03, 4:56.96, 4:56.15, 4:55.08, 4:54.48, 4:54.21, 4:54.19, 4:52.85","57.34, 57.34, 57.84, 57.35, 57.66, 57.31, 57.31, 55.67","Bar chart x axis meter 500 y axis meter_100, order in descending by the X-axis."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Bar chart x axis meter 500 y axis meter_100, sort y-axis in ascending order."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_500 , and I want to sort in ascending by the meter_100."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_500 by a bar chart, I want to sort in ascending by the meter_100."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Find meter_500 and meter_100 , and visualize them by a bar chart, and list by the Y-axis in asc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Show me about the distribution of meter_500 and meter_100 in a bar chart, I want to show by the y-axis from low to high."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:52.85', '4:54.19', '4:54.21', '4:56.96', '4:57.03', '4:55.08', '4:54.48', '4:56.15']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:52.85, 4:54.19, 4:54.21, 4:56.96, 4:57.03, 4:55.08, 4:54.48, 4:56.15","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","A bar chart shows the distribution of meter_500 and meter_100 , and list by the Y-axis in asc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_500 , order by the meter_100 in desc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_500 by a bar chart, and sort from high to low by the meter_100."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","A bar chart shows the distribution of meter_500 and meter_100 , list by the Y-axis in desc."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Show me about the distribution of meter_500 and meter_100 in a bar chart, sort Y in desc order."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Find meter_500 and meter_100 , and visualize them by a bar chart, sort y axis in desc order."
"SELECT meter_500 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_500', 'y_name': 'meter_100', 'x_data': [['4:56.15', '4:54.48', '4:55.08', '4:57.03', '4:56.96', '4:54.21', '4:54.19', '4:52.85']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_500,meter_100,"4:56.15, 4:54.48, 4:55.08, 4:57.03, 4:56.96, 4:54.21, 4:54.19, 4:52.85","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Bar chart x axis meter 500 y axis meter_100, sort y axis in desc order."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","Bar chart x axis meter 600 y axis id, show by the X from low to high."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","Visualize a bar chart about the distribution of meter_600 and ID , and order by the bars in asc."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","Find meter_600 and ID , and visualize them by a bar chart, show by the x axis in ascending."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","Return a bar chart about the distribution of meter_600 and ID , list in asc by the names please."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","A bar chart shows the distribution of meter_600 and ID , and show by the X from low to high."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[7, 3, 8, 5, 4, 1, 6, 2]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","7, 3, 8, 5, 4, 1, 6, 2","Show me about the distribution of meter_600 and ID in a bar chart, and sort in asc by the X."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","Find meter_600 and ID , and visualize them by a bar chart, rank by the x axis from high to low."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","Visualize a bar chart about the distribution of meter_600 and ID , and I want to display X-axis in desc order please."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","Return a bar chart about the distribution of meter_600 and ID , and could you rank in desc by the X-axis?"
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","A bar chart shows the distribution of meter_600 and ID , could you rank in desc by the X-axis?"
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","Bar chart x axis meter 600 y axis id, sort X-axis in descending order."
"SELECT meter_600 , ID FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[2, 6, 1, 4, 5, 8, 3, 7]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","2, 6, 1, 4, 5, 8, 3, 7","Show me about the distribution of meter_600 and ID in a bar chart, and rank by the meter_600 from high to low."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of meter_600 and ID , and display by the Y in asc."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","Visualize a bar chart about the distribution of meter_600 and ID , display by the Y in asc."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","A bar chart shows the distribution of meter_600 and ID , order in asc by the ID."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","Bar chart x axis meter 600 y axis id, and sort Y from low to high order please."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","Find meter_600 and ID , and visualize them by a bar chart, sort Y from low to high order please."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:56.31', '5:57.10', '5:52.92', '5:54.45', '5:53.53', '5:56.99', '5:52.59', '5:53.03']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:56.31, 5:57.10, 5:52.92, 5:54.45, 5:53.53, 5:56.99, 5:52.59, 5:53.03","1, 2, 3, 4, 5, 6, 7, 8","Show me about the distribution of meter_600 and ID in a bar chart, list by the y-axis from low to high."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","Show me about the distribution of meter_600 and ID in a bar chart, and order by the ID from high to low."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","Find meter_600 and ID , and visualize them by a bar chart, show by the Y from high to low."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","Visualize a bar chart about the distribution of meter_600 and ID , order total number from high to low order."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","A bar chart shows the distribution of meter_600 and ID , show by the Y from high to low."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of meter_600 and ID , and rank in descending by the y axis please."
"SELECT meter_600 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'ID', 'x_data': [['5:53.03', '5:52.59', '5:56.99', '5:53.53', '5:54.45', '5:52.92', '5:57.10', '5:56.31']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_600,ID,"5:53.03, 5:52.59, 5:56.99, 5:53.53, 5:54.45, 5:52.92, 5:57.10, 5:56.31","8, 7, 6, 5, 4, 3, 2, 1","Bar chart x axis meter 600 y axis id, order by the ID from high to low."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Give me the comparison about meter_100 over the meter_600 , and I want to rank x-axis in ascending order please."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Give me the comparison about meter_100 over the meter_600 by a bar chart, and list from low to high by the x-axis please."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Return a bar chart about the distribution of meter_600 and meter_100 , and rank by the bars in ascending."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Create a bar chart showing meter_100 across meter 600, and could you show by the meter_600 from low to high?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Visualize a bar chart about the distribution of meter_600 and meter_100 , I want to rank x-axis in ascending order please."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:52.59', '5:52.92', '5:53.03', '5:53.53', '5:54.45', '5:56.31', '5:56.99', '5:57.10']], 'y_data': [[57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:52.59, 5:52.92, 5:53.03, 5:53.53, 5:54.45, 5:56.31, 5:56.99, 5:57.10","57.31, 57.31, 55.67, 57.66, 57.35, 57.34, 57.84, 57.34","Draw a bar chart about the distribution of meter_600 and meter_100 , list from low to high by the x-axis please."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Draw a bar chart about the distribution of meter_600 and meter_100 , and could you display x axis in descending order?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Return a bar chart about the distribution of meter_600 and meter_100 , and could you order by the x-axis from high to low please?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Visualize a bar chart about the distribution of meter_600 and meter_100 , display X in descending order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Give me the comparison about meter_100 over the meter_600 , display X in descending order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order by the x-axis from high to low please?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_600 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:57.10', '5:56.99', '5:56.31', '5:54.45', '5:53.53', '5:53.03', '5:52.92', '5:52.59']], 'y_data': [[57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:57.10, 5:56.99, 5:56.31, 5:54.45, 5:53.53, 5:53.03, 5:52.92, 5:52.59","57.34, 57.84, 57.34, 57.35, 57.66, 55.67, 57.31, 57.31","Create a bar chart showing meter_100 across meter 600, display X from high to low order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Create a bar chart showing meter_100 across meter 600, and could you order from low to high by the Y-axis?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Return a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_600 , and could you order y axis in asc order please?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Draw a bar chart about the distribution of meter_600 and meter_100 , and could you order y axis in asc order please?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:53.03', '5:52.59', '5:52.92', '5:56.31', '5:57.10', '5:54.45', '5:53.53', '5:56.99']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:53.03, 5:52.59, 5:52.92, 5:56.31, 5:57.10, 5:54.45, 5:53.53, 5:56.99","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order from low to high by the Y-axis?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_600 , I want to sort by the Y-axis from high to low."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Return a bar chart about the distribution of meter_600 and meter_100 , and rank by the Y in descending."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Draw a bar chart about the distribution of meter_600 and meter_100 , and could you display by the Y in desc?"
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Create a bar chart showing meter_100 across meter 600, and display Y-axis in descending order."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of meter_600 and meter_100 , and I want to sort by the Y-axis from high to low."
"SELECT meter_600 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_600', 'y_name': 'meter_100', 'x_data': [['5:56.99', '5:53.53', '5:54.45', '5:57.10', '5:56.31', '5:52.92', '5:52.59', '5:53.03']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_600,meter_100,"5:56.99, 5:53.53, 5:54.45, 5:57.10, 5:56.31, 5:52.92, 5:52.59, 5:53.03","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_600 by a bar chart, display Y-axis in descending order."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","Give me the comparison about ID over the meter_700 , and order by the bar from low to high."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","Draw a bar chart about the distribution of meter_700 and ID , and order in asc by the names."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","A bar chart shows the distribution of meter_700 and ID , I want to sort in ascending by the bar."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","Give me the comparison about ID over the meter_700 by a bar chart, and could you display in asc by the X?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","Bar chart x axis meter 700 y axis id, could you show in ascending by the meter_700?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[3, 7, 5, 4, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","3, 7, 5, 4, 8, 1, 2, 6","Return a bar chart about the distribution of meter_700 and ID , could you show in ascending by the meter_700?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","Give me the comparison about ID over the meter_700 by a bar chart, and could you display x axis from high to low order?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","Return a bar chart about the distribution of meter_700 and ID , and could you display x axis from high to low order?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","Draw a bar chart about the distribution of meter_700 and ID , and rank meter_700 in desc order."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","Give me the comparison about ID over the meter_700 , and rank x axis from high to low order."
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","Bar chart x axis meter 700 y axis id, could you list by the bar in desc?"
"SELECT meter_700 , ID FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[6, 2, 1, 8, 4, 5, 7, 3]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","6, 2, 1, 8, 4, 5, 7, 3","A bar chart shows the distribution of meter_700 and ID , rank meter_700 in desc order."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","Bar chart x axis meter 700 y axis id, and display by the y axis in ascending please."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","A bar chart shows the distribution of meter_700 and ID , I want to rank in ascending by the Y."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the meter_700 by a bar chart, order in ascending by the Y."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the meter_700 , I want to show by the Y-axis from low to high."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","Draw a bar chart about the distribution of meter_700 and ID , and I want to sort by the Y from low to high."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:55.07', '6:57.44', '6:50.80', '6:52.69', '6:52.58', '6:57.69', '6:50.91', '6:53.34']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:55.07, 6:57.44, 6:50.80, 6:52.69, 6:52.58, 6:57.69, 6:50.91, 6:53.34","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of meter_700 and ID , order in ascending by the Y."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the meter_700 by a bar chart, sort by the y-axis in desc."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of meter_700 and ID , sort by the y-axis in desc."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","Draw a bar chart about the distribution of meter_700 and ID , and sort by the ID from high to low."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","Bar chart x axis meter 700 y axis id, display y-axis in desc order."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the meter_700 , display y-axis in desc order."
"SELECT meter_700 , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'ID', 'x_data': [['6:53.34', '6:50.91', '6:57.69', '6:52.58', '6:52.69', '6:50.80', '6:57.44', '6:55.07']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,meter_700,ID,"6:53.34, 6:50.91, 6:57.69, 6:52.58, 6:52.69, 6:50.80, 6:57.44, 6:55.07","8, 7, 6, 5, 4, 3, 2, 1","A bar chart shows the distribution of meter_700 and ID , display y-axis in desc order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","Show me about the distribution of meter_700 and meter_100 in a bar chart, could you sort by the meter_700 in asc?"
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","Find meter_700 and meter_100 , and visualize them by a bar chart, order by the x axis from low to high."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","Bar graph to show meter_100 from different meter 700, I want to rank bar from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","Visualize a bar chart about the distribution of meter_700 and meter_100 , and list from low to high by the x-axis."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","A bar chart shows the distribution of meter_700 and meter_100 , list from low to high by the x-axis."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:50.80', '6:50.91', '6:52.58', '6:52.69', '6:53.34', '6:55.07', '6:57.44', '6:57.69']], 'y_data': [[57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:50.80, 6:50.91, 6:52.58, 6:52.69, 6:53.34, 6:55.07, 6:57.44, 6:57.69","57.31, 57.31, 57.66, 57.35, 55.67, 57.34, 57.34, 57.84","Give me the comparison about meter_100 over the meter_700 , and sort by the X-axis in ascending."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","Give me the comparison about meter_100 over the meter_700 , could you show bars in desc order?"
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","A bar chart shows the distribution of meter_700 and meter_100 , and rank from high to low by the bars."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","Show me about the distribution of meter_700 and meter_100 in a bar chart, and could you list names from high to low order?"
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","Bar graph to show meter_100 from different meter 700, and display x axis in desc order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","Find meter_700 and meter_100 , and visualize them by a bar chart, and display bar in descending order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_700 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:57.44', '6:55.07', '6:53.34', '6:52.69', '6:52.58', '6:50.91', '6:50.80']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:57.44, 6:55.07, 6:53.34, 6:52.69, 6:52.58, 6:50.91, 6:50.80","57.84, 57.34, 57.34, 55.67, 57.35, 57.66, 57.31, 57.31","Visualize a bar chart about the distribution of meter_700 and meter_100 , display x axis in desc order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the meter_700 , and I want to rank y axis from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Show me about the distribution of meter_700 and meter_100 in a bar chart, and sort Y-axis from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","A bar chart shows the distribution of meter_700 and meter_100 , sort Y from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of meter_700 and meter_100 , I want to rank y axis from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Bar graph to show meter_100 from different meter 700, list meter_100 in asc order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:53.34', '6:50.80', '6:50.91', '6:55.07', '6:57.44', '6:52.69', '6:52.58', '6:57.69']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:53.34, 6:50.80, 6:50.91, 6:55.07, 6:57.44, 6:52.69, 6:52.58, 6:57.69","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Find meter_700 and meter_100 , and visualize them by a bar chart, sort total number from low to high order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Show me about the distribution of meter_700 and meter_100 in a bar chart, order by the Y-axis in descending."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Bar graph to show meter_100 from different meter 700, and order by the meter_100 from high to low."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the meter_700 , and order by the meter_100 from high to low."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","A bar chart shows the distribution of meter_700 and meter_100 , and show y axis in desc order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Find meter_700 and meter_100 , and visualize them by a bar chart, I want to show meter_100 in descending order."
"SELECT meter_700 , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'meter_700', 'y_name': 'meter_100', 'x_data': [['6:57.69', '6:52.58', '6:52.69', '6:57.44', '6:55.07', '6:50.91', '6:50.80', '6:53.34']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,meter_700,meter_100,"6:57.69, 6:52.58, 6:52.69, 6:57.44, 6:55.07, 6:50.91, 6:50.80, 6:53.34","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of meter_700 and meter_100 , and I want to show meter_100 in descending order."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Draw a bar chart about the distribution of Time and ID , rank by the bars from low to high."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Return a bar chart about the distribution of Time and ID , and list by the bar from low to high please."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Find Time and ID , and visualize them by a bar chart, and list by the bar from low to high please."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Bar chart x axis time y axis id, and order by the x axis in asc."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Show me about the distribution of Time and ID in a bar chart, and rank by the bars from low to high."
"SELECT Time , ID FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[3, 7, 4, 5, 8, 1, 2, 6]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","3, 7, 4, 5, 8, 1, 2, 6","Give me the comparison about ID over the Time by a bar chart, and show by the bar in ascending."
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Show me about the distribution of Time and ID in a bar chart, show bars from high to low order."
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Find Time and ID , and visualize them by a bar chart, sort by the names in desc."
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Give me the comparison about ID over the Time by a bar chart, sort X from high to low order."
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Bar chart x axis time y axis id, and I want to order X-axis in descending order."
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Return a bar chart about the distribution of Time and ID , could you show by the X-axis from high to low please?"
"SELECT Time , ID FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[6, 2, 1, 8, 5, 4, 7, 3]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","6, 2, 1, 8, 5, 4, 7, 3","Draw a bar chart about the distribution of Time and ID , and display x-axis in desc order."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Find Time and ID , and visualize them by a bar chart, display by the y-axis in ascending please."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Show me about the distribution of Time and ID in a bar chart, order y axis in asc order."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Give me the comparison about ID over the Time by a bar chart, and sort ID in ascending order."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Draw a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Return a bar chart about the distribution of Time and ID , and sort y-axis in ascending order please."
"SELECT Time , ID FROM swimmer ORDER BY ID ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:53.43', '7:55.39', '7:46.95', '7:48.67', '7:49.98', '7:56.56', '7:47.91', '7:52.04']], 'y_data': [[1, 2, 3, 4, 5, 6, 7, 8]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:53.43, 7:55.39, 7:46.95, 7:48.67, 7:49.98, 7:56.56, 7:47.91, 7:52.04","1, 2, 3, 4, 5, 6, 7, 8","Bar chart x axis time y axis id, and sort by the y axis in ascending."
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Draw a bar chart about the distribution of Time and ID , could you sort y-axis in desc order?"
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Show me about the distribution of Time and ID in a bar chart, could you sort y-axis in desc order?"
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Give me the comparison about ID over the Time by a bar chart, could you list ID from high to low order?"
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Find Time and ID , and visualize them by a bar chart, and show y-axis in descending order."
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Bar chart x axis time y axis id, could you list ID from high to low order?"
"SELECT Time , ID FROM swimmer ORDER BY ID DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'ID', 'x_data': [['7:52.04', '7:47.91', '7:56.56', '7:49.98', '7:48.67', '7:46.95', '7:55.39', '7:53.43']], 'y_data': [[8, 7, 6, 5, 4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Time,ID,"7:52.04, 7:47.91, 7:56.56, 7:49.98, 7:48.67, 7:46.95, 7:55.39, 7:53.43","8, 7, 6, 5, 4, 3, 2, 1","Return a bar chart about the distribution of Time and ID , and sort by the Y-axis from high to low."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Give me the comparison about meter_100 over the Time by a bar chart, and could you rank by the X-axis in ascending?"
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Bar chart x axis time y axis meter_100, show by the names in asc."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Draw a bar chart about the distribution of Time and meter_100 , I want to display in asc by the X please."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Visualize a bar chart about the distribution of Time and meter_100 , and list by the X in ascending please."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Return a bar chart about the distribution of Time and meter_100 , and I want to rank in asc by the x axis."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:46.95', '7:47.91', '7:48.67', '7:49.98', '7:52.04', '7:53.43', '7:55.39', '7:56.56']], 'y_data': [[57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:46.95, 7:47.91, 7:48.67, 7:49.98, 7:52.04, 7:53.43, 7:55.39, 7:56.56","57.31, 57.31, 57.35, 57.66, 55.67, 57.34, 57.34, 57.84","Find Time and meter_100 , and visualize them by a bar chart, could you rank by the X-axis in ascending?"
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Give me the comparison about meter_100 over the Time by a bar chart, and sort by the names from high to low."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Visualize a bar chart about the distribution of Time and meter_100 , could you display in descending by the x-axis?"
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Find Time and meter_100 , and visualize them by a bar chart, show by the X in descending please."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Bar chart x axis time y axis meter_100, and display from high to low by the names."
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Draw a bar chart about the distribution of Time and meter_100 , and could you order by the X in descending?"
"SELECT Time , meter_100 FROM swimmer ORDER BY Time DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:55.39', '7:53.43', '7:52.04', '7:49.98', '7:48.67', '7:47.91', '7:46.95']], 'y_data': [[57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:55.39, 7:53.43, 7:52.04, 7:49.98, 7:48.67, 7:47.91, 7:46.95","57.84, 57.34, 57.34, 55.67, 57.66, 57.35, 57.31, 57.31","Return a bar chart about the distribution of Time and meter_100 , list bars in descending order please."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Visualize a bar chart about the distribution of Time and meter_100 , and show in ascending by the total number."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Find Time and meter_100 , and visualize them by a bar chart, show in ascending by the Y."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Return a bar chart about the distribution of Time and meter_100 , order Y from low to high order."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Give me the comparison about meter_100 over the Time by a bar chart, show in ascending by the total number."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Bar chart x axis time y axis meter_100, and I want to sort from low to high by the total number."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 ASC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:52.04', '7:46.95', '7:47.91', '7:53.43', '7:55.39', '7:48.67', '7:49.98', '7:56.56']], 'y_data': [[55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:52.04, 7:46.95, 7:47.91, 7:53.43, 7:55.39, 7:48.67, 7:49.98, 7:56.56","55.67, 57.31, 57.31, 57.34, 57.34, 57.35, 57.66, 57.84","Draw a bar chart about the distribution of Time and meter_100 , I want to display in asc by the y axis please."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Bar chart x axis time y axis meter_100, and show by the y axis from high to low."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Return a bar chart about the distribution of Time and meter_100 , and show meter_100 from high to low order."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Find Time and meter_100 , and visualize them by a bar chart, list in desc by the y axis."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Give me the comparison about meter_100 over the Time by a bar chart, and could you rank from high to low by the total number?"
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Visualize a bar chart about the distribution of Time and meter_100 , and sort Y-axis from high to low order please."
"SELECT Time , meter_100 FROM swimmer ORDER BY meter_100 DESC",Bar,Easy,swimming,"{'chart': 'bar', 'x_name': 'Time', 'y_name': 'meter_100', 'x_data': [['7:56.56', '7:49.98', '7:48.67', '7:55.39', '7:53.43', '7:47.91', '7:46.95', '7:52.04']], 'y_data': [[57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67]], 'classify': [], 'describe': ''}",bar,Time,meter_100,"7:56.56, 7:49.98, 7:48.67, 7:55.39, 7:53.43, 7:47.91, 7:46.95, 7:52.04","57.84, 57.66, 57.35, 57.34, 57.34, 57.31, 57.31, 55.67","Draw a bar chart about the distribution of Time and meter_100 , and rank total number from high to low order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you sort in asc by the X-axis?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and could you show names in asc order?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Bar chart x axis nationality y axis how many nationality, could you display in asc by the bars?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Canada, France, Italy, Poland, Tunisia, Ukraine","2, 1, 1, 1, 1, 1, 1","Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and show in ascending by the X-axis."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and display by the bars in descending."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, display by the bars in descending."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Bar chart x axis nationality y axis how many nationality, and sort in desc by the bar."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list by the bars in desc."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY Nationality DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Ukraine, Tunisia, Poland, Italy, France, Canada, Australia","1, 1, 1, 1, 1, 1, 2","Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, show in descending by the bar."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you order by the total number from low to high?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Bar chart x axis nationality y axis how many nationality, could you list by the y axis in ascending?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list Y-axis in asc order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and show by the how many nationality from low to high."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, could you list by the y axis in ascending?"
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Canada', 'France', 'Italy', 'Poland', 'Tunisia', 'Ukraine', 'Australia']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Canada, France, Italy, Poland, Tunisia, Ukraine, Australia","1, 1, 1, 1, 1, 1, 2","Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list Y-axis in asc order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and I want to rank by the how many nationality from high to low."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Bar chart x axis nationality y axis how many nationality, and list in descending by the Y-axis."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list y axis from high to low order."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list in descending by the Y-axis."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and I want to rank by the how many nationality from high to low."
"SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'Nationality', 'y_name': 'COUNT(Nationality)', 'x_data': [['Australia', 'Ukraine', 'Tunisia', 'Poland', 'Italy', 'France', 'Canada']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Nationality'}",bar,Nationality,COUNT(Nationality),"Australia, Ukraine, Tunisia, Poland, Italy, France, Canada","2, 1, 1, 1, 1, 1, 1","Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and rank total number from high to low order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, order bars in asc order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, and could you display by the X in asc?"
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and sort names in asc order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Create a bar chart showing the number of meter 200 across meter 200, and could you display by the X in asc?"
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, show in ascending by the bar."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order from low to high by the bars."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Create a bar chart showing the number of meter 200 across meter 200, and display x-axis from high to low order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and rank by the x-axis in descending please."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, sort from high to low by the meter_200."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, and rank by the x-axis in descending please."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to display meter_200 in descending order please."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY meter_200 DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and list by the bar in descending."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, sort by the total number in ascending."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order by the Y-axis in asc please."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to sort the number of meter 200 in ascending order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, display by the the number of meter 200 in ascending."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, I want to rank by the y-axis in ascending."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) ASC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:54.40', '1:56.34', '1:56.44', '1:56.77', '1:57.10', '1:57.21', '1:57.26']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:54.40, 1:56.34, 1:56.44, 1:56.77, 1:57.10, 1:57.21, 1:57.26","1, 1, 1, 1, 1, 1, 2","Create a bar chart showing the number of meter 200 across meter 200, and rank by the Y from low to high."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order in descending by the total number please."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, rank by the total number in descending."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Create a bar chart showing the number of meter 200 across meter 200, and I want to show Y-axis in descending order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and I want to rank from high to low by the the number of meter 200."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to show Y-axis in descending order."
"SELECT meter_200 , COUNT(meter_200) FROM swimmer GROUP BY meter_200 ORDER BY COUNT(meter_200) DESC",Bar,Medium,swimming,"{'chart': 'bar', 'x_name': 'meter_200', 'y_name': 'COUNT(meter_200)', 'x_data': [['1:57.26', '1:57.21', '1:57.10', '1:56.77', '1:56.44', '1:56.34', '1:54.40']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY meter_200'}",bar,meter_200,COUNT(meter_200),"1:57.26, 1:57.21, 1:57.10, 1:56.77, 1:56.44, 1:56.34, 1:54.40","2, 1, 1, 1, 1, 1, 1","Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, rank in desc by the total number."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1","Find the number of the names of stadiums that some Australian swimmers have been to, could you rank from low to high by the X-axis?"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1","A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, list by the name in ascending."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Nou Mestalla', 'Yubileyniy Stadium']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Nou Mestalla, Yubileyniy Stadium","1, 1, 2, 1","Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, and order by the X from low to high."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Yubileyniy Stadium', 'Nou Mestalla', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Yubileyniy Stadium, Nou Mestalla, Gazprom Arena, Baku Olympic Stadium","1, 2, 1, 1","Find the number of the names of stadiums that some Australian swimmers have been to, and list in descending by the x axis."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Yubileyniy Stadium', 'Nou Mestalla', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Yubileyniy Stadium, Nou Mestalla, Gazprom Arena, Baku Olympic Stadium","1, 2, 1, 1","Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, and order from high to low by the bar."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY T4.name DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Yubileyniy Stadium', 'Nou Mestalla', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Yubileyniy Stadium, Nou Mestalla, Gazprom Arena, Baku Olympic Stadium","1, 2, 1, 1","A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, list from high to low by the names."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Yubileyniy Stadium', 'Nou Mestalla']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Yubileyniy Stadium, Nou Mestalla","1, 1, 1, 2","Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, could you display total number in ascending order?"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Yubileyniy Stadium', 'Nou Mestalla']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Yubileyniy Stadium, Nou Mestalla","1, 1, 1, 2","Find the number of the names of stadiums that some Australian swimmers have been to, and show in ascending by the the number of name."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) ASC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Baku Olympic Stadium', 'Gazprom Arena', 'Yubileyniy Stadium', 'Nou Mestalla']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Baku Olympic Stadium, Gazprom Arena, Yubileyniy Stadium, Nou Mestalla","1, 1, 1, 2","A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, and could you display Y in asc order?"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Nou Mestalla', 'Yubileyniy Stadium', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Nou Mestalla, Yubileyniy Stadium, Gazprom Arena, Baku Olympic Stadium","2, 1, 1, 1","Find the names of stadiums that some Australian swimmers have been to, and count them by a bar chart, I want to show by the y-axis from high to low."
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Nou Mestalla', 'Yubileyniy Stadium', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Nou Mestalla, Yubileyniy Stadium, Gazprom Arena, Baku Olympic Stadium","2, 1, 1, 1","A bar chart for finding the number of the names of stadiums that some Australian swimmers have been to, could you list by the total number from high to low?"
"SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC",Bar,Extra Hard,swimming,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Nou Mestalla', 'Yubileyniy Stadium', 'Gazprom Arena', 'Baku Olympic Stadium']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Nou Mestalla, Yubileyniy Stadium, Gazprom Arena, Baku Olympic Stadium","2, 1, 1, 1","Find the number of the names of stadiums that some Australian swimmers have been to, I want to show by the y-axis from high to low."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) ASC",Stacked Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Fri', 'Mon', 'Thur', 'Tue', 'Wed', 'Sat', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Fri, Mon, Thur, Tue, Wed, Sat, Sun","0, 0, 0, 0, 0, 0, 1","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to order by the total number from low to high please."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) DESC",Stacked Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Sat', 'Wed', 'Tue', 'Thur', 'Mon', 'Fri']], 'y_data': [[1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Sat, Wed, Tue, Thur, Mon, Fri","1, 0, 0, 0, 0, 0, 0","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to display y axis from high to low order."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC",Grouping Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[2, 0, 0, 0, 0, 0, 0, 0, 1], [2, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","2, 0, 0, 0, 0, 0, 0, 0, 1","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, order by the x axis in ascending."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction ASC",Grouping Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[2, 0, 0, 0, 0, 0, 0, 0, 1], [2, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","2, 0, 0, 0, 0, 0, 0, 0, 1","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, sort date_of_transaction from low to high order."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC",Grouping Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 2], [2, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 0, 0, 0, 0, 0, 0, 0, 2","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and order by the x axis in descending."
"SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY date_of_transaction DESC",Grouping Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 2], [2, 0, 0, 0, 0, 0, 0, 0, 2]], 'classify': ['Purchase', 'Sale'], 'describe': 'GROUP BY transaction_type_description, BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 0, 0, 0, 0, 0, 0, 0, 2","Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and could you sort from high to low by the X-axis?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 0, 0, 0, 0, 0, 0, 0, 1","For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, and list in ascending by the x axis please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction ASC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 0, 0, 0, 0, 0, 0, 0, 1","For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, order X from low to high order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 0, 0, 0, 0, 0, 0, 0, 1","For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, could you sort X from high to low order?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count < 10  ORDER BY date_of_transaction DESC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 0, 0, 0, 0, 0, 0, 0, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 0, 0, 0, 0, 0, 0, 0, 1","For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, and I want to show by the x axis in desc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY COUNT(date_of_transaction) ASC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sat', 'Thur', 'Mon', 'Tue', 'Wed', 'Fri', 'Sun']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sat, Thur, Mon, Tue, Wed, Fri, Sun","0, 0, 1, 1, 1, 2, 2","Show all dates of transactions whose type code is ""SALE"", and count them by a bar chart, and I want to sort by the y-axis in asc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY COUNT(date_of_transaction) DESC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Fri', 'Wed', 'Tue', 'Mon', 'Thur', 'Sat']], 'y_data': [[2, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Fri, Wed, Tue, Mon, Thur, Sat","2, 2, 1, 1, 1, 0, 0","Show all dates of transactions whose type code is ""SALE"", and count them by a bar chart, I want to order by the Y-axis in descending please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY date_of_transaction ASC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1979~1981', '1982~1984', '1985~1987', '1988~1990', '1991~1993', '1994~1996', '1997~1999', '2000~2002', '2003~2004']], 'y_data': [[2, 1, 0, 1, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1979~1981, 1982~1984, 1985~1987, 1988~1990, 1991~1993, 1994~1996, 1997~1999, 2000~2002, 2003~2004","2, 1, 0, 1, 0, 0, 0, 2, 1","Show all dates of transactions whose type code is ""SALE"", and count them by a line chart, show from low to high by the x-axis."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY date_of_transaction ASC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1979~1981', '1982~1984', '1985~1987', '1988~1990', '1991~1993', '1994~1996', '1997~1999', '2000~2002', '2003~2004']], 'y_data': [[2, 1, 0, 1, 0, 0, 0, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1979~1981, 1982~1984, 1985~1987, 1988~1990, 1991~1993, 1994~1996, 1997~1999, 2000~2002, 2003~2004","2, 1, 0, 1, 0, 0, 0, 2, 1","Show all dates of transactions whose type code is ""SALE"", and count them by a line chart, order by the X from low to high."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY date_of_transaction DESC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2003~2004', '2000~2002', '1997~1999', '1994~1996', '1991~1993', '1988~1990', '1985~1987', '1982~1984', '1979~1981']], 'y_data': [[1, 2, 0, 0, 0, 1, 0, 1, 2]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2003~2004, 2000~2002, 1997~1999, 1994~1996, 1991~1993, 1988~1990, 1985~1987, 1982~1984, 1979~1981","1, 2, 0, 0, 0, 1, 0, 1, 2","Show all dates of transactions whose type code is ""SALE"", and count them by a line chart, and display by the x-axis from high to low."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""  ORDER BY date_of_transaction DESC",Line,Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2003~2004', '2000~2002', '1997~1999', '1994~1996', '1991~1993', '1988~1990', '1985~1987', '1982~1984', '1979~1981']], 'y_data': [[1, 2, 0, 0, 0, 1, 0, 1, 2]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2003~2004, 2000~2002, 1997~1999, 1994~1996, 1991~1993, 1988~1990, 1985~1987, 1982~1984, 1979~1981","1, 2, 0, 0, 0, 1, 0, 1, 2","Show all dates of transactions whose type code is ""SALE"", and count them by a line chart, and list x axis from high to low order."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3","Return the lot details, group the lot details, and compute the number of each lot details, list X-axis from low to high order please."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3","A bar chart groups the lot details, and computes the number of each lot details, I want to display x axis in ascending order."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['d', 'h', 'm', 'q', 'r', 's', 'x', 'z']], 'y_data': [[3, 2, 2, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"d, h, m, q, r, s, x, z","3, 2, 2, 1, 1, 2, 1, 3","Bar chart x axis lot details y axis the number of lot details, and sort by the names in asc."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'x', 's', 'r', 'q', 'm', 'h', 'd']], 'y_data': [[3, 1, 2, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, x, s, r, q, m, h, d","3, 1, 2, 1, 1, 2, 2, 3","Bar chart x axis lot details y axis the number of lot details, could you show x-axis in descending order?"
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'x', 's', 'r', 'q', 'm', 'h', 'd']], 'y_data': [[3, 1, 2, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, x, s, r, q, m, h, d","3, 1, 2, 1, 1, 2, 2, 3","A bar chart groups the lot details, and computes the number of each lot details, could you rank bar from high to low order?"
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY lot_details DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'x', 's', 'r', 'q', 'm', 'h', 'd']], 'y_data': [[3, 1, 2, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, x, s, r, q, m, h, d","3, 1, 2, 1, 1, 2, 2, 3","Return the lot details, group the lot details, and compute the number of each lot details, and could you show x-axis in descending order?"
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['q', 'r', 'x', 'h', 'm', 's', 'd', 'z']], 'y_data': [[1, 1, 1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"q, r, x, h, m, s, d, z","1, 1, 1, 2, 2, 2, 3, 3","A bar chart groups the lot details, and computes the number of each lot details, and list y axis in asc order please."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['q', 'r', 'x', 'h', 'm', 's', 'd', 'z']], 'y_data': [[1, 1, 1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"q, r, x, h, m, s, d, z","1, 1, 1, 2, 2, 2, 3, 3","Return the lot details, group the lot details, and compute the number of each lot details, and show y-axis in ascending order."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['q', 'r', 'x', 'h', 'm', 's', 'd', 'z']], 'y_data': [[1, 1, 1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"q, r, x, h, m, s, d, z","1, 1, 1, 2, 2, 2, 3, 3","Bar chart x axis lot details y axis the number of lot details, rank in ascending by the total number."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'd', 's', 'm', 'h', 'x', 'r', 'q']], 'y_data': [[3, 3, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, d, s, m, h, x, r, q","3, 3, 2, 2, 2, 1, 1, 1","A bar chart groups the lot details, and computes the number of each lot details, and list by the how many lot details in desc."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'd', 's', 'm', 'h', 'x', 'r', 'q']], 'y_data': [[3, 3, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, d, s, m, h, x, r, q","3, 3, 2, 2, 2, 1, 1, 1","Bar chart x axis lot details y axis the number of lot details, and list by the Y-axis in desc please."
"SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 'd', 's', 'm', 'h', 'x', 'r', 'q']], 'y_data': [[3, 3, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, d, s, m, h, x, r, q","3, 3, 2, 2, 2, 1, 1, 1","Return the lot details, group the lot details, and compute the number of each lot details, list in desc by the y-axis please."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.Investor_details ASC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z","3, 2","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" Plot them as bar chart, I want to rank by the bar in ascending please."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.Investor_details ASC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z","3, 2","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" by a bar chart, list by the X-axis from low to high."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.Investor_details DESC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" Plot them as bar chart, and list in desc by the Investor_details please."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.Investor_details DESC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" by a bar chart, rank in descending by the bar."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.investor_id ASC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" Plot them as bar chart, order total number in asc order."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.investor_id ASC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['z', 'd']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"z, d","2, 3","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" by a bar chart, and could you rank from low to high by the y-axis?"
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.investor_id DESC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z","3, 2","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" by a bar chart, list from high to low by the Y."
"SELECT T1.Investor_details , T1.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" ORDER BY T1.investor_id DESC",Bar,Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'investor_id', 'x_data': [['d', 'z']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Investor_details,investor_id,"d, z","3, 2","Show the ids and details of the investors who have at least two transactions with type code ""SALE"" Plot them as bar chart, sort in desc by the y-axis."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[0, 1, 1, 3, 3, 3, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","0, 1, 1, 3, 3, 3, 4","A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, I want to display Y-axis in ascending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[0, 1, 1, 3, 3, 3, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","0, 1, 1, 3, 3, 3, 4","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and I want to display Y-axis in ascending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[0, 1, 1, 3, 3, 3, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","0, 1, 1, 3, 3, 3, 4","What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, order by the Y in ascending."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Wed', 'Tue', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[4, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Wed, Tue, Fri, Sat, Mon, Thur","4, 3, 3, 3, 1, 1, 0","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and order in desc by the the number of date of transaction."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Wed', 'Tue', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[4, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Wed, Tue, Fri, Sat, Mon, Thur","4, 3, 3, 3, 1, 1, 0","A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and sort by the Y from high to low."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Wed', 'Tue', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[4, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Wed, Tue, Fri, Sat, Mon, Thur","4, 3, 3, 3, 1, 1, 0","What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and show total number in desc order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart, and could you rank by the X from low to high?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and could you display by the date_of_transaction in ascending?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and display by the date_of_transaction in asc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, could you order date_of_transaction from high to low order please?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart, and I want to display by the x-axis in desc please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and sort from high to low by the X-axis."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the lot details of lots that belong to investors with details ""l"", and count them by a bar chart, order by the lot_details in ascending."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","A bar chart for returning the number of the lot details of lots that belong to investors with details ""l""?, display by the X in asc."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 'm', 's', 'z']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, m, s, z","1, 2, 1, 1","Return the number of the lot details of lots that belong to investors with details ""l""?, and order by the lot_details in ascending."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 's', 'm', 'h']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, s, m, h","1, 1, 2, 1","Return the number of the lot details of lots that belong to investors with details ""l""?, and show in desc by the x axis."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 's', 'm', 'h']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, s, m, h","1, 1, 2, 1","A bar chart for returning the number of the lot details of lots that belong to investors with details ""l""?, could you sort by the x-axis from high to low?"
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY lot_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['z', 's', 'm', 'h']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"z, s, m, h","1, 1, 2, 1","Return the lot details of lots that belong to investors with details ""l"", and count them by a bar chart, and I want to rank by the bar in descending."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 's', 'z', 'm']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, s, z, m","1, 1, 1, 2","Return the lot details of lots that belong to investors with details ""l"", and count them by a bar chart, and order in ascending by the Y-axis."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 's', 'z', 'm']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, s, z, m","1, 1, 1, 2","A bar chart for returning the number of the lot details of lots that belong to investors with details ""l""?, and I want to list in ascending by the y axis."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['h', 's', 'z', 'm']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"h, s, z, m","1, 1, 1, 2","Return the number of the lot details of lots that belong to investors with details ""l""?, sort total number in asc order."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['m', 'z', 's', 'h']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"m, z, s, h","2, 1, 1, 1","Return the number of the lot details of lots that belong to investors with details ""l""?, and order in desc by the y axis please."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['m', 'z', 's', 'h']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"m, z, s, h","2, 1, 1, 1","A bar chart for returning the number of the lot details of lots that belong to investors with details ""l""?, I want to rank by the how many lot details in descending."
"SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l"" GROUP BY lot_details ORDER BY COUNT(lot_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'lot_details', 'y_name': 'COUNT(lot_details)', 'x_data': [['m', 'z', 's', 'h']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY lot_details'}",bar,lot_details,COUNT(lot_details),"m, z, s, h","2, 1, 1, 1","Return the lot details of lots that belong to investors with details ""l"", and count them by a bar chart, and could you list in descending by the y-axis?"
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'd', 'i', 'j', 'k', 'l', 'o', 'q', 'r', 't', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, d, i, j, k, l, o, q, r, t, w, y, z","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2","Show all investor details, and count them by a bar chart, and sort from low to high by the x axis please."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'd', 'i', 'j', 'k', 'l', 'o', 'q', 'r', 't', 'w', 'y', 'z']], 'y_data': [[1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, d, i, j, k, l, o, q, r, t, w, y, z","1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2","Plot the number of investor details by grouped by investor details as a bar graph, and order in ascending by the bar."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['z', 'y', 'w', 't', 'r', 'q', 'o', 'l', 'k', 'j', 'i', 'd', 'c', 'b']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"z, y, w, t, r, q, o, l, k, j, i, d, c, b","2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1","Plot the number of investor details by grouped by investor details as a bar graph, sort in desc by the x-axis."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY Investor_details DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['z', 'y', 'w', 't', 'r', 'q', 'o', 'l', 'k', 'j', 'i', 'd', 'c', 'b']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"z, y, w, t, r, q, o, l, k, j, i, d, c, b","2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1","Show all investor details, and count them by a bar chart, sort bars from high to low order please."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'i', 'j', 'o', 'q', 'r', 't', 'd', 'k', 'l', 'w', 'y', 'z']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, i, j, o, q, r, t, d, k, l, w, y, z","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2","Show all investor details, and count them by a bar chart, and order by the Y-axis in ascending."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['b', 'c', 'i', 'j', 'o', 'q', 'r', 't', 'd', 'k', 'l', 'w', 'y', 'z']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"b, c, i, j, o, q, r, t, d, k, l, w, y, z","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2","Plot the number of investor details by grouped by investor details as a bar graph, list in ascending by the total number."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['z', 'y', 'w', 'l', 'k', 'd', 't', 'r', 'q', 'o', 'j', 'i', 'c', 'b']], 'y_data': [[2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"z, y, w, l, k, d, t, r, q, o, j, i, c, b","2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Show all investor details, and count them by a bar chart, I want to rank from high to low by the how many investor details please."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['z', 'y', 'w', 'l', 'k', 'd', 't', 'r', 'q', 'o', 'j', 'i', 'c', 'b']], 'y_data': [[2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"z, y, w, l, k, d, t, r, q, o, j, i, c, b","2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Plot the number of investor details by grouped by investor details as a bar graph, display Y from high to low order."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Create a bar chart showing mean amount of transaction across transaction type code, display by the transaction_type_code in asc."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Show the average transaction amount for different transaction types, show in ascending by the X-axis."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Show the average transaction amount for different transaction types with a bar chart, and I want to sort by the x-axis in ascending please."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Create a bar chart showing mean amount of transaction across transaction type code, rank in descending by the x axis please."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Show the average transaction amount for different transaction types, and I want to list in descending by the x-axis."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Show the average transaction amount for different transaction types with a bar chart, I want to list in descending by the x-axis."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Create a bar chart showing mean amount of transaction across transaction type code, rank Y-axis in asc order."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Show the average transaction amount for different transaction types with a bar chart, sort from low to high by the y axis."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['SALE', 'PUR']], 'y_data': [[11198167.237771427, 25945880.3716125]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"SALE, PUR","11198167.237771427, 25945880.3716125","Show the average transaction amount for different transaction types, I want to display by the total number in ascending please."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Show the average transaction amount for different transaction types with a bar chart, and I want to display Y in descending order."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Create a bar chart showing mean amount of transaction across transaction type code, I want to display Y in descending order."
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY avg(amount_of_transaction) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'transaction_type_code', 'y_name': 'avg(amount_of_transaction)', 'x_data': [['PUR', 'SALE']], 'y_data': [[25945880.3716125, 11198167.237771427]], 'classify': [], 'describe': ''}",bar,transaction_type_code,avg(amount_of_transaction),"PUR, SALE","25945880.3716125, 11198167.237771427","Show the average transaction amount for different transaction types, order by the y axis from high to low please."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['d', 'k', 'l', 't', 'w', 'z']], 'y_data': [[2, 2, 3, 1, 3, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"d, k, l, t, w, z","2, 2, 3, 1, 3, 2","Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, sort X in asc order."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY Investor_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['z', 'w', 't', 'l', 'k', 'd']], 'y_data': [[2, 3, 1, 3, 2, 2]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"z, w, t, l, k, d","2, 3, 1, 3, 2, 2","Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, rank names from high to low order."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['t', 'd', 'k', 'z', 'l', 'w']], 'y_data': [[1, 2, 2, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"t, d, k, z, l, w","1, 2, 2, 2, 3, 3","Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, and I want to order by the Y in ascending."
"SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100 GROUP BY Investor_details ORDER BY COUNT(Investor_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'Investor_details', 'y_name': 'COUNT(Investor_details)', 'x_data': [['w', 'l', 'z', 'k', 'd', 't']], 'y_data': [[3, 3, 2, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY Investor_details'}",bar,Investor_details,COUNT(Investor_details),"w, l, z, k, d, t","3, 3, 2, 2, 2, 1","Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, I want to show by the y-axis from high to low."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[0, 1, 1, 3, 3, 3, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","0, 1, 1, 3, 3, 3, 4","Give me a bar chart for how many date of transaction of each date of transaction, and display by the the number of date of transaction in ascending."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Tue', 'Wed', 'Sun']], 'y_data': [[0, 1, 1, 3, 3, 3, 4]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Tue, Wed, Sun","0, 1, 1, 3, 3, 3, 4","Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and show y-axis in ascending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Wed', 'Tue', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[4, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Wed, Tue, Fri, Sat, Mon, Thur","4, 3, 3, 3, 1, 1, 0","Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and order by the y-axis in desc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sun', 'Wed', 'Tue', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[4, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sun, Wed, Tue, Fri, Sat, Mon, Thur","4, 3, 3, 3, 1, 1, 0","Give me a bar chart for how many date of transaction of each date of transaction, and order by the y-axis in desc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, and list in asc by the X."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","Plot how many date of transaction over date of transaction in a line chart, I want to order X from low to high order please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 3, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 3, 1","Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, and list in asc by the X."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend, display by the date_of_transaction in desc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","Plot how many date of transaction over date of transaction in a line chart, and list X-axis from high to low order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 3, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 3, 1, 1, 0, 1, 1, 2, 2, 3","Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin, order in desc by the date_of_transaction."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Sat', 'Thur', 'Tue', 'Sun', 'Wed', 'Fri', 'Mon']], 'y_data': [[0, 0, 96529, 97709, 1663726, 9357173, 674529892]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Sat, Thur, Tue, Sun, Wed, Fri, Mon","0, 0, 96529, 97709, 1663726, 9357173, 674529892","Bar graph to show sum share count from different date of transaction, and could you rank Y from low to high order?"
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Sat', 'Thur', 'Tue', 'Sun', 'Wed', 'Fri', 'Mon']], 'y_data': [[0, 0, 96529, 97709, 1663726, 9357173, 674529892]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Sat, Thur, Tue, Sun, Wed, Fri, Mon","0, 0, 96529, 97709, 1663726, 9357173, 674529892","Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, order in asc by the total number of share count please."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Mon', 'Fri', 'Wed', 'Sun', 'Tue', 'Thur', 'Sat']], 'y_data': [[674529892, 9357173, 1663726, 97709, 96529, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Mon, Fri, Wed, Sun, Tue, Thur, Sat","674529892, 9357173, 1663726, 97709, 96529, 0, 0","Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, list in descending by the y axis please."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY SUM(share_count) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['Mon', 'Fri', 'Wed', 'Sun', 'Tue', 'Thur', 'Sat']], 'y_data': [[674529892, 9357173, 1663726, 97709, 96529, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,SUM(share_count),"Mon, Fri, Wed, Sun, Tue, Thur, Sat","674529892, 9357173, 1663726, 97709, 96529, 0, 0","Bar graph to show sum share count from different date of transaction, and rank total number in descending order please."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Sat', 'Thur', 'Sun', 'Tue', 'Wed', 'Fri', 'Mon']], 'y_data': [[0, 0, 24427.25, 32176.333333333332, 554575.3333333334, 3119057.6666666665, 674529892]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Sat, Thur, Sun, Tue, Wed, Fri, Mon","0, 0, 24427.25, 32176.333333333332, 554575.3333333334, 3119057.6666666665, 674529892","Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, show in ascending by the total number please."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) ASC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Sat', 'Thur', 'Sun', 'Tue', 'Wed', 'Fri', 'Mon']], 'y_data': [[0, 0, 24427.25, 32176.333333333332, 554575.3333333334, 3119057.6666666665, 674529892]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Sat, Thur, Sun, Tue, Wed, Fri, Mon","0, 0, 24427.25, 32176.333333333332, 554575.3333333334, 3119057.6666666665, 674529892","Bar chart x axis date of transaction y axis mean share count, and could you list by the Y in asc?"
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Mon', 'Fri', 'Wed', 'Tue', 'Sun', 'Thur', 'Sat']], 'y_data': [[674529892, 3119057.6666666665, 554575.3333333334, 32176.333333333332, 24427.25, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Mon, Fri, Wed, Tue, Sun, Thur, Sat","674529892, 3119057.6666666665, 554575.3333333334, 32176.333333333332, 24427.25, 0, 0","Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, and show by the Y in descending."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY AVG(share_count) DESC",Bar,Medium,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['Mon', 'Fri', 'Wed', 'Tue', 'Sun', 'Thur', 'Sat']], 'y_data': [[674529892, 3119057.6666666665, 554575.3333333334, 32176.333333333332, 24427.25, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,AVG(share_count),"Mon, Fri, Wed, Tue, Sun, Thur, Sat","674529892, 3119057.6666666665, 554575.3333333334, 32176.333333333332, 24427.25, 0, 0","Bar chart x axis date of transaction y axis mean share count, and show by the Y in descending."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178","Bin all date of transactions into the YEAR interval, and sum the share count of each bin What is the trend?, and list in asc by the x axis please."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178","Visualize the general trend of sum share count over the date of transaction, list x-axis in ascending order."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","9510, 1654765, 3338, 8718572, 1522, 0, 93191, 674529892, 638061, 96178","Bin all date of transactions into the YEAR interval, and sum the share count of each bin Return the result using a line chart, sort by the X from low to high."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510","Bin all date of transactions into the YEAR interval, and sum the share count of each bin What is the trend?, and order by the X-axis from high to low please."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510","Bin all date of transactions into the YEAR interval, and sum the share count of each bin Return the result using a line chart, and I want to display from high to low by the x axis please."
"SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'SUM(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,SUM(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 638061, 674529892, 93191, 0, 1522, 8718572, 3338, 1654765, 9510","Visualize the general trend of sum share count over the date of transaction, sort in descending by the X-axis."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178","Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, display by the x-axis in asc please."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178","Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, order date_of_transaction from low to high order."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction ASC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3170, 827382.5, 1669, 8718572, 1522, 0, 93191, 674529892, 212687, 96178","Plot date of transaction by mean share count as a trend line, and sort by the date_of_transaction in ascending please."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170","Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, sort x-axis in desc order."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170","Plot date of transaction by mean share count as a trend line, and I want to show from high to low by the x-axis."
"SELECT date_of_transaction , AVG(share_count) FROM TRANSACTIONS  ORDER BY date_of_transaction DESC",Line,Medium,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'AVG(share_count)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,AVG(share_count),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","96178, 212687, 674529892, 93191, 0, 1522, 8718572, 1669, 827382.5, 3170","Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, show by the X-axis from high to low."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Sat', 'Thur', 'Fri', 'Mon', 'Tue', 'Sun', 'Wed']], 'y_data': [[0, 0, 1, 1, 2, 3, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Sat, Thur, Fri, Mon, Tue, Sun, Wed","0, 0, 1, 1, 2, 3, 3","Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and display Y in ascending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Wed', 'Sun', 'Tue', 'Mon', 'Fri', 'Thur', 'Sat']], 'y_data': [[3, 3, 2, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Wed, Sun, Tue, Mon, Fri, Thur, Sat","3, 3, 2, 1, 1, 0, 0","Find the data about the sale details and dates of transactions with amount smaller than 3000? Bin the date of the transaction into a weekday interval and compute the total number of each day with a bar chart, and sort y axis in desc order."
"SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'sales_details', 'y_name': 'COUNT(sales_details)', 'x_data': [['e', 'f', 'n', 'o', 'p', 's', 't', 'y']], 'y_data': [[1, 1, 1, 1, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY sales_details'}",bar,sales_details,COUNT(sales_details),"e, f, n, o, p, s, t, y","1, 1, 1, 1, 2, 2, 1, 1","For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, rank names in asc order."
"SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'sales_details', 'y_name': 'COUNT(sales_details)', 'x_data': [['y', 't', 's', 'p', 'o', 'n', 'f', 'e']], 'y_data': [[1, 1, 2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY sales_details'}",bar,sales_details,COUNT(sales_details),"y, t, s, p, o, n, f, e","1, 1, 2, 2, 1, 1, 1, 1","For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, and sort names in descending order."
"SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'sales_details', 'y_name': 'COUNT(sales_details)', 'x_data': [['e', 'f', 'n', 'o', 't', 'y', 'p', 's']], 'y_data': [[1, 1, 1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY sales_details'}",bar,sales_details,COUNT(sales_details),"e, f, n, o, t, y, p, s","1, 1, 1, 1, 1, 1, 2, 2","For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, and rank by the y axis from low to high please."
"SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY COUNT(sales_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'sales_details', 'y_name': 'COUNT(sales_details)', 'x_data': [['s', 'p', 'y', 't', 'o', 'n', 'f', 'e']], 'y_data': [[2, 2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY sales_details'}",bar,sales_details,COUNT(sales_details),"s, p, y, t, o, n, f, e","2, 2, 1, 1, 1, 1, 1, 1","For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, I want to sort by the Y in desc."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 2, 1, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 2, 1, 0, 1, 0, 1, 1, 3","For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and list by the x axis in ascending please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2002']], 'y_data': [[1, 2, 1, 0, 1, 0, 1, 1, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2002","1, 2, 1, 0, 1, 0, 1, 1, 3","For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, list by the x axis in ascending please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[3, 1, 1, 0, 1, 0, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","3, 1, 1, 0, 1, 0, 1, 2, 1","For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, rank x axis from high to low order please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2001~2002', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[3, 1, 1, 0, 1, 0, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2001~2002, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","3, 1, 1, 0, 1, 0, 1, 2, 1","For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin, and order by the x-axis in desc please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Sun', 'Tue', 'Wed']], 'y_data': [[0, 1, 1, 3, 3, 3, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Sun, Tue, Wed","0, 1, 1, 3, 3, 3, 3","Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you display by the how many date of transaction in ascending?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Sun', 'Tue', 'Wed']], 'y_data': [[0, 1, 1, 3, 3, 3, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Sun, Tue, Wed","0, 1, 1, 3, 3, 3, 3","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and could you show y-axis in asc order?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Thur', 'Mon', 'Sat', 'Fri', 'Sun', 'Tue', 'Wed']], 'y_data': [[0, 1, 1, 3, 3, 3, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Thur, Mon, Sat, Fri, Sun, Tue, Wed","0, 1, 1, 3, 3, 3, 3","A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and sort in asc by the Y please."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Wed', 'Tue', 'Sun', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[3, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Wed, Tue, Sun, Fri, Sat, Mon, Thur","3, 3, 3, 3, 1, 1, 0","A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, list Y in descending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Wed', 'Tue', 'Sun', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[3, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Wed, Tue, Sun, Fri, Sat, Mon, Thur","3, 3, 3, 3, 1, 1, 0","Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you list from high to low by the Y?"
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY COUNT(date_of_transaction) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['Wed', 'Tue', 'Sun', 'Fri', 'Sat', 'Mon', 'Thur']], 'y_data': [[3, 3, 3, 3, 1, 1, 0]], 'classify': [], 'describe': 'BIN date_of_transaction BY WEEKDAY'}",bar,date_of_transaction,COUNT(date_of_transaction),"Wed, Tue, Sun, Fri, Sat, Mon, Thur","3, 3, 3, 3, 1, 1, 0","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and sort y-axis in descending order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart, order x-axis from low to high order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1","Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, show in ascending by the X-axis."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction ASC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['1977~1979', '1980~1982', '1983~1985', '1986~1988', '1989~1991', '1992~1994', '1995~1997', '1998~2000', '2001~2003', '2004']], 'y_data': [[3, 2, 2, 1, 1, 0, 1, 1, 2, 1]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"1977~1979, 1980~1982, 1983~1985, 1986~1988, 1989~1991, 1992~1994, 1995~1997, 1998~2000, 2001~2003, 2004","3, 2, 2, 1, 1, 0, 1, 1, 2, 1","A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and display x-axis from low to high order."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 2, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 2, 1, 1, 0, 1, 1, 2, 2, 3","Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart, and I want to order by the X-axis in descending."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 2, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 2, 1, 1, 0, 1, 1, 2, 2, 3","A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, display from high to low by the x-axis."
"SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000  ORDER BY date_of_transaction DESC",Line,Extra Hard,tracking_share_transactions,"{'chart': 'line', 'x_name': 'date_of_transaction', 'y_name': 'COUNT(date_of_transaction)', 'x_data': [['2004', '2001~2003', '1998~2000', '1995~1997', '1992~1994', '1989~1991', '1986~1988', '1983~1985', '1980~1982', '1977~1979']], 'y_data': [[1, 2, 1, 1, 0, 1, 1, 2, 2, 3]], 'classify': [], 'describe': 'BIN date_of_transaction BY YEAR'}",line,date_of_transaction,COUNT(date_of_transaction),"2004, 2001~2003, 1998~2000, 1995~1997, 1992~1994, 1989~1991, 1986~1988, 1983~1985, 1980~1982, 1977~1979","1, 2, 1, 1, 0, 1, 1, 2, 2, 3","Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and list by the date_of_transaction in desc."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1","What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, show by the names in ascending."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1","What are the number of the purchase details of transactions with amount bigger than 10000?, and show by the names in ascending."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'c', 'i', 'r']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, c, i, r","2, 1, 1, 1","A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, could you sort in asc by the x axis?"
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['r', 'i', 'c', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"r, i, c, a","1, 1, 1, 2","What are the number of the purchase details of transactions with amount bigger than 10000?, and I want to list by the X-axis in desc please."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['r', 'i', 'c', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"r, i, c, a","1, 1, 1, 2","A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and I want to show by the X from high to low please."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['r', 'i', 'c', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"r, i, c, a","1, 1, 1, 2","What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, order by the bar from high to low."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['c', 'i', 'r', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"c, i, r, a","1, 1, 1, 2","A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and could you rank in asc by the the number of purchase details?"
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['c', 'i', 'r', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"c, i, r, a","1, 1, 1, 2","What are the number of the purchase details of transactions with amount bigger than 10000?, I want to list by the y-axis in asc."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) ASC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['c', 'i', 'r', 'a']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"c, i, r, a","1, 1, 1, 2","What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, list by the the number of purchase details from low to high."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'r', 'i', 'c']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, r, i, c","2, 1, 1, 1","A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, and display y-axis from high to low order."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'r', 'i', 'c']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, r, i, c","2, 1, 1, 1","What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, rank by the the number of purchase details from high to low."
"SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY COUNT(purchase_details) DESC",Bar,Extra Hard,tracking_share_transactions,"{'chart': 'bar', 'x_name': 'purchase_details', 'y_name': 'COUNT(purchase_details)', 'x_data': [['a', 'r', 'i', 'c']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY purchase_details'}",bar,purchase_details,COUNT(purchase_details),"a, r, i, c","2, 1, 1, 1","What are the number of the purchase details of transactions with amount bigger than 10000?, rank by the the number of purchase details from high to low."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","Show all sport name and the number of students in a bar chart, display from low to high by the bar."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","Bar chart x axis sportname y axis the total number, and display from low to high by the bar."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","Visualize a bar chart for how many students play each sport?, and sort bar in ascending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","How many students play each sport Show bar chart, and sort bar in ascending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","Show all sport name and the number of students Show bar chart, and sort in asc by the bar."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Football', 'Lacrosse', 'Soccer', 'Swimming', 'Tennis']], 'y_data': [[1, 1, 1, 1, 1, 2, 3, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Football, Lacrosse, Soccer, Swimming, Tennis","1, 1, 1, 1, 1, 2, 3, 1, 1, 2","Give me a histogram for how many students play each sport?, and show X-axis in ascending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","Bar chart x axis sportname y axis the total number, rank X-axis from high to low order please."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","How many students play each sport Show bar chart, sort bars in descending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","Show all sport name and the number of students Show bar chart, rank by the X from high to low."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","Give me a histogram for how many students play each sport?, and sort bars in descending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","Visualize a bar chart for how many students play each sport?, and sort bars in descending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Tennis', 'Swimming', 'Soccer', 'Lacrosse', 'Football', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[2, 1, 1, 3, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Tennis, Swimming, Soccer, Lacrosse, Football, Curling, Cricket, Basketball, Baseball, Athletics","2, 1, 1, 3, 2, 1, 1, 1, 1, 1","Show all sport name and the number of students in a bar chart, and sort bars in descending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","Visualize a bar chart for how many students play each sport?, and show total number from low to high order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","Give me a histogram for how many students play each sport?, and rank the total number in ascending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","Bar chart x axis sportname y axis the total number, order by the y axis in ascending."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","Show all sport name and the number of students Show bar chart, could you sort by the Y-axis in ascending please?"
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","How many students play each sport Show bar chart, and could you sort by the Y-axis in ascending please?"
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) ASC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Athletics', 'Baseball', 'Basketball', 'Cricket', 'Curling', 'Soccer', 'Swimming', 'Football', 'Tennis', 'Lacrosse']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 3]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Athletics, Baseball, Basketball, Cricket, Curling, Soccer, Swimming, Football, Tennis, Lacrosse","1, 1, 1, 1, 1, 1, 1, 2, 2, 3","Show all sport name and the number of students in a bar chart, and list by the y-axis in ascending."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","Give me a histogram for how many students play each sport?, sort from high to low by the Y."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis sportname y axis the total number, list in desc by the Y."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","Visualize a bar chart for how many students play each sport?, and show Y in descending order."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","Show all sport name and the number of students in a bar chart, sort from high to low by the Y."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","Show all sport name and the number of students Show bar chart, and list in desc by the Y."
"SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY count(*) DESC",Bar,Medium,game_1,"{'chart': 'bar', 'x_name': 'SportName', 'y_name': 'count(*)', 'x_data': [['Lacrosse', 'Tennis', 'Football', 'Swimming', 'Soccer', 'Curling', 'Cricket', 'Basketball', 'Baseball', 'Athletics']], 'y_data': [[3, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,SportName,count(*),"Lacrosse, Tennis, Football, Swimming, Soccer, Curling, Cricket, Basketball, Baseball, Athletics","3, 2, 2, 1, 1, 1, 1, 1, 1, 1","How many students play each sport Show bar chart, and sort from high to low by the Y."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","What are the last names for all scholarship students, and count them by a bar chart, rank by the x-axis in asc."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","What are the number of the last names for all scholarship students?, and show in ascending by the x-axis."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","Show last names for all student who are on scholarship, and count them by a bar chart, I want to display from low to high by the names please."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Pang', 'Shieber', 'Simms']], 'y_data': [[1, 1, 1, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Pang, Shieber, Simms","1, 1, 1, 2, 2, 1","A bar chart for what are the number of the last names for all scholarship students?, I want to order by the X-axis in ascending."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Simms', 'Shieber', 'Pang', 'Lee', 'Kim', 'Jones']], 'y_data': [[1, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Simms, Shieber, Pang, Lee, Kim, Jones","1, 2, 2, 1, 1, 1","What are the last names for all scholarship students, and count them by a bar chart, I want to rank x axis in desc order."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Simms', 'Shieber', 'Pang', 'Lee', 'Kim', 'Jones']], 'y_data': [[1, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Simms, Shieber, Pang, Lee, Kim, Jones","1, 2, 2, 1, 1, 1","What are the number of the last names for all scholarship students?, rank in desc by the X-axis please."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Simms', 'Shieber', 'Pang', 'Lee', 'Kim', 'Jones']], 'y_data': [[1, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Simms, Shieber, Pang, Lee, Kim, Jones","1, 2, 2, 1, 1, 1","A bar chart for what are the number of the last names for all scholarship students?, sort in descending by the x axis."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY LName DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Simms', 'Shieber', 'Pang', 'Lee', 'Kim', 'Jones']], 'y_data': [[1, 2, 2, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Simms, Shieber, Pang, Lee, Kim, Jones","1, 2, 2, 1, 1, 1","Show last names for all student who are on scholarship, and count them by a bar chart, could you order X-axis from high to low order?"
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Simms', 'Pang', 'Shieber']], 'y_data': [[1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Simms, Pang, Shieber","1, 1, 1, 1, 2, 2","What are the last names for all scholarship students, and count them by a bar chart, and rank by the y axis from low to high please."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Simms', 'Pang', 'Shieber']], 'y_data': [[1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Simms, Pang, Shieber","1, 1, 1, 1, 2, 2","A bar chart for what are the number of the last names for all scholarship students?, rank y-axis in asc order please."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Simms', 'Pang', 'Shieber']], 'y_data': [[1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Simms, Pang, Shieber","1, 1, 1, 1, 2, 2","Show last names for all student who are on scholarship, and count them by a bar chart, I want to sort total number in ascending order."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Jones', 'Kim', 'Lee', 'Simms', 'Pang', 'Shieber']], 'y_data': [[1, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Jones, Kim, Lee, Simms, Pang, Shieber","1, 1, 1, 1, 2, 2","What are the number of the last names for all scholarship students?, list by the how many lname in ascending please."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Shieber', 'Pang', 'Simms', 'Lee', 'Kim', 'Jones']], 'y_data': [[2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Shieber, Pang, Simms, Lee, Kim, Jones","2, 2, 1, 1, 1, 1","Show last names for all student who are on scholarship, and count them by a bar chart, and could you sort in descending by the y-axis?"
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Shieber', 'Pang', 'Simms', 'Lee', 'Kim', 'Jones']], 'y_data': [[2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Shieber, Pang, Simms, Lee, Kim, Jones","2, 2, 1, 1, 1, 1","What are the last names for all scholarship students, and count them by a bar chart, and could you sort in descending by the y-axis?"
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Shieber', 'Pang', 'Simms', 'Lee', 'Kim', 'Jones']], 'y_data': [[2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Shieber, Pang, Simms, Lee, Kim, Jones","2, 2, 1, 1, 1, 1","A bar chart for what are the number of the last names for all scholarship students?, and rank total number in desc order."
"SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) DESC",Bar,Extra Hard,game_1,"{'chart': 'bar', 'x_name': 'LName', 'y_name': 'COUNT(LName)', 'x_data': [['Shieber', 'Pang', 'Simms', 'Lee', 'Kim', 'Jones']], 'y_data': [[2, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY LName'}",bar,LName,COUNT(LName),"Shieber, Pang, Simms, Lee, Kim, Jones","2, 2, 1, 1, 1, 1","What are the number of the last names for all scholarship students?, and could you order by the y axis from high to low?"
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","What is the number of types of competition?, order in asc by the names."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","Give me a bar chart for how many competition type of each competition type, rank from low to high by the bars."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","Show the number of different competition types with a bar graph, and order by the bar in asc please."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","A bar chart showing the number of different competition types, could you show from low to high by the bar please?"
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","A bar chart showing the number of different competition types, display from high to low by the x axis."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","Show the number of different competition types with a bar graph, and I want to display from high to low by the Competition_type."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","Give me a bar chart for how many competition type of each competition type, and I want to order in desc by the x axis please."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","What is the number of types of competition?, I want to display X-axis from high to low order."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","Show the number of different competition types with a bar graph, list in asc by the Y please."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","A bar chart showing the number of different competition types, I want to rank Y-axis in ascending order."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","What is the number of types of competition?, and could you rank Y-axis in asc order?"
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Tournament, Friendly","3, 8","Give me a bar chart for how many competition type of each competition type, and rank the number of competition type in ascending order."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","What is the number of types of competition?, sort the number of competition type from high to low order."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","A bar chart showing the number of different competition types, display by the y axis in descending."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","Show the number of different competition types with a bar graph, sort the number of competition type from high to low order."
"SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(Competition_type)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': 'GROUP BY Competition_type'}",bar,Competition_type,COUNT(Competition_type),"Friendly, Tournament","8, 3","Give me a bar chart for how many competition type of each competition type, order by the y-axis in descending."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","A stacked bar chart about the total number in each competition type, and then split by country, could you order by the bars from low to high?"
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","How many competitions in each competition type? And split them by country, and could you sort in ascending by the names?"
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","Compute the total number in each competition type, and then split by country, and sort in asc by the bar."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 2, 0, 1], [0, 0, 0, 1, 2, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 2, 0, 1","Stacked bar chart of the number of country for with each Competition_type in each country, sort in asc by the bar."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 0, 2, 2, 1, 2], [0, 2, 1, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 0, 2, 2, 1, 2","Compute the total number in each competition type, and then split by country, show in desc by the x-axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 0, 2, 2, 1, 2], [0, 2, 1, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 0, 2, 2, 1, 2","Stacked bar chart of the number of country for with each Competition_type in each country, order bar in desc order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 0, 2, 2, 1, 2], [0, 2, 1, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 0, 2, 2, 1, 2","How many competitions in each competition type? And split them by country, show in desc by the x-axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 0, 2, 2, 1, 2], [0, 2, 1, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 0, 2, 2, 1, 2","A stacked bar chart about the total number in each competition type, and then split by country, and order in descending by the x-axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 0, 2, 2, 2], [0, 0, 0, 0, 2, 1]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 0, 2, 2, 2","How many competitions in each competition type? And split them by country, and order Y-axis from low to high order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 0, 2, 2, 2], [0, 0, 0, 0, 2, 1]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 0, 2, 2, 2","Compute the total number in each competition type, and then split by country, could you show in ascending by the y axis please?"
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 0, 2, 2, 2], [0, 0, 0, 0, 2, 1]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 0, 2, 2, 2","Stacked bar chart of the number of country for with each Competition_type in each country, and show by the y axis in asc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) ASC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 0, 2, 2, 2], [0, 0, 0, 0, 2, 1]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 0, 2, 2, 2","A stacked bar chart about the total number in each competition type, and then split by country, and could you display by the Y-axis from low to high?"
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[2, 2, 2, 0, 1, 1], [1, 2, 0, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","2, 2, 2, 0, 1, 1","Stacked bar chart of the number of country for with each Competition_type in each country, sort by the the number of country in descending."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[2, 2, 2, 0, 1, 1], [1, 2, 0, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","2, 2, 2, 0, 1, 1","How many competitions in each competition type? And split them by country, sort by the the number of country in descending."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[2, 2, 2, 0, 1, 1], [1, 2, 0, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","2, 2, 2, 0, 1, 1","Compute the total number in each competition type, and then split by country, and could you order by the y-axis in desc?"
"SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY COUNT(Country) DESC",Stacked Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[2, 2, 2, 0, 1, 1], [1, 2, 0, 0, 0, 0]], 'classify': ['Friendly', 'Tournament'], 'describe': 'GROUP BY Competition_type, GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","2, 2, 2, 0, 1, 1","A stacked bar chart about the total number in each competition type, and then split by country, and rank by the y axis in desc please."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1","Show me the number of country by country in a histogram, sort by the bar in asc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1","How many competitions for each country?, and list in asc by the X-axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1","A bar chart for how many competitions for each country, and order x-axis from low to high order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Australia', 'Ireland', 'Italy', 'Russia', 'Slovenia', 'Spain']], 'y_data': [[2, 1, 2, 3, 2, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Australia, Ireland, Italy, Russia, Slovenia, Spain","2, 1, 2, 3, 2, 1","Compare the total number of competitions for each country, rank Country in ascending order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 2, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 2, 3, 2, 1, 2","A bar chart for how many competitions for each country, and display bars from high to low order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 2, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 2, 3, 2, 1, 2","Show me the number of country by country in a histogram, and I want to sort in desc by the x axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 2, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 2, 3, 2, 1, 2","How many competitions for each country?, rank by the Country in desc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY Country DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Spain', 'Slovenia', 'Russia', 'Italy', 'Ireland', 'Australia']], 'y_data': [[1, 2, 3, 2, 1, 2]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Spain, Slovenia, Russia, Italy, Ireland, Australia","1, 2, 3, 2, 1, 2","Compare the total number of competitions for each country, I want to sort in desc by the x axis."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 2, 2, 2, 3","How many competitions for each country?, and list by the total number in asc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 2, 2, 2, 3","Compare the total number of competitions for each country, and sort by the Y in asc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 2, 2, 2, 3","Show me the number of country by country in a histogram, and rank by the y axis in ascending."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Ireland', 'Spain', 'Australia', 'Italy', 'Slovenia', 'Russia']], 'y_data': [[1, 1, 2, 2, 2, 3]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Ireland, Spain, Australia, Italy, Slovenia, Russia","1, 1, 2, 2, 2, 3","A bar chart for how many competitions for each country, and I want to list y-axis in ascending order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","3, 2, 2, 2, 1, 1","A bar chart for how many competitions for each country, and rank by the the number of country in desc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","3, 2, 2, 2, 1, 1","Compare the total number of competitions for each country, show Y from high to low order."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","3, 2, 2, 2, 1, 1","Show me the number of country by country in a histogram, rank by the the number of country in desc."
"SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Russia', 'Slovenia', 'Italy', 'Australia', 'Spain', 'Ireland']], 'y_data': [[3, 2, 2, 2, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Russia, Slovenia, Italy, Australia, Spain, Ireland","3, 2, 2, 2, 1, 1","How many competitions for each country?, and list by the Y-axis from high to low."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","What is the number of players who have points less than 30 for each position Plot them as bar chart, list in asc by the x axis please."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","what is the number of players who have points less than 30 for each position?, and list x axis in ascending order."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","Give me a histogram for what is the number of players who have points less than 30 for each position?, and show X from low to high order."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","What is the number of players who have points less than 30 for each position Plot them as bar chart, and list by the names in desc."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","what is the number of players who have points less than 30 for each position?, and rank by the X in desc."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","Give me a histogram for what is the number of players who have points less than 30 for each position?, and I want to sort bars in descending order."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","Give me a histogram for what is the number of players who have points less than 30 for each position?, show y axis from low to high order."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","What is the number of players who have points less than 30 for each position Plot them as bar chart, and rank from low to high by the y-axis."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Full Back', 'Left Wing', 'Loose Forward', 'Prop', 'Second Row']], 'y_data': [[1, 1, 1, 3, 3]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Full Back, Left Wing, Loose Forward, Prop, Second Row","1, 1, 1, 3, 3","what is the number of players who have points less than 30 for each position?, show y axis from low to high order."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","Give me a histogram for what is the number of players who have points less than 30 for each position?, list by the y axis in desc please."
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","what is the number of players who have points less than 30 for each position?, and could you list from high to low by the y axis?"
"SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION ORDER BY count(*) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'count(*)', 'x_data': [['Second Row', 'Prop', 'Loose Forward', 'Left Wing', 'Full Back']], 'y_data': [[3, 3, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Position,count(*),"Second Row, Prop, Loose Forward, Left Wing, Full Back","3, 3, 1, 1, 1","What is the number of players who have points less than 30 for each position Plot them as bar chart, order the total number from high to low order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Plot the total number by grouped by competition type as a bar graph, and order X in ascending order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","List the types of competition and the number of competitions of each type in a bar chart, sort by the bars in asc please."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Return a histogram on what are the types of competition and number of competitions for that type?, and list by the names from low to high."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","What are the types of competition and number of competitions for that type Show bar chart, and display names in ascending order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","List the types of competition and the number of competitions of each type Visualize by bar chart, sort bars in asc order please."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Give me a histogram for what are the types of competition and number of competitions for that type?, order X in ascending order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Plot the total number by grouped by competition type as a bar graph, and display names in descending order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","What are the types of competition and number of competitions for that type Show bar chart, I want to display by the X-axis in descending."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Return a histogram on what are the types of competition and number of competitions for that type?, I want to list from high to low by the bar."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","List the types of competition and the number of competitions of each type in a bar chart, display by the x-axis in descending please."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","List the types of competition and the number of competitions of each type Visualize by bar chart, list from high to low by the names."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY Competition_type DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Give me a histogram for what are the types of competition and number of competitions for that type?, and display X from high to low order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","What are the types of competition and number of competitions for that type Show bar chart, and rank Y in ascending order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","List the types of competition and the number of competitions of each type Visualize by bar chart, and order in asc by the the total number please."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Return a histogram on what are the types of competition and number of competitions for that type?, order by the Y in asc."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","List the types of competition and the number of competitions of each type in a bar chart, show Y in asc order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Plot the total number by grouped by competition type as a bar graph, and I want to show from low to high by the the total number ."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Tournament', 'Friendly']], 'y_data': [[3, 8]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Tournament, Friendly","3, 8","Give me a histogram for what are the types of competition and number of competitions for that type?, and order in asc by the the total number please."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Return a histogram on what are the types of competition and number of competitions for that type?, I want to display total number in desc order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Give me a histogram for what are the types of competition and number of competitions for that type?, rank in desc by the y axis."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","What are the types of competition and number of competitions for that type Show bar chart, and I want to order the total number from high to low order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","List the types of competition and the number of competitions of each type Visualize by bar chart, and I want to order the total number from high to low order."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","Plot the total number by grouped by competition type as a bar graph, and sort by the y axis from high to low."
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Competition_type', 'y_name': 'COUNT(*)', 'x_data': [['Friendly', 'Tournament']], 'y_data': [[8, 3]], 'classify': [], 'describe': ''}",bar,Competition_type,COUNT(*),"Friendly, Tournament","8, 3","List the types of competition and the number of competitions of each type in a bar chart, sort Y-axis in descending order."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1","List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank from low to high by the X."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1","Bar chart x axis position y axis how many position, could you list from low to high by the X-axis?"
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","1, 1, 1, 1, 1, 1, 1, 2, 1","List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, rank by the X-axis in asc."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","1, 2, 1, 1, 1, 1, 1, 1, 1","List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and could you rank in descending by the X?"
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","1, 2, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis position y axis how many position, and order X-axis in desc order."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY Position DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","1, 2, 1, 1, 1, 1, 1, 1, 1","List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, could you show by the X-axis in desc?"
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Stand Off', 'Second Row']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Stand Off, Second Row","1, 1, 1, 1, 1, 1, 1, 1, 2","Bar chart x axis position y axis how many position, display from low to high by the the number of position."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Stand Off', 'Second Row']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Stand Off, Second Row","1, 1, 1, 1, 1, 1, 1, 1, 2","List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, show in ascending by the Y-axis."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Full Back', 'Hooker', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Stand Off', 'Second Row']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Full Back, Hooker, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Stand Off, Second Row","1, 1, 1, 1, 1, 1, 1, 1, 2","List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank in asc by the the number of position."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Second Row', 'Stand Off', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Second Row, Stand Off, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","2, 1, 1, 1, 1, 1, 1, 1, 1","List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and order total number in descending order."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Second Row', 'Stand Off', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Second Row, Stand Off, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","2, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis position y axis how many position, and I want to list total number in desc order."
"SELECT Position , COUNT(Position) FROM player GROUP BY Position HAVING avg(Points) >= 20 ORDER BY COUNT(Position) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'COUNT(Position)', 'x_data': [['Second Row', 'Stand Off', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Hooker', 'Full Back']], 'y_data': [[2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Position'}",bar,Position,COUNT(Position),"Second Row, Stand Off, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Hooker, Full Back","2, 1, 1, 1, 1, 1, 1, 1, 1","List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, and I want to list by the Y in descending."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For all players, show the number of different club names they come from, and rank by the bars from low to high."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['AIB', 'ASC', 'BK Slide', 'HGS2', 'IFG']], 'y_data': [[2, 4, 6, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"AIB, ASC, BK Slide, HGS2, IFG","2, 4, 6, 2, 1","For the names and the players of clubs, count the names by names in a bar chart, and order in ascending by the x-axis."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['IFG', 'HGS2', 'BK Slide', 'ASC', 'AIB']], 'y_data': [[1, 2, 6, 4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"IFG, HGS2, BK Slide, ASC, AIB","1, 2, 6, 4, 2","For the names and the players of clubs, count the names by names in a bar chart, list from high to low by the x-axis."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['IFG', 'HGS2', 'BK Slide', 'ASC', 'AIB']], 'y_data': [[1, 2, 6, 4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"IFG, HGS2, BK Slide, ASC, AIB","1, 2, 6, 4, 2","For all players, show the number of different club names they come from, and rank by the bar in desc."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['IFG', 'AIB', 'HGS2', 'ASC', 'BK Slide']], 'y_data': [[1, 2, 2, 4, 6]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"IFG, AIB, HGS2, ASC, BK Slide","1, 2, 2, 4, 6","For the names and the players of clubs, count the names by names in a bar chart, sort in ascending by the Y-axis."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['IFG', 'AIB', 'HGS2', 'ASC', 'BK Slide']], 'y_data': [[1, 2, 2, 4, 6]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"IFG, AIB, HGS2, ASC, BK Slide","1, 2, 2, 4, 6","For all players, show the number of different club names they come from, order by the total number in asc please."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['BK Slide', 'ASC', 'HGS2', 'AIB', 'IFG']], 'y_data': [[6, 4, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"BK Slide, ASC, HGS2, AIB, IFG","6, 4, 2, 2, 1","For all players, show the number of different club names they come from, and display y axis in desc order."
"SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",Bar,Hard,sports_competition,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['BK Slide', 'ASC', 'HGS2', 'AIB', 'IFG']], 'y_data': [[6, 4, 2, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"BK Slide, ASC, HGS2, AIB, IFG","6, 4, 2, 2, 1","For the names and the players of clubs, count the names by names in a bar chart, and rank by the y-axis from high to low."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110","For each position, what is the average number of points for players in that position Plot them as bar chart, I want to order x axis in asc order."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110","List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in ascending."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110","List the position of players and the average number of points of players of each position by a bar chart, and display from low to high by the X."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Full Back', 'Hooker', 'Left Wing', 'Loose Forward', 'Prop', 'Right Centre', 'Right Wing', 'Scrum Half', 'Second Row', 'Stand Off']], 'y_data': [[20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Full Back, Hooker, Left Wing, Loose Forward, Prop, Right Centre, Right Wing, Scrum Half, Second Row, Stand Off","20, 36, 12, 20, 9.333333333333334, 36, 36, 188, 20, 110","Give me a bar chart for mean points of each position, show X-axis in ascending order."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Left Wing', 'Hooker', 'Full Back']], 'y_data': [[110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Left Wing, Hooker, Full Back","110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20","List the position of players and the average number of points of players of each position by a bar chart, rank by the bars in desc."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Left Wing', 'Hooker', 'Full Back']], 'y_data': [[110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Left Wing, Hooker, Full Back","110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20","For each position, what is the average number of points for players in that position Plot them as bar chart, order by the x axis in descending."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Left Wing', 'Hooker', 'Full Back']], 'y_data': [[110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Left Wing, Hooker, Full Back","110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20","Give me a bar chart for mean points of each position, and I want to order in descending by the x axis please."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY Position DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Stand Off', 'Second Row', 'Scrum Half', 'Right Wing', 'Right Centre', 'Prop', 'Loose Forward', 'Left Wing', 'Hooker', 'Full Back']], 'y_data': [[110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Stand Off, Second Row, Scrum Half, Right Wing, Right Centre, Prop, Loose Forward, Left Wing, Hooker, Full Back","110, 20, 188, 36, 36, 9.333333333333334, 20, 12, 36, 20","List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in descending."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Prop', 'Left Wing', 'Full Back', 'Loose Forward', 'Second Row', 'Hooker', 'Right Centre', 'Right Wing', 'Stand Off', 'Scrum Half']], 'y_data': [[9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Prop, Left Wing, Full Back, Loose Forward, Second Row, Hooker, Right Centre, Right Wing, Stand Off, Scrum Half","9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188","List the position of players and the average number of points of players of each position Visualize by bar chart, and could you sort by the total number in ascending?"
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Prop', 'Left Wing', 'Full Back', 'Loose Forward', 'Second Row', 'Hooker', 'Right Centre', 'Right Wing', 'Stand Off', 'Scrum Half']], 'y_data': [[9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Prop, Left Wing, Full Back, Loose Forward, Second Row, Hooker, Right Centre, Right Wing, Stand Off, Scrum Half","9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188","For each position, what is the average number of points for players in that position Plot them as bar chart, could you show y axis from low to high order?"
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Prop', 'Left Wing', 'Full Back', 'Loose Forward', 'Second Row', 'Hooker', 'Right Centre', 'Right Wing', 'Stand Off', 'Scrum Half']], 'y_data': [[9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Prop, Left Wing, Full Back, Loose Forward, Second Row, Hooker, Right Centre, Right Wing, Stand Off, Scrum Half","9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188","List the position of players and the average number of points of players of each position by a bar chart, could you order in asc by the the average of points?"
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Prop', 'Left Wing', 'Full Back', 'Loose Forward', 'Second Row', 'Hooker', 'Right Centre', 'Right Wing', 'Stand Off', 'Scrum Half']], 'y_data': [[9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Prop, Left Wing, Full Back, Loose Forward, Second Row, Hooker, Right Centre, Right Wing, Stand Off, Scrum Half","9.333333333333334, 12, 20, 20, 20, 36, 36, 36, 110, 188","Give me a bar chart for mean points of each position, and rank by the Y-axis in asc."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Scrum Half', 'Stand Off', 'Right Wing', 'Right Centre', 'Hooker', 'Second Row', 'Loose Forward', 'Full Back', 'Left Wing', 'Prop']], 'y_data': [[188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Scrum Half, Stand Off, Right Wing, Right Centre, Hooker, Second Row, Loose Forward, Full Back, Left Wing, Prop","188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334","List the position of players and the average number of points of players of each position by a bar chart, and order from high to low by the Y."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Scrum Half', 'Stand Off', 'Right Wing', 'Right Centre', 'Hooker', 'Second Row', 'Loose Forward', 'Full Back', 'Left Wing', 'Prop']], 'y_data': [[188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Scrum Half, Stand Off, Right Wing, Right Centre, Hooker, Second Row, Loose Forward, Full Back, Left Wing, Prop","188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334","Give me a bar chart for mean points of each position, rank total number in descending order."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Scrum Half', 'Stand Off', 'Right Wing', 'Right Centre', 'Hooker', 'Second Row', 'Loose Forward', 'Full Back', 'Left Wing', 'Prop']], 'y_data': [[188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Scrum Half, Stand Off, Right Wing, Right Centre, Hooker, Second Row, Loose Forward, Full Back, Left Wing, Prop","188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334","For each position, what is the average number of points for players in that position Plot them as bar chart, sort the average of points in desc order."
"SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) DESC",Bar,Medium,sports_competition,"{'chart': 'bar', 'x_name': 'Position', 'y_name': 'avg(Points)', 'x_data': [['Scrum Half', 'Stand Off', 'Right Wing', 'Right Centre', 'Hooker', 'Second Row', 'Loose Forward', 'Full Back', 'Left Wing', 'Prop']], 'y_data': [[188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334]], 'classify': [], 'describe': ''}",bar,Position,avg(Points),"Scrum Half, Stand Off, Right Wing, Right Centre, Hooker, Second Row, Loose Forward, Full Back, Left Wing, Prop","188, 110, 36, 36, 36, 20, 20, 20, 12, 9.333333333333334","List the position of players and the average number of points of players of each position Visualize by bar chart, list by the the average of points in desc."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2","Show the type of school and the number of buses for each type, and could you show by the x axis in ascending?"
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type ASC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2","Show the type of school and the number of buses for each type in a bar chart, show by the Type in ascending."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Public', 'Private']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Public, Private","2, 3","Show the type of school and the number of buses for each type, could you list by the bars in descending?"
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY Type DESC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Public', 'Private']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Public, Private","2, 3","Show the type of school and the number of buses for each type in a bar chart, list x-axis in descending order."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Public', 'Private']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Public, Private","2, 3","Show the type of school and the number of buses for each type, rank in asc by the total number."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) ASC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Public', 'Private']], 'y_data': [[2, 3]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Public, Private","2, 3","Show the type of school and the number of buses for each type in a bar chart, rank by the the total number from low to high."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2","Show the type of school and the number of buses for each type in a bar chart, display y axis in descending order."
"SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type ORDER BY count(*) DESC",Bar,Hard,school_bus,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public']], 'y_data': [[3, 2]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public","3, 2","Show the type of school and the number of buses for each type, and I want to list by the y axis in descending."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1","Show the comparison of the total number of the home city of all drivers with a bar chart, and show by the x axis from low to high."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1","Please give me a pie chart to show the number of home cities of all drivers, show by the x axis from low to high."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[1, 1, 3, 6, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, East Hartford, Hartford, Manchester","1, 1, 3, 6, 1","Plot the number of home city by grouped by home city as a bar graph, could you sort by the x axis in asc?"
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[1, 6, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Manchester, Hartford, East Hartford, Coventry, Bethel","1, 6, 3, 1, 1","Plot the number of home city by grouped by home city as a bar graph, I want to rank in descending by the bars."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[1, 6, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Manchester, Hartford, East Hartford, Coventry, Bethel","1, 6, 3, 1, 1","Show the comparison of the total number of the home city of all drivers with a bar chart, I want to rank in descending by the bars."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[1, 6, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Manchester, Hartford, East Hartford, Coventry, Bethel","1, 6, 3, 1, 1","Please give me a pie chart to show the number of home cities of all drivers, show by the names in descending."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'Manchester', 'East Hartford', 'Hartford']], 'y_data': [[1, 1, 1, 3, 6]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, Manchester, East Hartford, Hartford","1, 1, 1, 3, 6","Plot the number of home city by grouped by home city as a bar graph, could you order in asc by the total number?"
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'Manchester', 'East Hartford', 'Hartford']], 'y_data': [[1, 1, 1, 3, 6]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, Manchester, East Hartford, Hartford","1, 1, 1, 3, 6","Please give me a pie chart to show the number of home cities of all drivers, order in asc by the the number of home city."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Bethel', 'Coventry', 'Manchester', 'East Hartford', 'Hartford']], 'y_data': [[1, 1, 1, 3, 6]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Bethel, Coventry, Manchester, East Hartford, Hartford","1, 1, 1, 3, 6","Show the comparison of the total number of the home city of all drivers with a bar chart, and rank Y in asc order."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Hartford', 'East Hartford', 'Manchester', 'Coventry', 'Bethel']], 'y_data': [[6, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Hartford, East Hartford, Manchester, Coventry, Bethel","6, 3, 1, 1, 1","Plot the number of home city by grouped by home city as a bar graph, and show from high to low by the Y-axis."
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Hartford', 'East Hartford', 'Manchester', 'Coventry', 'Bethel']], 'y_data': [[6, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Hartford, East Hartford, Manchester, Coventry, Bethel","6, 3, 1, 1, 1","Show the comparison of the total number of the home city of all drivers with a bar chart, and could you order the number of home city from high to low order?"
"SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city ORDER BY COUNT(Home_city) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'COUNT(Home_city)', 'x_data': [['Hartford', 'East Hartford', 'Manchester', 'Coventry', 'Bethel']], 'y_data': [[6, 3, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,COUNT(Home_city),"Hartford, East Hartford, Manchester, Coventry, Bethel","6, 3, 1, 1, 1","Please give me a pie chart to show the number of home cities of all drivers, I want to show by the y axis from high to low."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Compare the average age of drivers from the same home city with a bar chart, display bars in ascending order please."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Show the average age of drivers from the same home city using a bar graph, and show X in asc order please."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Plot the average of age by grouped by home city as a bar graph, and show X in asc order please."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Show the average age of drivers from the same home city using a bar graph, could you rank X from high to low order?"
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Plot the average of age by grouped by home city as a bar graph, could you sort by the bar from high to low?"
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY Home_city DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Compare the average age of drivers from the same home city with a bar chart, sort in descending by the X."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Show the average age of drivers from the same home city using a bar graph, sort total number from low to high order."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Compare the average age of drivers from the same home city with a bar chart, and could you list by the y-axis in asc?"
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Bethel', 'Coventry', 'East Hartford', 'Hartford', 'Manchester']], 'y_data': [[30, 35, 37, 43.5, 52]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Bethel, Coventry, East Hartford, Hartford, Manchester","30, 35, 37, 43.5, 52","Plot the average of age by grouped by home city as a bar graph, and sort total number from low to high order."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Show the average age of drivers from the same home city using a bar graph, and sort total number from high to low order."
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Compare the average age of drivers from the same home city with a bar chart, could you rank in descending by the Y-axis please?"
"SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Home_city', 'y_name': 'AVG(Age)', 'x_data': [['Manchester', 'Hartford', 'East Hartford', 'Coventry', 'Bethel']], 'y_data': [[52, 43.5, 37, 35, 30]], 'classify': [], 'describe': 'GROUP BY Home_city'}",bar,Home_city,AVG(Age),"Manchester, Hartford, East Hartford, Coventry, Bethel","52, 43.5, 37, 35, 30","Plot the average of age by grouped by home city as a bar graph, show from high to low by the total number."
"SELECT Name , Age FROM driver ORDER BY Name ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Angel Acre', 'Brandon McGee', 'Dan Carter', 'Douglas McCrory', 'Edwin Vargas', 'Geoff Luxenberg', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Minnie Gonzalez', 'Tim Larson', 'Timothy Ackert']], 'y_data': [[42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35]], 'classify': [], 'describe': ''}",bar,Name,Age,"Angel Acre, Brandon McGee, Dan Carter, Douglas McCrory, Edwin Vargas, Geoff Luxenberg, Henry Genga, Jason Rojas, Matthew Ritter, Minnie Gonzalez, Tim Larson, Timothy Ackert","42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35","Bar graph to show age from different name, list x axis in asc order."
"SELECT Name , Age FROM driver ORDER BY Name ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Angel Acre', 'Brandon McGee', 'Dan Carter', 'Douglas McCrory', 'Edwin Vargas', 'Geoff Luxenberg', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Minnie Gonzalez', 'Tim Larson', 'Timothy Ackert']], 'y_data': [[42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35]], 'classify': [], 'describe': ''}",bar,Name,Age,"Angel Acre, Brandon McGee, Dan Carter, Douglas McCrory, Edwin Vargas, Geoff Luxenberg, Henry Genga, Jason Rojas, Matthew Ritter, Minnie Gonzalez, Tim Larson, Timothy Ackert","42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35","Show the name and age for all drivers with a bar chart, and sort by the x-axis from low to high."
"SELECT Name , Age FROM driver ORDER BY Name ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Angel Acre', 'Brandon McGee', 'Dan Carter', 'Douglas McCrory', 'Edwin Vargas', 'Geoff Luxenberg', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Minnie Gonzalez', 'Tim Larson', 'Timothy Ackert']], 'y_data': [[42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35]], 'classify': [], 'describe': ''}",bar,Name,Age,"Angel Acre, Brandon McGee, Dan Carter, Douglas McCrory, Edwin Vargas, Geoff Luxenberg, Henry Genga, Jason Rojas, Matthew Ritter, Minnie Gonzalez, Tim Larson, Timothy Ackert","42, 45, 30, 36, 52, 52, 37, 38, 40, 46, 36, 35","Give me a bar chart to show the name and age for all drivers, and order bar in asc order please."
"SELECT Name , Age FROM driver ORDER BY Name DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Timothy Ackert', 'Tim Larson', 'Minnie Gonzalez', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Geoff Luxenberg', 'Edwin Vargas', 'Douglas McCrory', 'Dan Carter', 'Brandon McGee', 'Angel Acre']], 'y_data': [[35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42]], 'classify': [], 'describe': ''}",bar,Name,Age,"Timothy Ackert, Tim Larson, Minnie Gonzalez, Matthew Ritter, Jason Rojas, Henry Genga, Geoff Luxenberg, Edwin Vargas, Douglas McCrory, Dan Carter, Brandon McGee, Angel Acre","35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42","Bar graph to show age from different name, display by the x-axis from high to low please."
"SELECT Name , Age FROM driver ORDER BY Name DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Timothy Ackert', 'Tim Larson', 'Minnie Gonzalez', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Geoff Luxenberg', 'Edwin Vargas', 'Douglas McCrory', 'Dan Carter', 'Brandon McGee', 'Angel Acre']], 'y_data': [[35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42]], 'classify': [], 'describe': ''}",bar,Name,Age,"Timothy Ackert, Tim Larson, Minnie Gonzalez, Matthew Ritter, Jason Rojas, Henry Genga, Geoff Luxenberg, Edwin Vargas, Douglas McCrory, Dan Carter, Brandon McGee, Angel Acre","35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42","Show the name and age for all drivers with a bar chart, I want to show from high to low by the X-axis."
"SELECT Name , Age FROM driver ORDER BY Name DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Timothy Ackert', 'Tim Larson', 'Minnie Gonzalez', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Geoff Luxenberg', 'Edwin Vargas', 'Douglas McCrory', 'Dan Carter', 'Brandon McGee', 'Angel Acre']], 'y_data': [[35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42]], 'classify': [], 'describe': ''}",bar,Name,Age,"Timothy Ackert, Tim Larson, Minnie Gonzalez, Matthew Ritter, Jason Rojas, Henry Genga, Geoff Luxenberg, Edwin Vargas, Douglas McCrory, Dan Carter, Brandon McGee, Angel Acre","35, 36, 46, 40, 38, 37, 52, 52, 36, 30, 45, 42","Give me a bar chart to show the name and age for all drivers, sort by the names in desc."
"SELECT Name , Age FROM driver ORDER BY Age ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Dan Carter', 'Timothy Ackert', 'Douglas McCrory', 'Tim Larson', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Angel Acre', 'Brandon McGee', 'Minnie Gonzalez', 'Edwin Vargas', 'Geoff Luxenberg']], 'y_data': [[30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Dan Carter, Timothy Ackert, Douglas McCrory, Tim Larson, Henry Genga, Jason Rojas, Matthew Ritter, Angel Acre, Brandon McGee, Minnie Gonzalez, Edwin Vargas, Geoff Luxenberg","30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52","Give me a bar chart to show the name and age for all drivers, list by the Y in ascending."
"SELECT Name , Age FROM driver ORDER BY Age ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Dan Carter', 'Timothy Ackert', 'Douglas McCrory', 'Tim Larson', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Angel Acre', 'Brandon McGee', 'Minnie Gonzalez', 'Edwin Vargas', 'Geoff Luxenberg']], 'y_data': [[30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Dan Carter, Timothy Ackert, Douglas McCrory, Tim Larson, Henry Genga, Jason Rojas, Matthew Ritter, Angel Acre, Brandon McGee, Minnie Gonzalez, Edwin Vargas, Geoff Luxenberg","30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52","Bar graph to show age from different name, and display from low to high by the y-axis please."
"SELECT Name , Age FROM driver ORDER BY Age ASC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Dan Carter', 'Timothy Ackert', 'Douglas McCrory', 'Tim Larson', 'Henry Genga', 'Jason Rojas', 'Matthew Ritter', 'Angel Acre', 'Brandon McGee', 'Minnie Gonzalez', 'Edwin Vargas', 'Geoff Luxenberg']], 'y_data': [[30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52]], 'classify': [], 'describe': ''}",bar,Name,Age,"Dan Carter, Timothy Ackert, Douglas McCrory, Tim Larson, Henry Genga, Jason Rojas, Matthew Ritter, Angel Acre, Brandon McGee, Minnie Gonzalez, Edwin Vargas, Geoff Luxenberg","30, 35, 36, 36, 37, 38, 40, 42, 45, 46, 52, 52","Show the name and age for all drivers with a bar chart, and display by the total number from low to high."
"SELECT Name , Age FROM driver ORDER BY Age DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Geoff Luxenberg', 'Edwin Vargas', 'Minnie Gonzalez', 'Brandon McGee', 'Angel Acre', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Douglas McCrory', 'Timothy Ackert', 'Dan Carter']], 'y_data': [[52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30]], 'classify': [], 'describe': ''}",bar,Name,Age,"Geoff Luxenberg, Edwin Vargas, Minnie Gonzalez, Brandon McGee, Angel Acre, Matthew Ritter, Jason Rojas, Henry Genga, Tim Larson, Douglas McCrory, Timothy Ackert, Dan Carter","52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30","Bar graph to show age from different name, sort Y in descending order please."
"SELECT Name , Age FROM driver ORDER BY Age DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Geoff Luxenberg', 'Edwin Vargas', 'Minnie Gonzalez', 'Brandon McGee', 'Angel Acre', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Douglas McCrory', 'Timothy Ackert', 'Dan Carter']], 'y_data': [[52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30]], 'classify': [], 'describe': ''}",bar,Name,Age,"Geoff Luxenberg, Edwin Vargas, Minnie Gonzalez, Brandon McGee, Angel Acre, Matthew Ritter, Jason Rojas, Henry Genga, Tim Larson, Douglas McCrory, Timothy Ackert, Dan Carter","52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30","Give me a bar chart to show the name and age for all drivers, could you rank in descending by the total number?"
"SELECT Name , Age FROM driver ORDER BY Age DESC",Bar,Easy,school_bus,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Geoff Luxenberg', 'Edwin Vargas', 'Minnie Gonzalez', 'Brandon McGee', 'Angel Acre', 'Matthew Ritter', 'Jason Rojas', 'Henry Genga', 'Tim Larson', 'Douglas McCrory', 'Timothy Ackert', 'Dan Carter']], 'y_data': [[52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30]], 'classify': [], 'describe': ''}",bar,Name,Age,"Geoff Luxenberg, Edwin Vargas, Minnie Gonzalez, Brandon McGee, Angel Acre, Matthew Ritter, Jason Rojas, Henry Genga, Tim Larson, Douglas McCrory, Timothy Ackert, Dan Carter","52, 52, 46, 45, 42, 40, 38, 37, 36, 36, 35, 30","Show the name and age for all drivers with a bar chart, rank in descending by the y-axis please."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Show the party and the number of drivers in each party with a bar chart, and order from low to high by the bars."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Show the party and the number of drivers in each party Plot them as bar chart, and order in asc by the X-axis please."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Create a bar chart showing the total number across party, and show in asc by the X."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Create a bar chart showing the total number across party, sort bars in descending order."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Show the party and the number of drivers in each party with a bar chart, and sort bars in descending order."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY Party DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Show the party and the number of drivers in each party Plot them as bar chart, show bar in descending order."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Create a bar chart showing the total number across party, and order y-axis in asc order."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Show the party and the number of drivers in each party Plot them as bar chart, and display total number from low to high order."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) ASC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Rep', 'Dem']], 'y_data': [[2, 10]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Rep, Dem","2, 10","Show the party and the number of drivers in each party with a bar chart, display from low to high by the Y."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Create a bar chart showing the total number across party, and sort in desc by the y-axis."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Show the party and the number of drivers in each party Plot them as bar chart, and I want to rank y-axis from high to low order please."
"SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC",Bar,Medium,school_bus,"{'chart': 'bar', 'x_name': 'Party', 'y_name': 'count(*)', 'x_data': [['Dem', 'Rep']], 'y_data': [[10, 2]], 'classify': [], 'describe': ''}",bar,Party,count(*),"Dem, Rep","10, 2","Show the party and the number of drivers in each party with a bar chart, and I want to order in desc by the the total number please."
"SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['100 North Tampa', 'Citizens Bank Building', 'Floridan Hotel', 'Franklin Exchange Building', 'One Tampa City Center', 'Park Tower', 'Tampa City Hall']], 'y_data': [[1, 2, 1, 2, 2, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"100 North Tampa, Citizens Bank Building, Floridan Hotel, Franklin Exchange Building, One Tampa City Center, Park Tower, Tampa City Hall","1, 2, 1, 2, 2, 1, 2","For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and display X from low to high order."
"SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY Name DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tampa City Hall', 'Park Tower', 'One Tampa City Center', 'Franklin Exchange Building', 'Floridan Hotel', 'Citizens Bank Building', '100 North Tampa']], 'y_data': [[2, 1, 2, 2, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tampa City Hall, Park Tower, One Tampa City Center, Franklin Exchange Building, Floridan Hotel, Citizens Bank Building, 100 North Tampa","2, 1, 2, 2, 1, 2, 1","For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and could you show bars in desc order?"
"SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['100 North Tampa', 'Floridan Hotel', 'Park Tower', 'Citizens Bank Building', 'Franklin Exchange Building', 'One Tampa City Center', 'Tampa City Hall']], 'y_data': [[1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"100 North Tampa, Floridan Hotel, Park Tower, Citizens Bank Building, Franklin Exchange Building, One Tampa City Center, Tampa City Hall","1, 1, 1, 2, 2, 2, 2","For each building, show the name of the building and the number of institutions in it Plot them as bar chart, rank by the the total number in asc please."
"SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Tampa City Hall', 'One Tampa City Center', 'Franklin Exchange Building', 'Citizens Bank Building', 'Park Tower', 'Floridan Hotel', '100 North Tampa']], 'y_data': [[2, 2, 2, 2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Tampa City Hall, One Tampa City Center, Franklin Exchange Building, Citizens Bank Building, Park Tower, Floridan Hotel, 100 North Tampa","2, 2, 2, 2, 1, 1, 1","For each building, show the name of the building and the number of institutions in it Plot them as bar chart, and rank in desc by the Y-axis please."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Draw a bar chart of type versus the total number, and I want to rank in ascending by the x-axis."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Please give me a bar chart showing institution types, along with the number of institutions for each type, and could you rank x-axis in asc order?"
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, and show bar in asc order please."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Draw a bar chart of type versus the total number, I want to sort x axis in desc order."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank bars in descending order."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Please give me a bar chart showing institution types, along with the number of institutions for each type, and display bars from high to low order."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, rank from low to high by the y axis."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Please give me a bar chart showing institution types, along with the number of institutions for each type, could you show from low to high by the y axis?"
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1, 3, 7]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Tribal, Public, Private","1, 3, 7","Draw a bar chart of type versus the total number, and order from low to high by the the total number ."
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, could you order in desc by the Y-axis?"
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Draw a bar chart of type versus the total number, could you order in descending by the the total number ?"
"SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY count(*) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'count(*)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7, 3, 1]], 'classify': [], 'describe': ''}",bar,Type,count(*),"Private, Public, Tribal","7, 3, 1","Please give me a bar chart showing institution types, along with the number of institutions for each type, I want to rank in desc by the total number."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Bar chart x axis type y axis total number of enrollment, and could you sort bars in asc order?"
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please give me a bar chart showing institution types, along with the total enrollment for each type, sort by the X from low to high."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please compare the total enrollment for each type using a bar chart, display by the x axis in asc please."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Bar chart x axis type y axis total number of enrollment, rank by the X in desc."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Please give me a bar chart showing institution types, along with the total enrollment for each type, could you order by the x axis in desc?"
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY Type DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Please compare the total enrollment for each type using a bar chart, list in desc by the X-axis."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Please compare the total enrollment for each type using a bar chart, and could you list in asc by the total number of enrollment please?"
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Please give me a bar chart showing institution types, along with the total enrollment for each type, and show Y-axis from low to high order."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) ASC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Tribal', 'Public', 'Private']], 'y_data': [[1000, 5267, 7868]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Tribal, Public, Private","1000, 5267, 7868","Bar chart x axis type y axis total number of enrollment, and rank y axis in asc order please."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please give me a bar chart showing institution types, along with the total enrollment for each type, order total number in desc order."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Bar chart x axis type y axis total number of enrollment, and rank by the Y from high to low."
"SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE ORDER BY sum(enrollment) DESC",Bar,Medium,protein_institute,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'sum(enrollment)', 'x_data': [['Private', 'Public', 'Tribal']], 'y_data': [[7868, 5267, 1000]], 'classify': [], 'describe': ''}",bar,Type,sum(enrollment),"Private, Public, Tribal","7868, 5267, 1000","Please compare the total enrollment for each type using a bar chart, and could you sort total number of enrollment in descending order?"
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'One Tampa City Center', 'Tampa City Hall']], 'y_data': [[145, 537, 160]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, One Tampa City Center, Tampa City Hall","145, 537, 160","Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and sort by the names from low to high."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'One Tampa City Center', 'Tampa City Hall']], 'y_data': [[145, 537, 160]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, One Tampa City Center, Tampa City Hall","145, 537, 160","Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and order by the bar from low to high."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Tampa City Hall', 'One Tampa City Center', 'Citizens Bank Building']], 'y_data': [[160, 537, 145]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Tampa City Hall, One Tampa City Center, Citizens Bank Building","160, 537, 145","Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, I want to show from high to low by the bar."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Name DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Tampa City Hall', 'One Tampa City Center', 'Citizens Bank Building']], 'y_data': [[160, 537, 145]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Tampa City Hall, One Tampa City Center, Citizens Bank Building","160, 537, 145","Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and rank names in desc order."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537","Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and could you order by the total number from low to high please?"
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['Citizens Bank Building', 'Tampa City Hall', 'One Tampa City Center']], 'y_data': [[145, 160, 537]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"Citizens Bank Building, Tampa City Hall, One Tampa City Center","145, 160, 537","Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and list by the Y in ascending."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['One Tampa City Center', 'Tampa City Hall', 'Citizens Bank Building']], 'y_data': [[537, 160, 145]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"One Tampa City Center, Tampa City Hall, Citizens Bank Building","537, 160, 145","Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, show in desc by the Y."
"SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 ORDER BY Height_feet DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Height_feet', 'x_data': [['One Tampa City Center', 'Tampa City Hall', 'Citizens Bank Building']], 'y_data': [[537, 160, 145]], 'classify': [], 'describe': ''}",bar,Name,Height_feet,"One Tampa City Center, Tampa City Hall, Citizens Bank Building","537, 160, 145","Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and I want to show Y-axis in descending order."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1","Show institution names along with the number of proteins for each institution, and rank by the Institution in asc."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Lindenwood University–Belleville', 'Valley City State University']], 'y_data': [[1, 1, 2, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Lindenwood University–Belleville, Valley City State University","1, 1, 2, 1","Show institution names along with the number of proteins for each institution in a bar chart, and I want to list from low to high by the X."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Valley City State University', 'Lindenwood University–Belleville', 'Haskell Indian Nations University', 'Dakota State University']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Valley City State University, Lindenwood University–Belleville, Haskell Indian Nations University, Dakota State University","1, 2, 1, 1","Show institution names along with the number of proteins for each institution in a bar chart, and rank by the X in descending."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY Institution DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Valley City State University', 'Lindenwood University–Belleville', 'Haskell Indian Nations University', 'Dakota State University']], 'y_data': [[1, 2, 1, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Valley City State University, Lindenwood University–Belleville, Haskell Indian Nations University, Dakota State University","1, 2, 1, 1","Show institution names along with the number of proteins for each institution, and display names in descending order."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Valley City State University', 'Lindenwood University–Belleville']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Valley City State University, Lindenwood University–Belleville","1, 1, 1, 2","Show institution names along with the number of proteins for each institution in a bar chart, and I want to display by the total number in ascending."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) ASC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Dakota State University', 'Haskell Indian Nations University', 'Valley City State University', 'Lindenwood University–Belleville']], 'y_data': [[1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Dakota State University, Haskell Indian Nations University, Valley City State University, Lindenwood University–Belleville","1, 1, 1, 2","Show institution names along with the number of proteins for each institution, I want to show by the total number from low to high."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Lindenwood University–Belleville', 'Valley City State University', 'Haskell Indian Nations University', 'Dakota State University']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Lindenwood University–Belleville, Valley City State University, Haskell Indian Nations University, Dakota State University","2, 1, 1, 1","Show institution names along with the number of proteins for each institution, sort Y-axis from high to low order."
"SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id ORDER BY count(*) DESC",Bar,Hard,protein_institute,"{'chart': 'bar', 'x_name': 'Institution', 'y_name': 'count(*)', 'x_data': [['Lindenwood University–Belleville', 'Valley City State University', 'Haskell Indian Nations University', 'Dakota State University']], 'y_data': [[2, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Institution,count(*),"Lindenwood University–Belleville, Valley City State University, Haskell Indian Nations University, Dakota State University","2, 1, 1, 1","Show institution names along with the number of proteins for each institution in a bar chart, and order by the y-axis in desc."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Return a bar chart on how many gymnasts are from each hometown?, sort in ascending by the Hometown."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","How many gymnasts are from each hometown Plot them as bar chart, and show Hometown from low to high order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, show Hometown from low to high order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Show me a bar chart for how many gymnasts are from each hometown?, and display X in asc order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","What are the hometowns of gymnasts and the corresponding number of gymnasts, rank bars in ascending order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, could you show in asc by the X?"
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Show me a bar chart for how many gymnasts are from each hometown?, and rank bars from high to low order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","How many gymnasts are from each hometown Plot them as bar chart, order x axis in desc order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Return a bar chart on how many gymnasts are from each hometown?, display by the x axis in descending."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","What are the hometowns of gymnasts and the corresponding number of gymnasts, and order x axis in desc order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display by the x axis in descending."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY Hometown DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, rank x-axis in descending order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","What are the hometowns of gymnasts and the corresponding number of gymnasts, and rank y-axis in ascending order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Return a bar chart on how many gymnasts are from each hometown?, and rank by the Y from low to high."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","How many gymnasts are from each hometown Plot them as bar chart, rank in asc by the total number please."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Show me a bar chart for how many gymnasts are from each hometown?, and I want to show from low to high by the total number."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and rank by the Y from low to high."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Bonao', 'Los Alcarrizos', 'Santiago de los Caballeros', 'Santo Domingo']], 'y_data': [[1, 1, 1, 4]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Bonao, Los Alcarrizos, Santiago de los Caballeros, Santo Domingo","1, 1, 1, 4","Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and rank y-axis in ascending order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Show me a bar chart for how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?"
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","How many gymnasts are from each hometown Plot them as bar chart, and I want to rank y-axis in desc order."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display in descending by the Y-axis."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Return a bar chart on how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?"
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","What are the hometowns of gymnasts and the corresponding number of gymnasts, display in descending by the the total number ."
"SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC",Bar,Hard,gymnast,"{'chart': 'bar', 'x_name': 'Hometown', 'y_name': 'COUNT(*)', 'x_data': [['Santo Domingo', 'Santiago de los Caballeros', 'Los Alcarrizos', 'Bonao']], 'y_data': [[4, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Hometown,COUNT(*),"Santo Domingo, Santiago de los Caballeros, Los Alcarrizos, Bonao","4, 1, 1, 1","Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and could you sort by the Y-axis from high to low?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","What are the number of the names of all the playlists?, I want to rank x-axis in asc order."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","List the number of the name of all playlist, display in asc by the names."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","What are the names of all the playlists, and count them by a bar chart, order from low to high by the bars please."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","A bar chart for listing the number of the name of all playlist, and list x axis from low to high order."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","List the name of all playlist, and count them by a bar chart, show by the X-axis in ascending."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","A bar chart for what are the number of the names of all the playlists?, could you order x axis in asc order please?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Audiobooks', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Movies', 'Music', 'Music Videos', 'On-The-Go 1', 'TV Shows']], 'y_data': [[1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Audiobooks, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Movies, Music, Music Videos, On-The-Go 1, TV Shows","1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2","Bar chart x axis name y axis how many name, display in asc by the names."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","List the name of all playlist, and count them by a bar chart, and sort in desc by the X."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","A bar chart for listing the number of the name of all playlist, and order by the X-axis in desc."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","Bar chart x axis name y axis how many name, list in desc by the names."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","A bar chart for what are the number of the names of all the playlists?, and sort in desc by the X."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","What are the number of the names of all the playlists?, display by the x-axis from high to low please."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","List the number of the name of all playlist, display by the x-axis from high to low please."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'On-The-Go 1', 'Music Videos', 'Music', 'Movies', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', 'Audiobooks', '90’s Music']], 'y_data': [[2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, On-The-Go 1, Music Videos, Music, Movies, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, Audiobooks, 90’s Music","2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1","What are the names of all the playlists, and count them by a bar chart, and could you show by the bar in descending please?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","List the name of all playlist, and count them by a bar chart, show by the y axis from low to high."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","Bar chart x axis name y axis how many name, and display in ascending by the the number of name."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","List the number of the name of all playlist, display Y-axis in asc order."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","A bar chart for what are the number of the names of all the playlists?, and show by the y axis from low to high."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","What are the number of the names of all the playlists?, and display in ascending by the the number of name."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","What are the names of all the playlists, and count them by a bar chart, and show by the y axis from low to high."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) ASC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['90’s Music', 'Brazilian Music', 'Classical', 'Classical 101 - Deep Cuts', 'Classical 101 - Next Steps', 'Classical 101 - The Basics', 'Grunge', 'Heavy Metal Classic', 'Music Videos', 'On-The-Go 1', 'Audiobooks', 'Movies', 'Music', 'TV Shows']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"90’s Music, Brazilian Music, Classical, Classical 101 - Deep Cuts, Classical 101 - Next Steps, Classical 101 - The Basics, Grunge, Heavy Metal Classic, Music Videos, On-The-Go 1, Audiobooks, Movies, Music, TV Shows","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2","A bar chart for listing the number of the name of all playlist, display in ascending by the the number of name."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What are the names of all the playlists, and count them by a bar chart, and could you rank in descending by the the number of name?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","A bar chart for what are the number of the names of all the playlists?, and I want to sort by the Y from high to low."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What are the number of the names of all the playlists?, and could you sort by the Y in descending please?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the name of all playlist, and count them by a bar chart, sort Y from high to low order please."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","A bar chart for listing the number of the name of all playlist, and show by the the number of name from high to low."
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis name y axis how many name, could you sort by the Y in descending please?"
"SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY COUNT(name) DESC",Bar,Medium,store_1,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['TV Shows', 'Music', 'Movies', 'Audiobooks', 'On-The-Go 1', 'Music Videos', 'Heavy Metal Classic', 'Grunge', 'Classical 101 - The Basics', 'Classical 101 - Next Steps', 'Classical 101 - Deep Cuts', 'Classical', 'Brazilian Music', '90’s Music']], 'y_data': [[2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"TV Shows, Music, Movies, Audiobooks, On-The-Go 1, Music Videos, Heavy Metal Classic, Grunge, Classical 101 - The Basics, Classical 101 - Next Steps, Classical 101 - Deep Cuts, Classical, Brazilian Music, 90’s Music","2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List the number of the name of all playlist, and show by the the number of name from high to low."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","Return a histogram on how many invoices were billed from each state?, and sort x axis from low to high order."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","Show me a bar chart for how many invoices were billed from each state?, and show in ascending by the billing_state."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state Visualize by bar chart, I want to rank in ascending by the X please."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state by a bar chart, sort x axis from low to high order."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'CA', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI']], 'y_data': [[7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, CA, FL, IL, MA, NV, NY, TX, UT, WA, WI","7, 21, 7, 7, 7, 7, 7, 7, 7, 7, 7","How many invoices were billed from each state Plot them as bar chart, and I want to show by the billing_state from low to high."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'CA', 'AZ']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"WI, WA, UT, TX, NY, NV, MA, IL, FL, CA, AZ","7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7","List the number of invoices from the US, grouped by state Visualize by bar chart, list by the billing_state in descending."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'CA', 'AZ']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"WI, WA, UT, TX, NY, NV, MA, IL, FL, CA, AZ","7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7","Show me a bar chart for how many invoices were billed from each state?, show by the bar in desc."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'CA', 'AZ']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"WI, WA, UT, TX, NY, NV, MA, IL, FL, CA, AZ","7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7","List the number of invoices from the US, grouped by state by a bar chart, and list X from high to low order."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'CA', 'AZ']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"WI, WA, UT, TX, NY, NV, MA, IL, FL, CA, AZ","7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7","How many invoices were billed from each state Plot them as bar chart, list by the X-axis in desc."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY billing_state DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'CA', 'AZ']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"WI, WA, UT, TX, NY, NV, MA, IL, FL, CA, AZ","7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7","Return a histogram on how many invoices were billed from each state?, order in descending by the bars."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI', 'CA']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, FL, IL, MA, NV, NY, TX, UT, WA, WI, CA","7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21","Show me a bar chart for how many invoices were billed from each state?, could you sort Y-axis in asc order?"
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI', 'CA']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, FL, IL, MA, NV, NY, TX, UT, WA, WI, CA","7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21","List the number of invoices from the US, grouped by state Visualize by bar chart, sort in asc by the total number."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI', 'CA']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, FL, IL, MA, NV, NY, TX, UT, WA, WI, CA","7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21","List the number of invoices from the US, grouped by state by a bar chart, show by the Y-axis from low to high."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI', 'CA']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, FL, IL, MA, NV, NY, TX, UT, WA, WI, CA","7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21","How many invoices were billed from each state Plot them as bar chart, and order by the Y-axis from low to high."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) ASC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['AZ', 'FL', 'IL', 'MA', 'NV', 'NY', 'TX', 'UT', 'WA', 'WI', 'CA']], 'y_data': [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"AZ, FL, IL, MA, NV, NY, TX, UT, WA, WI, CA","7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21","Return a histogram on how many invoices were billed from each state?, and display total number from low to high order."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['CA', 'WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'AZ']], 'y_data': [[21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"CA, WI, WA, UT, TX, NY, NV, MA, IL, FL, AZ","21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7","How many invoices were billed from each state Plot them as bar chart, and rank by the the total number in descending please."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['CA', 'WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'AZ']], 'y_data': [[21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"CA, WI, WA, UT, TX, NY, NV, MA, IL, FL, AZ","21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7","Return a histogram on how many invoices were billed from each state?, and rank by the the total number in descending please."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['CA', 'WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'AZ']], 'y_data': [[21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"CA, WI, WA, UT, TX, NY, NV, MA, IL, FL, AZ","21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state Visualize by bar chart, I want to order in descending by the y-axis."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['CA', 'WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'AZ']], 'y_data': [[21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"CA, WI, WA, UT, TX, NY, NV, MA, IL, FL, AZ","21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7","List the number of invoices from the US, grouped by state by a bar chart, rank by the the total number in descending please."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC",Bar,Hard,store_1,"{'chart': 'bar', 'x_name': 'billing_state', 'y_name': 'COUNT(*)', 'x_data': [['CA', 'WI', 'WA', 'UT', 'TX', 'NY', 'NV', 'MA', 'IL', 'FL', 'AZ']], 'y_data': [[21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]], 'classify': [], 'describe': ''}",bar,billing_state,COUNT(*),"CA, WI, WA, UT, TX, NY, NV, MA, IL, FL, AZ","21, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7","Show me a bar chart for how many invoices were billed from each state?, and show by the Y-axis in desc."
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour) ORDER BY Address ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['1100 Main Street', '1201 Walnut Street', '2345 McGee Street', '909 Main Street', '909 Walnut Street']], 'y_data': [[23, 34, 425, 28, 27]], 'classify': [], 'describe': ''}",bar,Address,Num_of_staff,"1100 Main Street, 1201 Walnut Street, 2345 McGee Street, 909 Main Street, 909 Walnut Street","23, 34, 425, 28, 27","Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, list in asc by the X please."
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour) ORDER BY Address DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['909 Walnut Street', '909 Main Street', '2345 McGee Street', '1201 Walnut Street', '1100 Main Street']], 'y_data': [[27, 28, 425, 34, 23]], 'classify': [], 'describe': ''}",bar,Address,Num_of_staff,"909 Walnut Street, 909 Main Street, 2345 McGee Street, 1201 Walnut Street, 1100 Main Street","27, 28, 425, 34, 23","Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, and order by the X-axis in desc."
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour) ORDER BY Num_of_staff ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['1100 Main Street', '909 Walnut Street', '909 Main Street', '1201 Walnut Street', '2345 McGee Street']], 'y_data': [[23, 27, 28, 34, 425]], 'classify': [], 'describe': ''}",bar,Address,Num_of_staff,"1100 Main Street, 909 Walnut Street, 909 Main Street, 1201 Walnut Street, 2345 McGee Street","23, 27, 28, 34, 425","Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, order y-axis from low to high order."
"SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour) ORDER BY Num_of_staff DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'Num_of_staff', 'x_data': [['2345 McGee Street', '1201 Walnut Street', '909 Main Street', '909 Walnut Street', '1100 Main Street']], 'y_data': [[425, 34, 28, 27, 23]], 'classify': [], 'describe': ''}",bar,Address,Num_of_staff,"2345 McGee Street, 1201 Walnut Street, 909 Main Street, 909 Walnut Street, 1100 Main Street","425, 34, 28, 27, 23","Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, I want to display Num_of_staff in descending order."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4","Bar graph to show the total number from different address, I want to display names from low to high order."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4","Find the number of members living in each address Show bar chart, and I want to show x-axis from low to high order."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Waterbury', 'Hartford', 'Cheshire', 'Bridgeport']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Waterbury, Hartford, Cheshire, Bridgeport","4, 3, 2, 1","Bar graph to show the total number from different address, and rank x axis from high to low order."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY Address DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Waterbury', 'Hartford', 'Cheshire', 'Bridgeport']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Waterbury, Hartford, Cheshire, Bridgeport","4, 3, 2, 1","Find the number of members living in each address Show bar chart, list in desc by the bar."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY count(*) ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4","Bar graph to show the total number from different address, and could you sort in ascending by the y axis?"
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY count(*) ASC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Bridgeport', 'Cheshire', 'Hartford', 'Waterbury']], 'y_data': [[1, 2, 3, 4]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Bridgeport, Cheshire, Hartford, Waterbury","1, 2, 3, 4","Find the number of members living in each address Show bar chart, I want to show by the total number in asc."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY count(*) DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Waterbury', 'Hartford', 'Cheshire', 'Bridgeport']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Waterbury, Hartford, Cheshire, Bridgeport","4, 3, 2, 1","Bar graph to show the total number from different address, show in desc by the Y-axis please."
"SELECT Address , count(*) FROM member GROUP BY address ORDER BY count(*) DESC",Bar,Medium,coffee_shop,"{'chart': 'bar', 'x_name': 'Address', 'y_name': 'count(*)', 'x_data': [['Waterbury', 'Hartford', 'Cheshire', 'Bridgeport']], 'y_data': [[4, 3, 2, 1]], 'classify': [], 'describe': ''}",bar,Address,count(*),"Waterbury, Hartford, Cheshire, Bridgeport","4, 3, 2, 1","Find the number of members living in each address Show bar chart, and rank by the Y in desc."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","A bar chart for what are the number of the phone numbers for each employee?, rank x axis in asc order please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","What are the number of the phone numbers for each employee?, and sort by the x axis in asc please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","Plot the number of phone by grouped by phone as a bar graph, and could you list X in asc order please?"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","List the number of the phone numbers of all employees, list in asc by the names please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","What are the phone numbers for each employee, and count them by a bar chart, and list from low to high by the X please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","List the phone numbers of all employees, and count them by a bar chart, and list in asc by the names please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 262-3443', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987']], 'y_data': [[1, 2, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 262-3443, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987","1, 2, 1, 1, 1, 1, 1","A bar chart for listing the number of the phone numbers of all employees, display Phone in ascending order."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","List the number of the phone numbers of all employees, and sort in descending by the names."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","List the phone numbers of all employees, and count them by a bar chart, and rank X-axis in desc order please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","A bar chart for what are the number of the phone numbers for each employee?, and could you show in descending by the Phone please?"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","Plot the number of phone by grouped by phone as a bar graph, could you list bar in descending order?"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","What are the number of the phone numbers for each employee?, display in descending by the bars."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","A bar chart for listing the number of the phone numbers of all employees, sort names from high to low order."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 262-3443', '+1 (403) 246-9887']], 'y_data': [[1, 1, 1, 1, 1, 2, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 262-3443, +1 (403) 246-9887","1, 1, 1, 1, 1, 2, 1","What are the phone numbers for each employee, and count them by a bar chart, and sort in descending by the names."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","List the number of the phone numbers of all employees, and show Y from low to high order please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","What are the number of the phone numbers for each employee?, and I want to show in asc by the y axis."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","Plot the number of phone by grouped by phone as a bar graph, and order by the Y-axis in ascending."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","List the phone numbers of all employees, and count them by a bar chart, I want to show in asc by the y axis."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","A bar chart for listing the number of the phone numbers of all employees, and I want to show in asc by the y axis."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","What are the phone numbers for each employee, and count them by a bar chart, sort in ascending by the y-axis please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 246-9887', '+1 (403) 263-4423', '+1 (403) 456-9986', '+1 (403) 467-3351', '+1 (780) 428-9482', '1 (780) 836-9987', '+1 (403) 262-3443']], 'y_data': [[1, 1, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 246-9887, +1 (403) 263-4423, +1 (403) 456-9986, +1 (403) 467-3351, +1 (780) 428-9482, 1 (780) 836-9987, +1 (403) 262-3443","1, 1, 1, 1, 1, 1, 2","A bar chart for what are the number of the phone numbers for each employee?, could you list Y-axis from low to high order?"
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","What are the phone numbers for each employee, and count them by a bar chart, I want to show in descending by the how many phone."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","Plot the number of phone by grouped by phone as a bar graph, and I want to show in descending by the y axis."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","A bar chart for listing the number of the phone numbers of all employees, list by the total number in desc."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","What are the number of the phone numbers for each employee?, rank by the Y from high to low."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","List the number of the phone numbers of all employees, I want to show in descending by the y axis."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","A bar chart for what are the number of the phone numbers for each employee?, I want to list by the y axis in descending please."
"SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY COUNT(Phone) DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'Phone', 'y_name': 'COUNT(Phone)', 'x_data': [['+1 (403) 262-3443', '1 (780) 836-9987', '+1 (780) 428-9482', '+1 (403) 467-3351', '+1 (403) 456-9986', '+1 (403) 263-4423', '+1 (403) 246-9887']], 'y_data': [[2, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Phone'}",bar,Phone,COUNT(Phone),"+1 (403) 262-3443, 1 (780) 836-9987, +1 (780) 428-9482, +1 (403) 467-3351, +1 (403) 456-9986, +1 (403) 263-4423, +1 (403) 246-9887","2, 1, 1, 1, 1, 1, 1","List the phone numbers of all employees, and count them by a bar chart, I want to rank by the total number from high to low."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Diego', 'Luis', 'Puja']], 'y_data': [[4, 5, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Diego, Luis, Puja","4, 5, 3","Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and sort from low to high by the FirstName."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Diego', 'Luis', 'Puja']], 'y_data': [[4, 5, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Diego, Luis, Puja","4, 5, 3","What are the first names and support rep ids for employees serving 10 or more customers, and could you show by the X in ascending please?"
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Diego', 'Luis', 'Puja']], 'y_data': [[4, 5, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Diego, Luis, Puja","4, 5, 3","Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and sort bars in ascending order."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Luis', 'Diego']], 'y_data': [[3, 5, 4]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Luis, Diego","3, 5, 4","What are the first names and support rep ids for employees serving 10 or more customers, and order X-axis in descending order."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Luis', 'Diego']], 'y_data': [[3, 5, 4]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Luis, Diego","3, 5, 4","Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, display by the x-axis in descending please."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.FirstName DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Luis', 'Diego']], 'y_data': [[3, 5, 4]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Luis, Diego","3, 5, 4","Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and display by the x-axis in descending please."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5","Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, order from low to high by the y-axis."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5","Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, order by the total number in asc."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId ASC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Puja', 'Diego', 'Luis']], 'y_data': [[3, 4, 5]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Puja, Diego, Luis","3, 4, 5","What are the first names and support rep ids for employees serving 10 or more customers, and rank SupportRepId from low to high order."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Luis', 'Diego', 'Puja']], 'y_data': [[5, 4, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Luis, Diego, Puja","5, 4, 3","Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and could you list total number in descending order please?"
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Luis', 'Diego', 'Puja']], 'y_data': [[5, 4, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Luis, Diego, Puja","5, 4, 3","Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, I want to rank from high to low by the Y please."
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId ORDER BY T1.SupportRepId DESC",Bar,Medium,chinook_1,"{'chart': 'bar', 'x_name': 'FirstName', 'y_name': 'SupportRepId', 'x_data': [['Luis', 'Diego', 'Puja']], 'y_data': [[5, 4, 3]], 'classify': [], 'describe': ''}",bar,FirstName,SupportRepId,"Luis, Diego, Puja","5, 4, 3","What are the first names and support rep ids for employees serving 10 or more customers, and could you list total number in descending order please?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Aquaman', 'Battlestar Galactica (Classic), Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far', 'Heroes, Season 1', 'LOST, Season 4', 'Lost, Season 1', 'Lost, Season 2', 'Lost, Season 3', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3']], 'y_data': [[254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Aquaman, Battlestar Galactica (Classic), Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far, Heroes, Season 1, LOST, Season 4, Lost, Season 1, Lost, Season 2, Lost, Season 3, The Office, Season 1, The Office, Season 2, The Office, Season 3","254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251","Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and list by the x axis in ascending."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Aquaman', 'Battlestar Galactica (Classic), Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far', 'Heroes, Season 1', 'LOST, Season 4', 'Lost, Season 1', 'Lost, Season 2', 'Lost, Season 3', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3']], 'y_data': [[254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Aquaman, Battlestar Galactica (Classic), Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far, Heroes, Season 1, LOST, Season 4, Lost, Season 1, Lost, Season 2, Lost, Season 3, The Office, Season 1, The Office, Season 2, The Office, Season 3","254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251","Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, and list by the x axis in ascending."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Aquaman', 'Battlestar Galactica (Classic), Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far', 'Heroes, Season 1', 'LOST, Season 4', 'Lost, Season 1', 'Lost, Season 2', 'Lost, Season 3', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3']], 'y_data': [[254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Aquaman, Battlestar Galactica (Classic), Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far, Heroes, Season 1, LOST, Season 4, Lost, Season 1, Lost, Season 2, Lost, Season 3, The Office, Season 1, The Office, Season 2, The Office, Season 3","254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251","Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, list by the x axis in ascending."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Aquaman', 'Battlestar Galactica (Classic), Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far', 'Heroes, Season 1', 'LOST, Season 4', 'Lost, Season 1', 'Lost, Season 2', 'Lost, Season 3', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3']], 'y_data': [[254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Aquaman, Battlestar Galactica (Classic), Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far, Heroes, Season 1, LOST, Season 4, Lost, Season 1, Lost, Season 2, Lost, Season 3, The Office, Season 1, The Office, Season 2, The Office, Season 3","254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251","Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, order by the X in ascending."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Aquaman', 'Battlestar Galactica (Classic), Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far', 'Heroes, Season 1', 'LOST, Season 4', 'Lost, Season 1', 'Lost, Season 2', 'Lost, Season 3', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3']], 'y_data': [[254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Aquaman, Battlestar Galactica (Classic), Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far, Heroes, Season 1, LOST, Season 4, Lost, Season 1, Lost, Season 2, Lost, Season 3, The Office, Season 1, The Office, Season 2, The Office, Season 3","254, 253, 227, 226, 228, 261, 230, 231, 229, 249, 250, 251","What are the titles and ids for albums containing tracks with unit price greater than 1, and could you show in ascending by the X-axis?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 3', 'Lost, Season 2', 'Lost, Season 1', 'LOST, Season 4', 'Heroes, Season 1', 'Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman']], 'y_data': [[251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 3, Lost, Season 2, Lost, Season 1, LOST, Season 4, Heroes, Season 1, Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman","251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254","Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, could you rank by the bars from high to low please?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 3', 'Lost, Season 2', 'Lost, Season 1', 'LOST, Season 4', 'Heroes, Season 1', 'Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman']], 'y_data': [[251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 3, Lost, Season 2, Lost, Season 1, LOST, Season 4, Heroes, Season 1, Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman","251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254","Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in desc by the x axis."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 3', 'Lost, Season 2', 'Lost, Season 1', 'LOST, Season 4', 'Heroes, Season 1', 'Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman']], 'y_data': [[251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 3, Lost, Season 2, Lost, Season 1, LOST, Season 4, Heroes, Season 1, Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman","251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254","Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, and I want to list X-axis in descending order."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 3', 'Lost, Season 2', 'Lost, Season 1', 'LOST, Season 4', 'Heroes, Season 1', 'Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman']], 'y_data': [[251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 3, Lost, Season 2, Lost, Season 1, LOST, Season 4, Heroes, Season 1, Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman","251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254","Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and could you show bars in descending order please?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.Title DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 3', 'Lost, Season 2', 'Lost, Season 1', 'LOST, Season 4', 'Heroes, Season 1', 'Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman']], 'y_data': [[251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 3, Lost, Season 2, Lost, Season 1, LOST, Season 4, Heroes, Season 1, Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman","251, 250, 249, 229, 231, 230, 261, 228, 226, 227, 253, 254","What are the titles and ids for albums containing tracks with unit price greater than 1, and could you show bars in descending order please?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261","Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, and could you show in ascending by the Y-axis?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261","Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in ascending by the y-axis."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261","Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and show y axis from low to high order."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261","Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, sort from low to high by the y-axis."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId ASC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['Battlestar Galactica: The Story So Far', 'Battlestar Galactica, Season 3', 'Heroes, Season 1', 'Lost, Season 3', 'Lost, Season 1', 'Lost, Season 2', 'The Office, Season 1', 'The Office, Season 2', 'The Office, Season 3', 'Battlestar Galactica (Classic), Season 1', 'Aquaman', 'LOST, Season 4']], 'y_data': [[226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"Battlestar Galactica: The Story So Far, Battlestar Galactica, Season 3, Heroes, Season 1, Lost, Season 3, Lost, Season 1, Lost, Season 2, The Office, Season 1, The Office, Season 2, The Office, Season 3, Battlestar Galactica (Classic), Season 1, Aquaman, LOST, Season 4","226, 227, 228, 229, 230, 231, 249, 250, 251, 253, 254, 261","What are the titles and ids for albums containing tracks with unit price greater than 1, could you order by the y axis in asc?"
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['LOST, Season 4', 'Aquaman', 'Battlestar Galactica (Classic), Season 1', 'The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 2', 'Lost, Season 1', 'Lost, Season 3', 'Heroes, Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far']], 'y_data': [[261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"LOST, Season 4, Aquaman, Battlestar Galactica (Classic), Season 1, The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 2, Lost, Season 1, Lost, Season 3, Heroes, Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far","261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226","Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, show in descending by the total number please."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['LOST, Season 4', 'Aquaman', 'Battlestar Galactica (Classic), Season 1', 'The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 2', 'Lost, Season 1', 'Lost, Season 3', 'Heroes, Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far']], 'y_data': [[261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"LOST, Season 4, Aquaman, Battlestar Galactica (Classic), Season 1, The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 2, Lost, Season 1, Lost, Season 3, Heroes, Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far","261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226","Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, I want to order Y in descending order please."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['LOST, Season 4', 'Aquaman', 'Battlestar Galactica (Classic), Season 1', 'The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 2', 'Lost, Season 1', 'Lost, Season 3', 'Heroes, Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far']], 'y_data': [[261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"LOST, Season 4, Aquaman, Battlestar Galactica (Classic), Season 1, The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 2, Lost, Season 1, Lost, Season 3, Heroes, Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far","261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226","Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in descending by the AlbumId."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['LOST, Season 4', 'Aquaman', 'Battlestar Galactica (Classic), Season 1', 'The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 2', 'Lost, Season 1', 'Lost, Season 3', 'Heroes, Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far']], 'y_data': [[261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"LOST, Season 4, Aquaman, Battlestar Galactica (Classic), Season 1, The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 2, Lost, Season 1, Lost, Season 3, Heroes, Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far","261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226","Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and display by the Y from high to low please."
"SELECT T1.Title , T1.AlbumId FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 ORDER BY T1.AlbumId DESC",Bar,Hard,chinook_1,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'AlbumId', 'x_data': [['LOST, Season 4', 'Aquaman', 'Battlestar Galactica (Classic), Season 1', 'The Office, Season 3', 'The Office, Season 2', 'The Office, Season 1', 'Lost, Season 2', 'Lost, Season 1', 'Lost, Season 3', 'Heroes, Season 1', 'Battlestar Galactica, Season 3', 'Battlestar Galactica: The Story So Far']], 'y_data': [[261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226]], 'classify': [], 'describe': ''}",bar,Title,AlbumId,"LOST, Season 4, Aquaman, Battlestar Galactica (Classic), Season 1, The Office, Season 3, The Office, Season 2, The Office, Season 1, Lost, Season 2, Lost, Season 1, Lost, Season 3, Heroes, Season 1, Battlestar Galactica, Season 3, Battlestar Galactica: The Story So Far","261, 254, 253, 251, 250, 249, 231, 230, 229, 228, 227, 226","What are the titles and ids for albums containing tracks with unit price greater than 1, and show in descending by the total number please."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2011', '2009', '2013', '2010', '2012']], 'y_data': [[0, 1, 1, 2, 3]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2011, 2009, 2013, 2010, 2012","0, 1, 1, 2, 3","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, sort in asc by the Y-axis."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2011', '2009', '2013', '2010', '2012']], 'y_data': [[0, 1, 1, 2, 3]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2011, 2009, 2013, 2010, 2012","0, 1, 1, 2, 3","A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, rank from low to high by the y axis."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2011', '2009', '2013', '2010', '2012']], 'y_data': [[0, 1, 1, 2, 3]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2011, 2009, 2013, 2010, 2012","0, 1, 1, 2, 3","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, I want to show by the total number from low to high please."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2011', '2009', '2013', '2010', '2012']], 'y_data': [[0, 1, 1, 2, 3]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2011, 2009, 2013, 2010, 2012","0, 1, 1, 2, 3","What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and I want to show by the total number from low to high please."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2012', '2010', '2013', '2009', '2011']], 'y_data': [[3, 2, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2012, 2010, 2013, 2009, 2011","3, 2, 1, 1, 0","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, and list from high to low by the Y."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2012', '2010', '2013', '2009', '2011']], 'y_data': [[3, 2, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2012, 2010, 2013, 2009, 2011","3, 2, 1, 1, 0","A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and rank in descending by the how many invoicedate."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2012', '2010', '2013', '2009', '2011']], 'y_data': [[3, 2, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2012, 2010, 2013, 2009, 2011","3, 2, 1, 1, 0","What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, could you sort y-axis in descending order?"
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['2012', '2010', '2013', '2009', '2011']], 'y_data': [[3, 2, 1, 1, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY YEAR'}",bar,InvoiceDate,COUNT(InvoiceDate),"2012, 2010, 2013, 2009, 2011","3, 2, 1, 1, 0","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, and rank in descending by the how many invoicedate."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Sun', 'Thur', 'Fri', 'Sat', 'Wed', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Sun, Thur, Fri, Sat, Wed, Mon, Tue","0, 0, 1, 1, 1, 2, 2","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, and show from low to high by the y-axis please."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Sun', 'Thur', 'Fri', 'Sat', 'Wed', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Sun, Thur, Fri, Sat, Wed, Mon, Tue","0, 0, 1, 1, 1, 2, 2","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, and show in ascending by the y axis."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Sun', 'Thur', 'Fri', 'Sat', 'Wed', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Sun, Thur, Fri, Sat, Wed, Mon, Tue","0, 0, 1, 1, 1, 2, 2","A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, order from low to high by the Y-axis."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) ASC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Sun', 'Thur', 'Fri', 'Sat', 'Wed', 'Mon', 'Tue']], 'y_data': [[0, 0, 1, 1, 1, 2, 2]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Sun, Thur, Fri, Sat, Wed, Mon, Tue","0, 0, 1, 1, 1, 2, 2","What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and display from low to high by the Y."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Tue', 'Mon', 'Wed', 'Sat', 'Fri', 'Thur', 'Sun']], 'y_data': [[2, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Tue, Mon, Wed, Sat, Fri, Thur, Sun","2, 2, 1, 1, 1, 0, 0","Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, sort by the total number in descending."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Tue', 'Mon', 'Wed', 'Sat', 'Fri', 'Thur', 'Sun']], 'y_data': [[2, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Tue, Mon, Wed, Sat, Fri, Thur, Sun","2, 2, 1, 1, 1, 0, 0","What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and order from high to low by the Y-axis."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Tue', 'Mon', 'Wed', 'Sat', 'Fri', 'Thur', 'Sun']], 'y_data': [[2, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Tue, Mon, Wed, Sat, Fri, Thur, Sun","2, 2, 1, 1, 1, 0, 0","What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, display by the Y in desc."
"SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""  ORDER BY COUNT(InvoiceDate) DESC",Bar,Extra Hard,chinook_1,"{'chart': 'bar', 'x_name': 'InvoiceDate', 'y_name': 'COUNT(InvoiceDate)', 'x_data': [['Tue', 'Mon', 'Wed', 'Sat', 'Fri', 'Thur', 'Sun']], 'y_data': [[2, 2, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN InvoiceDate BY WEEKDAY'}",bar,InvoiceDate,COUNT(InvoiceDate),"Tue, Mon, Wed, Sat, Fri, Thur, Sun","2, 2, 1, 1, 1, 0, 0","A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and could you order by the the number of invoicedate from high to low?"
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Ighil Mgoun', 'Mount Cameroon', 'Taska n’Zat']], 'y_data': [[14, 12, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Ighil Mgoun, Mount Cameroon, Taska n’Zat","14, 12, 20","Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, could you order by the bars in ascending please?"
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Ighil Mgoun', 'Mount Cameroon', 'Taska n’Zat']], 'y_data': [[14, 12, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Ighil Mgoun, Mount Cameroon, Taska n’Zat","14, 12, 20","What are the id and name of the mountains that have at least 2 photos Show bar chart, and could you order in ascending by the x-axis?"
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Ighil Mgoun', 'Mount Cameroon', 'Taska n’Zat']], 'y_data': [[14, 12, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Ighil Mgoun, Mount Cameroon, Taska n’Zat","14, 12, 20","Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, could you order names from low to high order?"
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Mount Cameroon', 'Ighil Mgoun']], 'y_data': [[20, 12, 14]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Mount Cameroon, Ighil Mgoun","20, 12, 14","Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, list from high to low by the bar."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Mount Cameroon', 'Ighil Mgoun']], 'y_data': [[20, 12, 14]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Mount Cameroon, Ighil Mgoun","20, 12, 14","Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, sort by the bars in descending."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.name DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Mount Cameroon', 'Ighil Mgoun']], 'y_data': [[20, 12, 14]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Mount Cameroon, Ighil Mgoun","20, 12, 14","What are the id and name of the mountains that have at least 2 photos Show bar chart, and list by the bar in descending please."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20","What are the id and name of the mountains that have at least 2 photos Show bar chart, order from low to high by the y axis."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20","Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, I want to list by the y-axis from low to high."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Mount Cameroon', 'Ighil Mgoun', 'Taska n’Zat']], 'y_data': [[12, 14, 20]], 'classify': [], 'describe': ''}",bar,name,id,"Mount Cameroon, Ighil Mgoun, Taska n’Zat","12, 14, 20","Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, I want to sort by the id in asc."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Ighil Mgoun', 'Mount Cameroon']], 'y_data': [[20, 14, 12]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Ighil Mgoun, Mount Cameroon","20, 14, 12","What are the id and name of the mountains that have at least 2 photos Show bar chart, sort Y in descending order."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Ighil Mgoun', 'Mount Cameroon']], 'y_data': [[20, 14, 12]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Ighil Mgoun, Mount Cameroon","20, 14, 12","Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, sort in desc by the Y."
"SELECT T1.name , T1.id FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id ORDER BY T1.id DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'id', 'x_data': [['Taska n’Zat', 'Ighil Mgoun', 'Mount Cameroon']], 'y_data': [[20, 14, 12]], 'classify': [], 'describe': ''}",bar,name,id,"Taska n’Zat, Ighil Mgoun, Mount Cameroon","20, 14, 12","Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, and could you order in desc by the id please?"
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, list in asc by the x-axis."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, could you list by the name in ascending?"
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, sort by the x axis in asc."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and sort by the names in descending please."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and show bar from high to low order."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY T1.name DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, and could you display in descending by the names?"
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, sort by the total number in asc."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and sort by the how many name from low to high please."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) ASC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Olympus 15mm f/8.0 Body Cap', 'Sigma 19mm f2.8 EX DN']], 'y_data': [[2, 4]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Olympus 15mm f/8.0 Body Cap, Sigma 19mm f2.8 EX DN","2, 4","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, rank by the y-axis in asc."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, show from high to low by the Y-axis."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and show in desc by the how many name please."
"SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name ORDER BY COUNT(T1.name) DESC",Bar,Extra Hard,mountain_photos,"{'chart': 'bar', 'x_name': 'name', 'y_name': 'COUNT(name)', 'x_data': [['Sigma 19mm f2.8 EX DN', 'Olympus 15mm f/8.0 Body Cap']], 'y_data': [[4, 2]], 'classify': [], 'describe': 'GROUP BY name'}",bar,name,COUNT(name),"Sigma 19mm f2.8 EX DN, Olympus 15mm f/8.0 Body Cap","4, 2","What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, sort y-axis in desc order."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3","Group and count brand for each camera lens using a bar chart, sort by the bar in ascending."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Olympus', 'Panasonic', 'Schneider Kreuznach', 'Sigma']], 'y_data': [[3, 3, 2, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Olympus, Panasonic, Schneider Kreuznach, Sigma","3, 3, 2, 3","Show the number of brand from each brand, show brand in ascending order."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Sigma', 'Schneider Kreuznach', 'Panasonic', 'Olympus']], 'y_data': [[3, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Sigma, Schneider Kreuznach, Panasonic, Olympus","3, 2, 3, 3","Show the number of brand from each brand, and list x-axis in desc order."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY brand DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Sigma', 'Schneider Kreuznach', 'Panasonic', 'Olympus']], 'y_data': [[3, 2, 3, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Sigma, Schneider Kreuznach, Panasonic, Olympus","3, 2, 3, 3","Group and count brand for each camera lens using a bar chart, and rank X in descending order."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Schneider Kreuznach', 'Olympus', 'Panasonic', 'Sigma']], 'y_data': [[2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Schneider Kreuznach, Olympus, Panasonic, Sigma","2, 3, 3, 3","Group and count brand for each camera lens using a bar chart, and rank in asc by the total number."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Schneider Kreuznach', 'Olympus', 'Panasonic', 'Sigma']], 'y_data': [[2, 3, 3, 3]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Schneider Kreuznach, Olympus, Panasonic, Sigma","2, 3, 3, 3","Show the number of brand from each brand, order total number in ascending order."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Sigma', 'Panasonic', 'Olympus', 'Schneider Kreuznach']], 'y_data': [[3, 3, 3, 2]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Sigma, Panasonic, Olympus, Schneider Kreuznach","3, 3, 3, 2","Group and count brand for each camera lens using a bar chart, list in desc by the total number."
"SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'brand', 'y_name': 'COUNT(brand)', 'x_data': [['Sigma', 'Panasonic', 'Olympus', 'Schneider Kreuznach']], 'y_data': [[3, 3, 3, 2]], 'classify': [], 'describe': 'GROUP BY brand'}",bar,brand,COUNT(brand),"Sigma, Panasonic, Olympus, Schneider Kreuznach","3, 3, 3, 2","Show the number of brand from each brand, and I want to show by the how many brand from high to low."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Please draw a bar chart to show the total number of different color, rank names in asc order."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Compare the number of items in each color scheme using a bar chart, and I want to display by the x axis from low to high."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Bar chart x axis color y axis the number of color, sort in ascending by the x-axis please."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Please draw a bar chart to show the total number of different color, I want to show X from high to low order."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Bar chart x axis color y axis the number of color, sort in desc by the x-axis."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY color DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Compare the number of items in each color scheme using a bar chart, rank by the color from high to low."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Please draw a bar chart to show the total number of different color, could you rank Y-axis from low to high order?"
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Bar chart x axis color y axis the number of color, show in ascending by the y axis please."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) ASC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['Black/White', 'RBG']], 'y_data': [[2, 8]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"Black/White, RBG","2, 8","Compare the number of items in each color scheme using a bar chart, could you rank Y-axis from low to high order?"
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Please draw a bar chart to show the total number of different color, and sort by the Y-axis from high to low."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Bar chart x axis color y axis the number of color, and I want to sort how many color from high to low order."
"SELECT color , COUNT(color) FROM photos GROUP BY color ORDER BY COUNT(color) DESC",Bar,Medium,mountain_photos,"{'chart': 'bar', 'x_name': 'color', 'y_name': 'COUNT(color)', 'x_data': [['RBG', 'Black/White']], 'y_data': [[8, 2]], 'classify': [], 'describe': 'GROUP BY color'}",bar,color,COUNT(color),"RBG, Black/White","8, 2","Compare the number of items in each color scheme using a bar chart, and sort Y in desc order."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY Title ASC",Stacked Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'ET the Extra-Terrestrial', 'Rocky III', 'Tootsie']], 'y_data': [[1, 0, 0, 0], [0, 2, 3, 1], [0, 1, 1, 0]], 'classify': ['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder'], 'describe': 'GROUP BY Type, GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, ET the Extra-Terrestrial, Rocky III, Tootsie","1, 0, 0, 0","Use a stacked bar chart to show how many films for each title and each type The x-axis is title, rank x-axis from low to high order."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY Title DESC",Stacked Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['Tootsie', 'Rocky III', 'ET the Extra-Terrestrial', 'An Officer and a Gentleman']], 'y_data': [[0, 0, 0, 1], [1, 3, 2, 0], [0, 1, 1, 0]], 'classify': ['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder'], 'describe': 'GROUP BY Type, GROUP BY Title'}",bar,Title,COUNT(Title),"Tootsie, Rocky III, ET the Extra-Terrestrial, An Officer and a Gentleman","0, 0, 0, 1","Use a stacked bar chart to show how many films for each title and each type The x-axis is title, could you sort in desc by the x-axis?"
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY COUNT(Title) ASC",Stacked Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'Tootsie', 'ET the Extra-Terrestrial', 'Rocky III']], 'y_data': [[0, 1, 0, 0], [0, 1, 2, 3], [0, 0, 1, 1]], 'classify': ['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder'], 'describe': 'GROUP BY Type, GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, Tootsie, ET the Extra-Terrestrial, Rocky III","0, 1, 0, 0","Use a stacked bar chart to show how many films for each title and each type The x-axis is title, display y axis in ascending order."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ,  Title ORDER BY COUNT(Title) DESC",Stacked Bar,Extra Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['Rocky III', 'ET the Extra-Terrestrial', 'Tootsie', 'An Officer and a Gentleman']], 'y_data': [[0, 0, 1, 0], [3, 2, 1, 0], [1, 1, 0, 0]], 'classify': ['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder'], 'describe': 'GROUP BY Type, GROUP BY Title'}",bar,Title,COUNT(Title),"Rocky III, ET the Extra-Terrestrial, Tootsie, An Officer and a Gentleman","0, 0, 1, 0","Use a stacked bar chart to show how many films for each title and each type The x-axis is title, I want to display from high to low by the Y."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY Type ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2","Please show the number of films for each type in a bar chart, display x-axis from low to high order."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY Type ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide', 'Mass suicide murder']], 'y_data': [[1, 6, 2]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide, Mass suicide murder","1, 6, 2","How many films for each type? Return a bar chart, and sort x axis in asc order."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY Type DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass suicide murder', 'Mass suicide', 'Mass human sacrifice']], 'y_data': [[2, 6, 1]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass suicide murder, Mass suicide, Mass human sacrifice","2, 6, 1","Please show the number of films for each type in a bar chart, could you sort names from high to low order?"
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY Type DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass suicide murder', 'Mass suicide', 'Mass human sacrifice']], 'y_data': [[2, 6, 1]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass suicide murder, Mass suicide, Mass human sacrifice","2, 6, 1","How many films for each type? Return a bar chart, show in descending by the X."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY COUNT(Type) ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide murder', 'Mass suicide']], 'y_data': [[1, 2, 6]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide murder, Mass suicide","1, 2, 6","How many films for each type? Return a bar chart, and sort Y in ascending order."
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY COUNT(Type) ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass human sacrifice', 'Mass suicide murder', 'Mass suicide']], 'y_data': [[1, 2, 6]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass human sacrifice, Mass suicide murder, Mass suicide","1, 2, 6","Please show the number of films for each type in a bar chart, and could you order Y in asc order please?"
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY COUNT(Type) DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass suicide', 'Mass suicide murder', 'Mass human sacrifice']], 'y_data': [[6, 2, 1]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass suicide, Mass suicide murder, Mass human sacrifice","6, 2, 1","Please show the number of films for each type in a bar chart, could you order in descending by the Y-axis?"
"SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type ORDER BY COUNT(Type) DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Type', 'y_name': 'COUNT(Type)', 'x_data': [['Mass suicide', 'Mass suicide murder', 'Mass human sacrifice']], 'y_data': [[6, 2, 1]], 'classify': [], 'describe': 'GROUP BY Type'}",bar,Type,COUNT(Type),"Mass suicide, Mass suicide murder, Mass human sacrifice","6, 2, 1","How many films for each type? Return a bar chart, and I want to rank in descending by the the number of type please."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title ORDER BY Title ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'ET the Extra-Terrestrial', 'Rocky III', 'Tootsie']], 'y_data': [[1, 3, 4, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, ET the Extra-Terrestrial, Rocky III, Tootsie","1, 3, 4, 1","For each title, use a bar chart to show the number of films, list from low to high by the x axis please."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title ORDER BY Title DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['Tootsie', 'Rocky III', 'ET the Extra-Terrestrial', 'An Officer and a Gentleman']], 'y_data': [[1, 4, 3, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"Tootsie, Rocky III, ET the Extra-Terrestrial, An Officer and a Gentleman","1, 4, 3, 1","For each title, use a bar chart to show the number of films, I want to rank in desc by the x-axis please."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title ORDER BY COUNT(Title) ASC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['An Officer and a Gentleman', 'Tootsie', 'ET the Extra-Terrestrial', 'Rocky III']], 'y_data': [[1, 1, 3, 4]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"An Officer and a Gentleman, Tootsie, ET the Extra-Terrestrial, Rocky III","1, 1, 3, 4","For each title, use a bar chart to show the number of films, and order by the total number in ascending."
"SELECT Title , COUNT(Title) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Title ORDER BY COUNT(Title) DESC",Bar,Hard,film_rank,"{'chart': 'bar', 'x_name': 'Title', 'y_name': 'COUNT(Title)', 'x_data': [['Rocky III', 'ET the Extra-Terrestrial', 'Tootsie', 'An Officer and a Gentleman']], 'y_data': [[4, 3, 1, 1]], 'classify': [], 'describe': 'GROUP BY Title'}",bar,Title,COUNT(Title),"Rocky III, ET the Extra-Terrestrial, Tootsie, An Officer and a Gentleman","4, 3, 1, 1","For each title, use a bar chart to show the number of films, and sort by the y-axis from high to low."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","Visualize a bar chart for how films are produced by each studio?, list bar from low to high order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","List the studios of each film and the number of films produced by that studio Show bar chart, could you list by the X from low to high?"
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","List the studios of each film and the number of films produced by that studio by a bar chart, I want to rank by the x axis in ascending."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","How films are produced by each studio Show bar chart, and list bar from low to high order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","A bar chart about how films are produced by each studio?, and show by the x-axis from low to high."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['20th Century Fox', 'Columbia', 'Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO']], 'y_data': [[2, 2, 1, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"20th Century Fox, Columbia, Columbia / Rastar, MGM, Orion / Carolco, Paramount, Paramount / Lorimar, United Artists, Universal, Universal / RKO","2, 2, 1, 1, 1, 2, 1, 1, 1, 1","Show me the total number by studio in a histogram, I want to rank by the bar in asc."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","Visualize a bar chart for how films are produced by each studio?, could you show by the bars from high to low?"
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","List the studios of each film and the number of films produced by that studio Show bar chart, sort X in desc order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","Show me the total number by studio in a histogram, and sort by the X in descending."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","How films are produced by each studio Show bar chart, and rank x-axis from high to low order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","A bar chart about how films are produced by each studio?, sort by the bars from high to low."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Paramount', 'Orion / Carolco', 'MGM', 'Columbia / Rastar', 'Columbia', '20th Century Fox']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 1, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Universal / RKO, Universal, United Artists, Paramount / Lorimar, Paramount, Orion / Carolco, MGM, Columbia / Rastar, Columbia, 20th Century Fox","1, 1, 1, 1, 2, 1, 1, 1, 2, 2","List the studios of each film and the number of films produced by that studio by a bar chart, and sort by the Studio in descending."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Show me the total number by studio in a histogram, and show Y-axis in asc order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Visualize a bar chart for how films are produced by each studio?, and order Y-axis from low to high order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","How films are produced by each studio Show bar chart, and order Y-axis from low to high order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","A bar chart about how films are produced by each studio?, and show Y-axis in asc order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","List the studios of each film and the number of films produced by that studio Show bar chart, and list the total number in asc order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) ASC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Columbia / Rastar', 'MGM', 'Orion / Carolco', 'Paramount / Lorimar', 'United Artists', 'Universal', 'Universal / RKO', '20th Century Fox', 'Columbia', 'Paramount']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Columbia / Rastar, MGM, Orion / Carolco, Paramount / Lorimar, United Artists, Universal, Universal / RKO, 20th Century Fox, Columbia, Paramount","1, 1, 1, 1, 1, 1, 1, 2, 2, 2","List the studios of each film and the number of films produced by that studio by a bar chart, and order from low to high by the Y."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","Visualize a bar chart for how films are produced by each studio?, I want to display in descending by the Y."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","List the studios of each film and the number of films produced by that studio by a bar chart, I want to display in descending by the Y."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","How films are produced by each studio Show bar chart, display y axis in descending order please."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","List the studios of each film and the number of films produced by that studio Show bar chart, and show the total number in desc order."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","Show me the total number by studio in a histogram, and rank by the Y in descending please."
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY COUNT(*) DESC",Bar,Medium,film_rank,"{'chart': 'bar', 'x_name': 'Studio', 'y_name': 'COUNT(*)', 'x_data': [['Paramount', 'Columbia', '20th Century Fox', 'Universal / RKO', 'Universal', 'United Artists', 'Paramount / Lorimar', 'Orion / Carolco', 'MGM', 'Columbia / Rastar']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Studio,COUNT(*),"Paramount, Columbia, 20th Century Fox, Universal / RKO, Universal, United Artists, Paramount / Lorimar, Orion / Carolco, MGM, Columbia / Rastar","2, 2, 2, 1, 1, 1, 1, 1, 1, 1","A bar chart about how films are produced by each studio?, display y axis in descending order please."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","how many exhibitions has each artist had?, I want to order by the bar in ascending."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Show all artist names and the number of exhibitions for each artist Show bar chart, display by the bar from low to high."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Show all artist names and the number of exhibitions for each artist in a bar chart, and show in asc by the bars."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","How many exhibitions has each artist had Plot them as bar chart, and I want to order by the bar in ascending."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Return a histogram on how many exhibitions has each artist had?, and display by the bar from low to high."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Return a histogram on how many exhibitions has each artist had?, list from high to low by the Name please."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Show all artist names and the number of exhibitions for each artist in a bar chart, and list x axis in desc order."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","how many exhibitions has each artist had?, and display from high to low by the X-axis please."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","How many exhibitions has each artist had Plot them as bar chart, I want to order bar in desc order please."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Show all artist names and the number of exhibitions for each artist Show bar chart, show X from high to low order."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Show all artist names and the number of exhibitions for each artist in a bar chart, and show from low to high by the Y."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Show all artist names and the number of exhibitions for each artist Show bar chart, list total number from low to high order."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","how many exhibitions has each artist had?, and could you order Y in ascending order?"
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","Return a histogram on how many exhibitions has each artist had?, list total number from low to high order."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Jeff Sluman', 'John Daly', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[1, 1, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Jeff Sluman, John Daly, Nick Price, Paul Azinger, Vijay Singh","1, 1, 1, 1, 2","How many exhibitions has each artist had Plot them as bar chart, and list y axis in ascending order."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","how many exhibitions has each artist had?, and rank in descending by the Y."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Show all artist names and the number of exhibitions for each artist in a bar chart, I want to order in descending by the total number."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","How many exhibitions has each artist had Plot them as bar chart, and display from high to low by the Y-axis."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Show all artist names and the number of exhibitions for each artist Show bar chart, and display by the Y-axis in descending please."
"SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'count(*)', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'John Daly', 'Jeff Sluman']], 'y_data': [[2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Name,count(*),"Vijay Singh, Paul Azinger, Nick Price, John Daly, Jeff Sluman","2, 1, 1, 1, 1","Return a histogram on how many exhibitions has each artist had?, and rank in descending by the Y."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and rank in ascending by the X-axis."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, I want to sort by the names in ascending."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 7', 'December 5', 'December 2']], 'y_data': [[2983, 1098, 965]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 7, December 5, December 2","2983, 1098, 965","Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and could you show by the bars in desc?"
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 7', 'December 5', 'December 2']], 'y_data': [[2983, 1098, 965]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 7, December 5, December 2","2983, 1098, 965","Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, list names in descending order."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and order y axis from low to high order please."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 2', 'December 5', 'December 7']], 'y_data': [[965, 1098, 2983]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 2, December 5, December 7","965, 1098, 2983","Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, show by the Y-axis in ascending."
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 7', 'December 5', 'December 2']], 'y_data': [[2983, 1098, 965]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 7, December 5, December 2","2983, 1098, 965","Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, could you list y-axis in desc order?"
"SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Attendance DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Date', 'y_name': 'Attendance', 'x_data': [['December 7', 'December 5', 'December 2']], 'y_data': [[2983, 1098, 965]], 'classify': [], 'describe': ''}",bar,Date,Attendance,"December 7, December 5, December 2","2983, 1098, 965","Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, list from high to low by the Attendance."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1995', '1996', '1997', '1998', '1994']], 'y_data': [[0, 0, 0, 1, 2], [0, 0, 0, 2, 2]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1995, 1996, 1997, 1998, 1994","0, 0, 0, 1, 2","For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, I want to rank y axis from low to high order."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) ASC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1995', '1996', '1997', '1998', '1994']], 'y_data': [[0, 0, 0, 1, 2], [0, 0, 0, 2, 2]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1995, 1996, 1997, 1998, 1994","0, 0, 0, 1, 2","For artist names who are not from the United States, how many names in each year?, and show by the how many year join in asc."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1998', '1997', '1996', '1995']], 'y_data': [[2, 1, 0, 0, 0], [2, 2, 0, 0, 0]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1998, 1997, 1996, 1995","2, 1, 0, 0, 0","For artist names who are not from the United States, how many names in each year?, and I want to sort by the y axis in descending."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Name ORDER BY COUNT(Year_Join) DESC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1994', '1998', '1997', '1996', '1995']], 'y_data': [[2, 1, 0, 0, 0], [2, 2, 0, 0, 0]], 'classify': ['Nick Price', 'Vijay Singh'], 'describe': 'GROUP BY Name, BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1994, 1998, 1997, 1996, 1995","2, 1, 0, 0, 0","For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, and order by the total number from high to low."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1995', '1996', '1997', '1994', '1998']], 'y_data': [[0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1995, 1996, 1997, 1994, 1998","0, 0, 0, 1, 1","For all artist names who are not from the United States, show the total number of each year with a bar chart, I want to display Y-axis from low to high order please."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1995', '1996', '1997', '1994', '1998']], 'y_data': [[0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1995, 1996, 1997, 1994, 1998","0, 0, 0, 1, 1","For all artist names who are not from the United States, show the total number of each year, show in asc by the Y."
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1998', '1994', '1997', '1996', '1995']], 'y_data': [[1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1998, 1994, 1997, 1996, 1995","1, 1, 0, 0, 0","For all artist names who are not from the United States, show the total number of each year with a bar chart, could you order by the y axis in descending?"
"SELECT Year_Join , COUNT(Year_Join) FROM artist WHERE country != 'United States' GROUP BY Year_Join ORDER BY COUNT(Year_Join) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year_Join', 'y_name': 'COUNT(Year_Join)', 'x_data': [['1998', '1994', '1997', '1996', '1995']], 'y_data': [[1, 1, 0, 0, 0]], 'classify': [], 'describe': 'BIN Year_Join BY TIME'}",bar,Year_Join,COUNT(Year_Join),"1998, 1994, 1997, 1996, 1995","1, 1, 0, 0, 0","For all artist names who are not from the United States, show the total number of each year, and rank y axis in descending order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1","Give me a bar chart about the number of countries in the artist table, and list by the Country in asc."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1","Show how many country from each country, and could you show by the bars from low to high?"
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1","Compare all countries with a bar chart, I want to order by the bars in asc."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, United States, Zimbabwe","1, 5, 1","What is the number of countries in the artist table?, I want to order by the bars in asc."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Zimbabwe, United States, Fiji","1, 5, 1","What is the number of countries in the artist table?, I want to order from high to low by the x-axis."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Zimbabwe, United States, Fiji","1, 5, 1","Give me a bar chart about the number of countries in the artist table, and could you display by the bars in descending?"
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Zimbabwe, United States, Fiji","1, 5, 1","Show how many country from each country, show bars in desc order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[1, 5, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Zimbabwe, United States, Fiji","1, 5, 1","Compare all countries with a bar chart, could you display by the bars in descending?"
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, Zimbabwe, United States","1, 1, 5","Give me a bar chart about the number of countries in the artist table, and show by the Y from low to high please."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, Zimbabwe, United States","1, 1, 5","Compare all countries with a bar chart, and sort how many country in asc order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, Zimbabwe, United States","1, 1, 5","Show how many country from each country, could you list by the Y from low to high?"
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[1, 1, 5]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"Fiji, Zimbabwe, United States","1, 1, 5","What is the number of countries in the artist table?, I want to rank by the y-axis in ascending."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Zimbabwe, Fiji","5, 1, 1","Show how many country from each country, and display total number from high to low order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Zimbabwe, Fiji","5, 1, 1","Give me a bar chart about the number of countries in the artist table, and list total number in descending order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Zimbabwe, Fiji","5, 1, 1","Compare all countries with a bar chart, display Y-axis in desc order."
"SELECT Country , COUNT(Country) FROM artist GROUP BY Country ORDER BY COUNT(Country) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'COUNT(Country)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[5, 1, 1]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,COUNT(Country),"United States, Zimbabwe, Fiji","5, 1, 1","What is the number of countries in the artist table?, and I want to rank how many country in descending order."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48","What are the average ages of artists by countries? Visualize the result with a histogram, display in ascending by the X-axis."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48","Compare the average of artists' age by country in a bar graph, and could you show Country from low to high order?"
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48","Show the average of artists' age by country, and I want to order by the X-axis in asc."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'United States', 'Zimbabwe']], 'y_data': [[45, 49.6, 48]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, United States, Zimbabwe","45, 49.6, 48","Bar chart x axis country y axis the average of age, and I want to order by the Country in asc."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[48, 49.6, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Zimbabwe, United States, Fiji","48, 49.6, 45","What are the average ages of artists by countries? Visualize the result with a histogram, order in descending by the X-axis."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[48, 49.6, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Zimbabwe, United States, Fiji","48, 49.6, 45","Compare the average of artists' age by country in a bar graph, I want to sort by the X from high to low."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[48, 49.6, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Zimbabwe, United States, Fiji","48, 49.6, 45","Show the average of artists' age by country, and I want to sort by the X from high to low."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY Country DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Zimbabwe', 'United States', 'Fiji']], 'y_data': [[48, 49.6, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Zimbabwe, United States, Fiji","48, 49.6, 45","Bar chart x axis country y axis the average of age, and display by the names in desc."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[45, 48, 49.6]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, Zimbabwe, United States","45, 48, 49.6","What are the average ages of artists by countries? Visualize the result with a histogram, and I want to display in asc by the total number."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[45, 48, 49.6]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, Zimbabwe, United States","45, 48, 49.6","Compare the average of artists' age by country in a bar graph, could you rank in ascending by the total number?"
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[45, 48, 49.6]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, Zimbabwe, United States","45, 48, 49.6","Show the average of artists' age by country, I want to rank Y in ascending order."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['Fiji', 'Zimbabwe', 'United States']], 'y_data': [[45, 48, 49.6]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"Fiji, Zimbabwe, United States","45, 48, 49.6","Bar chart x axis country y axis the average of age, and I want to show by the y-axis in asc please."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[49.6, 48, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Zimbabwe, Fiji","49.6, 48, 45","Bar chart x axis country y axis the average of age, sort in desc by the y-axis."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[49.6, 48, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Zimbabwe, Fiji","49.6, 48, 45","What are the average ages of artists by countries? Visualize the result with a histogram, sort in descending by the Y."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[49.6, 48, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Zimbabwe, Fiji","49.6, 48, 45","Show the average of artists' age by country, and sort in desc by the y-axis."
"SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Country', 'y_name': 'AVG(Age)', 'x_data': [['United States', 'Zimbabwe', 'Fiji']], 'y_data': [[49.6, 48, 45]], 'classify': [], 'describe': 'GROUP BY Country'}",bar,Country,AVG(Age),"United States, Zimbabwe, Fiji","49.6, 48, 45","Compare the average of artists' age by country in a bar graph, rank by the Y-axis in descending."
"SELECT Name , Age FROM artist ORDER BY Name ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'John Daly', 'Larry Nelson', 'Mark Brooks', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[57, 46, 50, 48, 48, 47, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, John Daly, Larry Nelson, Mark Brooks, Nick Price, Paul Azinger, Vijay Singh","57, 46, 50, 48, 48, 47, 45","What are the names and ages of artists? Show the result in a bar graph, and show x axis in asc order."
"SELECT Name , Age FROM artist ORDER BY Name ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'John Daly', 'Larry Nelson', 'Mark Brooks', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[57, 46, 50, 48, 48, 47, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, John Daly, Larry Nelson, Mark Brooks, Nick Price, Paul Azinger, Vijay Singh","57, 46, 50, 48, 48, 47, 45","Bar chart x axis name y axis age, and display in ascending by the X-axis."
"SELECT Name , Age FROM artist ORDER BY Name ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'John Daly', 'Larry Nelson', 'Mark Brooks', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[57, 46, 50, 48, 48, 47, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, John Daly, Larry Nelson, Mark Brooks, Nick Price, Paul Azinger, Vijay Singh","57, 46, 50, 48, 48, 47, 45","Show all artist names and ages in a histogram, list from low to high by the bars."
"SELECT Name , Age FROM artist ORDER BY Name ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'John Daly', 'Larry Nelson', 'Mark Brooks', 'Nick Price', 'Paul Azinger', 'Vijay Singh']], 'y_data': [[57, 46, 50, 48, 48, 47, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, John Daly, Larry Nelson, Mark Brooks, Nick Price, Paul Azinger, Vijay Singh","57, 46, 50, 48, 48, 47, 45","A bar chart compares the ages of all artists, rank by the X from low to high."
"SELECT Name , Age FROM artist ORDER BY Name DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Larry Nelson', 'John Daly', 'Jeff Sluman']], 'y_data': [[45, 47, 48, 48, 50, 46, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, Paul Azinger, Nick Price, Mark Brooks, Larry Nelson, John Daly, Jeff Sluman","45, 47, 48, 48, 50, 46, 57","Show all artist names and ages in a histogram, could you sort bar from high to low order?"
"SELECT Name , Age FROM artist ORDER BY Name DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Larry Nelson', 'John Daly', 'Jeff Sluman']], 'y_data': [[45, 47, 48, 48, 50, 46, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, Paul Azinger, Nick Price, Mark Brooks, Larry Nelson, John Daly, Jeff Sluman","45, 47, 48, 48, 50, 46, 57","Bar chart x axis name y axis age, and I want to order from high to low by the bars."
"SELECT Name , Age FROM artist ORDER BY Name DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Larry Nelson', 'John Daly', 'Jeff Sluman']], 'y_data': [[45, 47, 48, 48, 50, 46, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, Paul Azinger, Nick Price, Mark Brooks, Larry Nelson, John Daly, Jeff Sluman","45, 47, 48, 48, 50, 46, 57","A bar chart compares the ages of all artists, and rank in desc by the names."
"SELECT Name , Age FROM artist ORDER BY Name DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'Paul Azinger', 'Nick Price', 'Mark Brooks', 'Larry Nelson', 'John Daly', 'Jeff Sluman']], 'y_data': [[45, 47, 48, 48, 50, 46, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, Paul Azinger, Nick Price, Mark Brooks, Larry Nelson, John Daly, Jeff Sluman","45, 47, 48, 48, 50, 46, 57","What are the names and ages of artists? Show the result in a bar graph, and I want to rank names in descending order."
"SELECT Name , Age FROM artist ORDER BY Age ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Mark Brooks', 'Nick Price', 'Larry Nelson', 'Jeff Sluman']], 'y_data': [[45, 46, 47, 48, 48, 50, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, John Daly, Paul Azinger, Mark Brooks, Nick Price, Larry Nelson, Jeff Sluman","45, 46, 47, 48, 48, 50, 57","Bar chart x axis name y axis age, and rank Y in asc order."
"SELECT Name , Age FROM artist ORDER BY Age ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Mark Brooks', 'Nick Price', 'Larry Nelson', 'Jeff Sluman']], 'y_data': [[45, 46, 47, 48, 48, 50, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, John Daly, Paul Azinger, Mark Brooks, Nick Price, Larry Nelson, Jeff Sluman","45, 46, 47, 48, 48, 50, 57","Show all artist names and ages in a histogram, rank Y in asc order."
"SELECT Name , Age FROM artist ORDER BY Age ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Mark Brooks', 'Nick Price', 'Larry Nelson', 'Jeff Sluman']], 'y_data': [[45, 46, 47, 48, 48, 50, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, John Daly, Paul Azinger, Mark Brooks, Nick Price, Larry Nelson, Jeff Sluman","45, 46, 47, 48, 48, 50, 57","What are the names and ages of artists? Show the result in a bar graph, and sort by the total number in ascending."
"SELECT Name , Age FROM artist ORDER BY Age ASC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Vijay Singh', 'John Daly', 'Paul Azinger', 'Mark Brooks', 'Nick Price', 'Larry Nelson', 'Jeff Sluman']], 'y_data': [[45, 46, 47, 48, 48, 50, 57]], 'classify': [], 'describe': ''}",bar,Name,Age,"Vijay Singh, John Daly, Paul Azinger, Mark Brooks, Nick Price, Larry Nelson, Jeff Sluman","45, 46, 47, 48, 48, 50, 57","A bar chart compares the ages of all artists, sort by the total number in ascending."
"SELECT Name , Age FROM artist ORDER BY Age DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'Larry Nelson', 'Nick Price', 'Mark Brooks', 'Paul Azinger', 'John Daly', 'Vijay Singh']], 'y_data': [[57, 50, 48, 48, 47, 46, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, Larry Nelson, Nick Price, Mark Brooks, Paul Azinger, John Daly, Vijay Singh","57, 50, 48, 48, 47, 46, 45","Bar chart x axis name y axis age, and show Age in desc order."
"SELECT Name , Age FROM artist ORDER BY Age DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'Larry Nelson', 'Nick Price', 'Mark Brooks', 'Paul Azinger', 'John Daly', 'Vijay Singh']], 'y_data': [[57, 50, 48, 48, 47, 46, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, Larry Nelson, Nick Price, Mark Brooks, Paul Azinger, John Daly, Vijay Singh","57, 50, 48, 48, 47, 46, 45","Show all artist names and ages in a histogram, list Y from high to low order."
"SELECT Name , Age FROM artist ORDER BY Age DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'Larry Nelson', 'Nick Price', 'Mark Brooks', 'Paul Azinger', 'John Daly', 'Vijay Singh']], 'y_data': [[57, 50, 48, 48, 47, 46, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, Larry Nelson, Nick Price, Mark Brooks, Paul Azinger, John Daly, Vijay Singh","57, 50, 48, 48, 47, 46, 45","What are the names and ages of artists? Show the result in a bar graph, list y axis in descending order."
"SELECT Name , Age FROM artist ORDER BY Age DESC",Bar,Easy,theme_gallery,"{'chart': 'bar', 'x_name': 'Name', 'y_name': 'Age', 'x_data': [['Jeff Sluman', 'Larry Nelson', 'Nick Price', 'Mark Brooks', 'Paul Azinger', 'John Daly', 'Vijay Singh']], 'y_data': [[57, 50, 48, 48, 47, 46, 45]], 'classify': [], 'describe': ''}",bar,Name,Age,"Jeff Sluman, Larry Nelson, Nick Price, Mark Brooks, Paul Azinger, John Daly, Vijay Singh","57, 50, 48, 48, 47, 46, 45","A bar chart compares the ages of all artists, I want to display in desc by the Y-axis please."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2009', '2008', '2006', '2004', '2005', '2007']], 'y_data': [[1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 2, 2], [1, 1, 1, 2, 2, 2], [1, 1, 2, 2, 2, 2], [1, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2009, 2008, 2006, 2004, 2005, 2007","1, 1, 1, 1, 1, 2","Stacked bar of year and the number of year colored by Theme, and sort from low to high by the y-axis."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) ASC",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2009', '2008', '2006', '2004', '2005', '2007']], 'y_data': [[1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 2, 2], [1, 1, 1, 2, 2, 2], [1, 1, 2, 2, 2, 2], [1, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2009, 2008, 2006, 2004, 2005, 2007","1, 1, 1, 1, 1, 2","Group by the theme and count the year with a stacked bar chart, I want to list by the the number of year from low to high."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2005', '2004', '2006', '2008', '2009']], 'y_data': [[2, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1], [2, 2, 2, 1, 1, 1], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2005, 2004, 2006, 2008, 2009","2, 1, 1, 1, 1, 1","Group by the theme and count the year with a stacked bar chart, and show from high to low by the the number of year please."
"SELECT Year , COUNT(Year) FROM exhibition GROUP BY Theme ORDER BY COUNT(Year) DESC",Stacked Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2005', '2004', '2006', '2008', '2009']], 'y_data': [[2, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1], [2, 2, 2, 1, 1, 1], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2]], 'classify': ['Christmas Tree', 'Christmas stocking', 'Santa Claus', 'Santa Claus and Rudolph the Red-Nosed Reindeer', 'Spring', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2005, 2004, 2006, 2008, 2009","2, 1, 1, 1, 1, 1","Stacked bar of year and the number of year colored by Theme, display in desc by the Y-axis."
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Fri', 'Wed', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 0, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Fri, Wed, Mon, Sat, Sun, Tue, Thur","0, 0, 1, 1, 1, 1, 2","Show me how many year by year in a histogram, could you display y axis in asc order?"
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Fri', 'Wed', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 0, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Fri, Wed, Mon, Sat, Sun, Tue, Thur","0, 0, 1, 1, 1, 1, 2","Bin the Year into weekday interval, then group and count by Year, and I want to display by the how many year in ascending."
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) ASC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Fri', 'Wed', 'Mon', 'Sat', 'Sun', 'Tue', 'Thur']], 'y_data': [[0, 0, 1, 1, 1, 1, 2]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Fri, Wed, Mon, Sat, Sun, Tue, Thur","0, 0, 1, 1, 1, 1, 2","Give a bar chart that bins year into weekday interval, group by year and count them, and I want to sort in asc by the Y-axis."
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Wed', 'Fri']], 'y_data': [[2, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Wed, Fri","2, 1, 1, 1, 1, 0, 0","Bin the Year into weekday interval, then group and count by Year, display Y-axis in desc order."
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Wed', 'Fri']], 'y_data': [[2, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Wed, Fri","2, 1, 1, 1, 1, 0, 0","Give a bar chart that bins year into weekday interval, group by year and count them, display in descending by the how many year."
"SELECT Year , COUNT(Year) FROM exhibition  ORDER BY COUNT(Year) DESC",Bar,Medium,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['Thur', 'Tue', 'Sun', 'Sat', 'Mon', 'Wed', 'Fri']], 'y_data': [[2, 1, 1, 1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Year BY WEEKDAY'}",bar,Year,COUNT(Year),"Thur, Tue, Sun, Sat, Mon, Wed, Fri","2, 1, 1, 1, 1, 0, 0","Show me how many year by year in a histogram, and I want to list Y-axis in desc order."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2008', '2009', '2006']], 'y_data': [[0, 0, 1, 2], [0, 0, 2, 2]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2008, 2009, 2006","0, 0, 1, 2","Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, show by the Y from low to high."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) ASC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2008', '2009', '2006']], 'y_data': [[0, 0, 1, 2], [0, 0, 2, 2]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2008, 2009, 2006","0, 0, 1, 2","Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show from low to high by the y-axis."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2009', '2008', '2007']], 'y_data': [[2, 1, 0, 0], [2, 2, 0, 0]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2009, 2008, 2007","2, 1, 0, 0","Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show y-axis in descending order."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Theme ORDER BY COUNT(Year) DESC",Stacked Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2006', '2009', '2008', '2007']], 'y_data': [[2, 1, 0, 0], [2, 2, 0, 0]], 'classify': ['Santa Claus and Rudolph the Red-Nosed Reindeer', 'Summer'], 'describe': 'GROUP BY Theme, BIN Year BY TIME'}",bar,Year,COUNT(Year),"2006, 2009, 2008, 2007","2, 1, 0, 0","Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, I want to show how many year in descending order."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2008', '2006', '2009']], 'y_data': [[0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2008, 2006, 2009","0, 0, 1, 1","Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, and I want to display in ascending by the total number."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2007', '2008', '2006', '2009']], 'y_data': [[0, 0, 1, 1]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2007, 2008, 2006, 2009","0, 0, 1, 1","Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and order by the Y from low to high."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2009', '2006', '2008', '2007']], 'y_data': [[1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2009, 2006, 2008, 2007","1, 1, 0, 0","Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, I want to list y axis from high to low order please."
"SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) DESC",Bar,Hard,theme_gallery,"{'chart': 'bar', 'x_name': 'Year', 'y_name': 'COUNT(Year)', 'x_data': [['2009', '2006', '2008', '2007']], 'y_data': [[1, 1, 0, 0]], 'classify': [], 'describe': 'BIN Year BY TIME'}",bar,Year,COUNT(Year),"2009, 2006, 2008, 2007","1, 1, 0, 0","Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and display by the the number of year from high to low."
"SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'problem_log_id', 'x_data': [['1997-08-31', '2009-04-10']], 'y_data': [[12, 13]], 'classify': [], 'describe': ''}",bar,log_entry_date,problem_log_id,"1997-08-31, 2009-04-10","12, 13","Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to sort bars in asc order please."
"SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY log_entry_date DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'problem_log_id', 'x_data': [['2009-04-10', '1997-08-31']], 'y_data': [[13, 12]], 'classify': [], 'describe': ''}",bar,log_entry_date,problem_log_id,"2009-04-10, 1997-08-31","13, 12","Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to list in descending by the log_entry_date."
"SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'problem_log_id', 'x_data': [['1997-08-31', '2009-04-10']], 'y_data': [[12, 13]], 'classify': [], 'describe': ''}",bar,log_entry_date,problem_log_id,"1997-08-31, 2009-04-10","12, 13","Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, display from low to high by the total number."
"SELECT log_entry_date , problem_log_id FROM problem_log WHERE problem_id = 10 ORDER BY problem_log_id DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'problem_log_id', 'x_data': [['2009-04-10', '1997-08-31']], 'y_data': [[13, 12]], 'classify': [], 'describe': ''}",bar,log_entry_date,problem_log_id,"2009-04-10, 1997-08-31","13, 12","Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, and list in descending by the Y-axis please."
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC",Bar,Hard,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Mon', 'Sat', 'Thur', 'Tue', 'Wed', 'Fri', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Mon, Sat, Thur, Tue, Wed, Fri, Sun","0, 0, 0, 0, 0, 1, 1","For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart, and I want to list by the Y-axis in ascending."
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) ASC",Bar,Hard,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Mon', 'Sat', 'Thur', 'Tue', 'Wed', 'Fri', 'Sun']], 'y_data': [[0, 0, 0, 0, 0, 1, 1]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Mon, Sat, Thur, Tue, Wed, Fri, Sun","0, 0, 0, 0, 0, 1, 1","Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates, could you display by the y axis in asc?"
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC",Bar,Hard,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Sun', 'Fri', 'Wed', 'Tue', 'Thur', 'Sat', 'Mon']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Sun, Fri, Wed, Tue, Thur, Sat, Mon","1, 1, 0, 0, 0, 0, 0","For the problem whose id is 10, bin the log_entry_date into the weekday interval and count the date, and return a bar chart, display by the Y from high to low."
"SELECT log_entry_date , COUNT(log_entry_date) FROM problem_log WHERE problem_id = 10  ORDER BY COUNT(log_entry_date) DESC",Bar,Hard,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_date', 'y_name': 'COUNT(log_entry_date)', 'x_data': [['Sun', 'Fri', 'Wed', 'Tue', 'Thur', 'Sat', 'Mon']], 'y_data': [[1, 1, 0, 0, 0, 0, 0]], 'classify': [], 'describe': 'BIN log_entry_date BY WEEKDAY'}",bar,log_entry_date,COUNT(log_entry_date),"Sun, Fri, Wed, Tue, Thur, Sat, Mon","1, 1, 0, 0, 0, 0, 0","Find all dates of the logs for the problem whose id is 10, show me a bar chart that bins the dates into the weekday interval, and counts the dates, and I want to show from high to low by the y axis."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis log entry description y axis the number of log entry description, could you show in asc by the log_entry_description please?"
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","What is the number of entry descriptions of each problem?, and order by the x axis in ascending."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","List all the log entry descriptions and count them using a bar chart, and could you show in asc by the log_entry_description please?"
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'b', 'c', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w']], 'y_data': [[3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, b, c, d, h, j, p, q, s, t, v, w","3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1","Draw a bar chart for what is the number of entry descriptions of each problem?, rank by the X from low to high."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'c', 'b', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"w, v, t, s, q, p, j, h, d, c, b, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3","Bar chart x axis log entry description y axis the number of log entry description, and I want to display in descending by the bar please."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'c', 'b', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"w, v, t, s, q, p, j, h, d, c, b, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3","Draw a bar chart for what is the number of entry descriptions of each problem?, and show in descending by the X-axis."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'c', 'b', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"w, v, t, s, q, p, j, h, d, c, b, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3","List all the log entry descriptions and count them using a bar chart, show in descending by the X-axis."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY log_entry_description DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'c', 'b', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"w, v, t, s, q, p, j, h, d, c, b, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3","What is the number of entry descriptions of each problem?, show from high to low by the x-axis."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['b', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w', 'c', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"b, d, h, j, p, q, s, t, v, w, c, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3","Bar chart x axis log entry description y axis the number of log entry description, and I want to order y-axis in ascending order."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['b', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w', 'c', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"b, d, h, j, p, q, s, t, v, w, c, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3","Draw a bar chart for what is the number of entry descriptions of each problem?, and list total number in ascending order."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['b', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w', 'c', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"b, d, h, j, p, q, s, t, v, w, c, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3","What is the number of entry descriptions of each problem?, and sort from low to high by the how many log entry description."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['b', 'd', 'h', 'j', 'p', 'q', 's', 't', 'v', 'w', 'c', 'a']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"b, d, h, j, p, q, s, t, v, w, c, a","1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3","List all the log entry descriptions and count them using a bar chart, order by the Y in ascending."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'c', 'w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'b']], 'y_data': [[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, c, w, v, t, s, q, p, j, h, d, b","3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","List all the log entry descriptions and count them using a bar chart, sort in descending by the Y-axis."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'c', 'w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'b']], 'y_data': [[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, c, w, v, t, s, q, p, j, h, d, b","3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","What is the number of entry descriptions of each problem?, list Y-axis from high to low order."
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'c', 'w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'b']], 'y_data': [[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, c, w, v, t, s, q, p, j, h, d, b","3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Draw a bar chart for what is the number of entry descriptions of each problem?, could you show by the total number in descending?"
"SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) DESC",Bar,Medium,tracking_software_problems,"{'chart': 'bar', 'x_name': 'log_entry_description', 'y_name': 'COUNT(log_entry_description)', 'x_data': [['a', 'c', 'w', 'v', 't', 's', 'q', 'p', 'j', 'h', 'd', 'b']], 'y_data': [[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY log_entry_description'}",bar,log_entry_description,COUNT(log_entry_description),"a, c, w, v, t, s, q, p, j, h, d, b","3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis log entry description y axis the number of log entry description, list by the Y in descending."
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence ORDER BY Residence ASC",Bar,Hard,riding_club,"{'chart': 'bar', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Birtle', 'Brandon', 'Oakbank', 'Selkirk', 'Winnipeg']], 'y_data': [[1, 1, 1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Residence'}",bar,Residence,COUNT(Residence),"Birtle, Brandon, Oakbank, Selkirk, Winnipeg","1, 1, 1, 1, 9","For players whose occupation is not ""Researcher"", tell me the distribution of their residences with a bar chart, and list names in ascending order."
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence ORDER BY Residence DESC",Bar,Hard,riding_club,"{'chart': 'bar', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Winnipeg', 'Selkirk', 'Oakbank', 'Brandon', 'Birtle']], 'y_data': [[9, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Residence'}",bar,Residence,COUNT(Residence),"Winnipeg, Selkirk, Oakbank, Brandon, Birtle","9, 1, 1, 1, 1","For players whose occupation is not ""Researcher"", tell me the distribution of their residences with a bar chart, and order bars in desc order."
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence ORDER BY COUNT(Residence) ASC",Bar,Hard,riding_club,"{'chart': 'bar', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Birtle', 'Brandon', 'Oakbank', 'Selkirk', 'Winnipeg']], 'y_data': [[1, 1, 1, 1, 9]], 'classify': [], 'describe': 'GROUP BY Residence'}",bar,Residence,COUNT(Residence),"Birtle, Brandon, Oakbank, Selkirk, Winnipeg","1, 1, 1, 1, 9","For players whose occupation is not ""Researcher"", tell me the distribution of their residences with a bar chart, and I want to show y axis from low to high order."
"SELECT Residence , COUNT(Residence) FROM player WHERE Occupation != ""Researcher"" GROUP BY Residence ORDER BY COUNT(Residence) DESC",Bar,Hard,riding_club,"{'chart': 'bar', 'x_name': 'Residence', 'y_name': 'COUNT(Residence)', 'x_data': [['Winnipeg', 'Selkirk', 'Oakbank', 'Brandon', 'Birtle']], 'y_data': [[9, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Residence'}",bar,Residence,COUNT(Residence),"Winnipeg, Selkirk, Oakbank, Brandon, Birtle","9, 1, 1, 1, 1","For players whose occupation is not ""Researcher"", tell me the distribution of their residences with a bar chart, and could you display by the total number in desc?"
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show from low to high by the X."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Draw a bar chart of gender versus the number of gender, I want to list X from low to high order."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Compare the distribution of the players' gender using a bar chart, and could you display in ascending by the x axis?"
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Compare the distribution of the players' gender using a bar chart, and rank in descending by the bar please."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, and rank from high to low by the bars please."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Draw a bar chart of gender versus the number of gender, order in descending by the names."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Compare the distribution of the players' gender using a bar chart, rank by the total number in ascending."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Draw a bar chart of gender versus the number of gender, and rank by the Y in asc."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['F', 'M']], 'y_data': [[5, 9]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"F, M","5, 9","Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, and could you list y axis in ascending order?"
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, show total number in descending order."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Draw a bar chart of gender versus the number of gender, and rank by the y axis from high to low."
"SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY COUNT(Gender) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Gender', 'y_name': 'COUNT(Gender)', 'x_data': [['M', 'F']], 'y_data': [[9, 5]], 'classify': [], 'describe': 'GROUP BY Gender'}",bar,Gender,COUNT(Gender),"M, F","9, 5","Compare the distribution of the players' gender using a bar chart, show by the total number from high to low please."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Compare the number of players of different occupations using a bar chart, I want to show in asc by the Occupation."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Visualize a bar chart to show how many players in each occupation, and I want to list names in ascending order."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Bar chart x axis occupation y axis how many occupation, I want to show in asc by the Occupation."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Visualize a bar chart to show how many players in each occupation, order X in desc order."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Compare the number of players of different occupations using a bar chart, order by the Occupation in descending."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Bar chart x axis occupation y axis how many occupation, display in descending by the bars."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Bar chart x axis occupation y axis how many occupation, and rank by the y-axis from low to high."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Visualize a bar chart to show how many players in each occupation, and show from low to high by the y-axis please."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Compare the number of players of different occupations using a bar chart, order in ascending by the Y-axis."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Compare the number of players of different occupations using a bar chart, list y-axis in desc order."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Visualize a bar chart to show how many players in each occupation, and I want to show by the Y-axis from high to low please."
"SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(Occupation)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': 'GROUP BY Occupation'}",bar,Occupation,COUNT(Occupation),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis occupation y axis how many occupation, display in descending by the Y-axis."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Show different occupations along with the number of players in each occupation Show bar chart, show in ascending by the bar."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Bar chart x axis occupation y axis the total number, and show in ascending by the bar."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Parliamentarian', 'Product Consultant - MLCC', 'Researcher', 'Retired', 'Self Employed / Consultant', 'Small Businessman', 'Student']], 'y_data': [[1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Parliamentarian, Product Consultant - MLCC, Researcher, Retired, Self Employed / Consultant, Small Businessman, Student","1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2","Show different occupations along with the number of players in each occupation with a bar chart, and list by the x axis in asc."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Show different occupations along with the number of players in each occupation Show bar chart, and show x-axis from high to low order."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Show different occupations along with the number of players in each occupation with a bar chart, could you order by the names from high to low?"
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Small Businessman', 'Self Employed / Consultant', 'Retired', 'Researcher', 'Product Consultant - MLCC', 'Parliamentarian', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Small Businessman, Self Employed / Consultant, Retired, Researcher, Product Consultant - MLCC, Parliamentarian, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1","Bar chart x axis occupation y axis the total number, and I want to rank in desc by the x axis."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Show different occupations along with the number of players in each occupation with a bar chart, and could you list Y-axis in ascending order please?"
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Show different occupations along with the number of players in each occupation Show bar chart, could you list Y-axis in ascending order please?"
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) ASC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Design Coordinator', 'Distribution Centre Associate', 'Locomotive Engineer', 'Ministerial Assistant', 'Product Consultant - MLCC', 'Researcher', 'Self Employed / Consultant', 'Small Businessman', 'Parliamentarian', 'Retired', 'Student']], 'y_data': [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Design Coordinator, Distribution Centre Associate, Locomotive Engineer, Ministerial Assistant, Product Consultant - MLCC, Researcher, Self Employed / Consultant, Small Businessman, Parliamentarian, Retired, Student","1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2","Bar chart x axis occupation y axis the total number, and I want to sort total number in asc order please."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Show different occupations along with the number of players in each occupation Show bar chart, and show y-axis from high to low order."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Bar chart x axis occupation y axis the total number, and rank Y from high to low order please."
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC",Bar,Medium,riding_club,"{'chart': 'bar', 'x_name': 'Occupation', 'y_name': 'COUNT(*)', 'x_data': [['Student', 'Retired', 'Parliamentarian', 'Small Businessman', 'Self Employed / Consultant', 'Researcher', 'Product Consultant - MLCC', 'Ministerial Assistant', 'Locomotive Engineer', 'Distribution Centre Associate', 'Design Coordinator']], 'y_data': [[2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]], 'classify': [], 'describe': ''}",bar,Occupation,COUNT(*),"Student, Retired, Parliamentarian, Small Businessman, Self Employed / Consultant, Researcher, Product Consultant - MLCC, Ministerial Assistant, Locomotive Engineer, Distribution Centre Associate, Design Coordinator","2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1","Show different occupations along with the number of players in each occupation with a bar chart, and sort by the Y in descending."
